import {
  arrow,
  autoPlacement,
  autoUpdate,
  computePosition,
  detectOverflow,
  es2015_exports,
  es2015_exports2,
  flip,
  getOverflowAncestors,
  hide,
  init_es2015,
  init_es20152,
  init_floating_ui_dom,
  inline,
  limitShift,
  offset,
  platform,
  require_classnames,
  shift,
  size
} from "./chunk-BRZHEAH2.js";
import {
  require_react_dom
} from "./chunk-6VWAHX6D.js";
import {
  require_jsx_runtime
} from "./chunk-NRBATONI.js";
import {
  require_react
} from "./chunk-QJTFJ6OV.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS,
  __toESM
} from "./chunk-V4OQ3NZ2.js";

// node_modules/@radix-ui/react-compose-refs/dist/index.js
var require_dist = __commonJS({
  "node_modules/@radix-ui/react-compose-refs/dist/index.js"(exports, module) {
    "use strict";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      composeRefs: () => composeRefs,
      useComposedRefs: () => useComposedRefs
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    function setRef(ref, value) {
      if (typeof ref === "function") {
        ref(value);
      } else if (ref !== null && ref !== void 0) {
        ref.current = value;
      }
    }
    function composeRefs(...refs) {
      return (node) => refs.forEach((ref) => setRef(ref, node));
    }
    function useComposedRefs(...refs) {
      return React2.useCallback(composeRefs(...refs), refs);
    }
  }
});

// node_modules/@radix-ui/react-slot/dist/index.js
var require_dist2 = __commonJS({
  "node_modules/@radix-ui/react-slot/dist/index.js"(exports, module) {
    "use strict";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Root: () => Root,
      Slot: () => Slot,
      Slottable: () => Slottable
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_react_compose_refs = require_dist();
    var import_jsx_runtime = require_jsx_runtime();
    var Slot = React2.forwardRef((props, forwardedRef) => {
      const { children, ...slotProps } = props;
      const childrenArray = React2.Children.toArray(children);
      const slottable = childrenArray.find(isSlottable);
      if (slottable) {
        const newElement = slottable.props.children;
        const newChildren = childrenArray.map((child) => {
          if (child === slottable) {
            if (React2.Children.count(newElement) > 1) return React2.Children.only(null);
            return React2.isValidElement(newElement) ? newElement.props.children : null;
          } else {
            return child;
          }
        });
        return (0, import_jsx_runtime.jsx)(SlotClone, { ...slotProps, ref: forwardedRef, children: React2.isValidElement(newElement) ? React2.cloneElement(newElement, void 0, newChildren) : null });
      }
      return (0, import_jsx_runtime.jsx)(SlotClone, { ...slotProps, ref: forwardedRef, children });
    });
    Slot.displayName = "Slot";
    var SlotClone = React2.forwardRef((props, forwardedRef) => {
      const { children, ...slotProps } = props;
      if (React2.isValidElement(children)) {
        const childrenRef = getElementRef(children);
        return React2.cloneElement(children, {
          ...mergeProps(slotProps, children.props),
          // @ts-ignore
          ref: forwardedRef ? (0, import_react_compose_refs.composeRefs)(forwardedRef, childrenRef) : childrenRef
        });
      }
      return React2.Children.count(children) > 1 ? React2.Children.only(null) : null;
    });
    SlotClone.displayName = "SlotClone";
    var Slottable = ({ children }) => {
      return (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children });
    };
    function isSlottable(child) {
      return React2.isValidElement(child) && child.type === Slottable;
    }
    function mergeProps(slotProps, childProps) {
      const overrideProps = { ...childProps };
      for (const propName in childProps) {
        const slotPropValue = slotProps[propName];
        const childPropValue = childProps[propName];
        const isHandler = /^on[A-Z]/.test(propName);
        if (isHandler) {
          if (slotPropValue && childPropValue) {
            overrideProps[propName] = (...args) => {
              childPropValue(...args);
              slotPropValue(...args);
            };
          } else if (slotPropValue) {
            overrideProps[propName] = slotPropValue;
          }
        } else if (propName === "style") {
          overrideProps[propName] = { ...slotPropValue, ...childPropValue };
        } else if (propName === "className") {
          overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(" ");
        }
      }
      return { ...slotProps, ...overrideProps };
    }
    function getElementRef(element) {
      var _a, _b;
      let getter = (_a = Object.getOwnPropertyDescriptor(element.props, "ref")) == null ? void 0 : _a.get;
      let mayWarn = getter && "isReactWarning" in getter && getter.isReactWarning;
      if (mayWarn) {
        return element.ref;
      }
      getter = (_b = Object.getOwnPropertyDescriptor(element, "ref")) == null ? void 0 : _b.get;
      mayWarn = getter && "isReactWarning" in getter && getter.isReactWarning;
      if (mayWarn) {
        return element.props.ref;
      }
      return element.props.ref || element.ref;
    }
    var Root = Slot;
  }
});

// node_modules/@radix-ui/react-primitive/dist/index.js
var require_dist3 = __commonJS({
  "node_modules/@radix-ui/react-primitive/dist/index.js"(exports, module) {
    "use strict";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Primitive: () => Primitive,
      Root: () => Root,
      dispatchDiscreteCustomEvent: () => dispatchDiscreteCustomEvent
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var ReactDOM2 = __toESM2(require_react_dom());
    var import_react_slot = require_dist2();
    var import_jsx_runtime = require_jsx_runtime();
    var NODES = [
      "a",
      "button",
      "div",
      "form",
      "h2",
      "h3",
      "img",
      "input",
      "label",
      "li",
      "nav",
      "ol",
      "p",
      "span",
      "svg",
      "ul"
    ];
    var Primitive = NODES.reduce((primitive, node) => {
      const Node = React2.forwardRef((props, forwardedRef) => {
        const { asChild, ...primitiveProps } = props;
        const Comp = asChild ? import_react_slot.Slot : node;
        if (typeof window !== "undefined") {
          window[Symbol.for("radix-ui")] = true;
        }
        return (0, import_jsx_runtime.jsx)(Comp, { ...primitiveProps, ref: forwardedRef });
      });
      Node.displayName = `Primitive.${node}`;
      return { ...primitive, [node]: Node };
    }, {});
    function dispatchDiscreteCustomEvent(target, event) {
      if (target) ReactDOM2.flushSync(() => target.dispatchEvent(event));
    }
    var Root = Primitive;
  }
});

// node_modules/@radix-ui/react-visually-hidden/dist/index.js
var require_dist4 = __commonJS({
  "node_modules/@radix-ui/react-visually-hidden/dist/index.js"(exports, module) {
    "use strict";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Root: () => Root,
      VisuallyHidden: () => VisuallyHidden
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_react_primitive = require_dist3();
    var import_jsx_runtime = require_jsx_runtime();
    var NAME = "VisuallyHidden";
    var VisuallyHidden = React2.forwardRef(
      (props, forwardedRef) => {
        return (0, import_jsx_runtime.jsx)(
          import_react_primitive.Primitive.span,
          {
            ...props,
            ref: forwardedRef,
            style: {
              // See: https://github.com/twbs/bootstrap/blob/master/scss/mixins/_screen-reader.scss
              position: "absolute",
              border: 0,
              width: 1,
              height: 1,
              padding: 0,
              margin: -1,
              overflow: "hidden",
              clip: "rect(0, 0, 0, 0)",
              whiteSpace: "nowrap",
              wordWrap: "normal",
              ...props.style
            }
          }
        );
      }
    );
    VisuallyHidden.displayName = NAME;
    var Root = VisuallyHidden;
  }
});

// node_modules/@radix-ui/react-accessible-icon/dist/index.js
var require_dist5 = __commonJS({
  "node_modules/@radix-ui/react-accessible-icon/dist/index.js"(exports, module) {
    "use strict";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      AccessibleIcon: () => AccessibleIcon,
      Root: () => Root2
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var VisuallyHiddenPrimitive = __toESM2(require_dist4());
    var import_jsx_runtime = require_jsx_runtime();
    var NAME = "AccessibleIcon";
    var AccessibleIcon = ({ children, label }) => {
      const child = React2.Children.only(children);
      return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
        React2.cloneElement(child, {
          // accessibility
          "aria-hidden": "true",
          focusable: "false"
          // See: https://allyjs.io/tutorials/focusing-in-svg.html#making-svg-elements-focusable
        }),
        (0, import_jsx_runtime.jsx)(VisuallyHiddenPrimitive.Root, { children: label })
      ] });
    };
    AccessibleIcon.displayName = NAME;
    var Root2 = AccessibleIcon;
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/accessible-icon.js
var require_accessible_icon = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/accessible-icon.js"(exports, module) {
    "use strict";
    var s = Object.defineProperty;
    var i = Object.getOwnPropertyDescriptor;
    var l = Object.getOwnPropertyNames;
    var m = Object.prototype.hasOwnProperty;
    var n = (e, c) => {
      for (var r in c) s(e, r, { get: c[r], enumerable: true });
    };
    var p = (e, c, r, b) => {
      if (c && typeof c == "object" || typeof c == "function") for (let o of l(c)) !m.call(e, o) && o !== r && s(e, o, { get: () => c[o], enumerable: !(b = i(c, o)) || b.enumerable });
      return e;
    };
    var t = (e) => p(s({}, "__esModule", { value: true }), e);
    var x = {};
    n(x, { AccessibleIcon: () => f.AccessibleIcon });
    module.exports = t(x);
    var f = require_dist5();
  }
});

// node_modules/@radix-ui/react-context/dist/index.js
var require_dist6 = __commonJS({
  "node_modules/@radix-ui/react-context/dist/index.js"(exports, module) {
    "use strict";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      createContext: () => createContext2,
      createContextScope: () => createContextScope
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_jsx_runtime = require_jsx_runtime();
    function createContext2(rootComponentName, defaultContext) {
      const Context = React2.createContext(defaultContext);
      function Provider(props) {
        const { children, ...context } = props;
        const value = React2.useMemo(() => context, Object.values(context));
        return (0, import_jsx_runtime.jsx)(Context.Provider, { value, children });
      }
      function useContext2(consumerName) {
        const context = React2.useContext(Context);
        if (context) return context;
        if (defaultContext !== void 0) return defaultContext;
        throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
      }
      Provider.displayName = rootComponentName + "Provider";
      return [Provider, useContext2];
    }
    function createContextScope(scopeName, createContextScopeDeps = []) {
      let defaultContexts = [];
      function createContext3(rootComponentName, defaultContext) {
        const BaseContext = React2.createContext(defaultContext);
        const index2 = defaultContexts.length;
        defaultContexts = [...defaultContexts, defaultContext];
        function Provider(props) {
          const { scope, children, ...context } = props;
          const Context = (scope == null ? void 0 : scope[scopeName][index2]) || BaseContext;
          const value = React2.useMemo(() => context, Object.values(context));
          return (0, import_jsx_runtime.jsx)(Context.Provider, { value, children });
        }
        function useContext2(consumerName, scope) {
          const Context = (scope == null ? void 0 : scope[scopeName][index2]) || BaseContext;
          const context = React2.useContext(Context);
          if (context) return context;
          if (defaultContext !== void 0) return defaultContext;
          throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
        }
        Provider.displayName = rootComponentName + "Provider";
        return [Provider, useContext2];
      }
      const createScope = () => {
        const scopeContexts = defaultContexts.map((defaultContext) => {
          return React2.createContext(defaultContext);
        });
        return function useScope(scope) {
          const contexts = (scope == null ? void 0 : scope[scopeName]) || scopeContexts;
          return React2.useMemo(
            () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),
            [scope, contexts]
          );
        };
      };
      createScope.scopeName = scopeName;
      return [createContext3, composeContextScopes(createScope, ...createContextScopeDeps)];
    }
    function composeContextScopes(...scopes) {
      const baseScope = scopes[0];
      if (scopes.length === 1) return baseScope;
      const createScope = () => {
        const scopeHooks = scopes.map((createScope2) => ({
          useScope: createScope2(),
          scopeName: createScope2.scopeName
        }));
        return function useComposedScopes(overrideScopes) {
          const nextScopes = scopeHooks.reduce((nextScopes2, { useScope, scopeName }) => {
            const scopeProps = useScope(overrideScopes);
            const currentScope = scopeProps[`__scope${scopeName}`];
            return { ...nextScopes2, ...currentScope };
          }, {});
          return React2.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);
        };
      };
      createScope.scopeName = baseScope.scopeName;
      return createScope;
    }
  }
});

// node_modules/@radix-ui/primitive/dist/index.js
var require_dist7 = __commonJS({
  "node_modules/@radix-ui/primitive/dist/index.js"(exports, module) {
    "use strict";
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      composeEventHandlers: () => composeEventHandlers
    });
    module.exports = __toCommonJS2(src_exports);
    function composeEventHandlers(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = true } = {}) {
      return function handleEvent(event) {
        originalEventHandler == null ? void 0 : originalEventHandler(event);
        if (checkForDefaultPrevented === false || !event.defaultPrevented) {
          return ourEventHandler == null ? void 0 : ourEventHandler(event);
        }
      };
    }
  }
});

// node_modules/@radix-ui/react-use-layout-effect/dist/index.js
var require_dist8 = __commonJS({
  "node_modules/@radix-ui/react-use-layout-effect/dist/index.js"(exports, module) {
    "use strict";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      useLayoutEffect: () => useLayoutEffect2
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var useLayoutEffect2 = Boolean(globalThis == null ? void 0 : globalThis.document) ? React2.useLayoutEffect : () => {
    };
  }
});

// node_modules/@radix-ui/react-id/dist/index.js
var require_dist9 = __commonJS({
  "node_modules/@radix-ui/react-id/dist/index.js"(exports, module) {
    "use strict";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      useId: () => useId
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_react_use_layout_effect = require_dist8();
    var useReactId = React2["useId".toString()] || (() => void 0);
    var count = 0;
    function useId(deterministicId) {
      const [id, setId] = React2.useState(useReactId());
      (0, import_react_use_layout_effect.useLayoutEffect)(() => {
        if (!deterministicId) setId((reactId) => reactId ?? String(count++));
      }, [deterministicId]);
      return deterministicId || (id ? `radix-${id}` : "");
    }
  }
});

// node_modules/@radix-ui/react-use-callback-ref/dist/index.js
var require_dist10 = __commonJS({
  "node_modules/@radix-ui/react-use-callback-ref/dist/index.js"(exports, module) {
    "use strict";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      useCallbackRef: () => useCallbackRef
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    function useCallbackRef(callback) {
      const callbackRef = React2.useRef(callback);
      React2.useEffect(() => {
        callbackRef.current = callback;
      });
      return React2.useMemo(() => (...args) => {
        var _a;
        return (_a = callbackRef.current) == null ? void 0 : _a.call(callbackRef, ...args);
      }, []);
    }
  }
});

// node_modules/@radix-ui/react-use-controllable-state/dist/index.js
var require_dist11 = __commonJS({
  "node_modules/@radix-ui/react-use-controllable-state/dist/index.js"(exports, module) {
    "use strict";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      useControllableState: () => useControllableState
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_react_use_callback_ref = require_dist10();
    function useControllableState({
      prop,
      defaultProp,
      onChange = () => {
      }
    }) {
      const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({ defaultProp, onChange });
      const isControlled = prop !== void 0;
      const value = isControlled ? prop : uncontrolledProp;
      const handleChange = (0, import_react_use_callback_ref.useCallbackRef)(onChange);
      const setValue = React2.useCallback(
        (nextValue) => {
          if (isControlled) {
            const setter = nextValue;
            const value2 = typeof nextValue === "function" ? setter(prop) : nextValue;
            if (value2 !== prop) handleChange(value2);
          } else {
            setUncontrolledProp(nextValue);
          }
        },
        [isControlled, prop, setUncontrolledProp, handleChange]
      );
      return [value, setValue];
    }
    function useUncontrolledState({
      defaultProp,
      onChange
    }) {
      const uncontrolledState = React2.useState(defaultProp);
      const [value] = uncontrolledState;
      const prevValueRef = React2.useRef(value);
      const handleChange = (0, import_react_use_callback_ref.useCallbackRef)(onChange);
      React2.useEffect(() => {
        if (prevValueRef.current !== value) {
          handleChange(value);
          prevValueRef.current = value;
        }
      }, [value, prevValueRef, handleChange]);
      return uncontrolledState;
    }
  }
});

// node_modules/@radix-ui/react-use-escape-keydown/dist/index.js
var require_dist12 = __commonJS({
  "node_modules/@radix-ui/react-use-escape-keydown/dist/index.js"(exports, module) {
    "use strict";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      useEscapeKeydown: () => useEscapeKeydown
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_react_use_callback_ref = require_dist10();
    function useEscapeKeydown(onEscapeKeyDownProp, ownerDocument = globalThis == null ? void 0 : globalThis.document) {
      const onEscapeKeyDown = (0, import_react_use_callback_ref.useCallbackRef)(onEscapeKeyDownProp);
      React2.useEffect(() => {
        const handleKeyDown = (event) => {
          if (event.key === "Escape") {
            onEscapeKeyDown(event);
          }
        };
        ownerDocument.addEventListener("keydown", handleKeyDown, { capture: true });
        return () => ownerDocument.removeEventListener("keydown", handleKeyDown, { capture: true });
      }, [onEscapeKeyDown, ownerDocument]);
    }
  }
});

// node_modules/@radix-ui/react-dismissable-layer/dist/index.js
var require_dist13 = __commonJS({
  "node_modules/@radix-ui/react-dismissable-layer/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Branch: () => Branch,
      DismissableLayer: () => DismissableLayer,
      DismissableLayerBranch: () => DismissableLayerBranch,
      Root: () => Root
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_primitive = require_dist7();
    var import_react_primitive = require_dist3();
    var import_react_compose_refs = require_dist();
    var import_react_use_callback_ref = require_dist10();
    var import_react_use_escape_keydown = require_dist12();
    var import_jsx_runtime = require_jsx_runtime();
    var DISMISSABLE_LAYER_NAME = "DismissableLayer";
    var CONTEXT_UPDATE = "dismissableLayer.update";
    var POINTER_DOWN_OUTSIDE = "dismissableLayer.pointerDownOutside";
    var FOCUS_OUTSIDE = "dismissableLayer.focusOutside";
    var originalBodyPointerEvents;
    var DismissableLayerContext = React2.createContext({
      layers: /* @__PURE__ */ new Set(),
      layersWithOutsidePointerEventsDisabled: /* @__PURE__ */ new Set(),
      branches: /* @__PURE__ */ new Set()
    });
    var DismissableLayer = React2.forwardRef(
      (props, forwardedRef) => {
        const {
          disableOutsidePointerEvents = false,
          onEscapeKeyDown,
          onPointerDownOutside,
          onFocusOutside,
          onInteractOutside,
          onDismiss,
          ...layerProps
        } = props;
        const context = React2.useContext(DismissableLayerContext);
        const [node, setNode] = React2.useState(null);
        const ownerDocument = (node == null ? void 0 : node.ownerDocument) ?? (globalThis == null ? void 0 : globalThis.document);
        const [, force] = React2.useState({});
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, (node2) => setNode(node2));
        const layers = Array.from(context.layers);
        const [highestLayerWithOutsidePointerEventsDisabled] = [...context.layersWithOutsidePointerEventsDisabled].slice(-1);
        const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled);
        const index2 = node ? layers.indexOf(node) : -1;
        const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;
        const isPointerEventsEnabled = index2 >= highestLayerWithOutsidePointerEventsDisabledIndex;
        const pointerDownOutside = usePointerDownOutside((event) => {
          const target = event.target;
          const isPointerDownOnBranch = [...context.branches].some((branch) => branch.contains(target));
          if (!isPointerEventsEnabled || isPointerDownOnBranch) return;
          onPointerDownOutside == null ? void 0 : onPointerDownOutside(event);
          onInteractOutside == null ? void 0 : onInteractOutside(event);
          if (!event.defaultPrevented) onDismiss == null ? void 0 : onDismiss();
        }, ownerDocument);
        const focusOutside = useFocusOutside((event) => {
          const target = event.target;
          const isFocusInBranch = [...context.branches].some((branch) => branch.contains(target));
          if (isFocusInBranch) return;
          onFocusOutside == null ? void 0 : onFocusOutside(event);
          onInteractOutside == null ? void 0 : onInteractOutside(event);
          if (!event.defaultPrevented) onDismiss == null ? void 0 : onDismiss();
        }, ownerDocument);
        (0, import_react_use_escape_keydown.useEscapeKeydown)((event) => {
          const isHighestLayer = index2 === context.layers.size - 1;
          if (!isHighestLayer) return;
          onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(event);
          if (!event.defaultPrevented && onDismiss) {
            event.preventDefault();
            onDismiss();
          }
        }, ownerDocument);
        React2.useEffect(() => {
          if (!node) return;
          if (disableOutsidePointerEvents) {
            if (context.layersWithOutsidePointerEventsDisabled.size === 0) {
              originalBodyPointerEvents = ownerDocument.body.style.pointerEvents;
              ownerDocument.body.style.pointerEvents = "none";
            }
            context.layersWithOutsidePointerEventsDisabled.add(node);
          }
          context.layers.add(node);
          dispatchUpdate();
          return () => {
            if (disableOutsidePointerEvents && context.layersWithOutsidePointerEventsDisabled.size === 1) {
              ownerDocument.body.style.pointerEvents = originalBodyPointerEvents;
            }
          };
        }, [node, ownerDocument, disableOutsidePointerEvents, context]);
        React2.useEffect(() => {
          return () => {
            if (!node) return;
            context.layers.delete(node);
            context.layersWithOutsidePointerEventsDisabled.delete(node);
            dispatchUpdate();
          };
        }, [node, context]);
        React2.useEffect(() => {
          const handleUpdate = () => force({});
          document.addEventListener(CONTEXT_UPDATE, handleUpdate);
          return () => document.removeEventListener(CONTEXT_UPDATE, handleUpdate);
        }, []);
        return (0, import_jsx_runtime.jsx)(
          import_react_primitive.Primitive.div,
          {
            ...layerProps,
            ref: composedRefs,
            style: {
              pointerEvents: isBodyPointerEventsDisabled ? isPointerEventsEnabled ? "auto" : "none" : void 0,
              ...props.style
            },
            onFocusCapture: (0, import_primitive.composeEventHandlers)(props.onFocusCapture, focusOutside.onFocusCapture),
            onBlurCapture: (0, import_primitive.composeEventHandlers)(props.onBlurCapture, focusOutside.onBlurCapture),
            onPointerDownCapture: (0, import_primitive.composeEventHandlers)(
              props.onPointerDownCapture,
              pointerDownOutside.onPointerDownCapture
            )
          }
        );
      }
    );
    DismissableLayer.displayName = DISMISSABLE_LAYER_NAME;
    var BRANCH_NAME = "DismissableLayerBranch";
    var DismissableLayerBranch = React2.forwardRef((props, forwardedRef) => {
      const context = React2.useContext(DismissableLayerContext);
      const ref = React2.useRef(null);
      const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, ref);
      React2.useEffect(() => {
        const node = ref.current;
        if (node) {
          context.branches.add(node);
          return () => {
            context.branches.delete(node);
          };
        }
      }, [context.branches]);
      return (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.div, { ...props, ref: composedRefs });
    });
    DismissableLayerBranch.displayName = BRANCH_NAME;
    function usePointerDownOutside(onPointerDownOutside, ownerDocument = globalThis == null ? void 0 : globalThis.document) {
      const handlePointerDownOutside = (0, import_react_use_callback_ref.useCallbackRef)(onPointerDownOutside);
      const isPointerInsideReactTreeRef = React2.useRef(false);
      const handleClickRef = React2.useRef(() => {
      });
      React2.useEffect(() => {
        const handlePointerDown = (event) => {
          if (event.target && !isPointerInsideReactTreeRef.current) {
            let handleAndDispatchPointerDownOutsideEvent2 = function() {
              handleAndDispatchCustomEvent(
                POINTER_DOWN_OUTSIDE,
                handlePointerDownOutside,
                eventDetail,
                { discrete: true }
              );
            };
            var handleAndDispatchPointerDownOutsideEvent = handleAndDispatchPointerDownOutsideEvent2;
            const eventDetail = { originalEvent: event };
            if (event.pointerType === "touch") {
              ownerDocument.removeEventListener("click", handleClickRef.current);
              handleClickRef.current = handleAndDispatchPointerDownOutsideEvent2;
              ownerDocument.addEventListener("click", handleClickRef.current, { once: true });
            } else {
              handleAndDispatchPointerDownOutsideEvent2();
            }
          } else {
            ownerDocument.removeEventListener("click", handleClickRef.current);
          }
          isPointerInsideReactTreeRef.current = false;
        };
        const timerId = window.setTimeout(() => {
          ownerDocument.addEventListener("pointerdown", handlePointerDown);
        }, 0);
        return () => {
          window.clearTimeout(timerId);
          ownerDocument.removeEventListener("pointerdown", handlePointerDown);
          ownerDocument.removeEventListener("click", handleClickRef.current);
        };
      }, [ownerDocument, handlePointerDownOutside]);
      return {
        // ensures we check React component tree (not just DOM tree)
        onPointerDownCapture: () => isPointerInsideReactTreeRef.current = true
      };
    }
    function useFocusOutside(onFocusOutside, ownerDocument = globalThis == null ? void 0 : globalThis.document) {
      const handleFocusOutside = (0, import_react_use_callback_ref.useCallbackRef)(onFocusOutside);
      const isFocusInsideReactTreeRef = React2.useRef(false);
      React2.useEffect(() => {
        const handleFocus = (event) => {
          if (event.target && !isFocusInsideReactTreeRef.current) {
            const eventDetail = { originalEvent: event };
            handleAndDispatchCustomEvent(FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {
              discrete: false
            });
          }
        };
        ownerDocument.addEventListener("focusin", handleFocus);
        return () => ownerDocument.removeEventListener("focusin", handleFocus);
      }, [ownerDocument, handleFocusOutside]);
      return {
        onFocusCapture: () => isFocusInsideReactTreeRef.current = true,
        onBlurCapture: () => isFocusInsideReactTreeRef.current = false
      };
    }
    function dispatchUpdate() {
      const event = new CustomEvent(CONTEXT_UPDATE);
      document.dispatchEvent(event);
    }
    function handleAndDispatchCustomEvent(name, handler, detail, { discrete }) {
      const target = detail.originalEvent.target;
      const event = new CustomEvent(name, { bubbles: false, cancelable: true, detail });
      if (handler) target.addEventListener(name, handler, { once: true });
      if (discrete) {
        (0, import_react_primitive.dispatchDiscreteCustomEvent)(target, event);
      } else {
        target.dispatchEvent(event);
      }
    }
    var Root = DismissableLayer;
    var Branch = DismissableLayerBranch;
  }
});

// node_modules/@radix-ui/react-focus-scope/dist/index.js
var require_dist14 = __commonJS({
  "node_modules/@radix-ui/react-focus-scope/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      FocusScope: () => FocusScope,
      Root: () => Root
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_react_compose_refs = require_dist();
    var import_react_primitive = require_dist3();
    var import_react_use_callback_ref = require_dist10();
    var import_jsx_runtime = require_jsx_runtime();
    var AUTOFOCUS_ON_MOUNT = "focusScope.autoFocusOnMount";
    var AUTOFOCUS_ON_UNMOUNT = "focusScope.autoFocusOnUnmount";
    var EVENT_OPTIONS = { bubbles: false, cancelable: true };
    var FOCUS_SCOPE_NAME = "FocusScope";
    var FocusScope = React2.forwardRef((props, forwardedRef) => {
      const {
        loop = false,
        trapped = false,
        onMountAutoFocus: onMountAutoFocusProp,
        onUnmountAutoFocus: onUnmountAutoFocusProp,
        ...scopeProps
      } = props;
      const [container, setContainer] = React2.useState(null);
      const onMountAutoFocus = (0, import_react_use_callback_ref.useCallbackRef)(onMountAutoFocusProp);
      const onUnmountAutoFocus = (0, import_react_use_callback_ref.useCallbackRef)(onUnmountAutoFocusProp);
      const lastFocusedElementRef = React2.useRef(null);
      const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, (node) => setContainer(node));
      const focusScope = React2.useRef({
        paused: false,
        pause() {
          this.paused = true;
        },
        resume() {
          this.paused = false;
        }
      }).current;
      React2.useEffect(() => {
        if (trapped) {
          let handleFocusIn2 = function(event) {
            if (focusScope.paused || !container) return;
            const target = event.target;
            if (container.contains(target)) {
              lastFocusedElementRef.current = target;
            } else {
              focus(lastFocusedElementRef.current, { select: true });
            }
          }, handleFocusOut2 = function(event) {
            if (focusScope.paused || !container) return;
            const relatedTarget = event.relatedTarget;
            if (relatedTarget === null) return;
            if (!container.contains(relatedTarget)) {
              focus(lastFocusedElementRef.current, { select: true });
            }
          }, handleMutations2 = function(mutations) {
            const focusedElement = document.activeElement;
            if (focusedElement !== document.body) return;
            for (const mutation of mutations) {
              if (mutation.removedNodes.length > 0) focus(container);
            }
          };
          var handleFocusIn = handleFocusIn2, handleFocusOut = handleFocusOut2, handleMutations = handleMutations2;
          document.addEventListener("focusin", handleFocusIn2);
          document.addEventListener("focusout", handleFocusOut2);
          const mutationObserver = new MutationObserver(handleMutations2);
          if (container) mutationObserver.observe(container, { childList: true, subtree: true });
          return () => {
            document.removeEventListener("focusin", handleFocusIn2);
            document.removeEventListener("focusout", handleFocusOut2);
            mutationObserver.disconnect();
          };
        }
      }, [trapped, container, focusScope.paused]);
      React2.useEffect(() => {
        if (container) {
          focusScopesStack.add(focusScope);
          const previouslyFocusedElement = document.activeElement;
          const hasFocusedCandidate = container.contains(previouslyFocusedElement);
          if (!hasFocusedCandidate) {
            const mountEvent = new CustomEvent(AUTOFOCUS_ON_MOUNT, EVENT_OPTIONS);
            container.addEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);
            container.dispatchEvent(mountEvent);
            if (!mountEvent.defaultPrevented) {
              focusFirst(removeLinks(getTabbableCandidates(container)), { select: true });
              if (document.activeElement === previouslyFocusedElement) {
                focus(container);
              }
            }
          }
          return () => {
            container.removeEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);
            setTimeout(() => {
              const unmountEvent = new CustomEvent(AUTOFOCUS_ON_UNMOUNT, EVENT_OPTIONS);
              container.addEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);
              container.dispatchEvent(unmountEvent);
              if (!unmountEvent.defaultPrevented) {
                focus(previouslyFocusedElement ?? document.body, { select: true });
              }
              container.removeEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);
              focusScopesStack.remove(focusScope);
            }, 0);
          };
        }
      }, [container, onMountAutoFocus, onUnmountAutoFocus, focusScope]);
      const handleKeyDown = React2.useCallback(
        (event) => {
          if (!loop && !trapped) return;
          if (focusScope.paused) return;
          const isTabKey = event.key === "Tab" && !event.altKey && !event.ctrlKey && !event.metaKey;
          const focusedElement = document.activeElement;
          if (isTabKey && focusedElement) {
            const container2 = event.currentTarget;
            const [first, last] = getTabbableEdges(container2);
            const hasTabbableElementsInside = first && last;
            if (!hasTabbableElementsInside) {
              if (focusedElement === container2) event.preventDefault();
            } else {
              if (!event.shiftKey && focusedElement === last) {
                event.preventDefault();
                if (loop) focus(first, { select: true });
              } else if (event.shiftKey && focusedElement === first) {
                event.preventDefault();
                if (loop) focus(last, { select: true });
              }
            }
          }
        },
        [loop, trapped, focusScope.paused]
      );
      return (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.div, { tabIndex: -1, ...scopeProps, ref: composedRefs, onKeyDown: handleKeyDown });
    });
    FocusScope.displayName = FOCUS_SCOPE_NAME;
    function focusFirst(candidates, { select = false } = {}) {
      const previouslyFocusedElement = document.activeElement;
      for (const candidate of candidates) {
        focus(candidate, { select });
        if (document.activeElement !== previouslyFocusedElement) return;
      }
    }
    function getTabbableEdges(container) {
      const candidates = getTabbableCandidates(container);
      const first = findVisible(candidates, container);
      const last = findVisible(candidates.reverse(), container);
      return [first, last];
    }
    function getTabbableCandidates(container) {
      const nodes = [];
      const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {
        acceptNode: (node) => {
          const isHiddenInput = node.tagName === "INPUT" && node.type === "hidden";
          if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;
          return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
        }
      });
      while (walker.nextNode()) nodes.push(walker.currentNode);
      return nodes;
    }
    function findVisible(elements, container) {
      for (const element of elements) {
        if (!isHidden(element, { upTo: container })) return element;
      }
    }
    function isHidden(node, { upTo }) {
      if (getComputedStyle(node).visibility === "hidden") return true;
      while (node) {
        if (upTo !== void 0 && node === upTo) return false;
        if (getComputedStyle(node).display === "none") return true;
        node = node.parentElement;
      }
      return false;
    }
    function isSelectableInput(element) {
      return element instanceof HTMLInputElement && "select" in element;
    }
    function focus(element, { select = false } = {}) {
      if (element && element.focus) {
        const previouslyFocusedElement = document.activeElement;
        element.focus({ preventScroll: true });
        if (element !== previouslyFocusedElement && isSelectableInput(element) && select)
          element.select();
      }
    }
    var focusScopesStack = createFocusScopesStack();
    function createFocusScopesStack() {
      let stack = [];
      return {
        add(focusScope) {
          const activeFocusScope = stack[0];
          if (focusScope !== activeFocusScope) {
            activeFocusScope == null ? void 0 : activeFocusScope.pause();
          }
          stack = arrayRemove(stack, focusScope);
          stack.unshift(focusScope);
        },
        remove(focusScope) {
          var _a;
          stack = arrayRemove(stack, focusScope);
          (_a = stack[0]) == null ? void 0 : _a.resume();
        }
      };
    }
    function arrayRemove(array, item) {
      const updatedArray = [...array];
      const index2 = updatedArray.indexOf(item);
      if (index2 !== -1) {
        updatedArray.splice(index2, 1);
      }
      return updatedArray;
    }
    function removeLinks(items) {
      return items.filter((item) => item.tagName !== "A");
    }
    var Root = FocusScope;
  }
});

// node_modules/@radix-ui/react-portal/dist/index.js
var require_dist15 = __commonJS({
  "node_modules/@radix-ui/react-portal/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Portal: () => Portal,
      Root: () => Root
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_react_dom = __toESM2(require_react_dom());
    var import_react_primitive = require_dist3();
    var import_react_use_layout_effect = require_dist8();
    var import_jsx_runtime = require_jsx_runtime();
    var PORTAL_NAME = "Portal";
    var Portal = React2.forwardRef((props, forwardedRef) => {
      var _a;
      const { container: containerProp, ...portalProps } = props;
      const [mounted, setMounted] = React2.useState(false);
      (0, import_react_use_layout_effect.useLayoutEffect)(() => setMounted(true), []);
      const container = containerProp || mounted && ((_a = globalThis == null ? void 0 : globalThis.document) == null ? void 0 : _a.body);
      return container ? import_react_dom.default.createPortal((0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.div, { ...portalProps, ref: forwardedRef }), container) : null;
    });
    Portal.displayName = PORTAL_NAME;
    var Root = Portal;
  }
});

// node_modules/@radix-ui/react-presence/dist/index.js
var require_dist16 = __commonJS({
  "node_modules/@radix-ui/react-presence/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Presence: () => Presence
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var ReactDOM2 = __toESM2(require_react_dom());
    var import_react_compose_refs = require_dist();
    var import_react_use_layout_effect = require_dist8();
    var React3 = __toESM2(require_react());
    function useStateMachine(initialState, machine) {
      return React3.useReducer((state, event) => {
        const nextState = machine[state][event];
        return nextState ?? state;
      }, initialState);
    }
    var Presence = (props) => {
      const { present, children } = props;
      const presence = usePresence(present);
      const child = typeof children === "function" ? children({ present: presence.isPresent }) : React2.Children.only(children);
      const ref = (0, import_react_compose_refs.useComposedRefs)(presence.ref, getElementRef(child));
      const forceMount = typeof children === "function";
      return forceMount || presence.isPresent ? React2.cloneElement(child, { ref }) : null;
    };
    Presence.displayName = "Presence";
    function usePresence(present) {
      const [node, setNode] = React2.useState();
      const stylesRef = React2.useRef({});
      const prevPresentRef = React2.useRef(present);
      const prevAnimationNameRef = React2.useRef("none");
      const initialState = present ? "mounted" : "unmounted";
      const [state, send] = useStateMachine(initialState, {
        mounted: {
          UNMOUNT: "unmounted",
          ANIMATION_OUT: "unmountSuspended"
        },
        unmountSuspended: {
          MOUNT: "mounted",
          ANIMATION_END: "unmounted"
        },
        unmounted: {
          MOUNT: "mounted"
        }
      });
      React2.useEffect(() => {
        const currentAnimationName = getAnimationName(stylesRef.current);
        prevAnimationNameRef.current = state === "mounted" ? currentAnimationName : "none";
      }, [state]);
      (0, import_react_use_layout_effect.useLayoutEffect)(() => {
        const styles = stylesRef.current;
        const wasPresent = prevPresentRef.current;
        const hasPresentChanged = wasPresent !== present;
        if (hasPresentChanged) {
          const prevAnimationName = prevAnimationNameRef.current;
          const currentAnimationName = getAnimationName(styles);
          if (present) {
            send("MOUNT");
          } else if (currentAnimationName === "none" || (styles == null ? void 0 : styles.display) === "none") {
            send("UNMOUNT");
          } else {
            const isAnimating = prevAnimationName !== currentAnimationName;
            if (wasPresent && isAnimating) {
              send("ANIMATION_OUT");
            } else {
              send("UNMOUNT");
            }
          }
          prevPresentRef.current = present;
        }
      }, [present, send]);
      (0, import_react_use_layout_effect.useLayoutEffect)(() => {
        if (node) {
          const handleAnimationEnd = (event) => {
            const currentAnimationName = getAnimationName(stylesRef.current);
            const isCurrentAnimation = currentAnimationName.includes(event.animationName);
            if (event.target === node && isCurrentAnimation) {
              ReactDOM2.flushSync(() => send("ANIMATION_END"));
            }
          };
          const handleAnimationStart = (event) => {
            if (event.target === node) {
              prevAnimationNameRef.current = getAnimationName(stylesRef.current);
            }
          };
          node.addEventListener("animationstart", handleAnimationStart);
          node.addEventListener("animationcancel", handleAnimationEnd);
          node.addEventListener("animationend", handleAnimationEnd);
          return () => {
            node.removeEventListener("animationstart", handleAnimationStart);
            node.removeEventListener("animationcancel", handleAnimationEnd);
            node.removeEventListener("animationend", handleAnimationEnd);
          };
        } else {
          send("ANIMATION_END");
        }
      }, [node, send]);
      return {
        isPresent: ["mounted", "unmountSuspended"].includes(state),
        ref: React2.useCallback((node2) => {
          if (node2) stylesRef.current = getComputedStyle(node2);
          setNode(node2);
        }, [])
      };
    }
    function getAnimationName(styles) {
      return (styles == null ? void 0 : styles.animationName) || "none";
    }
    function getElementRef(element) {
      var _a, _b;
      let getter = (_a = Object.getOwnPropertyDescriptor(element.props, "ref")) == null ? void 0 : _a.get;
      let mayWarn = getter && "isReactWarning" in getter && getter.isReactWarning;
      if (mayWarn) {
        return element.ref;
      }
      getter = (_b = Object.getOwnPropertyDescriptor(element, "ref")) == null ? void 0 : _b.get;
      mayWarn = getter && "isReactWarning" in getter && getter.isReactWarning;
      if (mayWarn) {
        return element.props.ref;
      }
      return element.props.ref || element.ref;
    }
  }
});

// node_modules/@radix-ui/react-focus-guards/dist/index.js
var require_dist17 = __commonJS({
  "node_modules/@radix-ui/react-focus-guards/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      FocusGuards: () => FocusGuards,
      Root: () => Root,
      useFocusGuards: () => useFocusGuards
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var count = 0;
    function FocusGuards(props) {
      useFocusGuards();
      return props.children;
    }
    function useFocusGuards() {
      React2.useEffect(() => {
        const edgeGuards = document.querySelectorAll("[data-radix-focus-guard]");
        document.body.insertAdjacentElement("afterbegin", edgeGuards[0] ?? createFocusGuard());
        document.body.insertAdjacentElement("beforeend", edgeGuards[1] ?? createFocusGuard());
        count++;
        return () => {
          if (count === 1) {
            document.querySelectorAll("[data-radix-focus-guard]").forEach((node) => node.remove());
          }
          count--;
        };
      }, []);
    }
    function createFocusGuard() {
      const element = document.createElement("span");
      element.setAttribute("data-radix-focus-guard", "");
      element.tabIndex = 0;
      element.style.cssText = "outline: none; opacity: 0; position: fixed; pointer-events: none";
      return element;
    }
    var Root = FocusGuards;
  }
});

// node_modules/@radix-ui/react-dialog/dist/index.js
var require_dist18 = __commonJS({
  "node_modules/@radix-ui/react-dialog/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Close: () => Close,
      Content: () => Content,
      Description: () => Description,
      Dialog: () => Dialog,
      DialogClose: () => DialogClose,
      DialogContent: () => DialogContent,
      DialogDescription: () => DialogDescription,
      DialogOverlay: () => DialogOverlay,
      DialogPortal: () => DialogPortal,
      DialogTitle: () => DialogTitle,
      DialogTrigger: () => DialogTrigger,
      Overlay: () => Overlay,
      Portal: () => Portal,
      Root: () => Root,
      Title: () => Title,
      Trigger: () => Trigger,
      WarningProvider: () => WarningProvider,
      createDialogScope: () => createDialogScope
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_primitive = require_dist7();
    var import_react_compose_refs = require_dist();
    var import_react_context = require_dist6();
    var import_react_id = require_dist9();
    var import_react_use_controllable_state = require_dist11();
    var import_react_dismissable_layer = require_dist13();
    var import_react_focus_scope = require_dist14();
    var import_react_portal = require_dist15();
    var import_react_presence = require_dist16();
    var import_react_primitive = require_dist3();
    var import_react_focus_guards = require_dist17();
    var import_react_remove_scroll = (init_es2015(), __toCommonJS(es2015_exports));
    var import_aria_hidden = (init_es20152(), __toCommonJS(es2015_exports2));
    var import_react_slot = require_dist2();
    var import_jsx_runtime = require_jsx_runtime();
    var DIALOG_NAME = "Dialog";
    var [createDialogContext, createDialogScope] = (0, import_react_context.createContextScope)(DIALOG_NAME);
    var [DialogProvider, useDialogContext] = createDialogContext(DIALOG_NAME);
    var Dialog = (props) => {
      const {
        __scopeDialog,
        children,
        open: openProp,
        defaultOpen,
        onOpenChange,
        modal = true
      } = props;
      const triggerRef = React2.useRef(null);
      const contentRef = React2.useRef(null);
      const [open = false, setOpen] = (0, import_react_use_controllable_state.useControllableState)({
        prop: openProp,
        defaultProp: defaultOpen,
        onChange: onOpenChange
      });
      return (0, import_jsx_runtime.jsx)(
        DialogProvider,
        {
          scope: __scopeDialog,
          triggerRef,
          contentRef,
          contentId: (0, import_react_id.useId)(),
          titleId: (0, import_react_id.useId)(),
          descriptionId: (0, import_react_id.useId)(),
          open,
          onOpenChange: setOpen,
          onOpenToggle: React2.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]),
          modal,
          children
        }
      );
    };
    Dialog.displayName = DIALOG_NAME;
    var TRIGGER_NAME = "DialogTrigger";
    var DialogTrigger = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeDialog, ...triggerProps } = props;
        const context = useDialogContext(TRIGGER_NAME, __scopeDialog);
        const composedTriggerRef = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, context.triggerRef);
        return (0, import_jsx_runtime.jsx)(
          import_react_primitive.Primitive.button,
          {
            type: "button",
            "aria-haspopup": "dialog",
            "aria-expanded": context.open,
            "aria-controls": context.contentId,
            "data-state": getState(context.open),
            ...triggerProps,
            ref: composedTriggerRef,
            onClick: (0, import_primitive.composeEventHandlers)(props.onClick, context.onOpenToggle)
          }
        );
      }
    );
    DialogTrigger.displayName = TRIGGER_NAME;
    var PORTAL_NAME = "DialogPortal";
    var [PortalProvider, usePortalContext] = createDialogContext(PORTAL_NAME, {
      forceMount: void 0
    });
    var DialogPortal = (props) => {
      const { __scopeDialog, forceMount, children, container } = props;
      const context = useDialogContext(PORTAL_NAME, __scopeDialog);
      return (0, import_jsx_runtime.jsx)(PortalProvider, { scope: __scopeDialog, forceMount, children: React2.Children.map(children, (child) => (0, import_jsx_runtime.jsx)(import_react_presence.Presence, { present: forceMount || context.open, children: (0, import_jsx_runtime.jsx)(import_react_portal.Portal, { asChild: true, container, children: child }) })) });
    };
    DialogPortal.displayName = PORTAL_NAME;
    var OVERLAY_NAME = "DialogOverlay";
    var DialogOverlay = React2.forwardRef(
      (props, forwardedRef) => {
        const portalContext = usePortalContext(OVERLAY_NAME, props.__scopeDialog);
        const { forceMount = portalContext.forceMount, ...overlayProps } = props;
        const context = useDialogContext(OVERLAY_NAME, props.__scopeDialog);
        return context.modal ? (0, import_jsx_runtime.jsx)(import_react_presence.Presence, { present: forceMount || context.open, children: (0, import_jsx_runtime.jsx)(DialogOverlayImpl, { ...overlayProps, ref: forwardedRef }) }) : null;
      }
    );
    DialogOverlay.displayName = OVERLAY_NAME;
    var DialogOverlayImpl = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeDialog, ...overlayProps } = props;
        const context = useDialogContext(OVERLAY_NAME, __scopeDialog);
        return (
          // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`
          // ie. when `Overlay` and `Content` are siblings
          (0, import_jsx_runtime.jsx)(import_react_remove_scroll.RemoveScroll, { as: import_react_slot.Slot, allowPinchZoom: true, shards: [context.contentRef], children: (0, import_jsx_runtime.jsx)(
            import_react_primitive.Primitive.div,
            {
              "data-state": getState(context.open),
              ...overlayProps,
              ref: forwardedRef,
              style: { pointerEvents: "auto", ...overlayProps.style }
            }
          ) })
        );
      }
    );
    var CONTENT_NAME = "DialogContent";
    var DialogContent = React2.forwardRef(
      (props, forwardedRef) => {
        const portalContext = usePortalContext(CONTENT_NAME, props.__scopeDialog);
        const { forceMount = portalContext.forceMount, ...contentProps } = props;
        const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);
        return (0, import_jsx_runtime.jsx)(import_react_presence.Presence, { present: forceMount || context.open, children: context.modal ? (0, import_jsx_runtime.jsx)(DialogContentModal, { ...contentProps, ref: forwardedRef }) : (0, import_jsx_runtime.jsx)(DialogContentNonModal, { ...contentProps, ref: forwardedRef }) });
      }
    );
    DialogContent.displayName = CONTENT_NAME;
    var DialogContentModal = React2.forwardRef(
      (props, forwardedRef) => {
        const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);
        const contentRef = React2.useRef(null);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, context.contentRef, contentRef);
        React2.useEffect(() => {
          const content = contentRef.current;
          if (content) return (0, import_aria_hidden.hideOthers)(content);
        }, []);
        return (0, import_jsx_runtime.jsx)(
          DialogContentImpl,
          {
            ...props,
            ref: composedRefs,
            trapFocus: context.open,
            disableOutsidePointerEvents: true,
            onCloseAutoFocus: (0, import_primitive.composeEventHandlers)(props.onCloseAutoFocus, (event) => {
              var _a;
              event.preventDefault();
              (_a = context.triggerRef.current) == null ? void 0 : _a.focus();
            }),
            onPointerDownOutside: (0, import_primitive.composeEventHandlers)(props.onPointerDownOutside, (event) => {
              const originalEvent = event.detail.originalEvent;
              const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;
              const isRightClick = originalEvent.button === 2 || ctrlLeftClick;
              if (isRightClick) event.preventDefault();
            }),
            onFocusOutside: (0, import_primitive.composeEventHandlers)(
              props.onFocusOutside,
              (event) => event.preventDefault()
            )
          }
        );
      }
    );
    var DialogContentNonModal = React2.forwardRef(
      (props, forwardedRef) => {
        const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);
        const hasInteractedOutsideRef = React2.useRef(false);
        const hasPointerDownOutsideRef = React2.useRef(false);
        return (0, import_jsx_runtime.jsx)(
          DialogContentImpl,
          {
            ...props,
            ref: forwardedRef,
            trapFocus: false,
            disableOutsidePointerEvents: false,
            onCloseAutoFocus: (event) => {
              var _a, _b;
              (_a = props.onCloseAutoFocus) == null ? void 0 : _a.call(props, event);
              if (!event.defaultPrevented) {
                if (!hasInteractedOutsideRef.current) (_b = context.triggerRef.current) == null ? void 0 : _b.focus();
                event.preventDefault();
              }
              hasInteractedOutsideRef.current = false;
              hasPointerDownOutsideRef.current = false;
            },
            onInteractOutside: (event) => {
              var _a, _b;
              (_a = props.onInteractOutside) == null ? void 0 : _a.call(props, event);
              if (!event.defaultPrevented) {
                hasInteractedOutsideRef.current = true;
                if (event.detail.originalEvent.type === "pointerdown") {
                  hasPointerDownOutsideRef.current = true;
                }
              }
              const target = event.target;
              const targetIsTrigger = (_b = context.triggerRef.current) == null ? void 0 : _b.contains(target);
              if (targetIsTrigger) event.preventDefault();
              if (event.detail.originalEvent.type === "focusin" && hasPointerDownOutsideRef.current) {
                event.preventDefault();
              }
            }
          }
        );
      }
    );
    var DialogContentImpl = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props;
        const context = useDialogContext(CONTENT_NAME, __scopeDialog);
        const contentRef = React2.useRef(null);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, contentRef);
        (0, import_react_focus_guards.useFocusGuards)();
        return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
          (0, import_jsx_runtime.jsx)(
            import_react_focus_scope.FocusScope,
            {
              asChild: true,
              loop: true,
              trapped: trapFocus,
              onMountAutoFocus: onOpenAutoFocus,
              onUnmountAutoFocus: onCloseAutoFocus,
              children: (0, import_jsx_runtime.jsx)(
                import_react_dismissable_layer.DismissableLayer,
                {
                  role: "dialog",
                  id: context.contentId,
                  "aria-describedby": context.descriptionId,
                  "aria-labelledby": context.titleId,
                  "data-state": getState(context.open),
                  ...contentProps,
                  ref: composedRefs,
                  onDismiss: () => context.onOpenChange(false)
                }
              )
            }
          ),
          (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
            (0, import_jsx_runtime.jsx)(TitleWarning, { titleId: context.titleId }),
            (0, import_jsx_runtime.jsx)(DescriptionWarning, { contentRef, descriptionId: context.descriptionId })
          ] })
        ] });
      }
    );
    var TITLE_NAME = "DialogTitle";
    var DialogTitle = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeDialog, ...titleProps } = props;
        const context = useDialogContext(TITLE_NAME, __scopeDialog);
        return (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.h2, { id: context.titleId, ...titleProps, ref: forwardedRef });
      }
    );
    DialogTitle.displayName = TITLE_NAME;
    var DESCRIPTION_NAME = "DialogDescription";
    var DialogDescription = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeDialog, ...descriptionProps } = props;
        const context = useDialogContext(DESCRIPTION_NAME, __scopeDialog);
        return (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.p, { id: context.descriptionId, ...descriptionProps, ref: forwardedRef });
      }
    );
    DialogDescription.displayName = DESCRIPTION_NAME;
    var CLOSE_NAME = "DialogClose";
    var DialogClose = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeDialog, ...closeProps } = props;
        const context = useDialogContext(CLOSE_NAME, __scopeDialog);
        return (0, import_jsx_runtime.jsx)(
          import_react_primitive.Primitive.button,
          {
            type: "button",
            ...closeProps,
            ref: forwardedRef,
            onClick: (0, import_primitive.composeEventHandlers)(props.onClick, () => context.onOpenChange(false))
          }
        );
      }
    );
    DialogClose.displayName = CLOSE_NAME;
    function getState(open) {
      return open ? "open" : "closed";
    }
    var TITLE_WARNING_NAME = "DialogTitleWarning";
    var [WarningProvider, useWarningContext] = (0, import_react_context.createContext)(TITLE_WARNING_NAME, {
      contentName: CONTENT_NAME,
      titleName: TITLE_NAME,
      docsSlug: "dialog"
    });
    var TitleWarning = ({ titleId }) => {
      const titleWarningContext = useWarningContext(TITLE_WARNING_NAME);
      const MESSAGE = `\`${titleWarningContext.contentName}\` requires a \`${titleWarningContext.titleName}\` for the component to be accessible for screen reader users.

If you want to hide the \`${titleWarningContext.titleName}\`, you can wrap it with our VisuallyHidden component.

For more information, see https://radix-ui.com/primitives/docs/components/${titleWarningContext.docsSlug}`;
      React2.useEffect(() => {
        if (titleId) {
          const hasTitle = document.getElementById(titleId);
          if (!hasTitle) console.error(MESSAGE);
        }
      }, [MESSAGE, titleId]);
      return null;
    };
    var DESCRIPTION_WARNING_NAME = "DialogDescriptionWarning";
    var DescriptionWarning = ({ contentRef, descriptionId }) => {
      const descriptionWarningContext = useWarningContext(DESCRIPTION_WARNING_NAME);
      const MESSAGE = `Warning: Missing \`Description\` or \`aria-describedby={undefined}\` for {${descriptionWarningContext.contentName}}.`;
      React2.useEffect(() => {
        var _a;
        const describedById = (_a = contentRef.current) == null ? void 0 : _a.getAttribute("aria-describedby");
        if (descriptionId && describedById) {
          const hasDescription = document.getElementById(descriptionId);
          if (!hasDescription) console.warn(MESSAGE);
        }
      }, [MESSAGE, contentRef, descriptionId]);
      return null;
    };
    var Root = Dialog;
    var Trigger = DialogTrigger;
    var Portal = DialogPortal;
    var Overlay = DialogOverlay;
    var Content = DialogContent;
    var Title = DialogTitle;
    var Description = DialogDescription;
    var Close = DialogClose;
  }
});

// node_modules/@radix-ui/react-alert-dialog/dist/index.js
var require_dist19 = __commonJS({
  "node_modules/@radix-ui/react-alert-dialog/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Action: () => Action,
      AlertDialog: () => AlertDialog,
      AlertDialogAction: () => AlertDialogAction,
      AlertDialogCancel: () => AlertDialogCancel,
      AlertDialogContent: () => AlertDialogContent,
      AlertDialogDescription: () => AlertDialogDescription,
      AlertDialogOverlay: () => AlertDialogOverlay,
      AlertDialogPortal: () => AlertDialogPortal,
      AlertDialogTitle: () => AlertDialogTitle,
      AlertDialogTrigger: () => AlertDialogTrigger,
      Cancel: () => Cancel,
      Content: () => Content2,
      Description: () => Description2,
      Overlay: () => Overlay2,
      Portal: () => Portal2,
      Root: () => Root2,
      Title: () => Title2,
      Trigger: () => Trigger2,
      createAlertDialogScope: () => createAlertDialogScope
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_react_context = require_dist6();
    var import_react_compose_refs = require_dist();
    var DialogPrimitive = __toESM2(require_dist18());
    var import_react_dialog = require_dist18();
    var import_primitive = require_dist7();
    var import_react_slot = require_dist2();
    var import_jsx_runtime = require_jsx_runtime();
    var ROOT_NAME = "AlertDialog";
    var [createAlertDialogContext, createAlertDialogScope] = (0, import_react_context.createContextScope)(ROOT_NAME, [
      import_react_dialog.createDialogScope
    ]);
    var useDialogScope = (0, import_react_dialog.createDialogScope)();
    var AlertDialog = (props) => {
      const { __scopeAlertDialog, ...alertDialogProps } = props;
      const dialogScope = useDialogScope(__scopeAlertDialog);
      return (0, import_jsx_runtime.jsx)(DialogPrimitive.Root, { ...dialogScope, ...alertDialogProps, modal: true });
    };
    AlertDialog.displayName = ROOT_NAME;
    var TRIGGER_NAME = "AlertDialogTrigger";
    var AlertDialogTrigger = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeAlertDialog, ...triggerProps } = props;
        const dialogScope = useDialogScope(__scopeAlertDialog);
        return (0, import_jsx_runtime.jsx)(DialogPrimitive.Trigger, { ...dialogScope, ...triggerProps, ref: forwardedRef });
      }
    );
    AlertDialogTrigger.displayName = TRIGGER_NAME;
    var PORTAL_NAME = "AlertDialogPortal";
    var AlertDialogPortal = (props) => {
      const { __scopeAlertDialog, ...portalProps } = props;
      const dialogScope = useDialogScope(__scopeAlertDialog);
      return (0, import_jsx_runtime.jsx)(DialogPrimitive.Portal, { ...dialogScope, ...portalProps });
    };
    AlertDialogPortal.displayName = PORTAL_NAME;
    var OVERLAY_NAME = "AlertDialogOverlay";
    var AlertDialogOverlay = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeAlertDialog, ...overlayProps } = props;
        const dialogScope = useDialogScope(__scopeAlertDialog);
        return (0, import_jsx_runtime.jsx)(DialogPrimitive.Overlay, { ...dialogScope, ...overlayProps, ref: forwardedRef });
      }
    );
    AlertDialogOverlay.displayName = OVERLAY_NAME;
    var CONTENT_NAME = "AlertDialogContent";
    var [AlertDialogContentProvider, useAlertDialogContentContext] = createAlertDialogContext(CONTENT_NAME);
    var AlertDialogContent = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeAlertDialog, children, ...contentProps } = props;
        const dialogScope = useDialogScope(__scopeAlertDialog);
        const contentRef = React2.useRef(null);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, contentRef);
        const cancelRef = React2.useRef(null);
        return (0, import_jsx_runtime.jsx)(
          DialogPrimitive.WarningProvider,
          {
            contentName: CONTENT_NAME,
            titleName: TITLE_NAME,
            docsSlug: "alert-dialog",
            children: (0, import_jsx_runtime.jsx)(AlertDialogContentProvider, { scope: __scopeAlertDialog, cancelRef, children: (0, import_jsx_runtime.jsxs)(
              DialogPrimitive.Content,
              {
                role: "alertdialog",
                ...dialogScope,
                ...contentProps,
                ref: composedRefs,
                onOpenAutoFocus: (0, import_primitive.composeEventHandlers)(contentProps.onOpenAutoFocus, (event) => {
                  var _a;
                  event.preventDefault();
                  (_a = cancelRef.current) == null ? void 0 : _a.focus({ preventScroll: true });
                }),
                onPointerDownOutside: (event) => event.preventDefault(),
                onInteractOutside: (event) => event.preventDefault(),
                children: [
                  (0, import_jsx_runtime.jsx)(import_react_slot.Slottable, { children }),
                  (0, import_jsx_runtime.jsx)(DescriptionWarning, { contentRef })
                ]
              }
            ) })
          }
        );
      }
    );
    AlertDialogContent.displayName = CONTENT_NAME;
    var TITLE_NAME = "AlertDialogTitle";
    var AlertDialogTitle = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeAlertDialog, ...titleProps } = props;
        const dialogScope = useDialogScope(__scopeAlertDialog);
        return (0, import_jsx_runtime.jsx)(DialogPrimitive.Title, { ...dialogScope, ...titleProps, ref: forwardedRef });
      }
    );
    AlertDialogTitle.displayName = TITLE_NAME;
    var DESCRIPTION_NAME = "AlertDialogDescription";
    var AlertDialogDescription = React2.forwardRef((props, forwardedRef) => {
      const { __scopeAlertDialog, ...descriptionProps } = props;
      const dialogScope = useDialogScope(__scopeAlertDialog);
      return (0, import_jsx_runtime.jsx)(DialogPrimitive.Description, { ...dialogScope, ...descriptionProps, ref: forwardedRef });
    });
    AlertDialogDescription.displayName = DESCRIPTION_NAME;
    var ACTION_NAME = "AlertDialogAction";
    var AlertDialogAction = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeAlertDialog, ...actionProps } = props;
        const dialogScope = useDialogScope(__scopeAlertDialog);
        return (0, import_jsx_runtime.jsx)(DialogPrimitive.Close, { ...dialogScope, ...actionProps, ref: forwardedRef });
      }
    );
    AlertDialogAction.displayName = ACTION_NAME;
    var CANCEL_NAME = "AlertDialogCancel";
    var AlertDialogCancel = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeAlertDialog, ...cancelProps } = props;
        const { cancelRef } = useAlertDialogContentContext(CANCEL_NAME, __scopeAlertDialog);
        const dialogScope = useDialogScope(__scopeAlertDialog);
        const ref = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, cancelRef);
        return (0, import_jsx_runtime.jsx)(DialogPrimitive.Close, { ...dialogScope, ...cancelProps, ref });
      }
    );
    AlertDialogCancel.displayName = CANCEL_NAME;
    var DescriptionWarning = ({ contentRef }) => {
      const MESSAGE = `\`${CONTENT_NAME}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${CONTENT_NAME}\` by passing a \`${DESCRIPTION_NAME}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${CONTENT_NAME}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;
      React2.useEffect(() => {
        var _a;
        const hasDescription = document.getElementById(
          (_a = contentRef.current) == null ? void 0 : _a.getAttribute("aria-describedby")
        );
        if (!hasDescription) console.warn(MESSAGE);
      }, [MESSAGE, contentRef]);
      return null;
    };
    var Root2 = AlertDialog;
    var Trigger2 = AlertDialogTrigger;
    var Portal2 = AlertDialogPortal;
    var Overlay2 = AlertDialogOverlay;
    var Content2 = AlertDialogContent;
    var Action = AlertDialogAction;
    var Cancel = AlertDialogCancel;
    var Title2 = AlertDialogTitle;
    var Description2 = AlertDialogDescription;
  }
});

// node_modules/@radix-ui/themes/dist/cjs/props/as-child.prop.js
var require_as_child_prop = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/props/as-child.prop.js"(exports, module) {
    "use strict";
    var r = Object.defineProperty;
    var i = Object.getOwnPropertyDescriptor;
    var t = Object.getOwnPropertyNames;
    var l = Object.prototype.hasOwnProperty;
    var d = (e, o) => {
      for (var s in o) r(e, s, { get: o[s], enumerable: true });
    };
    var h = (e, o, s, a) => {
      if (o && typeof o == "object" || typeof o == "function") for (let p of t(o)) !l.call(e, p) && p !== s && r(e, p, { get: () => o[p], enumerable: !(a = i(o, p)) || a.enumerable });
      return e;
    };
    var n = (e) => h(r({}, "__esModule", { value: true }), e);
    var C = {};
    d(C, { asChildPropDef: () => f });
    module.exports = n(C);
    var f = { asChild: { type: "boolean" } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/props/width.props.js
var require_width_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/props/width.props.js"(exports, module) {
    "use strict";
    var i = Object.defineProperty;
    var m = Object.getOwnPropertyDescriptor;
    var d = Object.getOwnPropertyNames;
    var n = Object.prototype.hasOwnProperty;
    var h = (e, t) => {
      for (var s in t) i(e, s, { get: t[s], enumerable: true });
    };
    var P = (e, t, s, p) => {
      if (t && typeof t == "object" || typeof t == "function") for (let r of d(t)) !n.call(e, r) && r !== s && i(e, r, { get: () => t[r], enumerable: !(p = m(t, r)) || p.enumerable });
      return e;
    };
    var f = (e) => P(i({}, "__esModule", { value: true }), e);
    var a = {};
    h(a, { widthPropDefs: () => o });
    module.exports = f(a);
    var o = { width: { type: "string", className: "rt-r-w", customProperties: ["--width"], responsive: true }, minWidth: { type: "string", className: "rt-r-min-w", customProperties: ["--min-width"], responsive: true }, maxWidth: { type: "string", className: "rt-r-max-w", customProperties: ["--max-width"], responsive: true } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/props/height.props.js
var require_height_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/props/height.props.js"(exports, module) {
    "use strict";
    var i = Object.defineProperty;
    var h = Object.getOwnPropertyDescriptor;
    var g = Object.getOwnPropertyNames;
    var m = Object.prototype.hasOwnProperty;
    var n = (t, e) => {
      for (var s in e) i(t, s, { get: e[s], enumerable: true });
    };
    var P = (t, e, s, p) => {
      if (e && typeof e == "object" || typeof e == "function") for (let r of g(e)) !m.call(t, r) && r !== s && i(t, r, { get: () => e[r], enumerable: !(p = h(e, r)) || p.enumerable });
      return t;
    };
    var f = (t) => P(i({}, "__esModule", { value: true }), t);
    var a = {};
    n(a, { heightPropDefs: () => o });
    module.exports = f(a);
    var o = { height: { type: "string", className: "rt-r-h", customProperties: ["--height"], responsive: true }, minHeight: { type: "string", className: "rt-r-min-h", customProperties: ["--min-height"], responsive: true }, maxHeight: { type: "string", className: "rt-r-max-h", customProperties: ["--max-height"], responsive: true } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/dialog.props.js
var require_dialog_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/dialog.props.js"(exports, module) {
    "use strict";
    var i = Object.defineProperty;
    var l = Object.getOwnPropertyDescriptor;
    var m = Object.getOwnPropertyNames;
    var d = Object.prototype.hasOwnProperty;
    var D = (t, e) => {
      for (var r in e) i(t, r, { get: e[r], enumerable: true });
    };
    var P = (t, e, r, p) => {
      if (e && typeof e == "object" || typeof e == "function") for (let o of m(e)) !d.call(t, o) && o !== r && i(t, o, { get: () => e[o], enumerable: !(p = l(e, o)) || p.enumerable });
      return t;
    };
    var h = (t) => P(i({}, "__esModule", { value: true }), t);
    var c = {};
    D(c, { dialogContentPropDefs: () => f });
    module.exports = h(c);
    var n = require_as_child_prop();
    var s = require_width_props();
    var a = require_height_props();
    var g = ["1", "2", "3", "4"];
    var f = { ...n.asChildPropDef, align: { type: "enum", className: "rt-r-align", values: ["start", "center"], default: "center" }, size: { type: "enum", className: "rt-r-size", values: g, default: "3", responsive: true }, width: s.widthPropDefs.width, minWidth: s.widthPropDefs.minWidth, maxWidth: { ...s.widthPropDefs.maxWidth, default: "600px" }, ...a.heightPropDefs };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/alert-dialog.props.js
var require_alert_dialog_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/alert-dialog.props.js"(exports, module) {
    "use strict";
    var n = Object.defineProperty;
    var s = Object.getOwnPropertyDescriptor;
    var l = Object.getOwnPropertyNames;
    var g = Object.prototype.hasOwnProperty;
    var i = (t, o) => {
      for (var r in o) n(t, r, { get: o[r], enumerable: true });
    };
    var D = (t, o, r, p) => {
      if (o && typeof o == "object" || typeof o == "function") for (let e of l(o)) !g.call(t, e) && e !== r && n(t, e, { get: () => o[e], enumerable: !(p = s(o, e)) || p.enumerable });
      return t;
    };
    var f = (t) => D(n({}, "__esModule", { value: true }), t);
    var C = {};
    i(C, { alertDialogContentPropDefs: () => a.dialogContentPropDefs });
    module.exports = f(C);
    var a = require_dialog_props();
  }
});

// node_modules/@radix-ui/themes/dist/cjs/props/color.prop.js
var require_color_prop = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/props/color.prop.js"(exports, module) {
    "use strict";
    var t = Object.defineProperty;
    var u = Object.getOwnPropertyDescriptor;
    var f = Object.getOwnPropertyNames;
    var i = Object.prototype.hasOwnProperty;
    var m = (e, o) => {
      for (var s in o) t(e, s, { get: o[s], enumerable: true });
    };
    var y = (e, o, s, a) => {
      if (o && typeof o == "object" || typeof o == "function") for (let r of f(o)) !i.call(e, r) && r !== s && t(e, r, { get: () => o[r], enumerable: !(a = u(o, r)) || a.enumerable });
      return e;
    };
    var d = (e) => y(t({}, "__esModule", { value: true }), e);
    var b = {};
    m(b, { accentColorPropDef: () => p, accentColors: () => n, colorPropDef: () => c, grayColors: () => l });
    module.exports = d(b);
    var n = ["gray", "gold", "bronze", "brown", "yellow", "amber", "orange", "tomato", "red", "ruby", "crimson", "pink", "plum", "purple", "violet", "iris", "indigo", "blue", "cyan", "teal", "jade", "green", "grass", "lime", "mint", "sky"];
    var l = ["auto", "gray", "mauve", "slate", "sage", "olive", "sand"];
    var c = { color: { type: "enum", values: n, default: void 0 } };
    var p = { color: { type: "enum", values: n, default: "" } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/props/high-contrast.prop.js
var require_high_contrast_prop = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/props/high-contrast.prop.js"(exports, module) {
    "use strict";
    var s = Object.defineProperty;
    var p = Object.getOwnPropertyDescriptor;
    var f = Object.getOwnPropertyNames;
    var h = Object.prototype.hasOwnProperty;
    var i = (t, o) => {
      for (var r in o) s(t, r, { get: o[r], enumerable: true });
    };
    var d = (t, o, r, a) => {
      if (o && typeof o == "object" || typeof o == "function") for (let e of f(o)) !h.call(t, e) && e !== r && s(t, e, { get: () => o[e], enumerable: !(a = p(o, e)) || a.enumerable });
      return t;
    };
    var g = (t) => d(s({}, "__esModule", { value: true }), t);
    var l = {};
    i(l, { highContrastPropDef: () => n });
    module.exports = g(l);
    var n = { highContrast: { type: "boolean", className: "rt-high-contrast", default: void 0 } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/props/leading-trim.prop.js
var require_leading_trim_prop = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/props/leading-trim.prop.js"(exports, module) {
    "use strict";
    var o = Object.defineProperty;
    var m = Object.getOwnPropertyDescriptor;
    var n = Object.getOwnPropertyNames;
    var p = Object.prototype.hasOwnProperty;
    var l = (r, e) => {
      for (var s in e) o(r, s, { get: e[s], enumerable: true });
    };
    var f = (r, e, s, a) => {
      if (e && typeof e == "object" || typeof e == "function") for (let t of n(e)) !p.call(r, t) && t !== s && o(r, t, { get: () => e[t], enumerable: !(a = m(e, t)) || a.enumerable });
      return r;
    };
    var u = (r) => f(o({}, "__esModule", { value: true }), r);
    var c = {};
    l(c, { leadingTrimPropDef: () => i });
    module.exports = u(c);
    var d = ["normal", "start", "end", "both"];
    var i = { trim: { type: "enum", className: "rt-r-lt", values: d, responsive: true } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/props/text-align.prop.js
var require_text_align_prop = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/props/text-align.prop.js"(exports, module) {
    "use strict";
    var n = Object.defineProperty;
    var a = Object.getOwnPropertyDescriptor;
    var i = Object.getOwnPropertyNames;
    var l = Object.prototype.hasOwnProperty;
    var f = (t, e) => {
      for (var r in e) n(t, r, { get: e[r], enumerable: true });
    };
    var g = (t, e, r, o) => {
      if (e && typeof e == "object" || typeof e == "function") for (let s of i(e)) !l.call(t, s) && s !== r && n(t, s, { get: () => e[s], enumerable: !(o = a(e, s)) || o.enumerable });
      return t;
    };
    var u = (t) => g(n({}, "__esModule", { value: true }), t);
    var m = {};
    f(m, { textAlignPropDef: () => p });
    module.exports = u(m);
    var c = ["left", "center", "right"];
    var p = { align: { type: "enum", className: "rt-r-ta", values: c, responsive: true } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/props/text-wrap.prop.js
var require_text_wrap_prop = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/props/text-wrap.prop.js"(exports, module) {
    "use strict";
    var a = Object.defineProperty;
    var n = Object.getOwnPropertyDescriptor;
    var f = Object.getOwnPropertyNames;
    var u = Object.prototype.hasOwnProperty;
    var c = (r, e) => {
      for (var p in e) a(r, p, { get: e[p], enumerable: true });
    };
    var l = (r, e, p, s) => {
      if (e && typeof e == "object" || typeof e == "function") for (let t of f(e)) !u.call(r, t) && t !== p && a(r, t, { get: () => e[t], enumerable: !(s = n(e, t)) || s.enumerable });
      return r;
    };
    var m = (r) => l(a({}, "__esModule", { value: true }), r);
    var i = {};
    c(i, { textWrapPropDef: () => o });
    module.exports = m(i);
    var w = ["wrap", "nowrap", "pretty", "balance"];
    var o = { wrap: { type: "enum", className: "rt-r-tw", values: w, responsive: true } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/props/truncate.prop.js
var require_truncate_prop = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/props/truncate.prop.js"(exports, module) {
    "use strict";
    var a = Object.defineProperty;
    var s = Object.getOwnPropertyDescriptor;
    var c = Object.getOwnPropertyNames;
    var f = Object.prototype.hasOwnProperty;
    var u = (t, e) => {
      for (var r in e) a(t, r, { get: e[r], enumerable: true });
    };
    var i = (t, e, r, p) => {
      if (e && typeof e == "object" || typeof e == "function") for (let o of c(e)) !f.call(t, o) && o !== r && a(t, o, { get: () => e[o], enumerable: !(p = s(e, o)) || p.enumerable });
      return t;
    };
    var l = (t) => i(a({}, "__esModule", { value: true }), t);
    var m = {};
    u(m, { truncatePropDef: () => n });
    module.exports = l(m);
    var n = { truncate: { type: "boolean", className: "rt-truncate" } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/props/weight.prop.js
var require_weight_prop = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/props/weight.prop.js"(exports, module) {
    "use strict";
    var o = Object.defineProperty;
    var g = Object.getOwnPropertyDescriptor;
    var f = Object.getOwnPropertyNames;
    var h = Object.prototype.hasOwnProperty;
    var m = (t, e) => {
      for (var r in e) o(t, r, { get: e[r], enumerable: true });
    };
    var a = (t, e, r, i) => {
      if (e && typeof e == "object" || typeof e == "function") for (let s of f(e)) !h.call(t, s) && s !== r && o(t, s, { get: () => e[s], enumerable: !(i = g(e, s)) || i.enumerable });
      return t;
    };
    var n = (t) => a(o({}, "__esModule", { value: true }), t);
    var w = {};
    m(w, { weightPropDef: () => p });
    module.exports = n(w);
    var u = ["light", "regular", "medium", "bold"];
    var p = { weight: { type: "enum", className: "rt-r-weight", values: u, responsive: true } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/heading.props.js
var require_heading_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/heading.props.js"(exports, module) {
    "use strict";
    var p = Object.defineProperty;
    var l = Object.getOwnPropertyDescriptor;
    var c = Object.getOwnPropertyNames;
    var d = Object.prototype.hasOwnProperty;
    var g = (r, o) => {
      for (var t in o) p(r, t, { get: o[t], enumerable: true });
    };
    var y = (r, o, t, s) => {
      if (o && typeof o == "object" || typeof o == "function") for (let e of c(o)) !d.call(r, e) && e !== t && p(r, e, { get: () => o[e], enumerable: !(s = l(o, e)) || s.enumerable });
      return r;
    };
    var z = (r) => y(p({}, "__esModule", { value: true }), r);
    var b = {};
    g(b, { headingPropDefs: () => u });
    module.exports = z(b);
    var f = require_as_child_prop();
    var i = require_color_prop();
    var m = require_high_contrast_prop();
    var a = require_leading_trim_prop();
    var n = require_text_align_prop();
    var h = require_text_wrap_prop();
    var D = require_truncate_prop();
    var P = require_weight_prop();
    var v = ["h1", "h2", "h3", "h4", "h5", "h6"];
    var x = ["1", "2", "3", "4", "5", "6", "7", "8", "9"];
    var u = { as: { type: "enum", values: v, default: "h1" }, ...f.asChildPropDef, size: { type: "enum", className: "rt-r-size", values: x, default: "6", responsive: true }, ...P.weightPropDef, ...n.textAlignPropDef, ...a.leadingTrimPropDef, ...D.truncatePropDef, ...h.textWrapPropDef, ...i.colorPropDef, ...m.highContrastPropDef };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/props/prop-def.js
var require_prop_def = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/props/prop-def.js"(exports, module) {
    "use strict";
    var t = Object.defineProperty;
    var i = Object.getOwnPropertyDescriptor;
    var f = Object.getOwnPropertyNames;
    var a = Object.prototype.hasOwnProperty;
    var D = (r, e) => {
      for (var o in e) t(r, o, { get: e[o], enumerable: true });
    };
    var y = (r, e, o, p) => {
      if (e && typeof e == "object" || typeof e == "function") for (let n of f(e)) !a.call(r, n) && n !== o && t(r, n, { get: () => e[n], enumerable: !(p = i(e, n)) || p.enumerable });
      return r;
    };
    var P = (r) => y(t({}, "__esModule", { value: true }), r);
    var l = {};
    D(l, { breakpoints: () => s });
    module.exports = P(l);
    var s = ["initial", "xs", "sm", "md", "lg", "xl"];
  }
});

// node_modules/@radix-ui/themes/dist/cjs/helpers/has-own-property.js
var require_has_own_property = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/helpers/has-own-property.js"(exports, module) {
    "use strict";
    var o = Object.defineProperty;
    var b = Object.getOwnPropertyDescriptor;
    var p = Object.getOwnPropertyNames;
    var u = Object.prototype.hasOwnProperty;
    var c = (r, n) => {
      for (var t in n) o(r, t, { get: n[t], enumerable: true });
    };
    var i = (r, n, t, s) => {
      if (n && typeof n == "object" || typeof n == "function") for (let e of p(n)) !u.call(r, e) && e !== t && o(r, e, { get: () => n[e], enumerable: !(s = b(n, e)) || s.enumerable });
      return r;
    };
    var l = (r) => i(o({}, "__esModule", { value: true }), r);
    var m = {};
    c(m, { hasOwnProperty: () => y });
    module.exports = l(m);
    function y(r, n) {
      return Object.prototype.hasOwnProperty.call(r, n);
    }
  }
});

// node_modules/@radix-ui/themes/dist/cjs/helpers/is-responsive-object.js
var require_is_responsive_object = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/helpers/is-responsive-object.js"(exports, module) {
    "use strict";
    var i = Object.defineProperty;
    var p = Object.getOwnPropertyDescriptor;
    var a = Object.getOwnPropertyNames;
    var d = Object.prototype.hasOwnProperty;
    var u = (s, e) => {
      for (var t in e) i(s, t, { get: e[t], enumerable: true });
    };
    var c = (s, e, t, n) => {
      if (e && typeof e == "object" || typeof e == "function") for (let o of a(e)) !d.call(s, o) && o !== t && i(s, o, { get: () => e[o], enumerable: !(n = p(e, o)) || n.enumerable });
      return s;
    };
    var f = (s) => c(i({}, "__esModule", { value: true }), s);
    var l = {};
    u(l, { isResponsiveObject: () => m });
    module.exports = f(l);
    var r = require_prop_def();
    function m(s) {
      return typeof s == "object" && Object.keys(s).some((e) => r.breakpoints.includes(e));
    }
  }
});

// node_modules/@radix-ui/themes/dist/cjs/helpers/get-responsive-styles.js
var require_get_responsive_styles = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/helpers/get-responsive-styles.js"(exports, module) {
    "use strict";
    var c = Object.defineProperty;
    var b = Object.getOwnPropertyDescriptor;
    var C = Object.getOwnPropertyNames;
    var $ = Object.prototype.hasOwnProperty;
    var O = (s, n) => {
      for (var i in n) c(s, i, { get: n[i], enumerable: true });
    };
    var P = (s, n, i, p) => {
      if (n && typeof n == "object" || typeof n == "function") for (let e of C(n)) !$.call(s, e) && e !== i && c(s, e, { get: () => n[e], enumerable: !(p = b(n, e)) || p.enumerable });
      return s;
    };
    var N = (s) => P(c({}, "__esModule", { value: true }), s);
    var j = {};
    O(j, { getResponsiveClassNames: () => l, getResponsiveCustomProperties: () => m, getResponsiveStyles: () => R });
    module.exports = N(j);
    var a = require_prop_def();
    var d = require_has_own_property();
    var g = require_is_responsive_object();
    function R({ className: s, customProperties: n, ...i }) {
      const p = l({ allowArbitraryValues: true, className: s, ...i }), e = m({ customProperties: n, ...i });
      return [p, e];
    }
    function l({ allowArbitraryValues: s, value: n, className: i, propValues: p, parseValue: e = (t) => t }) {
      const t = [];
      if (n) {
        if (typeof n == "string" && p.includes(n)) return v(i, n, e);
        if ((0, g.isResponsiveObject)(n)) {
          const o = n;
          for (const r in o) {
            if (!(0, d.hasOwnProperty)(o, r) || !a.breakpoints.includes(r)) continue;
            const u = o[r];
            if (u !== void 0) {
              if (p.includes(u)) {
                const f = v(i, u, e), y = r === "initial" ? f : `${r}:${f}`;
                t.push(y);
              } else if (s) {
                const f = r === "initial" ? i : `${r}:${i}`;
                t.push(f);
              }
            }
          }
          return t.join(" ");
        }
        if (s) return i;
      }
    }
    function v(s, n, i) {
      const p = s ? "-" : "", e = i(n), t = e == null ? void 0 : e.startsWith("-"), o = t ? "-" : "", r = t ? e == null ? void 0 : e.substring(1) : e;
      return `${o}${s}${p}${r}`;
    }
    function m({ customProperties: s, value: n, propValues: i, parseValue: p = (e) => e }) {
      let e = {};
      if (!(!n || typeof n == "string" && i.includes(n))) {
        if (typeof n == "string" && (e = Object.fromEntries(s.map((t) => [t, n]))), (0, g.isResponsiveObject)(n)) {
          const t = n;
          for (const o in t) {
            if (!(0, d.hasOwnProperty)(t, o) || !a.breakpoints.includes(o)) continue;
            const r = t[o];
            if (!i.includes(r)) for (const u of s) e = { [o === "initial" ? u : `${u}-${o}`]: r, ...e };
          }
        }
        for (const t in e) {
          const o = e[t];
          o !== void 0 && (e[t] = p(o));
        }
        return e;
      }
    }
  }
});

// node_modules/@radix-ui/themes/dist/cjs/helpers/merge-styles.js
var require_merge_styles = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/helpers/merge-styles.js"(exports, module) {
    "use strict";
    var r = Object.defineProperty;
    var y = Object.getOwnPropertyDescriptor;
    var s = Object.getOwnPropertyNames;
    var u = Object.prototype.hasOwnProperty;
    var d = (n, e) => {
      for (var t in e) r(n, t, { get: e[t], enumerable: true });
    };
    var f = (n, e, t, i) => {
      if (e && typeof e == "object" || typeof e == "function") for (let l of s(e)) !u.call(n, l) && l !== t && r(n, l, { get: () => e[l], enumerable: !(i = y(e, l)) || i.enumerable });
      return n;
    };
    var o = (n) => f(r({}, "__esModule", { value: true }), n);
    var c = {};
    d(c, { mergeStyles: () => S });
    module.exports = o(c);
    function S(...n) {
      let e = {};
      for (const t of n) t && (e = { ...e, ...t });
      return Object.keys(e).length ? e : void 0;
    }
  }
});

// node_modules/@radix-ui/themes/dist/cjs/helpers/extract-props.js
var require_extract_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/helpers/extract-props.js"(exports, module) {
    "use strict";
    var R = Object.create;
    var f = Object.defineProperty;
    var D = Object.getOwnPropertyDescriptor;
    var T = Object.getOwnPropertyNames;
    var x = Object.getPrototypeOf;
    var C = Object.prototype.hasOwnProperty;
    var V = (s, r) => {
      for (var t in r) f(s, t, { get: r[t], enumerable: true });
    };
    var P = (s, r, t, i) => {
      if (r && typeof r == "object" || typeof r == "function") for (let n of T(r)) !C.call(s, n) && n !== t && f(s, n, { get: () => r[n], enumerable: !(i = D(r, n)) || i.enumerable });
      return s;
    };
    var S = (s, r, t) => (t = s != null ? R(x(s)) : {}, P(r || !s || !s.__esModule ? f(t, "default", { value: s, enumerable: true }) : t, s));
    var b = (s) => P(f({}, "__esModule", { value: true }), s);
    var j = {};
    V(j, { extractProps: () => g });
    module.exports = b(j);
    var o = S(require_classnames());
    var c = require_get_responsive_styles();
    var u = require_is_responsive_object();
    var m = require_merge_styles();
    function k(...s) {
      return Object.assign({}, ...s);
    }
    function g(s, ...r) {
      let t, i;
      const n = { ...s }, d = k(...r);
      for (const l in d) {
        let a = n[l];
        const e = d[l];
        if (e.default !== void 0 && a === void 0 && (a = e.default), e.type === "enum" && ![e.default, ...e.values].includes(a) && !(0, u.isResponsiveObject)(a) && (a = e.default), n[l] = a, "className" in e && e.className) {
          delete n[l];
          const y = "responsive" in e;
          if (!a || (0, u.isResponsiveObject)(a) && !y) continue;
          if ((0, u.isResponsiveObject)(a) && (e.default !== void 0 && a.initial === void 0 && (a.initial = e.default), e.type === "enum" && ([e.default, ...e.values].includes(a.initial) || (a.initial = e.default))), e.type === "enum") {
            const p = (0, c.getResponsiveClassNames)({ allowArbitraryValues: false, value: a, className: e.className, propValues: e.values, parseValue: e.parseValue });
            t = (0, o.default)(t, p);
            continue;
          }
          if (e.type === "string" || e.type === "enum | string") {
            const p = e.type === "string" ? [] : e.values, [N, v] = (0, c.getResponsiveStyles)({ className: e.className, customProperties: e.customProperties, propValues: p, parseValue: e.parseValue, value: a });
            i = (0, m.mergeStyles)(i, v), t = (0, o.default)(t, N);
            continue;
          }
          if (e.type === "boolean" && a) {
            t = (0, o.default)(t, e.className);
            continue;
          }
        }
      }
      return n.className = (0, o.default)(t, s.className), n.style = (0, m.mergeStyles)(i, s.style), n;
    }
  }
});

// node_modules/@radix-ui/themes/dist/cjs/props/margin.props.js
var require_margin_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/props/margin.props.js"(exports, module) {
    "use strict";
    var p = Object.defineProperty;
    var n = Object.getOwnPropertyDescriptor;
    var u = Object.getOwnPropertyNames;
    var i = Object.prototype.hasOwnProperty;
    var l = (r, e) => {
      for (var t in e) p(r, t, { get: e[t], enumerable: true });
    };
    var f = (r, e, t, o) => {
      if (e && typeof e == "object" || typeof e == "function") for (let m of u(e)) !i.call(r, m) && m !== t && p(r, m, { get: () => e[m], enumerable: !(o = n(e, m)) || o.enumerable });
      return r;
    };
    var y = (r) => f(p({}, "__esModule", { value: true }), r);
    var P = {};
    l(P, { marginPropDefs: () => a });
    module.exports = y(P);
    var s = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "-1", "-2", "-3", "-4", "-5", "-6", "-7", "-8", "-9"];
    var a = { m: { type: "enum | string", values: s, responsive: true, className: "rt-r-m", customProperties: ["--m"] }, mx: { type: "enum | string", values: s, responsive: true, className: "rt-r-mx", customProperties: ["--ml", "--mr"] }, my: { type: "enum | string", values: s, responsive: true, className: "rt-r-my", customProperties: ["--mt", "--mb"] }, mt: { type: "enum | string", values: s, responsive: true, className: "rt-r-mt", customProperties: ["--mt"] }, mr: { type: "enum | string", values: s, responsive: true, className: "rt-r-mr", customProperties: ["--mr"] }, mb: { type: "enum | string", values: s, responsive: true, className: "rt-r-mb", customProperties: ["--mb"] }, ml: { type: "enum | string", values: s, responsive: true, className: "rt-r-ml", customProperties: ["--ml"] } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/heading.js
var require_heading = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/heading.js"(exports, module) {
    "use strict";
    var H = Object.create;
    var s = Object.defineProperty;
    var D = Object.getOwnPropertyDescriptor;
    var x = Object.getOwnPropertyNames;
    var N = Object.getPrototypeOf;
    var R = Object.prototype.hasOwnProperty;
    var T = (o, e) => {
      for (var r in e) s(o, r, { get: e[r], enumerable: true });
    };
    var i = (o, e, r, t) => {
      if (e && typeof e == "object" || typeof e == "function") for (let p of x(e)) !R.call(o, p) && p !== r && s(o, p, { get: () => e[p], enumerable: !(t = D(e, p)) || t.enumerable });
      return o;
    };
    var m = (o, e, r) => (r = o != null ? H(N(o)) : {}, i(e || !o || !o.__esModule ? s(r, "default", { value: o, enumerable: true }) : r, o));
    var j = (o) => i(s({}, "__esModule", { value: true }), o);
    var u = {};
    T(u, { Heading: () => n });
    module.exports = j(u);
    var a = m(require_react());
    var d = m(require_classnames());
    var f = require_dist2();
    var g = require_heading_props();
    var P = require_extract_props();
    var l = require_margin_props();
    var n = a.forwardRef((o, e) => {
      const { children: r, className: t, asChild: p, as: c = "h1", color: h, ...y } = (0, P.extractProps)(o, g.headingPropDefs, l.marginPropDefs);
      return a.createElement(f.Slot, { "data-accent-color": h, ...y, ref: e, className: (0, d.default)("rt-Heading", t) }, p ? r : a.createElement(c, null, r));
    });
    n.displayName = "Heading";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/text.props.js
var require_text_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/text.props.js"(exports, module) {
    "use strict";
    var t = Object.defineProperty;
    var c = Object.getOwnPropertyDescriptor;
    var d = Object.getOwnPropertyNames;
    var y = Object.prototype.hasOwnProperty;
    var z = (r, o) => {
      for (var p in o) t(r, p, { get: o[p], enumerable: true });
    };
    var g = (r, o, p, s) => {
      if (o && typeof o == "object" || typeof o == "function") for (let e of d(o)) !y.call(r, e) && e !== p && t(r, e, { get: () => o[e], enumerable: !(s = c(o, e)) || s.enumerable });
      return r;
    };
    var h = (r) => g(t({}, "__esModule", { value: true }), r);
    var b = {};
    z(b, { textPropDefs: () => u });
    module.exports = h(b);
    var f = require_as_child_prop();
    var i = require_color_prop();
    var m = require_high_contrast_prop();
    var a = require_leading_trim_prop();
    var n = require_text_align_prop();
    var D = require_text_wrap_prop();
    var P = require_truncate_prop();
    var l = require_weight_prop();
    var v = ["span", "div", "label", "p"];
    var x = ["1", "2", "3", "4", "5", "6", "7", "8", "9"];
    var u = { as: { type: "enum", values: v, default: "span" }, ...f.asChildPropDef, size: { type: "enum", className: "rt-r-size", values: x, responsive: true }, ...l.weightPropDef, ...n.textAlignPropDef, ...a.leadingTrimPropDef, ...P.truncatePropDef, ...D.textWrapPropDef, ...i.colorPropDef, ...m.highContrastPropDef };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/text.js
var require_text = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/text.js"(exports, module) {
    "use strict";
    var v = Object.create;
    var s = Object.defineProperty;
    var h = Object.getOwnPropertyDescriptor;
    var C = Object.getOwnPropertyNames;
    var D = Object.getPrototypeOf;
    var R = Object.prototype.hasOwnProperty;
    var g = (o, e) => {
      for (var p in e) s(o, p, { get: e[p], enumerable: true });
    };
    var n = (o, e, p, r) => {
      if (e && typeof e == "object" || typeof e == "function") for (let t of C(e)) !R.call(o, t) && t !== p && s(o, t, { get: () => e[t], enumerable: !(r = h(e, t)) || r.enumerable });
      return o;
    };
    var P = (o, e, p) => (p = o != null ? v(D(o)) : {}, n(e || !o || !o.__esModule ? s(p, "default", { value: o, enumerable: true }) : p, o));
    var u = (o) => n(s({}, "__esModule", { value: true }), o);
    var W = {};
    g(W, { Text: () => a });
    module.exports = u(W);
    var m = P(require_react());
    var x = P(require_classnames());
    var i = require_dist2();
    var T = require_extract_props();
    var f = require_margin_props();
    var l = require_text_props();
    var a = m.forwardRef((o, e) => {
      const { children: p, className: r, asChild: t, as: y = "span", color: d, ...c } = (0, T.extractProps)(o, l.textPropDefs, f.marginPropDefs);
      return m.createElement(i.Slot, { "data-accent-color": d, ...c, ref: e, className: (0, x.default)("rt-Text", r) }, t ? p : m.createElement(y, null, p));
    });
    a.displayName = "Text";
  }
});

// node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.esm.js
var floating_ui_react_dom_esm_exports = {};
__export(floating_ui_react_dom_esm_exports, {
  arrow: () => arrow2,
  autoPlacement: () => autoPlacement2,
  autoUpdate: () => autoUpdate,
  computePosition: () => computePosition,
  detectOverflow: () => detectOverflow,
  flip: () => flip2,
  getOverflowAncestors: () => getOverflowAncestors,
  hide: () => hide2,
  inline: () => inline2,
  limitShift: () => limitShift2,
  offset: () => offset2,
  platform: () => platform,
  shift: () => shift2,
  size: () => size2,
  useFloating: () => useFloating
});
function deepEqual(a, b) {
  if (a === b) {
    return true;
  }
  if (typeof a !== typeof b) {
    return false;
  }
  if (typeof a === "function" && a.toString() === b.toString()) {
    return true;
  }
  let length;
  let i;
  let keys;
  if (a && b && typeof a === "object") {
    if (Array.isArray(a)) {
      length = a.length;
      if (length !== b.length) return false;
      for (i = length; i-- !== 0; ) {
        if (!deepEqual(a[i], b[i])) {
          return false;
        }
      }
      return true;
    }
    keys = Object.keys(a);
    length = keys.length;
    if (length !== Object.keys(b).length) {
      return false;
    }
    for (i = length; i-- !== 0; ) {
      if (!{}.hasOwnProperty.call(b, keys[i])) {
        return false;
      }
    }
    for (i = length; i-- !== 0; ) {
      const key = keys[i];
      if (key === "_owner" && a.$$typeof) {
        continue;
      }
      if (!deepEqual(a[key], b[key])) {
        return false;
      }
    }
    return true;
  }
  return a !== a && b !== b;
}
function getDPR(element) {
  if (typeof window === "undefined") {
    return 1;
  }
  const win = element.ownerDocument.defaultView || window;
  return win.devicePixelRatio || 1;
}
function roundByDPR(element, value) {
  const dpr = getDPR(element);
  return Math.round(value * dpr) / dpr;
}
function useLatestRef(value) {
  const ref = React.useRef(value);
  index(() => {
    ref.current = value;
  });
  return ref;
}
function useFloating(options) {
  if (options === void 0) {
    options = {};
  }
  const {
    placement = "bottom",
    strategy = "absolute",
    middleware = [],
    platform: platform2,
    elements: {
      reference: externalReference,
      floating: externalFloating
    } = {},
    transform = true,
    whileElementsMounted,
    open
  } = options;
  const [data, setData] = React.useState({
    x: 0,
    y: 0,
    strategy,
    placement,
    middlewareData: {},
    isPositioned: false
  });
  const [latestMiddleware, setLatestMiddleware] = React.useState(middleware);
  if (!deepEqual(latestMiddleware, middleware)) {
    setLatestMiddleware(middleware);
  }
  const [_reference, _setReference] = React.useState(null);
  const [_floating, _setFloating] = React.useState(null);
  const setReference = React.useCallback((node) => {
    if (node !== referenceRef.current) {
      referenceRef.current = node;
      _setReference(node);
    }
  }, []);
  const setFloating = React.useCallback((node) => {
    if (node !== floatingRef.current) {
      floatingRef.current = node;
      _setFloating(node);
    }
  }, []);
  const referenceEl = externalReference || _reference;
  const floatingEl = externalFloating || _floating;
  const referenceRef = React.useRef(null);
  const floatingRef = React.useRef(null);
  const dataRef = React.useRef(data);
  const hasWhileElementsMounted = whileElementsMounted != null;
  const whileElementsMountedRef = useLatestRef(whileElementsMounted);
  const platformRef = useLatestRef(platform2);
  const openRef = useLatestRef(open);
  const update = React.useCallback(() => {
    if (!referenceRef.current || !floatingRef.current) {
      return;
    }
    const config = {
      placement,
      strategy,
      middleware: latestMiddleware
    };
    if (platformRef.current) {
      config.platform = platformRef.current;
    }
    computePosition(referenceRef.current, floatingRef.current, config).then((data2) => {
      const fullData = {
        ...data2,
        // The floating element's position may be recomputed while it's closed
        // but still mounted (such as when transitioning out). To ensure
        // `isPositioned` will be `false` initially on the next open, avoid
        // setting it to `true` when `open === false` (must be specified).
        isPositioned: openRef.current !== false
      };
      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {
        dataRef.current = fullData;
        ReactDOM.flushSync(() => {
          setData(fullData);
        });
      }
    });
  }, [latestMiddleware, placement, strategy, platformRef, openRef]);
  index(() => {
    if (open === false && dataRef.current.isPositioned) {
      dataRef.current.isPositioned = false;
      setData((data2) => ({
        ...data2,
        isPositioned: false
      }));
    }
  }, [open]);
  const isMountedRef = React.useRef(false);
  index(() => {
    isMountedRef.current = true;
    return () => {
      isMountedRef.current = false;
    };
  }, []);
  index(() => {
    if (referenceEl) referenceRef.current = referenceEl;
    if (floatingEl) floatingRef.current = floatingEl;
    if (referenceEl && floatingEl) {
      if (whileElementsMountedRef.current) {
        return whileElementsMountedRef.current(referenceEl, floatingEl, update);
      }
      update();
    }
  }, [referenceEl, floatingEl, update, whileElementsMountedRef, hasWhileElementsMounted]);
  const refs = React.useMemo(() => ({
    reference: referenceRef,
    floating: floatingRef,
    setReference,
    setFloating
  }), [setReference, setFloating]);
  const elements = React.useMemo(() => ({
    reference: referenceEl,
    floating: floatingEl
  }), [referenceEl, floatingEl]);
  const floatingStyles = React.useMemo(() => {
    const initialStyles = {
      position: strategy,
      left: 0,
      top: 0
    };
    if (!elements.floating) {
      return initialStyles;
    }
    const x = roundByDPR(elements.floating, data.x);
    const y = roundByDPR(elements.floating, data.y);
    if (transform) {
      return {
        ...initialStyles,
        transform: "translate(" + x + "px, " + y + "px)",
        ...getDPR(elements.floating) >= 1.5 && {
          willChange: "transform"
        }
      };
    }
    return {
      position: strategy,
      left: x,
      top: y
    };
  }, [strategy, transform, elements.floating, data.x, data.y]);
  return React.useMemo(() => ({
    ...data,
    update,
    refs,
    elements,
    floatingStyles
  }), [data, update, refs, elements, floatingStyles]);
}
var React, import_react, ReactDOM, index, arrow$1, offset2, shift2, limitShift2, flip2, size2, autoPlacement2, hide2, inline2, arrow2;
var init_floating_ui_react_dom_esm = __esm({
  "node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.esm.js"() {
    init_floating_ui_dom();
    init_floating_ui_dom();
    React = __toESM(require_react());
    import_react = __toESM(require_react());
    ReactDOM = __toESM(require_react_dom());
    index = typeof document !== "undefined" ? import_react.useLayoutEffect : import_react.useEffect;
    arrow$1 = (options) => {
      function isRef(value) {
        return {}.hasOwnProperty.call(value, "current");
      }
      return {
        name: "arrow",
        options,
        fn(state) {
          const {
            element,
            padding
          } = typeof options === "function" ? options(state) : options;
          if (element && isRef(element)) {
            if (element.current != null) {
              return arrow({
                element: element.current,
                padding
              }).fn(state);
            }
            return {};
          }
          if (element) {
            return arrow({
              element,
              padding
            }).fn(state);
          }
          return {};
        }
      };
    };
    offset2 = (options, deps) => ({
      ...offset(options),
      options: [options, deps]
    });
    shift2 = (options, deps) => ({
      ...shift(options),
      options: [options, deps]
    });
    limitShift2 = (options, deps) => ({
      ...limitShift(options),
      options: [options, deps]
    });
    flip2 = (options, deps) => ({
      ...flip(options),
      options: [options, deps]
    });
    size2 = (options, deps) => ({
      ...size(options),
      options: [options, deps]
    });
    autoPlacement2 = (options, deps) => ({
      ...autoPlacement(options),
      options: [options, deps]
    });
    hide2 = (options, deps) => ({
      ...hide(options),
      options: [options, deps]
    });
    inline2 = (options, deps) => ({
      ...inline(options),
      options: [options, deps]
    });
    arrow2 = (options, deps) => ({
      ...arrow$1(options),
      options: [options, deps]
    });
  }
});

// node_modules/@radix-ui/react-arrow/dist/index.js
var require_dist20 = __commonJS({
  "node_modules/@radix-ui/react-arrow/dist/index.js"(exports, module) {
    "use strict";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Arrow: () => Arrow,
      Root: () => Root
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_react_primitive = require_dist3();
    var import_jsx_runtime = require_jsx_runtime();
    var NAME = "Arrow";
    var Arrow = React2.forwardRef((props, forwardedRef) => {
      const { children, width = 10, height = 5, ...arrowProps } = props;
      return (0, import_jsx_runtime.jsx)(
        import_react_primitive.Primitive.svg,
        {
          ...arrowProps,
          ref: forwardedRef,
          width,
          height,
          viewBox: "0 0 30 10",
          preserveAspectRatio: "none",
          children: props.asChild ? children : (0, import_jsx_runtime.jsx)("polygon", { points: "0,0 30,0 15,10" })
        }
      );
    });
    Arrow.displayName = NAME;
    var Root = Arrow;
  }
});

// node_modules/@radix-ui/react-use-size/dist/index.js
var require_dist21 = __commonJS({
  "node_modules/@radix-ui/react-use-size/dist/index.js"(exports, module) {
    "use strict";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      useSize: () => useSize
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_react_use_layout_effect = require_dist8();
    function useSize(element) {
      const [size3, setSize] = React2.useState(void 0);
      (0, import_react_use_layout_effect.useLayoutEffect)(() => {
        if (element) {
          setSize({ width: element.offsetWidth, height: element.offsetHeight });
          const resizeObserver = new ResizeObserver((entries) => {
            if (!Array.isArray(entries)) {
              return;
            }
            if (!entries.length) {
              return;
            }
            const entry = entries[0];
            let width;
            let height;
            if ("borderBoxSize" in entry) {
              const borderSizeEntry = entry["borderBoxSize"];
              const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;
              width = borderSize["inlineSize"];
              height = borderSize["blockSize"];
            } else {
              width = element.offsetWidth;
              height = element.offsetHeight;
            }
            setSize({ width, height });
          });
          resizeObserver.observe(element, { box: "border-box" });
          return () => resizeObserver.unobserve(element);
        } else {
          setSize(void 0);
        }
      }, [element]);
      return size3;
    }
  }
});

// node_modules/@radix-ui/react-popper/dist/index.js
var require_dist22 = __commonJS({
  "node_modules/@radix-ui/react-popper/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      ALIGN_OPTIONS: () => ALIGN_OPTIONS,
      Anchor: () => Anchor,
      Arrow: () => Arrow,
      Content: () => Content,
      Popper: () => Popper,
      PopperAnchor: () => PopperAnchor,
      PopperArrow: () => PopperArrow,
      PopperContent: () => PopperContent,
      Root: () => Root2,
      SIDE_OPTIONS: () => SIDE_OPTIONS,
      createPopperScope: () => createPopperScope
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_react_dom = (init_floating_ui_react_dom_esm(), __toCommonJS(floating_ui_react_dom_esm_exports));
    var ArrowPrimitive = __toESM2(require_dist20());
    var import_react_compose_refs = require_dist();
    var import_react_context = require_dist6();
    var import_react_primitive = require_dist3();
    var import_react_use_callback_ref = require_dist10();
    var import_react_use_layout_effect = require_dist8();
    var import_react_use_size = require_dist21();
    var import_jsx_runtime = require_jsx_runtime();
    var SIDE_OPTIONS = ["top", "right", "bottom", "left"];
    var ALIGN_OPTIONS = ["start", "center", "end"];
    var POPPER_NAME = "Popper";
    var [createPopperContext, createPopperScope] = (0, import_react_context.createContextScope)(POPPER_NAME);
    var [PopperProvider, usePopperContext] = createPopperContext(POPPER_NAME);
    var Popper = (props) => {
      const { __scopePopper, children } = props;
      const [anchor, setAnchor] = React2.useState(null);
      return (0, import_jsx_runtime.jsx)(PopperProvider, { scope: __scopePopper, anchor, onAnchorChange: setAnchor, children });
    };
    Popper.displayName = POPPER_NAME;
    var ANCHOR_NAME = "PopperAnchor";
    var PopperAnchor = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopePopper, virtualRef, ...anchorProps } = props;
        const context = usePopperContext(ANCHOR_NAME, __scopePopper);
        const ref = React2.useRef(null);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, ref);
        React2.useEffect(() => {
          context.onAnchorChange((virtualRef == null ? void 0 : virtualRef.current) || ref.current);
        });
        return virtualRef ? null : (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.div, { ...anchorProps, ref: composedRefs });
      }
    );
    PopperAnchor.displayName = ANCHOR_NAME;
    var CONTENT_NAME = "PopperContent";
    var [PopperContentProvider, useContentContext] = createPopperContext(CONTENT_NAME);
    var PopperContent = React2.forwardRef(
      (props, forwardedRef) => {
        var _a, _b, _c, _d, _e, _f;
        const {
          __scopePopper,
          side = "bottom",
          sideOffset = 0,
          align = "center",
          alignOffset = 0,
          arrowPadding = 0,
          avoidCollisions = true,
          collisionBoundary = [],
          collisionPadding: collisionPaddingProp = 0,
          sticky = "partial",
          hideWhenDetached = false,
          updatePositionStrategy = "optimized",
          onPlaced,
          ...contentProps
        } = props;
        const context = usePopperContext(CONTENT_NAME, __scopePopper);
        const [content, setContent] = React2.useState(null);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, (node) => setContent(node));
        const [arrow3, setArrow] = React2.useState(null);
        const arrowSize = (0, import_react_use_size.useSize)(arrow3);
        const arrowWidth = (arrowSize == null ? void 0 : arrowSize.width) ?? 0;
        const arrowHeight = (arrowSize == null ? void 0 : arrowSize.height) ?? 0;
        const desiredPlacement = side + (align !== "center" ? "-" + align : "");
        const collisionPadding = typeof collisionPaddingProp === "number" ? collisionPaddingProp : { top: 0, right: 0, bottom: 0, left: 0, ...collisionPaddingProp };
        const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [collisionBoundary];
        const hasExplicitBoundaries = boundary.length > 0;
        const detectOverflowOptions = {
          padding: collisionPadding,
          boundary: boundary.filter(isNotNull),
          // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries
          altBoundary: hasExplicitBoundaries
        };
        const { refs, floatingStyles, placement, isPositioned, middlewareData } = (0, import_react_dom.useFloating)({
          // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues
          strategy: "fixed",
          placement: desiredPlacement,
          whileElementsMounted: (...args) => {
            const cleanup = (0, import_react_dom.autoUpdate)(...args, {
              animationFrame: updatePositionStrategy === "always"
            });
            return cleanup;
          },
          elements: {
            reference: context.anchor
          },
          middleware: [
            (0, import_react_dom.offset)({ mainAxis: sideOffset + arrowHeight, alignmentAxis: alignOffset }),
            avoidCollisions && (0, import_react_dom.shift)({
              mainAxis: true,
              crossAxis: false,
              limiter: sticky === "partial" ? (0, import_react_dom.limitShift)() : void 0,
              ...detectOverflowOptions
            }),
            avoidCollisions && (0, import_react_dom.flip)({ ...detectOverflowOptions }),
            (0, import_react_dom.size)({
              ...detectOverflowOptions,
              apply: ({ elements, rects, availableWidth, availableHeight }) => {
                const { width: anchorWidth, height: anchorHeight } = rects.reference;
                const contentStyle = elements.floating.style;
                contentStyle.setProperty("--radix-popper-available-width", `${availableWidth}px`);
                contentStyle.setProperty("--radix-popper-available-height", `${availableHeight}px`);
                contentStyle.setProperty("--radix-popper-anchor-width", `${anchorWidth}px`);
                contentStyle.setProperty("--radix-popper-anchor-height", `${anchorHeight}px`);
              }
            }),
            arrow3 && (0, import_react_dom.arrow)({ element: arrow3, padding: arrowPadding }),
            transformOrigin({ arrowWidth, arrowHeight }),
            hideWhenDetached && (0, import_react_dom.hide)({ strategy: "referenceHidden", ...detectOverflowOptions })
          ]
        });
        const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);
        const handlePlaced = (0, import_react_use_callback_ref.useCallbackRef)(onPlaced);
        (0, import_react_use_layout_effect.useLayoutEffect)(() => {
          if (isPositioned) {
            handlePlaced == null ? void 0 : handlePlaced();
          }
        }, [isPositioned, handlePlaced]);
        const arrowX = (_a = middlewareData.arrow) == null ? void 0 : _a.x;
        const arrowY = (_b = middlewareData.arrow) == null ? void 0 : _b.y;
        const cannotCenterArrow = ((_c = middlewareData.arrow) == null ? void 0 : _c.centerOffset) !== 0;
        const [contentZIndex, setContentZIndex] = React2.useState();
        (0, import_react_use_layout_effect.useLayoutEffect)(() => {
          if (content) setContentZIndex(window.getComputedStyle(content).zIndex);
        }, [content]);
        return (0, import_jsx_runtime.jsx)(
          "div",
          {
            ref: refs.setFloating,
            "data-radix-popper-content-wrapper": "",
            style: {
              ...floatingStyles,
              transform: isPositioned ? floatingStyles.transform : "translate(0, -200%)",
              // keep off the page when measuring
              minWidth: "max-content",
              zIndex: contentZIndex,
              ["--radix-popper-transform-origin"]: [
                (_d = middlewareData.transformOrigin) == null ? void 0 : _d.x,
                (_e = middlewareData.transformOrigin) == null ? void 0 : _e.y
              ].join(" "),
              // hide the content if using the hide middleware and should be hidden
              // set visibility to hidden and disable pointer events so the UI behaves
              // as if the PopperContent isn't there at all
              ...((_f = middlewareData.hide) == null ? void 0 : _f.referenceHidden) && {
                visibility: "hidden",
                pointerEvents: "none"
              }
            },
            dir: props.dir,
            children: (0, import_jsx_runtime.jsx)(
              PopperContentProvider,
              {
                scope: __scopePopper,
                placedSide,
                onArrowChange: setArrow,
                arrowX,
                arrowY,
                shouldHideArrow: cannotCenterArrow,
                children: (0, import_jsx_runtime.jsx)(
                  import_react_primitive.Primitive.div,
                  {
                    "data-side": placedSide,
                    "data-align": placedAlign,
                    ...contentProps,
                    ref: composedRefs,
                    style: {
                      ...contentProps.style,
                      // if the PopperContent hasn't been placed yet (not all measurements done)
                      // we prevent animations so that users's animation don't kick in too early referring wrong sides
                      animation: !isPositioned ? "none" : void 0
                    }
                  }
                )
              }
            )
          }
        );
      }
    );
    PopperContent.displayName = CONTENT_NAME;
    var ARROW_NAME = "PopperArrow";
    var OPPOSITE_SIDE = {
      top: "bottom",
      right: "left",
      bottom: "top",
      left: "right"
    };
    var PopperArrow = React2.forwardRef(function PopperArrow2(props, forwardedRef) {
      const { __scopePopper, ...arrowProps } = props;
      const contentContext = useContentContext(ARROW_NAME, __scopePopper);
      const baseSide = OPPOSITE_SIDE[contentContext.placedSide];
      return (
        // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)
        // doesn't report size as we'd expect on SVG elements.
        // it reports their bounding box which is effectively the largest path inside the SVG.
        (0, import_jsx_runtime.jsx)(
          "span",
          {
            ref: contentContext.onArrowChange,
            style: {
              position: "absolute",
              left: contentContext.arrowX,
              top: contentContext.arrowY,
              [baseSide]: 0,
              transformOrigin: {
                top: "",
                right: "0 0",
                bottom: "center 0",
                left: "100% 0"
              }[contentContext.placedSide],
              transform: {
                top: "translateY(100%)",
                right: "translateY(50%) rotate(90deg) translateX(-50%)",
                bottom: `rotate(180deg)`,
                left: "translateY(50%) rotate(-90deg) translateX(50%)"
              }[contentContext.placedSide],
              visibility: contentContext.shouldHideArrow ? "hidden" : void 0
            },
            children: (0, import_jsx_runtime.jsx)(
              ArrowPrimitive.Root,
              {
                ...arrowProps,
                ref: forwardedRef,
                style: {
                  ...arrowProps.style,
                  // ensures the element can be measured correctly (mostly for if SVG)
                  display: "block"
                }
              }
            )
          }
        )
      );
    });
    PopperArrow.displayName = ARROW_NAME;
    function isNotNull(value) {
      return value !== null;
    }
    var transformOrigin = (options) => ({
      name: "transformOrigin",
      options,
      fn(data) {
        var _a, _b, _c;
        const { placement, rects, middlewareData } = data;
        const cannotCenterArrow = ((_a = middlewareData.arrow) == null ? void 0 : _a.centerOffset) !== 0;
        const isArrowHidden = cannotCenterArrow;
        const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;
        const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;
        const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);
        const noArrowAlign = { start: "0%", center: "50%", end: "100%" }[placedAlign];
        const arrowXCenter = (((_b = middlewareData.arrow) == null ? void 0 : _b.x) ?? 0) + arrowWidth / 2;
        const arrowYCenter = (((_c = middlewareData.arrow) == null ? void 0 : _c.y) ?? 0) + arrowHeight / 2;
        let x = "";
        let y = "";
        if (placedSide === "bottom") {
          x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;
          y = `${-arrowHeight}px`;
        } else if (placedSide === "top") {
          x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;
          y = `${rects.floating.height + arrowHeight}px`;
        } else if (placedSide === "right") {
          x = `${-arrowHeight}px`;
          y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;
        } else if (placedSide === "left") {
          x = `${rects.floating.width + arrowHeight}px`;
          y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;
        }
        return { data: { x, y } };
      }
    });
    function getSideAndAlignFromPlacement(placement) {
      const [side, align = "center"] = placement.split("-");
      return [side, align];
    }
    var Root2 = Popper;
    var Anchor = PopperAnchor;
    var Content = PopperContent;
    var Arrow = PopperArrow;
  }
});

// node_modules/@radix-ui/react-tooltip/dist/index.js
var require_dist23 = __commonJS({
  "node_modules/@radix-ui/react-tooltip/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Arrow: () => Arrow2,
      Content: () => Content2,
      Portal: () => Portal,
      Provider: () => Provider,
      Root: () => Root3,
      Tooltip: () => Tooltip,
      TooltipArrow: () => TooltipArrow,
      TooltipContent: () => TooltipContent,
      TooltipPortal: () => TooltipPortal,
      TooltipProvider: () => TooltipProvider,
      TooltipTrigger: () => TooltipTrigger,
      Trigger: () => Trigger,
      createTooltipScope: () => createTooltipScope
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_primitive = require_dist7();
    var import_react_compose_refs = require_dist();
    var import_react_context = require_dist6();
    var import_react_dismissable_layer = require_dist13();
    var import_react_id = require_dist9();
    var PopperPrimitive = __toESM2(require_dist22());
    var import_react_popper = require_dist22();
    var import_react_portal = require_dist15();
    var import_react_presence = require_dist16();
    var import_react_primitive = require_dist3();
    var import_react_slot = require_dist2();
    var import_react_use_controllable_state = require_dist11();
    var VisuallyHiddenPrimitive = __toESM2(require_dist4());
    var import_jsx_runtime = require_jsx_runtime();
    var [createTooltipContext, createTooltipScope] = (0, import_react_context.createContextScope)("Tooltip", [
      import_react_popper.createPopperScope
    ]);
    var usePopperScope = (0, import_react_popper.createPopperScope)();
    var PROVIDER_NAME = "TooltipProvider";
    var DEFAULT_DELAY_DURATION = 700;
    var TOOLTIP_OPEN = "tooltip.open";
    var [TooltipProviderContextProvider, useTooltipProviderContext] = createTooltipContext(PROVIDER_NAME);
    var TooltipProvider = (props) => {
      const {
        __scopeTooltip,
        delayDuration = DEFAULT_DELAY_DURATION,
        skipDelayDuration = 300,
        disableHoverableContent = false,
        children
      } = props;
      const [isOpenDelayed, setIsOpenDelayed] = React2.useState(true);
      const isPointerInTransitRef = React2.useRef(false);
      const skipDelayTimerRef = React2.useRef(0);
      React2.useEffect(() => {
        const skipDelayTimer = skipDelayTimerRef.current;
        return () => window.clearTimeout(skipDelayTimer);
      }, []);
      return (0, import_jsx_runtime.jsx)(
        TooltipProviderContextProvider,
        {
          scope: __scopeTooltip,
          isOpenDelayed,
          delayDuration,
          onOpen: React2.useCallback(() => {
            window.clearTimeout(skipDelayTimerRef.current);
            setIsOpenDelayed(false);
          }, []),
          onClose: React2.useCallback(() => {
            window.clearTimeout(skipDelayTimerRef.current);
            skipDelayTimerRef.current = window.setTimeout(
              () => setIsOpenDelayed(true),
              skipDelayDuration
            );
          }, [skipDelayDuration]),
          isPointerInTransitRef,
          onPointerInTransitChange: React2.useCallback((inTransit) => {
            isPointerInTransitRef.current = inTransit;
          }, []),
          disableHoverableContent,
          children
        }
      );
    };
    TooltipProvider.displayName = PROVIDER_NAME;
    var TOOLTIP_NAME = "Tooltip";
    var [TooltipContextProvider, useTooltipContext] = createTooltipContext(TOOLTIP_NAME);
    var Tooltip = (props) => {
      const {
        __scopeTooltip,
        children,
        open: openProp,
        defaultOpen = false,
        onOpenChange,
        disableHoverableContent: disableHoverableContentProp,
        delayDuration: delayDurationProp
      } = props;
      const providerContext = useTooltipProviderContext(TOOLTIP_NAME, props.__scopeTooltip);
      const popperScope = usePopperScope(__scopeTooltip);
      const [trigger, setTrigger] = React2.useState(null);
      const contentId = (0, import_react_id.useId)();
      const openTimerRef = React2.useRef(0);
      const disableHoverableContent = disableHoverableContentProp ?? providerContext.disableHoverableContent;
      const delayDuration = delayDurationProp ?? providerContext.delayDuration;
      const wasOpenDelayedRef = React2.useRef(false);
      const [open = false, setOpen] = (0, import_react_use_controllable_state.useControllableState)({
        prop: openProp,
        defaultProp: defaultOpen,
        onChange: (open2) => {
          if (open2) {
            providerContext.onOpen();
            document.dispatchEvent(new CustomEvent(TOOLTIP_OPEN));
          } else {
            providerContext.onClose();
          }
          onOpenChange == null ? void 0 : onOpenChange(open2);
        }
      });
      const stateAttribute = React2.useMemo(() => {
        return open ? wasOpenDelayedRef.current ? "delayed-open" : "instant-open" : "closed";
      }, [open]);
      const handleOpen = React2.useCallback(() => {
        window.clearTimeout(openTimerRef.current);
        wasOpenDelayedRef.current = false;
        setOpen(true);
      }, [setOpen]);
      const handleClose = React2.useCallback(() => {
        window.clearTimeout(openTimerRef.current);
        setOpen(false);
      }, [setOpen]);
      const handleDelayedOpen = React2.useCallback(() => {
        window.clearTimeout(openTimerRef.current);
        openTimerRef.current = window.setTimeout(() => {
          wasOpenDelayedRef.current = true;
          setOpen(true);
        }, delayDuration);
      }, [delayDuration, setOpen]);
      React2.useEffect(() => {
        return () => window.clearTimeout(openTimerRef.current);
      }, []);
      return (0, import_jsx_runtime.jsx)(PopperPrimitive.Root, { ...popperScope, children: (0, import_jsx_runtime.jsx)(
        TooltipContextProvider,
        {
          scope: __scopeTooltip,
          contentId,
          open,
          stateAttribute,
          trigger,
          onTriggerChange: setTrigger,
          onTriggerEnter: React2.useCallback(() => {
            if (providerContext.isOpenDelayed) handleDelayedOpen();
            else handleOpen();
          }, [providerContext.isOpenDelayed, handleDelayedOpen, handleOpen]),
          onTriggerLeave: React2.useCallback(() => {
            if (disableHoverableContent) {
              handleClose();
            } else {
              window.clearTimeout(openTimerRef.current);
            }
          }, [handleClose, disableHoverableContent]),
          onOpen: handleOpen,
          onClose: handleClose,
          disableHoverableContent,
          children
        }
      ) });
    };
    Tooltip.displayName = TOOLTIP_NAME;
    var TRIGGER_NAME = "TooltipTrigger";
    var TooltipTrigger = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeTooltip, ...triggerProps } = props;
        const context = useTooltipContext(TRIGGER_NAME, __scopeTooltip);
        const providerContext = useTooltipProviderContext(TRIGGER_NAME, __scopeTooltip);
        const popperScope = usePopperScope(__scopeTooltip);
        const ref = React2.useRef(null);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, ref, context.onTriggerChange);
        const isPointerDownRef = React2.useRef(false);
        const hasPointerMoveOpenedRef = React2.useRef(false);
        const handlePointerUp = React2.useCallback(() => isPointerDownRef.current = false, []);
        React2.useEffect(() => {
          return () => document.removeEventListener("pointerup", handlePointerUp);
        }, [handlePointerUp]);
        return (0, import_jsx_runtime.jsx)(PopperPrimitive.Anchor, { asChild: true, ...popperScope, children: (0, import_jsx_runtime.jsx)(
          import_react_primitive.Primitive.button,
          {
            "aria-describedby": context.open ? context.contentId : void 0,
            "data-state": context.stateAttribute,
            ...triggerProps,
            ref: composedRefs,
            onPointerMove: (0, import_primitive.composeEventHandlers)(props.onPointerMove, (event) => {
              if (event.pointerType === "touch") return;
              if (!hasPointerMoveOpenedRef.current && !providerContext.isPointerInTransitRef.current) {
                context.onTriggerEnter();
                hasPointerMoveOpenedRef.current = true;
              }
            }),
            onPointerLeave: (0, import_primitive.composeEventHandlers)(props.onPointerLeave, () => {
              context.onTriggerLeave();
              hasPointerMoveOpenedRef.current = false;
            }),
            onPointerDown: (0, import_primitive.composeEventHandlers)(props.onPointerDown, () => {
              isPointerDownRef.current = true;
              document.addEventListener("pointerup", handlePointerUp, { once: true });
            }),
            onFocus: (0, import_primitive.composeEventHandlers)(props.onFocus, () => {
              if (!isPointerDownRef.current) context.onOpen();
            }),
            onBlur: (0, import_primitive.composeEventHandlers)(props.onBlur, context.onClose),
            onClick: (0, import_primitive.composeEventHandlers)(props.onClick, context.onClose)
          }
        ) });
      }
    );
    TooltipTrigger.displayName = TRIGGER_NAME;
    var PORTAL_NAME = "TooltipPortal";
    var [PortalProvider, usePortalContext] = createTooltipContext(PORTAL_NAME, {
      forceMount: void 0
    });
    var TooltipPortal = (props) => {
      const { __scopeTooltip, forceMount, children, container } = props;
      const context = useTooltipContext(PORTAL_NAME, __scopeTooltip);
      return (0, import_jsx_runtime.jsx)(PortalProvider, { scope: __scopeTooltip, forceMount, children: (0, import_jsx_runtime.jsx)(import_react_presence.Presence, { present: forceMount || context.open, children: (0, import_jsx_runtime.jsx)(import_react_portal.Portal, { asChild: true, container, children }) }) });
    };
    TooltipPortal.displayName = PORTAL_NAME;
    var CONTENT_NAME = "TooltipContent";
    var TooltipContent = React2.forwardRef(
      (props, forwardedRef) => {
        const portalContext = usePortalContext(CONTENT_NAME, props.__scopeTooltip);
        const { forceMount = portalContext.forceMount, side = "top", ...contentProps } = props;
        const context = useTooltipContext(CONTENT_NAME, props.__scopeTooltip);
        return (0, import_jsx_runtime.jsx)(import_react_presence.Presence, { present: forceMount || context.open, children: context.disableHoverableContent ? (0, import_jsx_runtime.jsx)(TooltipContentImpl, { side, ...contentProps, ref: forwardedRef }) : (0, import_jsx_runtime.jsx)(TooltipContentHoverable, { side, ...contentProps, ref: forwardedRef }) });
      }
    );
    var TooltipContentHoverable = React2.forwardRef((props, forwardedRef) => {
      const context = useTooltipContext(CONTENT_NAME, props.__scopeTooltip);
      const providerContext = useTooltipProviderContext(CONTENT_NAME, props.__scopeTooltip);
      const ref = React2.useRef(null);
      const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, ref);
      const [pointerGraceArea, setPointerGraceArea] = React2.useState(null);
      const { trigger, onClose } = context;
      const content = ref.current;
      const { onPointerInTransitChange } = providerContext;
      const handleRemoveGraceArea = React2.useCallback(() => {
        setPointerGraceArea(null);
        onPointerInTransitChange(false);
      }, [onPointerInTransitChange]);
      const handleCreateGraceArea = React2.useCallback(
        (event, hoverTarget) => {
          const currentTarget = event.currentTarget;
          const exitPoint = { x: event.clientX, y: event.clientY };
          const exitSide = getExitSideFromRect(exitPoint, currentTarget.getBoundingClientRect());
          const paddedExitPoints = getPaddedExitPoints(exitPoint, exitSide);
          const hoverTargetPoints = getPointsFromRect(hoverTarget.getBoundingClientRect());
          const graceArea = getHull([...paddedExitPoints, ...hoverTargetPoints]);
          setPointerGraceArea(graceArea);
          onPointerInTransitChange(true);
        },
        [onPointerInTransitChange]
      );
      React2.useEffect(() => {
        return () => handleRemoveGraceArea();
      }, [handleRemoveGraceArea]);
      React2.useEffect(() => {
        if (trigger && content) {
          const handleTriggerLeave = (event) => handleCreateGraceArea(event, content);
          const handleContentLeave = (event) => handleCreateGraceArea(event, trigger);
          trigger.addEventListener("pointerleave", handleTriggerLeave);
          content.addEventListener("pointerleave", handleContentLeave);
          return () => {
            trigger.removeEventListener("pointerleave", handleTriggerLeave);
            content.removeEventListener("pointerleave", handleContentLeave);
          };
        }
      }, [trigger, content, handleCreateGraceArea, handleRemoveGraceArea]);
      React2.useEffect(() => {
        if (pointerGraceArea) {
          const handleTrackPointerGrace = (event) => {
            const target = event.target;
            const pointerPosition = { x: event.clientX, y: event.clientY };
            const hasEnteredTarget = (trigger == null ? void 0 : trigger.contains(target)) || (content == null ? void 0 : content.contains(target));
            const isPointerOutsideGraceArea = !isPointInPolygon(pointerPosition, pointerGraceArea);
            if (hasEnteredTarget) {
              handleRemoveGraceArea();
            } else if (isPointerOutsideGraceArea) {
              handleRemoveGraceArea();
              onClose();
            }
          };
          document.addEventListener("pointermove", handleTrackPointerGrace);
          return () => document.removeEventListener("pointermove", handleTrackPointerGrace);
        }
      }, [trigger, content, pointerGraceArea, onClose, handleRemoveGraceArea]);
      return (0, import_jsx_runtime.jsx)(TooltipContentImpl, { ...props, ref: composedRefs });
    });
    var [VisuallyHiddenContentContextProvider, useVisuallyHiddenContentContext] = createTooltipContext(TOOLTIP_NAME, { isInside: false });
    var TooltipContentImpl = React2.forwardRef(
      (props, forwardedRef) => {
        const {
          __scopeTooltip,
          children,
          "aria-label": ariaLabel,
          onEscapeKeyDown,
          onPointerDownOutside,
          ...contentProps
        } = props;
        const context = useTooltipContext(CONTENT_NAME, __scopeTooltip);
        const popperScope = usePopperScope(__scopeTooltip);
        const { onClose } = context;
        React2.useEffect(() => {
          document.addEventListener(TOOLTIP_OPEN, onClose);
          return () => document.removeEventListener(TOOLTIP_OPEN, onClose);
        }, [onClose]);
        React2.useEffect(() => {
          if (context.trigger) {
            const handleScroll = (event) => {
              const target = event.target;
              if (target == null ? void 0 : target.contains(context.trigger)) onClose();
            };
            window.addEventListener("scroll", handleScroll, { capture: true });
            return () => window.removeEventListener("scroll", handleScroll, { capture: true });
          }
        }, [context.trigger, onClose]);
        return (0, import_jsx_runtime.jsx)(
          import_react_dismissable_layer.DismissableLayer,
          {
            asChild: true,
            disableOutsidePointerEvents: false,
            onEscapeKeyDown,
            onPointerDownOutside,
            onFocusOutside: (event) => event.preventDefault(),
            onDismiss: onClose,
            children: (0, import_jsx_runtime.jsxs)(
              PopperPrimitive.Content,
              {
                "data-state": context.stateAttribute,
                ...popperScope,
                ...contentProps,
                ref: forwardedRef,
                style: {
                  ...contentProps.style,
                  // re-namespace exposed content custom properties
                  ...{
                    "--radix-tooltip-content-transform-origin": "var(--radix-popper-transform-origin)",
                    "--radix-tooltip-content-available-width": "var(--radix-popper-available-width)",
                    "--radix-tooltip-content-available-height": "var(--radix-popper-available-height)",
                    "--radix-tooltip-trigger-width": "var(--radix-popper-anchor-width)",
                    "--radix-tooltip-trigger-height": "var(--radix-popper-anchor-height)"
                  }
                },
                children: [
                  (0, import_jsx_runtime.jsx)(import_react_slot.Slottable, { children }),
                  (0, import_jsx_runtime.jsx)(VisuallyHiddenContentContextProvider, { scope: __scopeTooltip, isInside: true, children: (0, import_jsx_runtime.jsx)(VisuallyHiddenPrimitive.Root, { id: context.contentId, role: "tooltip", children: ariaLabel || children }) })
                ]
              }
            )
          }
        );
      }
    );
    TooltipContent.displayName = CONTENT_NAME;
    var ARROW_NAME = "TooltipArrow";
    var TooltipArrow = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeTooltip, ...arrowProps } = props;
        const popperScope = usePopperScope(__scopeTooltip);
        const visuallyHiddenContentContext = useVisuallyHiddenContentContext(
          ARROW_NAME,
          __scopeTooltip
        );
        return visuallyHiddenContentContext.isInside ? null : (0, import_jsx_runtime.jsx)(PopperPrimitive.Arrow, { ...popperScope, ...arrowProps, ref: forwardedRef });
      }
    );
    TooltipArrow.displayName = ARROW_NAME;
    function getExitSideFromRect(point, rect) {
      const top = Math.abs(rect.top - point.y);
      const bottom = Math.abs(rect.bottom - point.y);
      const right = Math.abs(rect.right - point.x);
      const left = Math.abs(rect.left - point.x);
      switch (Math.min(top, bottom, right, left)) {
        case left:
          return "left";
        case right:
          return "right";
        case top:
          return "top";
        case bottom:
          return "bottom";
        default:
          throw new Error("unreachable");
      }
    }
    function getPaddedExitPoints(exitPoint, exitSide, padding = 5) {
      const paddedExitPoints = [];
      switch (exitSide) {
        case "top":
          paddedExitPoints.push(
            { x: exitPoint.x - padding, y: exitPoint.y + padding },
            { x: exitPoint.x + padding, y: exitPoint.y + padding }
          );
          break;
        case "bottom":
          paddedExitPoints.push(
            { x: exitPoint.x - padding, y: exitPoint.y - padding },
            { x: exitPoint.x + padding, y: exitPoint.y - padding }
          );
          break;
        case "left":
          paddedExitPoints.push(
            { x: exitPoint.x + padding, y: exitPoint.y - padding },
            { x: exitPoint.x + padding, y: exitPoint.y + padding }
          );
          break;
        case "right":
          paddedExitPoints.push(
            { x: exitPoint.x - padding, y: exitPoint.y - padding },
            { x: exitPoint.x - padding, y: exitPoint.y + padding }
          );
          break;
      }
      return paddedExitPoints;
    }
    function getPointsFromRect(rect) {
      const { top, right, bottom, left } = rect;
      return [
        { x: left, y: top },
        { x: right, y: top },
        { x: right, y: bottom },
        { x: left, y: bottom }
      ];
    }
    function isPointInPolygon(point, polygon) {
      const { x, y } = point;
      let inside = false;
      for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {
        const xi = polygon[i].x;
        const yi = polygon[i].y;
        const xj = polygon[j].x;
        const yj = polygon[j].y;
        const intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;
        if (intersect) inside = !inside;
      }
      return inside;
    }
    function getHull(points) {
      const newPoints = points.slice();
      newPoints.sort((a, b) => {
        if (a.x < b.x) return -1;
        else if (a.x > b.x) return 1;
        else if (a.y < b.y) return -1;
        else if (a.y > b.y) return 1;
        else return 0;
      });
      return getHullPresorted(newPoints);
    }
    function getHullPresorted(points) {
      if (points.length <= 1) return points.slice();
      const upperHull = [];
      for (let i = 0; i < points.length; i++) {
        const p = points[i];
        while (upperHull.length >= 2) {
          const q = upperHull[upperHull.length - 1];
          const r = upperHull[upperHull.length - 2];
          if ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x)) upperHull.pop();
          else break;
        }
        upperHull.push(p);
      }
      upperHull.pop();
      const lowerHull = [];
      for (let i = points.length - 1; i >= 0; i--) {
        const p = points[i];
        while (lowerHull.length >= 2) {
          const q = lowerHull[lowerHull.length - 1];
          const r = lowerHull[lowerHull.length - 2];
          if ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x)) lowerHull.pop();
          else break;
        }
        lowerHull.push(p);
      }
      lowerHull.pop();
      if (upperHull.length === 1 && lowerHull.length === 1 && upperHull[0].x === lowerHull[0].x && upperHull[0].y === lowerHull[0].y) {
        return upperHull;
      } else {
        return upperHull.concat(lowerHull);
      }
    }
    var Provider = TooltipProvider;
    var Root3 = Tooltip;
    var Trigger = TooltipTrigger;
    var Portal = TooltipPortal;
    var Content2 = TooltipContent;
    var Arrow2 = TooltipArrow;
  }
});

// node_modules/@radix-ui/react-direction/dist/index.js
var require_dist24 = __commonJS({
  "node_modules/@radix-ui/react-direction/dist/index.js"(exports, module) {
    "use strict";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      DirectionProvider: () => DirectionProvider,
      Provider: () => Provider,
      useDirection: () => useDirection
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_jsx_runtime = require_jsx_runtime();
    var DirectionContext = React2.createContext(void 0);
    var DirectionProvider = (props) => {
      const { dir, children } = props;
      return (0, import_jsx_runtime.jsx)(DirectionContext.Provider, { value: dir, children });
    };
    function useDirection(localDir) {
      const globalDir = React2.useContext(DirectionContext);
      return localDir || globalDir || "ltr";
    }
    var Provider = DirectionProvider;
  }
});

// node_modules/@radix-ui/themes/dist/cjs/helpers/get-matching-gray-color.js
var require_get_matching_gray_color = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/helpers/get-matching-gray-color.js"(exports, module) {
    "use strict";
    var r = Object.defineProperty;
    var t = Object.getOwnPropertyDescriptor;
    var n = Object.getOwnPropertyNames;
    var l = Object.prototype.hasOwnProperty;
    var i = (e, a) => {
      for (var s in a) r(e, s, { get: a[s], enumerable: true });
    };
    var p = (e, a, s, o) => {
      if (a && typeof a == "object" || typeof a == "function") for (let c of n(a)) !l.call(e, c) && c !== s && r(e, c, { get: () => a[c], enumerable: !(o = t(a, c)) || o.enumerable });
      return e;
    };
    var u = (e) => p(r({}, "__esModule", { value: true }), e);
    var g = {};
    i(g, { getMatchingGrayColor: () => m });
    module.exports = u(g);
    function m(e) {
      switch (e) {
        case "tomato":
        case "red":
        case "ruby":
        case "crimson":
        case "pink":
        case "plum":
        case "purple":
        case "violet":
          return "mauve";
        case "iris":
        case "indigo":
        case "blue":
        case "sky":
        case "cyan":
          return "slate";
        case "teal":
        case "jade":
        case "mint":
        case "green":
          return "sage";
        case "grass":
        case "lime":
          return "olive";
        case "yellow":
        case "amber":
        case "orange":
        case "brown":
        case "gold":
        case "bronze":
          return "sand";
        case "gray":
          return "gray";
      }
    }
  }
});

// node_modules/@radix-ui/themes/dist/cjs/props/radius.prop.js
var require_radius_prop = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/props/radius.prop.js"(exports, module) {
    "use strict";
    var o = Object.defineProperty;
    var p = Object.getOwnPropertyDescriptor;
    var t = Object.getOwnPropertyNames;
    var u = Object.prototype.hasOwnProperty;
    var n = (r, e) => {
      for (var i in e) o(r, i, { get: e[i], enumerable: true });
    };
    var l = (r, e, i, d) => {
      if (e && typeof e == "object" || typeof e == "function") for (let s of t(e)) !u.call(r, s) && s !== i && o(r, s, { get: () => e[s], enumerable: !(d = p(e, s)) || d.enumerable });
      return r;
    };
    var m = (r) => l(o({}, "__esModule", { value: true }), r);
    var c = {};
    n(c, { radii: () => a, radiusPropDef: () => f });
    module.exports = m(c);
    var a = ["none", "small", "medium", "large", "full"];
    var f = { radius: { type: "enum", values: a, default: void 0 } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/theme.props.js
var require_theme_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/theme.props.js"(exports, module) {
    "use strict";
    var t = Object.defineProperty;
    var f = Object.getOwnPropertyDescriptor;
    var c = Object.getOwnPropertyNames;
    var i = Object.prototype.hasOwnProperty;
    var m = (o, e) => {
      for (var a in e) t(o, a, { get: e[a], enumerable: true });
    };
    var d = (o, e, a, n) => {
      if (e && typeof e == "object" || typeof e == "function") for (let r of c(e)) !i.call(o, r) && r !== a && t(o, r, { get: () => e[r], enumerable: !(n = f(e, r)) || n.enumerable });
      return o;
    };
    var y = (o) => d(t({}, "__esModule", { value: true }), o);
    var h = {};
    m(h, { themePropDefs: () => l });
    module.exports = y(h);
    var s = require_as_child_prop();
    var p = require_color_prop();
    var u = require_radius_prop();
    var g = ["inherit", "light", "dark"];
    var P = ["solid", "translucent"];
    var D = ["90%", "95%", "100%", "105%", "110%"];
    var l = { ...s.asChildPropDef, hasBackground: { type: "boolean", default: true }, appearance: { type: "enum", values: g, default: "inherit" }, accentColor: { type: "enum", values: p.accentColors, default: "indigo" }, grayColor: { type: "enum", values: p.grayColors, default: "auto" }, panelBackground: { type: "enum", values: P, default: "translucent" }, radius: { type: "enum", values: u.radii, default: "medium" }, scaling: { type: "enum", values: D, default: "100%" } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/theme.js
var require_theme = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/theme.js"(exports, module) {
    "use strict";
    "use client";
    var O = Object.create;
    var A = Object.defineProperty;
    var V = Object.getOwnPropertyDescriptor;
    var W = Object.getOwnPropertyNames;
    var q = Object.getPrototypeOf;
    var z = Object.prototype.hasOwnProperty;
    var F = (o, r) => {
      for (var a in r) A(o, a, { get: r[a], enumerable: true });
    };
    var E = (o, r, a, s) => {
      if (r && typeof r == "object" || typeof r == "function") for (let t of W(r)) !z.call(o, t) && t !== a && A(o, t, { get: () => r[t], enumerable: !(s = V(r, t)) || s.enumerable });
      return o;
    };
    var I = (o, r, a) => (a = o != null ? O(q(o)) : {}, E(r || !o || !o.__esModule ? A(a, "default", { value: o, enumerable: true }) : a, o));
    var J = (o) => E(A({}, "__esModule", { value: true }), o);
    var L = {};
    F(L, { Theme: () => S, ThemeContext: () => u, useThemeContext: () => j });
    module.exports = J(L);
    var e = I(require_react());
    var D = I(require_classnames());
    var K = I(require_dist23());
    var w = require_dist24();
    var N = require_dist2();
    var H = require_get_matching_gray_color();
    var n = require_theme_props();
    var d = () => {
    };
    var u = e.createContext(void 0);
    function j() {
      const o = e.useContext(u);
      if (o === void 0) throw new Error("`useThemeContext` must be used within a `Theme`");
      return o;
    }
    var S = e.forwardRef((o, r) => e.useContext(u) === void 0 ? e.createElement(K.Provider, { delayDuration: 200 }, e.createElement(w.DirectionProvider, { dir: "ltr" }, e.createElement(G, { ...o, ref: r }))) : e.createElement(R, { ...o, ref: r }));
    S.displayName = "Theme";
    var G = e.forwardRef((o, r) => {
      const { appearance: a = n.themePropDefs.appearance.default, accentColor: s = n.themePropDefs.accentColor.default, grayColor: t = n.themePropDefs.grayColor.default, panelBackground: p = n.themePropDefs.panelBackground.default, radius: c = n.themePropDefs.radius.default, scaling: l = n.themePropDefs.scaling.default, hasBackground: m = n.themePropDefs.hasBackground.default, ...h } = o, [g, i] = e.useState(a);
      e.useEffect(() => i(a), [a]);
      const [y, C] = e.useState(s);
      e.useEffect(() => C(s), [s]);
      const [v, f] = e.useState(t);
      e.useEffect(() => f(t), [t]);
      const [k, P] = e.useState(p);
      e.useEffect(() => P(p), [p]);
      const [B, x] = e.useState(c);
      e.useEffect(() => x(c), [c]);
      const [T, b] = e.useState(l);
      return e.useEffect(() => b(l), [l]), e.createElement(R, { ...h, ref: r, isRoot: true, hasBackground: m, appearance: g, accentColor: y, grayColor: v, panelBackground: k, radius: B, scaling: T, onAppearanceChange: i, onAccentColorChange: C, onGrayColorChange: f, onPanelBackgroundChange: P, onRadiusChange: x, onScalingChange: b });
    });
    G.displayName = "ThemeRoot";
    var R = e.forwardRef((o, r) => {
      const a = e.useContext(u), { asChild: s, isRoot: t, hasBackground: p, appearance: c = (a == null ? void 0 : a.appearance) ?? n.themePropDefs.appearance.default, accentColor: l = (a == null ? void 0 : a.accentColor) ?? n.themePropDefs.accentColor.default, grayColor: m = (a == null ? void 0 : a.resolvedGrayColor) ?? n.themePropDefs.grayColor.default, panelBackground: h = (a == null ? void 0 : a.panelBackground) ?? n.themePropDefs.panelBackground.default, radius: g = (a == null ? void 0 : a.radius) ?? n.themePropDefs.radius.default, scaling: i = (a == null ? void 0 : a.scaling) ?? n.themePropDefs.scaling.default, onAppearanceChange: y = d, onAccentColorChange: C = d, onGrayColorChange: v = d, onPanelBackgroundChange: f = d, onRadiusChange: k = d, onScalingChange: P = d, ...B } = o, x = s ? N.Slot : "div", T = m === "auto" ? (0, H.getMatchingGrayColor)(l) : m, b = o.appearance === "light" || o.appearance === "dark", M = p === void 0 ? t || b : p;
      return e.createElement(u.Provider, { value: e.useMemo(() => ({ appearance: c, accentColor: l, grayColor: m, resolvedGrayColor: T, panelBackground: h, radius: g, scaling: i, onAppearanceChange: y, onAccentColorChange: C, onGrayColorChange: v, onPanelBackgroundChange: f, onRadiusChange: k, onScalingChange: P }), [c, l, m, T, h, g, i, y, C, v, f, k, P]) }, e.createElement(x, { "data-is-root-theme": t ? "true" : "false", "data-accent-color": l, "data-gray-color": T, "data-has-background": M ? "true" : "false", "data-panel-background": h, "data-radius": g, "data-scaling": i, ref: r, ...B, className: (0, D.default)("radix-themes", { light: c === "light", dark: c === "dark" }, B.className) }));
    });
    R.displayName = "ThemeImpl";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/helpers/require-react-element.js
var require_require_react_element = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/helpers/require-react-element.js"(exports, module) {
    "use strict";
    var m = Object.create;
    var a = Object.defineProperty;
    var i = Object.getOwnPropertyDescriptor;
    var y = Object.getOwnPropertyNames;
    var E = Object.getPrototypeOf;
    var R = Object.prototype.hasOwnProperty;
    var c = (e, o) => {
      for (var t in o) a(e, t, { get: o[t], enumerable: true });
    };
    var p = (e, o, t, n) => {
      if (o && typeof o == "object" || typeof o == "function") for (let r of y(o)) !R.call(e, r) && r !== t && a(e, r, { get: () => o[r], enumerable: !(n = i(o, r)) || n.enumerable });
      return e;
    };
    var f = (e, o, t) => (t = e != null ? m(E(e)) : {}, p(o || !e || !e.__esModule ? a(t, "default", { value: e, enumerable: true }) : t, e));
    var g = (e) => p(a({}, "__esModule", { value: true }), e);
    var u = {};
    c(u, { requireReactElement: () => l });
    module.exports = g(u);
    var s = f(require_react());
    var l = (e) => {
      if (!s.isValidElement(e)) throw Error(`Expected a single React Element child, but got: ${s.Children.toArray(e).map((t) => typeof t == "object" && "type" in t && typeof t.type == "string" ? t.type : typeof t).join(", ")}`);
      return e;
    };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/alert-dialog.js
var require_alert_dialog = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/alert-dialog.js"(exports, module) {
    "use strict";
    var W = Object.create;
    var n = Object.defineProperty;
    var O = Object.getOwnPropertyDescriptor;
    var B = Object.getOwnPropertyNames;
    var H = Object.getPrototypeOf;
    var S = Object.prototype.hasOwnProperty;
    var M = (e, t) => {
      for (var r in t) n(e, r, { get: t[r], enumerable: true });
    };
    var d = (e, t, r, a) => {
      if (t && typeof t == "object" || typeof t == "function") for (let l of B(t)) !S.call(e, l) && l !== r && n(e, l, { get: () => t[l], enumerable: !(a = O(t, l)) || a.enumerable });
      return e;
    };
    var p = (e, t, r) => (r = e != null ? W(H(e)) : {}, d(t || !e || !e.__esModule ? n(r, "default", { value: e, enumerable: true }) : r, e));
    var j = (e) => d(n({}, "__esModule", { value: true }), e);
    var z = {};
    M(z, { Action: () => f, Cancel: () => C, Content: () => A, Description: () => c, Root: () => m, Title: () => P, Trigger: () => D });
    module.exports = j(z);
    var o = p(require_react());
    var y = p(require_classnames());
    var i = p(require_dist19());
    var v = require_alert_dialog_props();
    var T = require_heading();
    var R = require_text();
    var h = require_theme();
    var g = require_extract_props();
    var s = require_require_react_element();
    var m = (e) => o.createElement(i.Root, { ...e });
    m.displayName = "AlertDialog.Root";
    var D = o.forwardRef(({ children: e, ...t }, r) => o.createElement(i.Trigger, { ...t, ref: r, asChild: true }, (0, s.requireReactElement)(e)));
    D.displayName = "AlertDialog.Trigger";
    var A = o.forwardRef(({ align: e, ...t }, r) => {
      const { align: a, ...l } = v.alertDialogContentPropDefs, { className: E } = (0, g.extractProps)({ align: e }, { align: a }), { className: N, forceMount: u, container: x, ...w } = (0, g.extractProps)(t, l);
      return o.createElement(i.Portal, { container: x, forceMount: u }, o.createElement(h.Theme, { asChild: true }, o.createElement(i.Overlay, { className: "rt-BaseDialogOverlay rt-AlertDialogOverlay" }, o.createElement("div", { className: "rt-BaseDialogScroll rt-AlertDialogScroll" }, o.createElement("div", { className: `rt-BaseDialogScrollPadding rt-AlertDialogScrollPadding ${E}` }, o.createElement(i.Content, { ...w, ref: r, className: (0, y.default)("rt-BaseDialogContent", "rt-AlertDialogContent", N) }))))));
    });
    A.displayName = "AlertDialog.Content";
    var P = o.forwardRef((e, t) => o.createElement(i.Title, { asChild: true }, o.createElement(T.Heading, { size: "5", mb: "3", trim: "start", ...e, asChild: false, ref: t })));
    P.displayName = "AlertDialog.Title";
    var c = o.forwardRef((e, t) => o.createElement(i.Description, { asChild: true }, o.createElement(R.Text, { as: "p", size: "3", ...e, asChild: false, ref: t })));
    c.displayName = "AlertDialog.Description";
    var f = o.forwardRef(({ children: e, ...t }, r) => o.createElement(i.Action, { ...t, ref: r, asChild: true }, (0, s.requireReactElement)(e)));
    f.displayName = "AlertDialog.Action";
    var C = o.forwardRef(({ children: e, ...t }, r) => o.createElement(i.Cancel, { ...t, ref: r, asChild: true }, (0, s.requireReactElement)(e)));
    C.displayName = "AlertDialog.Cancel";
  }
});

// node_modules/@radix-ui/react-aspect-ratio/dist/index.js
var require_dist25 = __commonJS({
  "node_modules/@radix-ui/react-aspect-ratio/dist/index.js"(exports, module) {
    "use strict";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      AspectRatio: () => AspectRatio,
      Root: () => Root
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_react_primitive = require_dist3();
    var import_jsx_runtime = require_jsx_runtime();
    var NAME = "AspectRatio";
    var AspectRatio = React2.forwardRef(
      (props, forwardedRef) => {
        const { ratio = 1 / 1, style, ...aspectRatioProps } = props;
        return (0, import_jsx_runtime.jsx)(
          "div",
          {
            style: {
              // ensures inner element is contained
              position: "relative",
              // ensures padding bottom trick maths works
              width: "100%",
              paddingBottom: `${100 / ratio}%`
            },
            "data-radix-aspect-ratio-wrapper": "",
            children: (0, import_jsx_runtime.jsx)(
              import_react_primitive.Primitive.div,
              {
                ...aspectRatioProps,
                ref: forwardedRef,
                style: {
                  ...style,
                  // ensures children expand in ratio
                  position: "absolute",
                  top: 0,
                  right: 0,
                  bottom: 0,
                  left: 0
                }
              }
            )
          }
        );
      }
    );
    AspectRatio.displayName = NAME;
    var Root = AspectRatio;
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/aspect-ratio.js
var require_aspect_ratio = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/aspect-ratio.js"(exports, module) {
    "use strict";
    var r = Object.defineProperty;
    var f = Object.getOwnPropertyDescriptor;
    var i = Object.getOwnPropertyNames;
    var m = Object.prototype.hasOwnProperty;
    var s = (t, o) => {
      for (var p in o) r(t, p, { get: o[p], enumerable: true });
    };
    var x = (t, o, p, a) => {
      if (o && typeof o == "object" || typeof o == "function") for (let e of i(o)) !m.call(t, e) && e !== p && r(t, e, { get: () => o[e], enumerable: !(a = f(o, e)) || a.enumerable });
      return t;
    };
    var A = (t) => x(r({}, "__esModule", { value: true }), t);
    var R = {};
    s(R, { AspectRatio: () => c.AspectRatio });
    module.exports = A(R);
    var c = require_dist25();
  }
});

// node_modules/@radix-ui/react-avatar/dist/index.js
var require_dist26 = __commonJS({
  "node_modules/@radix-ui/react-avatar/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Avatar: () => Avatar,
      AvatarFallback: () => AvatarFallback,
      AvatarImage: () => AvatarImage,
      Fallback: () => Fallback,
      Image: () => Image,
      Root: () => Root,
      createAvatarScope: () => createAvatarScope
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_react_context = require_dist6();
    var import_react_use_callback_ref = require_dist10();
    var import_react_use_layout_effect = require_dist8();
    var import_react_primitive = require_dist3();
    var import_jsx_runtime = require_jsx_runtime();
    var AVATAR_NAME = "Avatar";
    var [createAvatarContext, createAvatarScope] = (0, import_react_context.createContextScope)(AVATAR_NAME);
    var [AvatarProvider, useAvatarContext] = createAvatarContext(AVATAR_NAME);
    var Avatar = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeAvatar, ...avatarProps } = props;
        const [imageLoadingStatus, setImageLoadingStatus] = React2.useState("idle");
        return (0, import_jsx_runtime.jsx)(
          AvatarProvider,
          {
            scope: __scopeAvatar,
            imageLoadingStatus,
            onImageLoadingStatusChange: setImageLoadingStatus,
            children: (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.span, { ...avatarProps, ref: forwardedRef })
          }
        );
      }
    );
    Avatar.displayName = AVATAR_NAME;
    var IMAGE_NAME = "AvatarImage";
    var AvatarImage = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeAvatar, src, onLoadingStatusChange = () => {
        }, ...imageProps } = props;
        const context = useAvatarContext(IMAGE_NAME, __scopeAvatar);
        const imageLoadingStatus = useImageLoadingStatus(src);
        const handleLoadingStatusChange = (0, import_react_use_callback_ref.useCallbackRef)((status) => {
          onLoadingStatusChange(status);
          context.onImageLoadingStatusChange(status);
        });
        (0, import_react_use_layout_effect.useLayoutEffect)(() => {
          if (imageLoadingStatus !== "idle") {
            handleLoadingStatusChange(imageLoadingStatus);
          }
        }, [imageLoadingStatus, handleLoadingStatusChange]);
        return imageLoadingStatus === "loaded" ? (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.img, { ...imageProps, ref: forwardedRef, src }) : null;
      }
    );
    AvatarImage.displayName = IMAGE_NAME;
    var FALLBACK_NAME = "AvatarFallback";
    var AvatarFallback = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeAvatar, delayMs, ...fallbackProps } = props;
        const context = useAvatarContext(FALLBACK_NAME, __scopeAvatar);
        const [canRender, setCanRender] = React2.useState(delayMs === void 0);
        React2.useEffect(() => {
          if (delayMs !== void 0) {
            const timerId = window.setTimeout(() => setCanRender(true), delayMs);
            return () => window.clearTimeout(timerId);
          }
        }, [delayMs]);
        return canRender && context.imageLoadingStatus !== "loaded" ? (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.span, { ...fallbackProps, ref: forwardedRef }) : null;
      }
    );
    AvatarFallback.displayName = FALLBACK_NAME;
    function useImageLoadingStatus(src) {
      const [loadingStatus, setLoadingStatus] = React2.useState("idle");
      (0, import_react_use_layout_effect.useLayoutEffect)(() => {
        if (!src) {
          setLoadingStatus("error");
          return;
        }
        let isMounted = true;
        const image = new window.Image();
        const updateStatus = (status) => () => {
          if (!isMounted) return;
          setLoadingStatus(status);
        };
        setLoadingStatus("loading");
        image.onload = updateStatus("loaded");
        image.onerror = updateStatus("error");
        image.src = src;
        return () => {
          isMounted = false;
        };
      }, [src]);
      return loadingStatus;
    }
    var Root = Avatar;
    var Image = AvatarImage;
    var Fallback = AvatarFallback;
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/avatar.props.js
var require_avatar_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/avatar.props.js"(exports, module) {
    "use strict";
    var s = Object.defineProperty;
    var c = Object.getOwnPropertyDescriptor;
    var l = Object.getOwnPropertyNames;
    var u = Object.prototype.hasOwnProperty;
    var d = (r, e) => {
      for (var t in e) s(r, t, { get: e[t], enumerable: true });
    };
    var v = (r, e, t, a) => {
      if (e && typeof e == "object" || typeof e == "function") for (let o of l(e)) !u.call(r, o) && o !== t && s(r, o, { get: () => e[o], enumerable: !(a = c(e, o)) || a.enumerable });
      return r;
    };
    var D = (r) => v(s({}, "__esModule", { value: true }), r);
    var z = {};
    d(z, { avatarPropDefs: () => m });
    module.exports = D(z);
    var p = require_as_child_prop();
    var f = require_color_prop();
    var i = require_high_contrast_prop();
    var n = require_radius_prop();
    var P = ["1", "2", "3", "4", "5", "6", "7", "8", "9"];
    var y = ["solid", "soft"];
    var m = { ...p.asChildPropDef, size: { type: "enum", className: "rt-r-size", values: P, default: "3", responsive: true }, variant: { type: "enum", className: "rt-variant", values: y, default: "soft" }, ...f.accentColorPropDef, ...i.highContrastPropDef, ...n.radiusPropDef, fallback: { type: "ReactNode", required: true } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/helpers/get-subtree.js
var require_get_subtree = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/helpers/get-subtree.js"(exports, module) {
    "use strict";
    var o = Object.create;
    var r = Object.defineProperty;
    var n = Object.getOwnPropertyDescriptor;
    var R = Object.getOwnPropertyNames;
    var f = Object.getPrototypeOf;
    var h = Object.prototype.hasOwnProperty;
    var s = (c, e) => {
      for (var t in e) r(c, t, { get: e[t], enumerable: true });
    };
    var d = (c, e, t, i) => {
      if (e && typeof e == "object" || typeof e == "function") for (let a of R(e)) !h.call(c, a) && a !== t && r(c, a, { get: () => e[a], enumerable: !(i = n(e, a)) || i.enumerable });
      return c;
    };
    var u = (c, e, t) => (t = c != null ? o(f(c)) : {}, d(e || !c || !c.__esModule ? r(t, "default", { value: c, enumerable: true }) : t, c));
    var p = (c) => d(r({}, "__esModule", { value: true }), c);
    var C = {};
    s(C, { getSubtree: () => m });
    module.exports = p(C);
    var l = u(require_react());
    function m(c, e) {
      const { asChild: t, children: i } = c;
      if (!t) return typeof e == "function" ? e(i) : e;
      const a = l.Children.only(i);
      return l.cloneElement(a, { children: typeof e == "function" ? e(a.props.children) : e });
    }
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/avatar.js
var require_avatar = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/avatar.js"(exports, module) {
    "use strict";
    "use client";
    var h = Object.create;
    var m = Object.defineProperty;
    var N = Object.getOwnPropertyDescriptor;
    var w = Object.getOwnPropertyNames;
    var C = Object.getPrototypeOf;
    var x = Object.prototype.hasOwnProperty;
    var D = (r, t) => {
      for (var a in t) m(r, a, { get: t[a], enumerable: true });
    };
    var f = (r, t, a, p) => {
      if (t && typeof t == "object" || typeof t == "function") for (let o of w(t)) !x.call(r, o) && o !== a && m(r, o, { get: () => t[o], enumerable: !(p = N(t, o)) || p.enumerable });
      return r;
    };
    var l = (r, t, a) => (a = r != null ? h(C(r)) : {}, f(t || !r || !r.__esModule ? m(a, "default", { value: r, enumerable: true }) : a, r));
    var S = (r) => f(m({}, "__esModule", { value: true }), r);
    var b = {};
    D(b, { Avatar: () => v });
    module.exports = S(b);
    var e = l(require_react());
    var n = l(require_classnames());
    var i = l(require_dist26());
    var P = require_avatar_props();
    var A = require_extract_props();
    var g = require_get_subtree();
    var y = require_margin_props();
    var v = e.forwardRef((r, t) => {
      const { asChild: a, children: p, className: o, style: s, color: c, radius: u, ...I } = (0, A.extractProps)(r, P.avatarPropDefs, y.marginPropDefs);
      return e.createElement(i.Root, { "data-accent-color": c, "data-radius": u, className: (0, n.default)("rt-reset", "rt-AvatarRoot", o), style: s, asChild: a }, (0, g.getSubtree)({ asChild: a, children: p }, e.createElement(d, { ref: t, ...I })));
    });
    v.displayName = "Avatar";
    var d = e.forwardRef(({ fallback: r, ...t }, a) => {
      const [p, o] = e.useState("idle");
      return e.createElement(e.Fragment, null, p === "idle" || p === "loading" ? e.createElement("span", { className: "rt-AvatarFallback" }) : null, p === "error" ? e.createElement(i.Fallback, { className: (0, n.default)("rt-AvatarFallback", { "rt-one-letter": typeof r == "string" && r.length === 1, "rt-two-letters": typeof r == "string" && r.length === 2 }), delayMs: 0 }, r) : null, e.createElement(i.Image, { ref: a, className: "rt-AvatarImage", ...t, onLoadingStatusChange: (s) => {
        var _a;
        (_a = t.onLoadingStatusChange) == null ? void 0 : _a.call(t, s), o(s);
      } }));
    });
    d.displayName = "AvatarImpl";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/badge.props.js
var require_badge_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/badge.props.js"(exports, module) {
    "use strict";
    var t = Object.defineProperty;
    var u = Object.getOwnPropertyDescriptor;
    var c = Object.getOwnPropertyNames;
    var l = Object.prototype.hasOwnProperty;
    var v = (r, e) => {
      for (var o in e) t(r, o, { get: e[o], enumerable: true });
    };
    var D = (r, e, o, a) => {
      if (e && typeof e == "object" || typeof e == "function") for (let s of c(e)) !l.call(r, s) && s !== o && t(r, s, { get: () => e[s], enumerable: !(a = u(e, s)) || a.enumerable });
      return r;
    };
    var P = (r) => D(t({}, "__esModule", { value: true }), r);
    var z = {};
    v(z, { badgePropDefs: () => m });
    module.exports = P(z);
    var p = require_as_child_prop();
    var i = require_color_prop();
    var f = require_high_contrast_prop();
    var n = require_radius_prop();
    var d = ["1", "2", "3"];
    var y = ["solid", "soft", "surface", "outline"];
    var m = { ...p.asChildPropDef, size: { type: "enum", className: "rt-r-size", values: d, default: "1", responsive: true }, variant: { type: "enum", className: "rt-variant", values: y, default: "soft" }, ...i.accentColorPropDef, ...f.highContrastPropDef, ...n.radiusPropDef };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/badge.js
var require_badge = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/badge.js"(exports, module) {
    "use strict";
    var B = Object.create;
    var t = Object.defineProperty;
    var u = Object.getOwnPropertyDescriptor;
    var C = Object.getOwnPropertyNames;
    var D = Object.getPrototypeOf;
    var R = Object.prototype.hasOwnProperty;
    var h = (o, e) => {
      for (var r in e) t(o, r, { get: e[r], enumerable: true });
    };
    var m = (o, e, r, s) => {
      if (e && typeof e == "object" || typeof e == "function") for (let p of C(e)) !R.call(o, p) && p !== r && t(o, p, { get: () => e[p], enumerable: !(s = u(e, p)) || s.enumerable });
      return o;
    };
    var n = (o, e, r) => (r = o != null ? B(D(o)) : {}, m(e || !o || !o.__esModule ? t(r, "default", { value: o, enumerable: true }) : r, o));
    var x = (o) => m(t({}, "__esModule", { value: true }), o);
    var N = {};
    h(N, { Badge: () => a });
    module.exports = x(N);
    var d = n(require_react());
    var f = n(require_classnames());
    var i = require_dist2();
    var P = require_badge_props();
    var g = require_extract_props();
    var c = require_margin_props();
    var a = d.forwardRef((o, e) => {
      const { asChild: r, className: s, color: p, radius: l, ...y } = (0, g.extractProps)(o, P.badgePropDefs, c.marginPropDefs);
      return d.createElement(r ? i.Slot : "span", { "data-accent-color": p, "data-radius": l, ...y, ref: e, className: (0, f.default)("rt-reset", "rt-Badge", s) });
    });
    a.displayName = "Badge";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/blockquote.props.js
var require_blockquote_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/blockquote.props.js"(exports, module) {
    "use strict";
    var t = Object.defineProperty;
    var c = Object.getOwnPropertyDescriptor;
    var u = Object.getOwnPropertyNames;
    var l = Object.prototype.hasOwnProperty;
    var z = (r, o) => {
      for (var p in o) t(r, p, { get: o[p], enumerable: true });
    };
    var h = (r, o, p, s) => {
      if (o && typeof o == "object" || typeof o == "function") for (let e of u(o)) !l.call(r, e) && e !== p && t(r, e, { get: () => o[e], enumerable: !(s = c(o, e)) || s.enumerable });
      return r;
    };
    var y = (r) => h(t({}, "__esModule", { value: true }), r);
    var d = {};
    z(d, { blockquotePropDefs: () => n });
    module.exports = y(d);
    var f = require_as_child_prop();
    var i = require_color_prop();
    var m = require_high_contrast_prop();
    var a = require_text_wrap_prop();
    var D = require_truncate_prop();
    var P = require_weight_prop();
    var b = ["1", "2", "3", "4", "5", "6", "7", "8", "9"];
    var n = { ...f.asChildPropDef, size: { type: "enum", className: "rt-r-size", values: b, responsive: true }, ...P.weightPropDef, ...i.colorPropDef, ...m.highContrastPropDef, ...D.truncatePropDef, ...a.textWrapPropDef };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/blockquote.js
var require_blockquote = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/blockquote.js"(exports, module) {
    "use strict";
    var P = Object.create;
    var s = Object.defineProperty;
    var q = Object.getOwnPropertyDescriptor;
    var y = Object.getOwnPropertyNames;
    var B = Object.getPrototypeOf;
    var d = Object.prototype.hasOwnProperty;
    var b = (o, e) => {
      for (var t in e) s(o, t, { get: e[t], enumerable: true });
    };
    var c = (o, e, t, r) => {
      if (e && typeof e == "object" || typeof e == "function") for (let p of y(e)) !d.call(o, p) && p !== t && s(o, p, { get: () => e[p], enumerable: !(r = q(e, p)) || r.enumerable });
      return o;
    };
    var n = (o, e, t) => (t = o != null ? P(B(o)) : {}, c(e || !o || !o.__esModule ? s(t, "default", { value: o, enumerable: true }) : t, o));
    var h = (o) => c(s({}, "__esModule", { value: true }), o);
    var C = {};
    b(C, { Blockquote: () => l });
    module.exports = h(C);
    var m = n(require_react());
    var f = n(require_classnames());
    var u = require_dist2();
    var i = require_text();
    var D = require_blockquote_props();
    var l = m.forwardRef((o, e) => {
      const { asChild: t, children: r, className: p, ...a } = o, k = t ? u.Slot : "blockquote";
      return m.createElement(i.Text, { asChild: true, ...a, ref: e, className: (0, f.default)("rt-Blockquote", p) }, m.createElement(k, null, r));
    });
    l.displayName = "Blockquote";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/slot.js
var require_slot = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/slot.js"(exports, module) {
    "use strict";
    var S = Object.defineProperty;
    var b = Object.getOwnPropertyDescriptor;
    var f = Object.getOwnPropertyNames;
    var m = Object.prototype.hasOwnProperty;
    var p = (t, o) => {
      for (var e in o) S(t, e, { get: o[e], enumerable: true });
    };
    var x = (t, o, e, a) => {
      if (o && typeof o == "object" || typeof o == "function") for (let l of f(o)) !m.call(t, l) && l !== e && S(t, l, { get: () => o[l], enumerable: !(a = b(o, l)) || a.enumerable });
      return t;
    };
    var c = (t) => x(S({}, "__esModule", { value: true }), t);
    var d = {};
    p(d, { Slot: () => r.Slot, Slottable: () => r.Slottable });
    module.exports = c(d);
    var r = require_dist2();
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/box.props.js
var require_box_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/box.props.js"(exports, module) {
    "use strict";
    var r = Object.defineProperty;
    var f = Object.getOwnPropertyDescriptor;
    var i = Object.getOwnPropertyNames;
    var l = Object.prototype.hasOwnProperty;
    var y = (s, e) => {
      for (var o in e) r(s, o, { get: e[o], enumerable: true });
    };
    var d = (s, e, o, t) => {
      if (e && typeof e == "object" || typeof e == "function") for (let p of i(e)) !l.call(s, p) && p !== o && r(s, p, { get: () => e[p], enumerable: !(t = f(e, p)) || t.enumerable });
      return s;
    };
    var P = (s) => d(r({}, "__esModule", { value: true }), s);
    var D = {};
    y(D, { boxPropDefs: () => n });
    module.exports = P(D);
    var a = require_as_child_prop();
    var u = ["div", "span"];
    var m = ["none", "inline", "inline-block", "block"];
    var n = { as: { type: "enum", values: u, default: "div" }, ...a.asChildPropDef, display: { type: "enum", className: "rt-r-display", values: m, responsive: true } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/props/padding.props.js
var require_padding_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/props/padding.props.js"(exports, module) {
    "use strict";
    var o = Object.defineProperty;
    var u = Object.getOwnPropertyDescriptor;
    var i = Object.getOwnPropertyNames;
    var m = Object.prototype.hasOwnProperty;
    var l = (p, e) => {
      for (var t in e) o(p, t, { get: e[t], enumerable: true });
    };
    var d = (p, e, t, a) => {
      if (e && typeof e == "object" || typeof e == "function") for (let s of i(e)) !m.call(p, s) && s !== t && o(p, s, { get: () => e[s], enumerable: !(a = u(e, s)) || a.enumerable });
      return p;
    };
    var f = (p) => d(o({}, "__esModule", { value: true }), p);
    var y = {};
    l(y, { paddingPropDefs: () => n });
    module.exports = f(y);
    var r = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
    var n = { p: { type: "enum | string", className: "rt-r-p", customProperties: ["--p"], values: r, responsive: true }, px: { type: "enum | string", className: "rt-r-px", customProperties: ["--pl", "--pr"], values: r, responsive: true }, py: { type: "enum | string", className: "rt-r-py", customProperties: ["--pt", "--pb"], values: r, responsive: true }, pt: { type: "enum | string", className: "rt-r-pt", customProperties: ["--pt"], values: r, responsive: true }, pr: { type: "enum | string", className: "rt-r-pr", customProperties: ["--pr"], values: r, responsive: true }, pb: { type: "enum | string", className: "rt-r-pb", customProperties: ["--pb"], values: r, responsive: true }, pl: { type: "enum | string", className: "rt-r-pl", customProperties: ["--pl"], values: r, responsive: true } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/props/layout.props.js
var require_layout_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/props/layout.props.js"(exports, module) {
    "use strict";
    var i = Object.defineProperty;
    var m = Object.getOwnPropertyDescriptor;
    var g = Object.getOwnPropertyNames;
    var c = Object.prototype.hasOwnProperty;
    var P = (r, e) => {
      for (var o in e) i(r, o, { get: e[o], enumerable: true });
    };
    var y = (r, e, o, n) => {
      if (e && typeof e == "object" || typeof e == "function") for (let s of g(e)) !c.call(r, s) && s !== o && i(r, s, { get: () => e[s], enumerable: !(n = m(e, s)) || n.enumerable });
      return r;
    };
    var d = (r) => y(i({}, "__esModule", { value: true }), r);
    var b = {};
    P(b, { layoutPropDefs: () => f });
    module.exports = d(b);
    var u = require_padding_props();
    var a = require_height_props();
    var l = require_width_props();
    var p = ["visible", "hidden", "clip", "scroll", "auto"];
    var v = ["static", "relative", "absolute", "fixed", "sticky"];
    var t = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "-1", "-2", "-3", "-4", "-5", "-6", "-7", "-8", "-9"];
    var D = ["0", "1"];
    var w = ["0", "1"];
    var f = { ...u.paddingPropDefs, ...l.widthPropDefs, ...a.heightPropDefs, position: { type: "enum", className: "rt-r-position", values: v, responsive: true }, inset: { type: "enum | string", className: "rt-r-inset", customProperties: ["--inset"], values: t, responsive: true }, top: { type: "enum | string", className: "rt-r-top", customProperties: ["--top"], values: t, responsive: true }, right: { type: "enum | string", className: "rt-r-right", customProperties: ["--right"], values: t, responsive: true }, bottom: { type: "enum | string", className: "rt-r-bottom", customProperties: ["--bottom"], values: t, responsive: true }, left: { type: "enum | string", className: "rt-r-left", customProperties: ["--left"], values: t, responsive: true }, overflow: { type: "enum", className: "rt-r-overflow", values: p, responsive: true }, overflowX: { type: "enum", className: "rt-r-ox", values: p, responsive: true }, overflowY: { type: "enum", className: "rt-r-oy", values: p, responsive: true }, flexBasis: { type: "string", className: "rt-r-fb", customProperties: ["--flex-basis"], responsive: true }, flexShrink: { type: "enum | string", className: "rt-r-fs", customProperties: ["--flex-shrink"], values: D, responsive: true }, flexGrow: { type: "enum | string", className: "rt-r-fg", customProperties: ["--flex-grow"], values: w, responsive: true }, gridArea: { type: "string", className: "rt-r-ga", customProperties: ["--grid-area"], responsive: true }, gridColumn: { type: "string", className: "rt-r-gc", customProperties: ["--grid-column"], responsive: true }, gridColumnStart: { type: "string", className: "rt-r-gcs", customProperties: ["--grid-column-start"], responsive: true }, gridColumnEnd: { type: "string", className: "rt-r-gce", customProperties: ["--grid-column-end"], responsive: true }, gridRow: { type: "string", className: "rt-r-gr", customProperties: ["--grid-row"], responsive: true }, gridRowStart: { type: "string", className: "rt-r-grs", customProperties: ["--grid-row-start"], responsive: true }, gridRowEnd: { type: "string", className: "rt-r-gre", customProperties: ["--grid-row-end"], responsive: true } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/box.js
var require_box = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/box.js"(exports, module) {
    "use strict";
    var c = Object.create;
    var e = Object.defineProperty;
    var v = Object.getOwnPropertyDescriptor;
    var u = Object.getOwnPropertyNames;
    var C = Object.getPrototypeOf;
    var R = Object.prototype.hasOwnProperty;
    var g = (o, p) => {
      for (var r in p) e(o, r, { get: p[r], enumerable: true });
    };
    var a = (o, p, r, t) => {
      if (p && typeof p == "object" || typeof p == "function") for (let s of u(p)) !R.call(o, s) && s !== r && e(o, s, { get: () => p[s], enumerable: !(t = v(p, s)) || t.enumerable });
      return o;
    };
    var n = (o, p, r) => (r = o != null ? c(C(o)) : {}, a(p || !o || !o.__esModule ? e(r, "default", { value: o, enumerable: true }) : r, o));
    var h = (o) => a(e({}, "__esModule", { value: true }), o);
    var D = {};
    g(D, { Box: () => m });
    module.exports = h(D);
    var i = n(require_react());
    var P = n(require_classnames());
    var x = require_slot();
    var f = require_box_props();
    var B = require_extract_props();
    var y = require_layout_props();
    var l = require_margin_props();
    var m = i.forwardRef((o, p) => {
      const { className: r, asChild: t, as: s = "div", ...d } = (0, B.extractProps)(o, f.boxPropDefs, y.layoutPropDefs, l.marginPropDefs);
      return i.createElement(t ? x.Slot : s, { ...d, ref: p, className: (0, P.default)("rt-Box", r) });
    });
    m.displayName = "Box";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/base-button.props.js
var require_base_button_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/base-button.props.js"(exports, module) {
    "use strict";
    var t = Object.defineProperty;
    var m = Object.getOwnPropertyDescriptor;
    var u = Object.getOwnPropertyNames;
    var c = Object.prototype.hasOwnProperty;
    var d = (e, o) => {
      for (var r in o) t(e, r, { get: o[r], enumerable: true });
    };
    var D = (e, o, r, a) => {
      if (o && typeof o == "object" || typeof o == "function") for (let s of u(o)) !c.call(e, s) && s !== r && t(e, s, { get: () => o[s], enumerable: !(a = m(o, s)) || a.enumerable });
      return e;
    };
    var P = (e) => D(t({}, "__esModule", { value: true }), e);
    var b = {};
    d(b, { baseButtonPropDefs: () => l });
    module.exports = P(b);
    var i = require_as_child_prop();
    var p = require_color_prop();
    var f = require_high_contrast_prop();
    var n = require_radius_prop();
    var v = ["1", "2", "3", "4"];
    var y = ["classic", "solid", "soft", "surface", "outline", "ghost"];
    var l = { ...i.asChildPropDef, size: { type: "enum", className: "rt-r-size", values: v, default: "2", responsive: true }, variant: { type: "enum", className: "rt-variant", values: y, default: "solid" }, ...p.accentColorPropDef, ...f.highContrastPropDef, ...n.radiusPropDef, loading: { type: "boolean", className: "rt-loading", default: false } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/props/gap.props.js
var require_gap_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/props/gap.props.js"(exports, module) {
    "use strict";
    var a = Object.defineProperty;
    var u = Object.getOwnPropertyDescriptor;
    var n = Object.getOwnPropertyNames;
    var m = Object.prototype.hasOwnProperty;
    var i = (p, e) => {
      for (var r in e) a(p, r, { get: e[r], enumerable: true });
    };
    var c = (p, e, r, o) => {
      if (e && typeof e == "object" || typeof e == "function") for (let s of n(e)) !m.call(p, s) && s !== r && a(p, s, { get: () => e[s], enumerable: !(o = u(e, s)) || o.enumerable });
      return p;
    };
    var f = (p) => c(a({}, "__esModule", { value: true }), p);
    var l = {};
    i(l, { gapPropDefs: () => g });
    module.exports = f(l);
    var t = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
    var g = { gap: { type: "enum | string", className: "rt-r-gap", customProperties: ["--gap"], values: t, responsive: true }, gapX: { type: "enum | string", className: "rt-r-cg", customProperties: ["--column-gap"], values: t, responsive: true }, gapY: { type: "enum | string", className: "rt-r-rg", customProperties: ["--row-gap"], values: t, responsive: true } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/flex.props.js
var require_flex_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/flex.props.js"(exports, module) {
    "use strict";
    var p = Object.defineProperty;
    var u = Object.getOwnPropertyDescriptor;
    var f = Object.getOwnPropertyNames;
    var i = Object.prototype.hasOwnProperty;
    var c = (e, s) => {
      for (var t in s) p(e, t, { get: s[t], enumerable: true });
    };
    var y = (e, s, t, a) => {
      if (s && typeof s == "object" || typeof s == "function") for (let r of f(s)) !i.call(e, r) && r !== t && p(e, r, { get: () => s[r], enumerable: !(a = u(s, r)) || a.enumerable });
      return e;
    };
    var m = (e) => y(p({}, "__esModule", { value: true }), e);
    var x = {};
    c(x, { flexPropDefs: () => l });
    module.exports = m(x);
    var o = require_as_child_prop();
    var n = require_gap_props();
    var d = ["div", "span"];
    var P = ["none", "inline-flex", "flex"];
    var v = ["row", "column", "row-reverse", "column-reverse"];
    var w = ["start", "center", "end", "baseline", "stretch"];
    var D = ["start", "center", "end", "between"];
    var V = ["nowrap", "wrap", "wrap-reverse"];
    var l = { as: { type: "enum", values: d, default: "div" }, ...o.asChildPropDef, display: { type: "enum", className: "rt-r-display", values: P, responsive: true }, direction: { type: "enum", className: "rt-r-fd", values: v, responsive: true }, align: { type: "enum", className: "rt-r-ai", values: w, responsive: true }, justify: { type: "enum", className: "rt-r-jc", values: D, parseValue: b, responsive: true }, wrap: { type: "enum", className: "rt-r-fw", values: V, responsive: true }, ...n.gapPropDefs };
    function b(e) {
      return e === "between" ? "space-between" : e;
    }
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/flex.js
var require_flex = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/flex.js"(exports, module) {
    "use strict";
    var c = Object.create;
    var t = Object.defineProperty;
    var v = Object.getOwnPropertyDescriptor;
    var u = Object.getOwnPropertyNames;
    var C = Object.getPrototypeOf;
    var R = Object.prototype.hasOwnProperty;
    var g = (o, p) => {
      for (var r in p) t(o, r, { get: p[r], enumerable: true });
    };
    var l = (o, p, r, s) => {
      if (p && typeof p == "object" || typeof p == "function") for (let e of u(p)) !R.call(o, e) && e !== r && t(o, e, { get: () => p[e], enumerable: !(s = v(p, e)) || s.enumerable });
      return o;
    };
    var a = (o, p, r) => (r = o != null ? c(C(o)) : {}, l(p || !o || !o.__esModule ? t(r, "default", { value: o, enumerable: true }) : r, o));
    var h = (o) => l(t({}, "__esModule", { value: true }), o);
    var D = {};
    g(D, { Flex: () => m });
    module.exports = h(D);
    var n = a(require_react());
    var i = a(require_classnames());
    var P = require_extract_props();
    var x = require_layout_props();
    var f = require_margin_props();
    var F = require_slot();
    var y = require_flex_props();
    var m = n.forwardRef((o, p) => {
      const { className: r, asChild: s, as: e = "div", ...d } = (0, P.extractProps)(o, y.flexPropDefs, x.layoutPropDefs, f.marginPropDefs);
      return n.createElement(s ? F.Slot : e, { ...d, ref: p, className: (0, i.default)("rt-Flex", r) });
    });
    m.displayName = "Flex";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/spinner.props.js
var require_spinner_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/spinner.props.js"(exports, module) {
    "use strict";
    var r = Object.defineProperty;
    var n = Object.getOwnPropertyDescriptor;
    var a = Object.getOwnPropertyNames;
    var f = Object.prototype.hasOwnProperty;
    var l = (s, e) => {
      for (var p in e) r(s, p, { get: e[p], enumerable: true });
    };
    var u = (s, e, p, t) => {
      if (e && typeof e == "object" || typeof e == "function") for (let o of a(e)) !f.call(s, o) && o !== p && r(s, o, { get: () => e[o], enumerable: !(t = n(e, o)) || t.enumerable });
      return s;
    };
    var d = (s) => u(r({}, "__esModule", { value: true }), s);
    var z = {};
    l(z, { spinnerPropDefs: () => i });
    module.exports = d(z);
    var m = ["1", "2", "3"];
    var i = { size: { type: "enum", className: "rt-r-size", values: m, default: "2", responsive: true }, loading: { type: "boolean", default: true } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/helpers/inert.js
var require_inert = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/helpers/inert.js"(exports, module) {
    "use strict";
    var n = Object.create;
    var a = Object.defineProperty;
    var p = Object.getOwnPropertyDescriptor;
    var c = Object.getOwnPropertyNames;
    var m = Object.getPrototypeOf;
    var f = Object.prototype.hasOwnProperty;
    var l = (o, r) => {
      for (var t in r) a(o, t, { get: r[t], enumerable: true });
    };
    var i = (o, r, t, s) => {
      if (r && typeof r == "object" || typeof r == "function") for (let e of c(r)) !f.call(o, e) && e !== t && a(o, e, { get: () => r[e], enumerable: !(s = p(r, e)) || s.enumerable });
      return o;
    };
    var v = (o, r, t) => (t = o != null ? n(m(o)) : {}, i(r || !o || !o.__esModule ? a(t, "default", { value: o, enumerable: true }) : t, o));
    var x = (o) => i(a({}, "__esModule", { value: true }), o);
    var b = {};
    l(b, { inert: () => R });
    module.exports = x(b);
    var F = v(require_react());
    var R = parseFloat(F.version) >= 19 || "";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/spinner.js
var require_spinner = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/spinner.js"(exports, module) {
    "use strict";
    var c = Object.create;
    var o = Object.defineProperty;
    var u = Object.getOwnPropertyDescriptor;
    var g = Object.getOwnPropertyNames;
    var h = Object.getPrototypeOf;
    var L = Object.prototype.hasOwnProperty;
    var x = (n, r) => {
      for (var p in r) o(n, p, { get: r[p], enumerable: true });
    };
    var f = (n, r, p, i) => {
      if (r && typeof r == "object" || typeof r == "function") for (let s of g(r)) !L.call(n, s) && s !== p && o(n, s, { get: () => r[s], enumerable: !(i = u(r, s)) || i.enumerable });
      return n;
    };
    var l = (n, r, p) => (p = n != null ? c(h(n)) : {}, f(r || !n || !n.__esModule ? o(p, "default", { value: n, enumerable: true }) : p, n));
    var j = (n) => f(o({}, "__esModule", { value: true }), n);
    var D = {};
    x(D, { Spinner: () => t });
    module.exports = j(D);
    var e = l(require_react());
    var d = l(require_classnames());
    var a = require_flex();
    var P = require_spinner_props();
    var C = require_inert();
    var S = require_extract_props();
    var y = require_margin_props();
    var t = e.forwardRef((n, r) => {
      const { className: p, children: i, loading: s, ...N } = (0, S.extractProps)(n, P.spinnerPropDefs, y.marginPropDefs);
      if (!s) return i;
      const m = e.createElement("span", { ...N, ref: r, className: (0, d.default)("rt-Spinner", p) }, e.createElement("span", { className: "rt-SpinnerLeaf" }), e.createElement("span", { className: "rt-SpinnerLeaf" }), e.createElement("span", { className: "rt-SpinnerLeaf" }), e.createElement("span", { className: "rt-SpinnerLeaf" }), e.createElement("span", { className: "rt-SpinnerLeaf" }), e.createElement("span", { className: "rt-SpinnerLeaf" }), e.createElement("span", { className: "rt-SpinnerLeaf" }), e.createElement("span", { className: "rt-SpinnerLeaf" }));
      return i === void 0 ? m : e.createElement(a.Flex, { asChild: true, position: "relative", align: "center", justify: "center" }, e.createElement("span", null, e.createElement("span", { "aria-hidden": true, style: { display: "contents", visibility: "hidden" }, inert: void 0 }, i), e.createElement(a.Flex, { asChild: true, align: "center", justify: "center", position: "absolute", inset: "0" }, e.createElement("span", null, m))));
    });
    t.displayName = "Spinner";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/visually-hidden.js
var require_visually_hidden = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/visually-hidden.js"(exports, module) {
    "use strict";
    var o = Object.defineProperty;
    var f = Object.getOwnPropertyDescriptor;
    var m = Object.getOwnPropertyNames;
    var n = Object.prototype.hasOwnProperty;
    var p = (e, d) => {
      for (var l in d) o(e, l, { get: d[l], enumerable: true });
    };
    var s = (e, d, l, r) => {
      if (d && typeof d == "object" || typeof d == "function") for (let i of m(d)) !n.call(e, i) && i !== l && o(e, i, { get: () => d[i], enumerable: !(r = f(d, i)) || r.enumerable });
      return e;
    };
    var t = (e) => s(o({}, "__esModule", { value: true }), e);
    var u = {};
    p(u, { VisuallyHidden: () => a.VisuallyHidden });
    module.exports = t(u);
    var a = require_dist4();
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/callout.props.js
var require_callout_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/callout.props.js"(exports, module) {
    "use strict";
    var r = Object.defineProperty;
    var m = Object.getOwnPropertyDescriptor;
    var u = Object.getOwnPropertyNames;
    var c = Object.prototype.hasOwnProperty;
    var l = (o, e) => {
      for (var t in e) r(o, t, { get: e[t], enumerable: true });
    };
    var v = (o, e, t, a) => {
      if (e && typeof e == "object" || typeof e == "function") for (let s of u(e)) !c.call(o, s) && s !== t && r(o, s, { get: () => e[s], enumerable: !(a = m(e, s)) || a.enumerable });
      return o;
    };
    var D = (o) => v(r({}, "__esModule", { value: true }), o);
    var z = {};
    l(z, { calloutRootPropDefs: () => n });
    module.exports = D(z);
    var p = require_as_child_prop();
    var f = require_color_prop();
    var i = require_high_contrast_prop();
    var P = ["1", "2", "3"];
    var y = ["soft", "surface", "outline"];
    var n = { ...p.asChildPropDef, size: { type: "enum", className: "rt-r-size", values: P, default: "2", responsive: true }, variant: { type: "enum", className: "rt-variant", values: y, default: "soft" }, ...f.accentColorPropDef, ...i.highContrastPropDef };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/helpers/map-prop-values.js
var require_map_prop_values = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/helpers/map-prop-values.js"(exports, module) {
    "use strict";
    var s = Object.defineProperty;
    var f = Object.getOwnPropertyDescriptor;
    var m = Object.getOwnPropertyNames;
    var a = Object.prototype.hasOwnProperty;
    var c = (e, t) => {
      for (var n in t) s(e, n, { get: t[n], enumerable: true });
    };
    var d = (e, t, n, o) => {
      if (t && typeof t == "object" || typeof t == "function") for (let r of m(t)) !a.call(e, r) && r !== n && s(e, r, { get: () => t[r], enumerable: !(o = f(t, r)) || o.enumerable });
      return e;
    };
    var v = (e) => d(s({}, "__esModule", { value: true }), e);
    var P = {};
    c(P, { mapButtonSizeToSpinnerSize: () => u, mapCalloutSizeToTextSize: () => i, mapResponsiveProp: () => p });
    module.exports = v(P);
    var z = require_base_button_props();
    var l = require_callout_props();
    var R = require_spinner_props();
    var O = require_text_props();
    function p(e, t) {
      if (e !== void 0) return typeof e == "string" ? t(e) : Object.fromEntries(Object.entries(e).map(([n, o]) => [n, t(o)]));
    }
    function i(e) {
      return e === "3" ? "3" : "2";
    }
    function u(e) {
      switch (e) {
        case "1":
          return "1";
        case "2":
        case "3":
          return "2";
        case "4":
          return "3";
      }
    }
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/base-button.js
var require_base_button = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/base-button.js"(exports, module) {
    "use strict";
    var D = Object.create;
    var p = Object.defineProperty;
    var S = Object.getOwnPropertyDescriptor;
    var j = Object.getOwnPropertyNames;
    var v = Object.getPrototypeOf;
    var w = Object.prototype.hasOwnProperty;
    var N = (o, t) => {
      for (var e in t) p(o, e, { get: t[e], enumerable: true });
    };
    var l = (o, t, e, n) => {
      if (t && typeof t == "object" || typeof t == "function") for (let s of j(t)) !w.call(o, s) && s !== e && p(o, s, { get: () => t[s], enumerable: !(n = S(t, s)) || n.enumerable });
      return o;
    };
    var u = (o, t, e) => (e = o != null ? D(v(o)) : {}, l(t || !o || !o.__esModule ? p(e, "default", { value: o, enumerable: true }) : e, o));
    var T = (o) => l(p({}, "__esModule", { value: true }), o);
    var E = {};
    N(E, { BaseButton: () => m });
    module.exports = T(E);
    var r = u(require_react());
    var f = u(require_classnames());
    var B = require_dist2();
    var a = require_base_button_props();
    var P = require_flex();
    var y = require_spinner();
    var b = require_visually_hidden();
    var c = require_extract_props();
    var i = require_map_prop_values();
    var h = require_margin_props();
    var m = r.forwardRef((o, t) => {
      const { size: e = a.baseButtonPropDefs.size.default } = o, { className: n, children: s, asChild: g, color: C, radius: x, disabled: d = o.loading, ...z } = (0, c.extractProps)(o, a.baseButtonPropDefs, h.marginPropDefs);
      return r.createElement(g ? B.Slot : "button", { "data-disabled": d || void 0, "data-accent-color": C, "data-radius": x, ...z, ref: t, className: (0, f.default)("rt-reset", "rt-BaseButton", n), disabled: d }, o.loading ? r.createElement(r.Fragment, null, r.createElement("span", { style: { display: "contents", visibility: "hidden" }, "aria-hidden": true }, s), r.createElement(b.VisuallyHidden, null, s), r.createElement(P.Flex, { asChild: true, align: "center", justify: "center", position: "absolute", inset: "0" }, r.createElement("span", null, r.createElement(y.Spinner, { size: (0, i.mapResponsiveProp)(e, i.mapButtonSizeToSpinnerSize) })))) : s);
    });
    m.displayName = "BaseButton";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/button.js
var require_button = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/button.js"(exports, module) {
    "use strict";
    var c = Object.create;
    var r = Object.defineProperty;
    var i = Object.getOwnPropertyDescriptor;
    var l = Object.getOwnPropertyNames;
    var y = Object.getPrototypeOf;
    var R = Object.prototype.hasOwnProperty;
    var P = (t, o) => {
      for (var e in o) r(t, e, { get: o[e], enumerable: true });
    };
    var a = (t, o, e, p) => {
      if (o && typeof o == "object" || typeof o == "function") for (let n of l(o)) !R.call(t, n) && n !== e && r(t, n, { get: () => o[n], enumerable: !(p = i(o, n)) || p.enumerable });
      return t;
    };
    var B = (t, o, e) => (e = t != null ? c(y(t)) : {}, a(o || !t || !t.__esModule ? r(e, "default", { value: t, enumerable: true }) : e, t));
    var d = (t) => a(r({}, "__esModule", { value: true }), t);
    var x = {};
    P(x, { Button: () => s });
    module.exports = d(x);
    var m = B(require_react());
    var u = B(require_classnames());
    var f = require_base_button();
    var s = m.forwardRef(({ className: t, ...o }, e) => m.createElement(f.BaseButton, { ...o, ref: e, className: (0, u.default)("rt-Button", t) }));
    s.displayName = "Button";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/callout.js
var require_callout = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/callout.js"(exports, module) {
    "use strict";
    "use client";
    var E = Object.create;
    var s = Object.defineProperty;
    var z = Object.getOwnPropertyDescriptor;
    var N = Object.getOwnPropertyNames;
    var h = Object.getPrototypeOf;
    var w = Object.prototype.hasOwnProperty;
    var D = (o, t) => {
      for (var e in t) s(o, e, { get: t[e], enumerable: true });
    };
    var c = (o, t, e, p) => {
      if (t && typeof t == "object" || typeof t == "function") for (let r of N(t)) !w.call(o, r) && r !== e && s(o, r, { get: () => t[r], enumerable: !(p = z(t, r)) || p.enumerable });
      return o;
    };
    var f = (o, t, e) => (e = o != null ? E(h(o)) : {}, c(t || !o || !o.__esModule ? s(e, "default", { value: o, enumerable: true }) : e, o));
    var g = (o) => c(s({}, "__esModule", { value: true }), o);
    var j = {};
    D(j, { Icon: () => u, Root: () => C, Text: () => i });
    module.exports = g(j);
    var l = f(require_react());
    var a = f(require_classnames());
    var d = require_dist2();
    var R = require_text();
    var m = require_callout_props();
    var x = require_extract_props();
    var n = require_map_prop_values();
    var y = require_margin_props();
    var P = l.createContext({});
    var C = l.forwardRef((o, t) => {
      const { size: e = m.calloutRootPropDefs.size.default } = o, { asChild: p, children: r, className: T, color: v, ...I } = (0, x.extractProps)(o, m.calloutRootPropDefs, y.marginPropDefs);
      return l.createElement(p ? d.Slot : "div", { "data-accent-color": v, ...I, className: (0, a.default)("rt-CalloutRoot", T), ref: t }, l.createElement(P.Provider, { value: l.useMemo(() => ({ size: e }), [e]) }, r));
    });
    C.displayName = "Callout.Root";
    var u = l.forwardRef(({ className: o, ...t }, e) => l.createElement("div", { ...t, className: (0, a.default)("rt-CalloutIcon", o), ref: e }));
    u.displayName = "Callout.Icon";
    var i = l.forwardRef(({ className: o, ...t }, e) => {
      const { size: p } = l.useContext(P);
      return l.createElement(R.Text, { as: "p", size: (0, n.mapResponsiveProp)(p, n.mapCalloutSizeToTextSize), ...t, asChild: false, ref: e, className: (0, a.default)("rt-CalloutText", o) });
    });
    i.displayName = "Callout.Text";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/card.props.js
var require_card_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/card.props.js"(exports, module) {
    "use strict";
    var t = Object.defineProperty;
    var f = Object.getOwnPropertyDescriptor;
    var n = Object.getOwnPropertyNames;
    var c = Object.prototype.hasOwnProperty;
    var u = (e, s) => {
      for (var a in s) t(e, a, { get: s[a], enumerable: true });
    };
    var m = (e, s, a, o) => {
      if (s && typeof s == "object" || typeof s == "function") for (let r of n(s)) !c.call(e, r) && r !== a && t(e, r, { get: () => s[r], enumerable: !(o = f(s, r)) || o.enumerable });
      return e;
    };
    var l = (e) => m(t({}, "__esModule", { value: true }), e);
    var y = {};
    u(y, { cardPropDefs: () => i });
    module.exports = l(y);
    var p = require_as_child_prop();
    var v = ["1", "2", "3", "4", "5"];
    var d = ["surface", "classic", "ghost"];
    var i = { ...p.asChildPropDef, size: { type: "enum", className: "rt-r-size", values: v, default: "1", responsive: true }, variant: { type: "enum", className: "rt-variant", values: d, default: "surface" } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/card.js
var require_card = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/card.js"(exports, module) {
    "use strict";
    var l = Object.create;
    var s = Object.defineProperty;
    var y = Object.getOwnPropertyDescriptor;
    var v = Object.getOwnPropertyNames;
    var D = Object.getPrototypeOf;
    var R = Object.prototype.hasOwnProperty;
    var g = (r, o) => {
      for (var p in o) s(r, p, { get: o[p], enumerable: true });
    };
    var a = (r, o, p, t) => {
      if (o && typeof o == "object" || typeof o == "function") for (let e of v(o)) !R.call(r, e) && e !== p && s(r, e, { get: () => o[e], enumerable: !(t = y(o, e)) || t.enumerable });
      return r;
    };
    var d = (r, o, p) => (p = r != null ? l(D(r)) : {}, a(o || !r || !r.__esModule ? s(p, "default", { value: r, enumerable: true }) : p, r));
    var h = (r) => a(s({}, "__esModule", { value: true }), r);
    var x = {};
    g(x, { Card: () => m });
    module.exports = h(x);
    var f = d(require_react());
    var i = d(require_classnames());
    var n = require_dist2();
    var P = require_card_props();
    var C = require_extract_props();
    var c = require_margin_props();
    var m = f.forwardRef((r, o) => {
      const { asChild: p, className: t, ...e } = (0, C.extractProps)(r, P.cardPropDefs, c.marginPropDefs);
      return f.createElement(p ? n.Slot : "div", { ref: o, ...e, className: (0, i.default)("rt-reset", "rt-BaseCard", "rt-Card", t) });
    });
    m.displayName = "Card";
  }
});

// node_modules/@radix-ui/react-use-previous/dist/index.js
var require_dist27 = __commonJS({
  "node_modules/@radix-ui/react-use-previous/dist/index.js"(exports, module) {
    "use strict";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      usePrevious: () => usePrevious
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    function usePrevious(value) {
      const ref = React2.useRef({ value, previous: value });
      return React2.useMemo(() => {
        if (ref.current.value !== value) {
          ref.current.previous = ref.current.value;
          ref.current.value = value;
        }
        return ref.current.previous;
      }, [value]);
    }
  }
});

// node_modules/@radix-ui/react-checkbox/dist/index.js
var require_dist28 = __commonJS({
  "node_modules/@radix-ui/react-checkbox/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Checkbox: () => Checkbox,
      CheckboxIndicator: () => CheckboxIndicator,
      Indicator: () => Indicator,
      Root: () => Root,
      createCheckboxScope: () => createCheckboxScope
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_react_compose_refs = require_dist();
    var import_react_context = require_dist6();
    var import_primitive = require_dist7();
    var import_react_use_controllable_state = require_dist11();
    var import_react_use_previous = require_dist27();
    var import_react_use_size = require_dist21();
    var import_react_presence = require_dist16();
    var import_react_primitive = require_dist3();
    var import_jsx_runtime = require_jsx_runtime();
    var CHECKBOX_NAME = "Checkbox";
    var [createCheckboxContext, createCheckboxScope] = (0, import_react_context.createContextScope)(CHECKBOX_NAME);
    var [CheckboxProvider, useCheckboxContext] = createCheckboxContext(CHECKBOX_NAME);
    var Checkbox = React2.forwardRef(
      (props, forwardedRef) => {
        const {
          __scopeCheckbox,
          name,
          checked: checkedProp,
          defaultChecked,
          required,
          disabled,
          value = "on",
          onCheckedChange,
          ...checkboxProps
        } = props;
        const [button, setButton] = React2.useState(null);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, (node) => setButton(node));
        const hasConsumerStoppedPropagationRef = React2.useRef(false);
        const isFormControl = button ? Boolean(button.closest("form")) : true;
        const [checked = false, setChecked] = (0, import_react_use_controllable_state.useControllableState)({
          prop: checkedProp,
          defaultProp: defaultChecked,
          onChange: onCheckedChange
        });
        const initialCheckedStateRef = React2.useRef(checked);
        React2.useEffect(() => {
          const form = button == null ? void 0 : button.form;
          if (form) {
            const reset = () => setChecked(initialCheckedStateRef.current);
            form.addEventListener("reset", reset);
            return () => form.removeEventListener("reset", reset);
          }
        }, [button, setChecked]);
        return (0, import_jsx_runtime.jsxs)(CheckboxProvider, { scope: __scopeCheckbox, state: checked, disabled, children: [
          (0, import_jsx_runtime.jsx)(
            import_react_primitive.Primitive.button,
            {
              type: "button",
              role: "checkbox",
              "aria-checked": isIndeterminate(checked) ? "mixed" : checked,
              "aria-required": required,
              "data-state": getState(checked),
              "data-disabled": disabled ? "" : void 0,
              disabled,
              value,
              ...checkboxProps,
              ref: composedRefs,
              onKeyDown: (0, import_primitive.composeEventHandlers)(props.onKeyDown, (event) => {
                if (event.key === "Enter") event.preventDefault();
              }),
              onClick: (0, import_primitive.composeEventHandlers)(props.onClick, (event) => {
                setChecked((prevChecked) => isIndeterminate(prevChecked) ? true : !prevChecked);
                if (isFormControl) {
                  hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();
                  if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();
                }
              })
            }
          ),
          isFormControl && (0, import_jsx_runtime.jsx)(
            BubbleInput,
            {
              control: button,
              bubbles: !hasConsumerStoppedPropagationRef.current,
              name,
              value,
              checked,
              required,
              disabled,
              style: { transform: "translateX(-100%)" }
            }
          )
        ] });
      }
    );
    Checkbox.displayName = CHECKBOX_NAME;
    var INDICATOR_NAME = "CheckboxIndicator";
    var CheckboxIndicator = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeCheckbox, forceMount, ...indicatorProps } = props;
        const context = useCheckboxContext(INDICATOR_NAME, __scopeCheckbox);
        return (0, import_jsx_runtime.jsx)(import_react_presence.Presence, { present: forceMount || isIndeterminate(context.state) || context.state === true, children: (0, import_jsx_runtime.jsx)(
          import_react_primitive.Primitive.span,
          {
            "data-state": getState(context.state),
            "data-disabled": context.disabled ? "" : void 0,
            ...indicatorProps,
            ref: forwardedRef,
            style: { pointerEvents: "none", ...props.style }
          }
        ) });
      }
    );
    CheckboxIndicator.displayName = INDICATOR_NAME;
    var BubbleInput = (props) => {
      const { control, checked, bubbles = true, ...inputProps } = props;
      const ref = React2.useRef(null);
      const prevChecked = (0, import_react_use_previous.usePrevious)(checked);
      const controlSize = (0, import_react_use_size.useSize)(control);
      React2.useEffect(() => {
        const input = ref.current;
        const inputProto = window.HTMLInputElement.prototype;
        const descriptor = Object.getOwnPropertyDescriptor(inputProto, "checked");
        const setChecked = descriptor.set;
        if (prevChecked !== checked && setChecked) {
          const event = new Event("click", { bubbles });
          input.indeterminate = isIndeterminate(checked);
          setChecked.call(input, isIndeterminate(checked) ? false : checked);
          input.dispatchEvent(event);
        }
      }, [prevChecked, checked, bubbles]);
      return (0, import_jsx_runtime.jsx)(
        "input",
        {
          type: "checkbox",
          "aria-hidden": true,
          defaultChecked: isIndeterminate(checked) ? false : checked,
          ...inputProps,
          tabIndex: -1,
          ref,
          style: {
            ...props.style,
            ...controlSize,
            position: "absolute",
            pointerEvents: "none",
            opacity: 0,
            margin: 0
          }
        }
      );
    };
    function isIndeterminate(checked) {
      return checked === "indeterminate";
    }
    function getState(checked) {
      return isIndeterminate(checked) ? "indeterminate" : checked ? "checked" : "unchecked";
    }
    var Root = Checkbox;
    var Indicator = CheckboxIndicator;
  }
});

// node_modules/@radix-ui/react-collection/dist/index.js
var require_dist29 = __commonJS({
  "node_modules/@radix-ui/react-collection/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      createCollection: () => createCollection
    });
    module.exports = __toCommonJS2(src_exports);
    var import_react2 = __toESM2(require_react());
    var import_react_context = require_dist6();
    var import_react_compose_refs = require_dist();
    var import_react_slot = require_dist2();
    var import_jsx_runtime = require_jsx_runtime();
    function createCollection(name) {
      const PROVIDER_NAME = name + "CollectionProvider";
      const [createCollectionContext, createCollectionScope] = (0, import_react_context.createContextScope)(PROVIDER_NAME);
      const [CollectionProviderImpl, useCollectionContext] = createCollectionContext(
        PROVIDER_NAME,
        { collectionRef: { current: null }, itemMap: /* @__PURE__ */ new Map() }
      );
      const CollectionProvider = (props) => {
        const { scope, children } = props;
        const ref = import_react2.default.useRef(null);
        const itemMap = import_react2.default.useRef(/* @__PURE__ */ new Map()).current;
        return (0, import_jsx_runtime.jsx)(CollectionProviderImpl, { scope, itemMap, collectionRef: ref, children });
      };
      CollectionProvider.displayName = PROVIDER_NAME;
      const COLLECTION_SLOT_NAME = name + "CollectionSlot";
      const CollectionSlot = import_react2.default.forwardRef(
        (props, forwardedRef) => {
          const { scope, children } = props;
          const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);
          const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, context.collectionRef);
          return (0, import_jsx_runtime.jsx)(import_react_slot.Slot, { ref: composedRefs, children });
        }
      );
      CollectionSlot.displayName = COLLECTION_SLOT_NAME;
      const ITEM_SLOT_NAME = name + "CollectionItemSlot";
      const ITEM_DATA_ATTR = "data-radix-collection-item";
      const CollectionItemSlot = import_react2.default.forwardRef(
        (props, forwardedRef) => {
          const { scope, children, ...itemData } = props;
          const ref = import_react2.default.useRef(null);
          const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, ref);
          const context = useCollectionContext(ITEM_SLOT_NAME, scope);
          import_react2.default.useEffect(() => {
            context.itemMap.set(ref, { ref, ...itemData });
            return () => void context.itemMap.delete(ref);
          });
          return (0, import_jsx_runtime.jsx)(import_react_slot.Slot, { ...{ [ITEM_DATA_ATTR]: "" }, ref: composedRefs, children });
        }
      );
      CollectionItemSlot.displayName = ITEM_SLOT_NAME;
      function useCollection(scope) {
        const context = useCollectionContext(name + "CollectionConsumer", scope);
        const getItems = import_react2.default.useCallback(() => {
          const collectionNode = context.collectionRef.current;
          if (!collectionNode) return [];
          const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));
          const items = Array.from(context.itemMap.values());
          const orderedItems = items.sort(
            (a, b) => orderedNodes.indexOf(a.ref.current) - orderedNodes.indexOf(b.ref.current)
          );
          return orderedItems;
        }, [context.collectionRef, context.itemMap]);
        return getItems;
      }
      return [
        { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },
        useCollection,
        createCollectionScope
      ];
    }
  }
});

// node_modules/@radix-ui/react-roving-focus/dist/index.js
var require_dist30 = __commonJS({
  "node_modules/@radix-ui/react-roving-focus/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Item: () => Item,
      Root: () => Root,
      RovingFocusGroup: () => RovingFocusGroup,
      RovingFocusGroupItem: () => RovingFocusGroupItem,
      createRovingFocusGroupScope: () => createRovingFocusGroupScope
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_primitive = require_dist7();
    var import_react_collection = require_dist29();
    var import_react_compose_refs = require_dist();
    var import_react_context = require_dist6();
    var import_react_id = require_dist9();
    var import_react_primitive = require_dist3();
    var import_react_use_callback_ref = require_dist10();
    var import_react_use_controllable_state = require_dist11();
    var import_react_direction = require_dist24();
    var import_jsx_runtime = require_jsx_runtime();
    var ENTRY_FOCUS = "rovingFocusGroup.onEntryFocus";
    var EVENT_OPTIONS = { bubbles: false, cancelable: true };
    var GROUP_NAME = "RovingFocusGroup";
    var [Collection, useCollection, createCollectionScope] = (0, import_react_collection.createCollection)(GROUP_NAME);
    var [createRovingFocusGroupContext, createRovingFocusGroupScope] = (0, import_react_context.createContextScope)(
      GROUP_NAME,
      [createCollectionScope]
    );
    var [RovingFocusProvider, useRovingFocusContext] = createRovingFocusGroupContext(GROUP_NAME);
    var RovingFocusGroup = React2.forwardRef(
      (props, forwardedRef) => {
        return (0, import_jsx_runtime.jsx)(Collection.Provider, { scope: props.__scopeRovingFocusGroup, children: (0, import_jsx_runtime.jsx)(Collection.Slot, { scope: props.__scopeRovingFocusGroup, children: (0, import_jsx_runtime.jsx)(RovingFocusGroupImpl, { ...props, ref: forwardedRef }) }) });
      }
    );
    RovingFocusGroup.displayName = GROUP_NAME;
    var RovingFocusGroupImpl = React2.forwardRef((props, forwardedRef) => {
      const {
        __scopeRovingFocusGroup,
        orientation,
        loop = false,
        dir,
        currentTabStopId: currentTabStopIdProp,
        defaultCurrentTabStopId,
        onCurrentTabStopIdChange,
        onEntryFocus,
        preventScrollOnEntryFocus = false,
        ...groupProps
      } = props;
      const ref = React2.useRef(null);
      const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, ref);
      const direction = (0, import_react_direction.useDirection)(dir);
      const [currentTabStopId = null, setCurrentTabStopId] = (0, import_react_use_controllable_state.useControllableState)({
        prop: currentTabStopIdProp,
        defaultProp: defaultCurrentTabStopId,
        onChange: onCurrentTabStopIdChange
      });
      const [isTabbingBackOut, setIsTabbingBackOut] = React2.useState(false);
      const handleEntryFocus = (0, import_react_use_callback_ref.useCallbackRef)(onEntryFocus);
      const getItems = useCollection(__scopeRovingFocusGroup);
      const isClickFocusRef = React2.useRef(false);
      const [focusableItemsCount, setFocusableItemsCount] = React2.useState(0);
      React2.useEffect(() => {
        const node = ref.current;
        if (node) {
          node.addEventListener(ENTRY_FOCUS, handleEntryFocus);
          return () => node.removeEventListener(ENTRY_FOCUS, handleEntryFocus);
        }
      }, [handleEntryFocus]);
      return (0, import_jsx_runtime.jsx)(
        RovingFocusProvider,
        {
          scope: __scopeRovingFocusGroup,
          orientation,
          dir: direction,
          loop,
          currentTabStopId,
          onItemFocus: React2.useCallback(
            (tabStopId) => setCurrentTabStopId(tabStopId),
            [setCurrentTabStopId]
          ),
          onItemShiftTab: React2.useCallback(() => setIsTabbingBackOut(true), []),
          onFocusableItemAdd: React2.useCallback(
            () => setFocusableItemsCount((prevCount) => prevCount + 1),
            []
          ),
          onFocusableItemRemove: React2.useCallback(
            () => setFocusableItemsCount((prevCount) => prevCount - 1),
            []
          ),
          children: (0, import_jsx_runtime.jsx)(
            import_react_primitive.Primitive.div,
            {
              tabIndex: isTabbingBackOut || focusableItemsCount === 0 ? -1 : 0,
              "data-orientation": orientation,
              ...groupProps,
              ref: composedRefs,
              style: { outline: "none", ...props.style },
              onMouseDown: (0, import_primitive.composeEventHandlers)(props.onMouseDown, () => {
                isClickFocusRef.current = true;
              }),
              onFocus: (0, import_primitive.composeEventHandlers)(props.onFocus, (event) => {
                const isKeyboardFocus = !isClickFocusRef.current;
                if (event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut) {
                  const entryFocusEvent = new CustomEvent(ENTRY_FOCUS, EVENT_OPTIONS);
                  event.currentTarget.dispatchEvent(entryFocusEvent);
                  if (!entryFocusEvent.defaultPrevented) {
                    const items = getItems().filter((item) => item.focusable);
                    const activeItem = items.find((item) => item.active);
                    const currentItem = items.find((item) => item.id === currentTabStopId);
                    const candidateItems = [activeItem, currentItem, ...items].filter(
                      Boolean
                    );
                    const candidateNodes = candidateItems.map((item) => item.ref.current);
                    focusFirst(candidateNodes, preventScrollOnEntryFocus);
                  }
                }
                isClickFocusRef.current = false;
              }),
              onBlur: (0, import_primitive.composeEventHandlers)(props.onBlur, () => setIsTabbingBackOut(false))
            }
          )
        }
      );
    });
    var ITEM_NAME = "RovingFocusGroupItem";
    var RovingFocusGroupItem = React2.forwardRef(
      (props, forwardedRef) => {
        const {
          __scopeRovingFocusGroup,
          focusable = true,
          active = false,
          tabStopId,
          ...itemProps
        } = props;
        const autoId = (0, import_react_id.useId)();
        const id = tabStopId || autoId;
        const context = useRovingFocusContext(ITEM_NAME, __scopeRovingFocusGroup);
        const isCurrentTabStop = context.currentTabStopId === id;
        const getItems = useCollection(__scopeRovingFocusGroup);
        const { onFocusableItemAdd, onFocusableItemRemove } = context;
        React2.useEffect(() => {
          if (focusable) {
            onFocusableItemAdd();
            return () => onFocusableItemRemove();
          }
        }, [focusable, onFocusableItemAdd, onFocusableItemRemove]);
        return (0, import_jsx_runtime.jsx)(
          Collection.ItemSlot,
          {
            scope: __scopeRovingFocusGroup,
            id,
            focusable,
            active,
            children: (0, import_jsx_runtime.jsx)(
              import_react_primitive.Primitive.span,
              {
                tabIndex: isCurrentTabStop ? 0 : -1,
                "data-orientation": context.orientation,
                ...itemProps,
                ref: forwardedRef,
                onMouseDown: (0, import_primitive.composeEventHandlers)(props.onMouseDown, (event) => {
                  if (!focusable) event.preventDefault();
                  else context.onItemFocus(id);
                }),
                onFocus: (0, import_primitive.composeEventHandlers)(props.onFocus, () => context.onItemFocus(id)),
                onKeyDown: (0, import_primitive.composeEventHandlers)(props.onKeyDown, (event) => {
                  if (event.key === "Tab" && event.shiftKey) {
                    context.onItemShiftTab();
                    return;
                  }
                  if (event.target !== event.currentTarget) return;
                  const focusIntent = getFocusIntent(event, context.orientation, context.dir);
                  if (focusIntent !== void 0) {
                    if (event.metaKey || event.ctrlKey || event.altKey || event.shiftKey) return;
                    event.preventDefault();
                    const items = getItems().filter((item) => item.focusable);
                    let candidateNodes = items.map((item) => item.ref.current);
                    if (focusIntent === "last") candidateNodes.reverse();
                    else if (focusIntent === "prev" || focusIntent === "next") {
                      if (focusIntent === "prev") candidateNodes.reverse();
                      const currentIndex = candidateNodes.indexOf(event.currentTarget);
                      candidateNodes = context.loop ? wrapArray(candidateNodes, currentIndex + 1) : candidateNodes.slice(currentIndex + 1);
                    }
                    setTimeout(() => focusFirst(candidateNodes));
                  }
                })
              }
            )
          }
        );
      }
    );
    RovingFocusGroupItem.displayName = ITEM_NAME;
    var MAP_KEY_TO_FOCUS_INTENT = {
      ArrowLeft: "prev",
      ArrowUp: "prev",
      ArrowRight: "next",
      ArrowDown: "next",
      PageUp: "first",
      Home: "first",
      PageDown: "last",
      End: "last"
    };
    function getDirectionAwareKey(key, dir) {
      if (dir !== "rtl") return key;
      return key === "ArrowLeft" ? "ArrowRight" : key === "ArrowRight" ? "ArrowLeft" : key;
    }
    function getFocusIntent(event, orientation, dir) {
      const key = getDirectionAwareKey(event.key, dir);
      if (orientation === "vertical" && ["ArrowLeft", "ArrowRight"].includes(key)) return void 0;
      if (orientation === "horizontal" && ["ArrowUp", "ArrowDown"].includes(key)) return void 0;
      return MAP_KEY_TO_FOCUS_INTENT[key];
    }
    function focusFirst(candidates, preventScroll = false) {
      const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;
      for (const candidate of candidates) {
        if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;
        candidate.focus({ preventScroll });
        if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;
      }
    }
    function wrapArray(array, startIndex) {
      return array.map((_, index2) => array[(startIndex + index2) % array.length]);
    }
    var Root = RovingFocusGroup;
    var Item = RovingFocusGroupItem;
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/checkbox-group.primitive.js
var require_checkbox_group_primitive = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/checkbox-group.primitive.js"(exports, module) {
    "use strict";
    "use client";
    var j = Object.create;
    var d = Object.defineProperty;
    var z = Object.getOwnPropertyDescriptor;
    var J = Object.getOwnPropertyNames;
    var L = Object.getPrototypeOf;
    var Q = Object.prototype.hasOwnProperty;
    var Y = (o, e) => {
      for (var t in e) d(o, t, { get: e[t], enumerable: true });
    };
    var y = (o, e, t, i) => {
      if (e && typeof e == "object" || typeof e == "function") for (let r of J(e)) !Q.call(o, r) && r !== t && d(o, r, { get: () => e[r], enumerable: !(i = z(e, r)) || i.enumerable });
      return o;
    };
    var v = (o, e, t) => (t = o != null ? j(L(o)) : {}, y(e || !o || !o.__esModule ? d(t, "default", { value: o, enumerable: true }) : t, o));
    var Z = (o) => y(d({}, "__esModule", { value: true }), o);
    var ro = {};
    Y(ro, { CheckboxGroup: () => m, CheckboxGroupIndicator: () => h, CheckboxGroupItem: () => C, Indicator: () => w, Item: () => O, Root: () => M, createCheckboxGroupScope: () => A });
    module.exports = Z(ro);
    var c = v(require_react());
    var S = v(require_dist28());
    var R = require_dist28();
    var q = require_dist();
    var N = require_dist6();
    var W = require_dist3();
    var E = v(require_dist30());
    var I = require_dist30();
    var D = require_dist11();
    var U = require_dist24();
    var G = "CheckboxGroup";
    var [$, A] = (0, N.createContextScope)(G, [I.createRovingFocusGroupScope, R.createCheckboxScope]);
    var F = (0, I.createRovingFocusGroupScope)();
    var _ = (0, R.createCheckboxScope)();
    var [oo, eo] = $(G);
    var m = c.forwardRef((o, e) => {
      const { __scopeCheckboxGroup: t, name: i, defaultValue: r, value: p, required: n = false, disabled: s = false, orientation: l, dir: b, loop: k = true, onValueChange: u, ...x } = o, T = F(t), g = (0, U.useDirection)(b), [B = [], a] = (0, D.useControllableState)({ prop: p, defaultProp: r, onChange: u }), H = c.useCallback((f) => a((P = []) => [...P, f]), [a]), K = c.useCallback((f) => a((P = []) => P.filter((X) => X !== f)), [a]);
      return c.createElement(oo, { scope: t, name: i, required: n, disabled: s, value: B, onItemCheck: H, onItemUncheck: K }, c.createElement(E.Root, { asChild: true, ...T, orientation: l, dir: g, loop: k }, c.createElement(W.Primitive.div, { role: "group", "data-disabled": s ? "" : void 0, dir: g, ...x, ref: e })));
    });
    m.displayName = G;
    var V = "CheckboxGroupItem";
    var C = c.forwardRef((o, e) => {
      var _a;
      const { __scopeCheckboxGroup: t, disabled: i, ...r } = o, p = eo(V, t), n = p.disabled || i, s = F(t), l = _(t), b = c.useRef(null), k = (0, q.useComposedRefs)(e, b), u = (_a = p.value) == null ? void 0 : _a.includes(r.value);
      return c.createElement(E.Item, { asChild: true, ...s, focusable: !n, active: u }, c.createElement(S.Root, { name: p.name, disabled: n, required: p.required, checked: u, ...l, ...r, ref: k, onCheckedChange: (x) => {
        x ? p.onItemCheck(o.value) : p.onItemUncheck(o.value);
      } }));
    });
    C.displayName = V;
    var to = "CheckboxGroupIndicator";
    var h = c.forwardRef((o, e) => {
      const { __scopeCheckboxGroup: t, ...i } = o, r = _(t);
      return c.createElement(S.Indicator, { ...r, ...i, ref: e });
    });
    h.displayName = to;
    var M = m;
    var O = C;
    var w = h;
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/grid.props.js
var require_grid_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/grid.props.js"(exports, module) {
    "use strict";
    var o = Object.defineProperty;
    var l = Object.getOwnPropertyDescriptor;
    var f = Object.getOwnPropertyNames;
    var m = Object.prototype.hasOwnProperty;
    var c = (e, s) => {
      for (var t in s) o(e, t, { get: s[t], enumerable: true });
    };
    var y = (e, s, t, n) => {
      if (s && typeof s == "object" || typeof s == "function") for (let r of f(s)) !m.call(e, r) && r !== t && o(e, r, { get: () => s[r], enumerable: !(n = l(s, r)) || n.enumerable });
      return e;
    };
    var d = (e) => y(o({}, "__esModule", { value: true }), e);
    var j = {};
    c(j, { gridPropDefs: () => a });
    module.exports = d(j);
    var u = require_as_child_prop();
    var i = require_gap_props();
    var g = ["div", "span"];
    var P = ["none", "inline-grid", "grid"];
    var V = ["1", "2", "3", "4", "5", "6", "7", "8", "9"];
    var w = ["1", "2", "3", "4", "5", "6", "7", "8", "9"];
    var D = ["row", "column", "dense", "row-dense", "column-dense"];
    var v = ["start", "center", "end", "baseline", "stretch"];
    var b = ["start", "center", "end", "between"];
    var a = { as: { type: "enum", values: g, default: "div" }, ...u.asChildPropDef, display: { type: "enum", className: "rt-r-display", values: P, responsive: true }, areas: { type: "string", className: "rt-r-gta", customProperties: ["--grid-template-areas"], responsive: true }, columns: { type: "enum | string", className: "rt-r-gtc", customProperties: ["--grid-template-columns"], values: V, parseValue: p, responsive: true }, rows: { type: "enum | string", className: "rt-r-gtr", customProperties: ["--grid-template-rows"], values: w, parseValue: p, responsive: true }, flow: { type: "enum", className: "rt-r-gaf", values: D, responsive: true }, align: { type: "enum", className: "rt-r-ai", values: v, responsive: true }, justify: { type: "enum", className: "rt-r-jc", values: b, parseValue: N, responsive: true }, ...i.gapPropDefs };
    function p(e) {
      return a.columns.values.includes(e) ? e : (e == null ? void 0 : e.match(/^\d+$/)) ? `repeat(${e}, minmax(0, 1fr))` : e;
    }
    function N(e) {
      return e === "between" ? "space-between" : e;
    }
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/checkbox-cards.props.js
var require_checkbox_cards_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/checkbox-cards.props.js"(exports, module) {
    "use strict";
    var a = Object.defineProperty;
    var u = Object.getOwnPropertyDescriptor;
    var c = Object.getOwnPropertyNames;
    var l = Object.prototype.hasOwnProperty;
    var D = (r, e) => {
      for (var s in e) a(r, s, { get: e[s], enumerable: true });
    };
    var P = (r, e, s, p) => {
      if (e && typeof e == "object" || typeof e == "function") for (let o of c(e)) !l.call(r, o) && o !== s && a(r, o, { get: () => e[o], enumerable: !(p = u(e, o)) || p.enumerable });
      return r;
    };
    var d = (r) => P(a({}, "__esModule", { value: true }), r);
    var y = {};
    D(y, { checkboxCardsRootPropDefs: () => n });
    module.exports = d(y);
    var f = require_as_child_prop();
    var i = require_color_prop();
    var m = require_high_contrast_prop();
    var t = require_grid_props();
    var v = ["1", "2", "3"];
    var g = ["surface", "classic"];
    var n = { ...f.asChildPropDef, size: { type: "enum", className: "rt-r-size", values: v, default: "2", responsive: true }, variant: { type: "enum", className: "rt-variant", values: g, default: "surface" }, ...i.colorPropDef, ...m.highContrastPropDef, columns: { ...t.gridPropDefs.columns, default: "repeat(auto-fit, minmax(200px, 1fr))" }, gap: { ...t.gridPropDefs.gap, default: "4" } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/base-checkbox.props.js
var require_base_checkbox_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/base-checkbox.props.js"(exports, module) {
    "use strict";
    var t = Object.defineProperty;
    var n = Object.getOwnPropertyDescriptor;
    var c = Object.getOwnPropertyNames;
    var m = Object.prototype.hasOwnProperty;
    var u = (e, s) => {
      for (var o in s) t(e, o, { get: s[o], enumerable: true });
    };
    var l = (e, s, o, a) => {
      if (s && typeof s == "object" || typeof s == "function") for (let r of c(s)) !m.call(e, r) && r !== o && t(e, r, { get: () => s[r], enumerable: !(a = n(s, r)) || a.enumerable });
      return e;
    };
    var v = (e) => l(t({}, "__esModule", { value: true }), e);
    var y = {};
    u(y, { baseCheckboxPropDefs: () => i });
    module.exports = v(y);
    var p = require_color_prop();
    var f = require_high_contrast_prop();
    var D = ["1", "2", "3"];
    var P = ["classic", "surface", "soft"];
    var i = { size: { type: "enum", className: "rt-r-size", values: D, default: "2", responsive: true }, variant: { type: "enum", className: "rt-variant", values: P, default: "surface" }, ...p.colorPropDef, ...f.highContrastPropDef };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/grid.js
var require_grid = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/grid.js"(exports, module) {
    "use strict";
    var v = Object.create;
    var e = Object.defineProperty;
    var g = Object.getOwnPropertyDescriptor;
    var u = Object.getOwnPropertyNames;
    var C = Object.getPrototypeOf;
    var R = Object.prototype.hasOwnProperty;
    var h = (r, o) => {
      for (var p in o) e(r, p, { get: o[p], enumerable: true });
    };
    var m = (r, o, p, t) => {
      if (o && typeof o == "object" || typeof o == "function") for (let s of u(o)) !R.call(r, s) && s !== p && e(r, s, { get: () => o[s], enumerable: !(t = g(o, s)) || t.enumerable });
      return r;
    };
    var a = (r, o, p) => (p = r != null ? v(C(r)) : {}, m(o || !r || !r.__esModule ? e(p, "default", { value: r, enumerable: true }) : p, r));
    var D = (r) => m(e({}, "__esModule", { value: true }), r);
    var j = {};
    h(j, { Grid: () => i });
    module.exports = D(j);
    var d = a(require_react());
    var n = a(require_classnames());
    var P = require_slot();
    var f = require_grid_props();
    var G = require_extract_props();
    var y = require_layout_props();
    var l = require_margin_props();
    var i = d.forwardRef((r, o) => {
      const { className: p, asChild: t, as: s = "div", ...c } = (0, G.extractProps)(r, f.gridPropDefs, y.layoutPropDefs, l.marginPropDefs);
      return d.createElement(t ? P.Slot : s, { ...c, ref: o, className: (0, n.default)("rt-Grid", p) });
    });
    i.displayName = "Grid";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/icons.js
var require_icons = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/icons.js"(exports, module) {
    "use strict";
    var v = Object.create;
    var i = Object.defineProperty;
    var w = Object.getOwnPropertyDescriptor;
    var C = Object.getOwnPropertyNames;
    var g = Object.getPrototypeOf;
    var f = Object.prototype.hasOwnProperty;
    var m = (o, e) => {
      for (var r in e) i(o, r, { get: e[r], enumerable: true });
    };
    var d = (o, e, r, p) => {
      if (e && typeof e == "object" || typeof e == "function") for (let t of C(e)) !f.call(o, t) && t !== r && i(o, t, { get: () => e[t], enumerable: !(p = w(e, t)) || p.enumerable });
      return o;
    };
    var I = (o, e, r) => (r = o != null ? v(g(o)) : {}, d(e || !o || !o.__esModule ? i(r, "default", { value: o, enumerable: true }) : r, o));
    var u = (o) => d(i({}, "__esModule", { value: true }), o);
    var a = {};
    m(a, { ChevronDownIcon: () => c, ThickCheckIcon: () => s, ThickChevronRightIcon: () => h, ThickDividerHorizontalIcon: () => l });
    module.exports = u(a);
    var n = I(require_react());
    var l = n.default.forwardRef((o, e) => n.default.createElement("svg", { width: "9", height: "9", viewBox: "0 0 9 9", fill: "currentcolor", xmlns: "http://www.w3.org/2000/svg", ...o, ref: e }, n.default.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M0.75 4.5C0.75 4.08579 1.08579 3.75 1.5 3.75H7.5C7.91421 3.75 8.25 4.08579 8.25 4.5C8.25 4.91421 7.91421 5.25 7.5 5.25H1.5C1.08579 5.25 0.75 4.91421 0.75 4.5Z" })));
    l.displayName = "ThickDividerHorizontalIcon";
    var s = n.default.forwardRef((o, e) => n.default.createElement("svg", { width: "9", height: "9", viewBox: "0 0 9 9", fill: "currentcolor", xmlns: "http://www.w3.org/2000/svg", ...o, ref: e }, n.default.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M8.53547 0.62293C8.88226 0.849446 8.97976 1.3142 8.75325 1.66099L4.5083 8.1599C4.38833 8.34356 4.19397 8.4655 3.9764 8.49358C3.75883 8.52167 3.53987 8.45309 3.3772 8.30591L0.616113 5.80777C0.308959 5.52987 0.285246 5.05559 0.563148 4.74844C0.84105 4.44128 1.31533 4.41757 1.62249 4.69547L3.73256 6.60459L7.49741 0.840706C7.72393 0.493916 8.18868 0.396414 8.53547 0.62293Z" })));
    s.displayName = "ThickCheckIcon";
    var c = n.default.forwardRef((o, e) => n.default.createElement("svg", { width: "9", height: "9", viewBox: "0 0 9 9", fill: "currentcolor", xmlns: "http://www.w3.org/2000/svg", ...o, ref: e }, n.default.createElement("path", { d: "M0.135232 3.15803C0.324102 2.95657 0.640521 2.94637 0.841971 3.13523L4.5 6.56464L8.158 3.13523C8.3595 2.94637 8.6759 2.95657 8.8648 3.15803C9.0536 3.35949 9.0434 3.67591 8.842 3.86477L4.84197 7.6148C4.64964 7.7951 4.35036 7.7951 4.15803 7.6148L0.158031 3.86477C-0.0434285 3.67591 -0.0536285 3.35949 0.135232 3.15803Z" })));
    c.displayName = "ChevronDownIcon";
    var h = n.default.forwardRef((o, e) => n.default.createElement("svg", { width: "9", height: "9", viewBox: "0 0 9 9", fill: "currentcolor", xmlns: "http://www.w3.org/2000/svg", ...o, ref: e }, n.default.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M3.23826 0.201711C3.54108 -0.0809141 4.01567 -0.0645489 4.29829 0.238264L7.79829 3.98826C8.06724 4.27642 8.06724 4.72359 7.79829 5.01174L4.29829 8.76174C4.01567 9.06455 3.54108 9.08092 3.23826 8.79829C2.93545 8.51567 2.91909 8.04108 3.20171 7.73826L6.22409 4.5L3.20171 1.26174C2.91909 0.958928 2.93545 0.484337 3.23826 0.201711Z" })));
    h.displayName = "ThickChevronRightIcon";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/checkbox-cards.js
var require_checkbox_cards = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/checkbox-cards.js"(exports, module) {
    "use strict";
    "use client";
    var g = Object.create;
    var a = Object.defineProperty;
    var S = Object.getOwnPropertyDescriptor;
    var D = Object.getOwnPropertyNames;
    var E = Object.getPrototypeOf;
    var z = Object.prototype.hasOwnProperty;
    var _ = (o, e) => {
      for (var r in e) a(o, r, { get: e[r], enumerable: true });
    };
    var P = (o, e, r, c) => {
      if (e && typeof e == "object" || typeof e == "function") for (let t of D(e)) !z.call(o, t) && t !== r && a(o, t, { get: () => e[t], enumerable: !(c = S(e, t)) || c.enumerable });
      return o;
    };
    var i = (o, e, r) => (r = o != null ? g(E(o)) : {}, P(e || !o || !o.__esModule ? a(r, "default", { value: o, enumerable: true }) : r, o));
    var w = (o) => P(a({}, "__esModule", { value: true }), o);
    var j = {};
    _(j, { Item: () => b, Root: () => d });
    module.exports = w(j);
    var s = i(require_react());
    var C = i(require_classnames());
    var u = require_dist6();
    var h = i(require_checkbox_group_primitive());
    var n = require_checkbox_group_primitive();
    var R = require_checkbox_cards_props();
    var y = require_base_checkbox_props();
    var I = require_grid();
    var G = require_icons();
    var x = require_extract_props();
    var v = require_margin_props();
    var f = "CheckboxCards";
    var [B] = (0, u.createContextScope)(f, [n.createCheckboxGroupScope]);
    var l = (0, n.createCheckboxGroupScope)();
    var [M, O] = B(f);
    var d = s.forwardRef((o, e) => {
      const { __scopeCheckboxCards: r, className: c, color: t, ...m } = (0, x.extractProps)(o, R.checkboxCardsRootPropDefs, v.marginPropDefs), p = l(r);
      return s.createElement(M, { scope: r, size: o.size, highContrast: o.highContrast }, s.createElement(I.Grid, { asChild: true }, s.createElement(h.Root, { ...p, "data-accent-color": t, ...m, ref: e, className: (0, C.default)("rt-CheckboxCardsRoot", c) })));
    });
    d.displayName = "CheckboxCards.Root";
    var b = s.forwardRef(({ __scopeCheckboxCards: o, children: e, className: r, style: c, ...t }, m) => {
      const p = O("CheckboxCardsItem", o), k = l(o), { className: N } = (0, x.extractProps)({ size: p == null ? void 0 : p.size, variant: "surface", highContrast: p == null ? void 0 : p.highContrast }, y.baseCheckboxPropDefs);
      return s.createElement("label", { className: (0, C.default)("rt-BaseCard", "rt-CheckboxCardsItem", r), style: c }, e, s.createElement(h.Item, { ...k, ...t, ref: m, className: (0, C.default)("rt-reset", "rt-BaseCheckboxRoot", "rt-CheckboxCardCheckbox", N) }, s.createElement(h.Indicator, { ...k, asChild: true, className: "rt-BaseCheckboxIndicator" }, s.createElement(G.ThickCheckIcon, null))));
    });
    b.displayName = "CheckboxCards.Item";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/checkbox-group.props.js
var require_checkbox_group_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/checkbox-group.props.js"(exports, module) {
    "use strict";
    var f = Object.defineProperty;
    var b = Object.getOwnPropertyDescriptor;
    var h = Object.getOwnPropertyNames;
    var i = Object.prototype.hasOwnProperty;
    var x = (r, o) => {
      for (var p in o) f(r, p, { get: o[p], enumerable: true });
    };
    var D = (r, o, p, s) => {
      if (o && typeof o == "object" || typeof o == "function") for (let e of h(o)) !i.call(r, e) && e !== p && f(r, e, { get: () => o[e], enumerable: !(s = b(o, e)) || s.enumerable });
      return r;
    };
    var P = (r) => D(f({}, "__esModule", { value: true }), r);
    var a = {};
    x(a, { checkboxGroupRootPropDefs: () => m });
    module.exports = P(a);
    var t = require_as_child_prop();
    var c = require_base_checkbox_props();
    var m = { ...t.asChildPropDef, ...c.baseCheckboxPropDefs };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/checkbox-group.js
var require_checkbox_group = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/checkbox-group.js"(exports, module) {
    "use strict";
    "use client";
    var _ = Object.create;
    var h = Object.defineProperty;
    var g = Object.getOwnPropertyDescriptor;
    var w = Object.getOwnPropertyNames;
    var D = Object.getPrototypeOf;
    var O = Object.prototype.hasOwnProperty;
    var T = (o, e) => {
      for (var r in e) h(o, r, { get: e[r], enumerable: true });
    };
    var l = (o, e, r, c) => {
      if (e && typeof e == "object" || typeof e == "function") for (let t of w(e)) !O.call(o, t) && t !== r && h(o, t, { get: () => e[t], enumerable: !(c = g(e, t)) || c.enumerable });
      return o;
    };
    var u = (o, e, r) => (r = o != null ? _(D(o)) : {}, l(e || !o || !o.__esModule ? h(r, "default", { value: o, enumerable: true }) : r, o));
    var z = (o) => l(h({}, "__esModule", { value: true }), o);
    var j = {};
    T(j, { Item: () => f, Root: () => P });
    module.exports = z(j);
    var p = u(require_react());
    var C = u(require_classnames());
    var R = require_dist6();
    var n = u(require_checkbox_group_primitive());
    var k = require_checkbox_group_primitive();
    var x = require_checkbox_group_props();
    var v = require_icons();
    var N = require_text();
    var b = require_extract_props();
    var G = require_margin_props();
    var I = "CheckboxGroup";
    var [M] = (0, R.createContextScope)(I, [k.createCheckboxGroupScope]);
    var d = (0, k.createCheckboxGroupScope)();
    var [W, y] = M(I);
    var P = p.forwardRef(({ color: o = x.checkboxGroupRootPropDefs.color.default, highContrast: e = x.checkboxGroupRootPropDefs.highContrast.default, size: r = x.checkboxGroupRootPropDefs.size.default, variant: c = x.checkboxGroupRootPropDefs.variant.default, ...t }, m) => {
      const { __scopeCheckboxGroup: s, className: i, ...E } = (0, b.extractProps)(t, G.marginPropDefs), S = d(s);
      return p.createElement(W, { scope: s, color: o, size: r, highContrast: e, variant: c }, p.createElement(n.Root, { ...S, ...E, ref: m, className: (0, C.default)("rt-CheckboxGroupRoot", i) }));
    });
    P.displayName = "CheckboxGroup.Root";
    var f = p.forwardRef((o, e) => {
      const { __scopeCheckboxGroup: r, children: c, className: t, style: m, ...s } = o, { size: i } = y("CheckboxGroupItem", r);
      return c ? p.createElement(N.Text, { as: "label", size: i, className: (0, C.default)("rt-CheckboxGroupItem", t), style: m }, p.createElement(a, { __scopeCheckboxGroup: r, ...s, ref: e }), c && p.createElement("span", { className: "rt-CheckboxGroupItemInner" }, c)) : p.createElement(a, { __scopeCheckboxGroup: r, ...s, ref: e, className: t, style: m });
    });
    f.displayName = "CheckboxGroup.Item";
    var a = p.forwardRef(({ __scopeCheckboxGroup: o, ...e }, r) => {
      const c = y("CheckboxGroupItemCheckbox", o), t = d(o), { color: m, className: s } = (0, b.extractProps)({ ...e, ...c }, x.checkboxGroupRootPropDefs, G.marginPropDefs);
      return p.createElement(n.Item, { ...t, "data-accent-color": m, ...e, ref: r, className: (0, C.default)("rt-reset", "rt-BaseCheckboxRoot", "rt-CheckboxGroupItemCheckbox", s) }, p.createElement(n.Indicator, { ...t, asChild: true, className: "rt-BaseCheckboxIndicator" }, p.createElement(v.ThickCheckIcon, null)));
    });
    a.displayName = "CheckboxGroup.ItemCheckbox";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/checkbox.props.js
var require_checkbox_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/checkbox.props.js"(exports, module) {
    "use strict";
    var b = Object.defineProperty;
    var p = Object.getOwnPropertyDescriptor;
    var x = Object.getOwnPropertyNames;
    var a = Object.prototype.hasOwnProperty;
    var h = (o, e) => {
      for (var s in e) b(o, s, { get: e[s], enumerable: true });
    };
    var k = (o, e, s, c) => {
      if (e && typeof e == "object" || typeof e == "function") for (let r of x(e)) !a.call(o, r) && r !== s && b(o, r, { get: () => e[r], enumerable: !(c = p(e, r)) || c.enumerable });
      return o;
    };
    var D = (o) => k(b({}, "__esModule", { value: true }), o);
    var P = {};
    h(P, { checkboxPropDefs: () => f.baseCheckboxPropDefs });
    module.exports = D(P);
    var f = require_base_checkbox_props();
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/checkbox.js
var require_checkbox = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/checkbox.js"(exports, module) {
    "use strict";
    "use client";
    var g = Object.create;
    var i = Object.defineProperty;
    var v = Object.getOwnPropertyDescriptor;
    var D = Object.getOwnPropertyNames;
    var I = Object.getPrototypeOf;
    var R = Object.prototype.hasOwnProperty;
    var N = (e, o) => {
      for (var r in o) i(e, r, { get: o[r], enumerable: true });
    };
    var k = (e, o, r, p) => {
      if (o && typeof o == "object" || typeof o == "function") for (let t of D(o)) !R.call(e, t) && t !== r && i(e, t, { get: () => o[t], enumerable: !(p = v(o, t)) || p.enumerable });
      return e;
    };
    var h = (e, o, r) => (r = e != null ? g(I(e)) : {}, k(o || !e || !e.__esModule ? i(r, "default", { value: e, enumerable: true }) : r, e));
    var T = (e) => k(i({}, "__esModule", { value: true }), e);
    var j = {};
    N(j, { Checkbox: () => a });
    module.exports = T(j);
    var c = h(require_react());
    var f = h(require_classnames());
    var C = h(require_dist28());
    var d = require_dist11();
    var l = require_checkbox_props();
    var s = require_icons();
    var x = require_extract_props();
    var P = require_margin_props();
    var a = c.forwardRef((e, o) => {
      const { className: r, color: p, checked: t, defaultChecked: m, onCheckedChange: b, ...y } = (0, x.extractProps)(e, l.checkboxPropDefs, P.marginPropDefs), [n, u] = (0, d.useControllableState)({ prop: t, defaultProp: m, onChange: b });
      return c.createElement(C.Root, { "data-accent-color": p, ...y, defaultChecked: m, checked: n, onCheckedChange: u, asChild: false, ref: o, className: (0, f.default)("rt-reset", "rt-BaseCheckboxRoot", "rt-CheckboxRoot", r) }, c.createElement(C.Indicator, { asChild: true, className: "rt-BaseCheckboxIndicator rt-CheckboxIndicator" }, c.createElement(n === "indeterminate" ? s.ThickDividerHorizontalIcon : s.ThickCheckIcon, null)));
    });
    a.displayName = "Checkbox";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/code.props.js
var require_code_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/code.props.js"(exports, module) {
    "use strict";
    var s = Object.defineProperty;
    var D = Object.getOwnPropertyDescriptor;
    var P = Object.getOwnPropertyNames;
    var l = Object.prototype.hasOwnProperty;
    var v = (r, o) => {
      for (var t in o) s(r, t, { get: o[t], enumerable: true });
    };
    var d = (r, o, t, p) => {
      if (o && typeof o == "object" || typeof o == "function") for (let e of P(o)) !l.call(r, e) && e !== t && s(r, e, { get: () => o[e], enumerable: !(p = D(o, e)) || p.enumerable });
      return r;
    };
    var h = (r) => d(s({}, "__esModule", { value: true }), r);
    var g = {};
    v(g, { codePropDefs: () => u });
    module.exports = h(g);
    var a = require_as_child_prop();
    var i = require_color_prop();
    var f = require_high_contrast_prop();
    var m = require_text_wrap_prop();
    var n = require_truncate_prop();
    var c = require_weight_prop();
    var y = ["1", "2", "3", "4", "5", "6", "7", "8", "9"];
    var z = ["solid", "soft", "outline", "ghost"];
    var u = { ...a.asChildPropDef, size: { type: "enum", className: "rt-r-size", values: y, responsive: true }, variant: { type: "enum", className: "rt-variant", values: z, default: "soft" }, ...c.weightPropDef, ...i.accentColorPropDef, ...f.highContrastPropDef, ...n.truncatePropDef, ...m.textWrapPropDef };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/code.js
var require_code = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/code.js"(exports, module) {
    "use strict";
    var g = Object.create;
    var s = Object.defineProperty;
    var h = Object.getOwnPropertyDescriptor;
    var D = Object.getOwnPropertyNames;
    var R = Object.getPrototypeOf;
    var u = Object.prototype.hasOwnProperty;
    var v = (o, e) => {
      for (var r in e) s(o, r, { get: e[r], enumerable: true });
    };
    var d = (o, e, r, t) => {
      if (e && typeof e == "object" || typeof e == "function") for (let p of D(e)) !u.call(o, p) && p !== r && s(o, p, { get: () => e[p], enumerable: !(t = h(e, p)) || t.enumerable });
      return o;
    };
    var n = (o, e, r) => (r = o != null ? g(R(o)) : {}, d(e || !o || !o.__esModule ? s(r, "default", { value: o, enumerable: true }) : r, o));
    var x = (o) => d(s({}, "__esModule", { value: true }), o);
    var N = {};
    v(N, { Code: () => m });
    module.exports = x(N);
    var a = n(require_react());
    var f = n(require_classnames());
    var c = require_dist2();
    var i = require_code_props();
    var P = require_extract_props();
    var C = require_margin_props();
    var m = a.forwardRef((o, e) => {
      const { asChild: r, className: t, color: p, ...l } = (0, P.extractProps)(o, i.codePropDefs, C.marginPropDefs), y = o.variant === "ghost" ? p || void 0 : p;
      return a.createElement(r ? c.Slot : "code", { "data-accent-color": y, ...l, ref: e, className: (0, f.default)("rt-reset", "rt-Code", t) });
    });
    m.displayName = "Code";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/container.props.js
var require_container_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/container.props.js"(exports, module) {
    "use strict";
    var p = Object.defineProperty;
    var o = Object.getOwnPropertyDescriptor;
    var l = Object.getOwnPropertyNames;
    var f = Object.prototype.hasOwnProperty;
    var u = (e, s) => {
      for (var t in s) p(e, t, { get: s[t], enumerable: true });
    };
    var y = (e, s, t, n) => {
      if (s && typeof s == "object" || typeof s == "function") for (let r of l(s)) !f.call(e, r) && r !== t && p(e, r, { get: () => s[r], enumerable: !(n = o(s, r)) || n.enumerable });
      return e;
    };
    var c = (e) => y(p({}, "__esModule", { value: true }), e);
    var V = {};
    u(V, { containerPropDefs: () => i });
    module.exports = c(V);
    var a = require_as_child_prop();
    var m = ["1", "2", "3", "4"];
    var P = ["none", "initial"];
    var D = ["left", "center", "right"];
    var i = { ...a.asChildPropDef, size: { type: "enum", className: "rt-r-size", values: m, default: "4", responsive: true }, display: { type: "enum", className: "rt-r-display", values: P, parseValue: d, responsive: true }, align: { type: "enum", className: "rt-r-ai", values: D, parseValue: g, responsive: true } };
    function d(e) {
      return e === "initial" ? "flex" : e;
    }
    function g(e) {
      return e === "left" ? "start" : e === "right" ? "end" : e;
    }
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/container.js
var require_container = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/container.js"(exports, module) {
    "use strict";
    var L = Object.create;
    var n = Object.defineProperty;
    var M = Object.getOwnPropertyDescriptor;
    var O = Object.getOwnPropertyNames;
    var W = Object.getPrototypeOf;
    var b = Object.prototype.hasOwnProperty;
    var I = (o, r) => {
      for (var e in r) n(o, e, { get: r[e], enumerable: true });
    };
    var P = (o, r, e, p) => {
      if (r && typeof r == "object" || typeof r == "function") for (let t of O(r)) !b.call(o, t) && t !== e && n(o, t, { get: () => r[t], enumerable: !(p = M(r, t)) || p.enumerable });
      return o;
    };
    var l = (o, r, e) => (e = o != null ? L(W(o)) : {}, P(r || !o || !o.__esModule ? n(e, "default", { value: o, enumerable: true }) : e, o));
    var k = (o) => P(n({}, "__esModule", { value: true }), o);
    var q = {};
    I(q, { Container: () => a });
    module.exports = k(q);
    var s = l(require_react());
    var m = l(require_classnames());
    var C = require_dist2();
    var c = require_container_props();
    var i = require_extract_props();
    var y = require_get_subtree();
    var d = require_height_props();
    var h = require_layout_props();
    var u = require_margin_props();
    var v = require_width_props();
    var a = s.forwardRef(({ width: o, minWidth: r, maxWidth: e, height: p, minHeight: t, maxHeight: N, ...g }, D) => {
      const { asChild: f, children: j, className: w, ...x } = (0, i.extractProps)(g, c.containerPropDefs, h.layoutPropDefs, u.marginPropDefs), { className: R, style: E } = (0, i.extractProps)({ width: o, minWidth: r, maxWidth: e, height: p, minHeight: t, maxHeight: N }, v.widthPropDefs, d.heightPropDefs);
      return s.createElement(f ? C.Slot : "div", { ...x, ref: D, className: (0, m.default)("rt-Container", w) }, (0, y.getSubtree)({ asChild: f, children: j }, (S) => s.createElement("div", { className: (0, m.default)("rt-ContainerInner", R), style: E }, S)));
    });
    a.displayName = "Container";
  }
});

// node_modules/@radix-ui/react-menu/dist/index.js
var require_dist31 = __commonJS({
  "node_modules/@radix-ui/react-menu/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Anchor: () => Anchor2,
      Arrow: () => Arrow2,
      CheckboxItem: () => CheckboxItem,
      Content: () => Content2,
      Group: () => Group,
      Item: () => Item2,
      ItemIndicator: () => ItemIndicator,
      Label: () => Label,
      Menu: () => Menu,
      MenuAnchor: () => MenuAnchor,
      MenuArrow: () => MenuArrow,
      MenuCheckboxItem: () => MenuCheckboxItem,
      MenuContent: () => MenuContent,
      MenuGroup: () => MenuGroup,
      MenuItem: () => MenuItem,
      MenuItemIndicator: () => MenuItemIndicator,
      MenuLabel: () => MenuLabel,
      MenuPortal: () => MenuPortal,
      MenuRadioGroup: () => MenuRadioGroup,
      MenuRadioItem: () => MenuRadioItem,
      MenuSeparator: () => MenuSeparator,
      MenuSub: () => MenuSub,
      MenuSubContent: () => MenuSubContent,
      MenuSubTrigger: () => MenuSubTrigger,
      Portal: () => Portal,
      RadioGroup: () => RadioGroup,
      RadioItem: () => RadioItem,
      Root: () => Root3,
      Separator: () => Separator,
      Sub: () => Sub,
      SubContent: () => SubContent,
      SubTrigger: () => SubTrigger,
      createMenuScope: () => createMenuScope
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_primitive = require_dist7();
    var import_react_collection = require_dist29();
    var import_react_compose_refs = require_dist();
    var import_react_context = require_dist6();
    var import_react_direction = require_dist24();
    var import_react_dismissable_layer = require_dist13();
    var import_react_focus_guards = require_dist17();
    var import_react_focus_scope = require_dist14();
    var import_react_id = require_dist9();
    var PopperPrimitive = __toESM2(require_dist22());
    var import_react_popper = require_dist22();
    var import_react_portal = require_dist15();
    var import_react_presence = require_dist16();
    var import_react_primitive = require_dist3();
    var RovingFocusGroup = __toESM2(require_dist30());
    var import_react_roving_focus = require_dist30();
    var import_react_slot = require_dist2();
    var import_react_use_callback_ref = require_dist10();
    var import_aria_hidden = (init_es20152(), __toCommonJS(es2015_exports2));
    var import_react_remove_scroll = (init_es2015(), __toCommonJS(es2015_exports));
    var import_jsx_runtime = require_jsx_runtime();
    var SELECTION_KEYS = ["Enter", " "];
    var FIRST_KEYS = ["ArrowDown", "PageUp", "Home"];
    var LAST_KEYS = ["ArrowUp", "PageDown", "End"];
    var FIRST_LAST_KEYS = [...FIRST_KEYS, ...LAST_KEYS];
    var SUB_OPEN_KEYS = {
      ltr: [...SELECTION_KEYS, "ArrowRight"],
      rtl: [...SELECTION_KEYS, "ArrowLeft"]
    };
    var SUB_CLOSE_KEYS = {
      ltr: ["ArrowLeft"],
      rtl: ["ArrowRight"]
    };
    var MENU_NAME = "Menu";
    var [Collection, useCollection, createCollectionScope] = (0, import_react_collection.createCollection)(MENU_NAME);
    var [createMenuContext, createMenuScope] = (0, import_react_context.createContextScope)(MENU_NAME, [
      createCollectionScope,
      import_react_popper.createPopperScope,
      import_react_roving_focus.createRovingFocusGroupScope
    ]);
    var usePopperScope = (0, import_react_popper.createPopperScope)();
    var useRovingFocusGroupScope = (0, import_react_roving_focus.createRovingFocusGroupScope)();
    var [MenuProvider, useMenuContext] = createMenuContext(MENU_NAME);
    var [MenuRootProvider, useMenuRootContext] = createMenuContext(MENU_NAME);
    var Menu = (props) => {
      const { __scopeMenu, open = false, children, dir, onOpenChange, modal = true } = props;
      const popperScope = usePopperScope(__scopeMenu);
      const [content, setContent] = React2.useState(null);
      const isUsingKeyboardRef = React2.useRef(false);
      const handleOpenChange = (0, import_react_use_callback_ref.useCallbackRef)(onOpenChange);
      const direction = (0, import_react_direction.useDirection)(dir);
      React2.useEffect(() => {
        const handleKeyDown = () => {
          isUsingKeyboardRef.current = true;
          document.addEventListener("pointerdown", handlePointer, { capture: true, once: true });
          document.addEventListener("pointermove", handlePointer, { capture: true, once: true });
        };
        const handlePointer = () => isUsingKeyboardRef.current = false;
        document.addEventListener("keydown", handleKeyDown, { capture: true });
        return () => {
          document.removeEventListener("keydown", handleKeyDown, { capture: true });
          document.removeEventListener("pointerdown", handlePointer, { capture: true });
          document.removeEventListener("pointermove", handlePointer, { capture: true });
        };
      }, []);
      return (0, import_jsx_runtime.jsx)(PopperPrimitive.Root, { ...popperScope, children: (0, import_jsx_runtime.jsx)(
        MenuProvider,
        {
          scope: __scopeMenu,
          open,
          onOpenChange: handleOpenChange,
          content,
          onContentChange: setContent,
          children: (0, import_jsx_runtime.jsx)(
            MenuRootProvider,
            {
              scope: __scopeMenu,
              onClose: React2.useCallback(() => handleOpenChange(false), [handleOpenChange]),
              isUsingKeyboardRef,
              dir: direction,
              modal,
              children
            }
          )
        }
      ) });
    };
    Menu.displayName = MENU_NAME;
    var ANCHOR_NAME = "MenuAnchor";
    var MenuAnchor = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeMenu, ...anchorProps } = props;
        const popperScope = usePopperScope(__scopeMenu);
        return (0, import_jsx_runtime.jsx)(PopperPrimitive.Anchor, { ...popperScope, ...anchorProps, ref: forwardedRef });
      }
    );
    MenuAnchor.displayName = ANCHOR_NAME;
    var PORTAL_NAME = "MenuPortal";
    var [PortalProvider, usePortalContext] = createMenuContext(PORTAL_NAME, {
      forceMount: void 0
    });
    var MenuPortal = (props) => {
      const { __scopeMenu, forceMount, children, container } = props;
      const context = useMenuContext(PORTAL_NAME, __scopeMenu);
      return (0, import_jsx_runtime.jsx)(PortalProvider, { scope: __scopeMenu, forceMount, children: (0, import_jsx_runtime.jsx)(import_react_presence.Presence, { present: forceMount || context.open, children: (0, import_jsx_runtime.jsx)(import_react_portal.Portal, { asChild: true, container, children }) }) });
    };
    MenuPortal.displayName = PORTAL_NAME;
    var CONTENT_NAME = "MenuContent";
    var [MenuContentProvider, useMenuContentContext] = createMenuContext(CONTENT_NAME);
    var MenuContent = React2.forwardRef(
      (props, forwardedRef) => {
        const portalContext = usePortalContext(CONTENT_NAME, props.__scopeMenu);
        const { forceMount = portalContext.forceMount, ...contentProps } = props;
        const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);
        const rootContext = useMenuRootContext(CONTENT_NAME, props.__scopeMenu);
        return (0, import_jsx_runtime.jsx)(Collection.Provider, { scope: props.__scopeMenu, children: (0, import_jsx_runtime.jsx)(import_react_presence.Presence, { present: forceMount || context.open, children: (0, import_jsx_runtime.jsx)(Collection.Slot, { scope: props.__scopeMenu, children: rootContext.modal ? (0, import_jsx_runtime.jsx)(MenuRootContentModal, { ...contentProps, ref: forwardedRef }) : (0, import_jsx_runtime.jsx)(MenuRootContentNonModal, { ...contentProps, ref: forwardedRef }) }) }) });
      }
    );
    var MenuRootContentModal = React2.forwardRef(
      (props, forwardedRef) => {
        const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);
        const ref = React2.useRef(null);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, ref);
        React2.useEffect(() => {
          const content = ref.current;
          if (content) return (0, import_aria_hidden.hideOthers)(content);
        }, []);
        return (0, import_jsx_runtime.jsx)(
          MenuContentImpl,
          {
            ...props,
            ref: composedRefs,
            trapFocus: context.open,
            disableOutsidePointerEvents: context.open,
            disableOutsideScroll: true,
            onFocusOutside: (0, import_primitive.composeEventHandlers)(
              props.onFocusOutside,
              (event) => event.preventDefault(),
              { checkForDefaultPrevented: false }
            ),
            onDismiss: () => context.onOpenChange(false)
          }
        );
      }
    );
    var MenuRootContentNonModal = React2.forwardRef((props, forwardedRef) => {
      const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);
      return (0, import_jsx_runtime.jsx)(
        MenuContentImpl,
        {
          ...props,
          ref: forwardedRef,
          trapFocus: false,
          disableOutsidePointerEvents: false,
          disableOutsideScroll: false,
          onDismiss: () => context.onOpenChange(false)
        }
      );
    });
    var MenuContentImpl = React2.forwardRef(
      (props, forwardedRef) => {
        const {
          __scopeMenu,
          loop = false,
          trapFocus,
          onOpenAutoFocus,
          onCloseAutoFocus,
          disableOutsidePointerEvents,
          onEntryFocus,
          onEscapeKeyDown,
          onPointerDownOutside,
          onFocusOutside,
          onInteractOutside,
          onDismiss,
          disableOutsideScroll,
          ...contentProps
        } = props;
        const context = useMenuContext(CONTENT_NAME, __scopeMenu);
        const rootContext = useMenuRootContext(CONTENT_NAME, __scopeMenu);
        const popperScope = usePopperScope(__scopeMenu);
        const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenu);
        const getItems = useCollection(__scopeMenu);
        const [currentItemId, setCurrentItemId] = React2.useState(null);
        const contentRef = React2.useRef(null);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, contentRef, context.onContentChange);
        const timerRef = React2.useRef(0);
        const searchRef = React2.useRef("");
        const pointerGraceTimerRef = React2.useRef(0);
        const pointerGraceIntentRef = React2.useRef(null);
        const pointerDirRef = React2.useRef("right");
        const lastPointerXRef = React2.useRef(0);
        const ScrollLockWrapper = disableOutsideScroll ? import_react_remove_scroll.RemoveScroll : React2.Fragment;
        const scrollLockWrapperProps = disableOutsideScroll ? { as: import_react_slot.Slot, allowPinchZoom: true } : void 0;
        const handleTypeaheadSearch = (key) => {
          var _a, _b;
          const search = searchRef.current + key;
          const items = getItems().filter((item) => !item.disabled);
          const currentItem = document.activeElement;
          const currentMatch = (_a = items.find((item) => item.ref.current === currentItem)) == null ? void 0 : _a.textValue;
          const values = items.map((item) => item.textValue);
          const nextMatch = getNextMatch(values, search, currentMatch);
          const newItem = (_b = items.find((item) => item.textValue === nextMatch)) == null ? void 0 : _b.ref.current;
          (function updateSearch(value) {
            searchRef.current = value;
            window.clearTimeout(timerRef.current);
            if (value !== "") timerRef.current = window.setTimeout(() => updateSearch(""), 1e3);
          })(search);
          if (newItem) {
            setTimeout(() => newItem.focus());
          }
        };
        React2.useEffect(() => {
          return () => window.clearTimeout(timerRef.current);
        }, []);
        (0, import_react_focus_guards.useFocusGuards)();
        const isPointerMovingToSubmenu = React2.useCallback((event) => {
          var _a, _b;
          const isMovingTowards = pointerDirRef.current === ((_a = pointerGraceIntentRef.current) == null ? void 0 : _a.side);
          return isMovingTowards && isPointerInGraceArea(event, (_b = pointerGraceIntentRef.current) == null ? void 0 : _b.area);
        }, []);
        return (0, import_jsx_runtime.jsx)(
          MenuContentProvider,
          {
            scope: __scopeMenu,
            searchRef,
            onItemEnter: React2.useCallback(
              (event) => {
                if (isPointerMovingToSubmenu(event)) event.preventDefault();
              },
              [isPointerMovingToSubmenu]
            ),
            onItemLeave: React2.useCallback(
              (event) => {
                var _a;
                if (isPointerMovingToSubmenu(event)) return;
                (_a = contentRef.current) == null ? void 0 : _a.focus();
                setCurrentItemId(null);
              },
              [isPointerMovingToSubmenu]
            ),
            onTriggerLeave: React2.useCallback(
              (event) => {
                if (isPointerMovingToSubmenu(event)) event.preventDefault();
              },
              [isPointerMovingToSubmenu]
            ),
            pointerGraceTimerRef,
            onPointerGraceIntentChange: React2.useCallback((intent) => {
              pointerGraceIntentRef.current = intent;
            }, []),
            children: (0, import_jsx_runtime.jsx)(ScrollLockWrapper, { ...scrollLockWrapperProps, children: (0, import_jsx_runtime.jsx)(
              import_react_focus_scope.FocusScope,
              {
                asChild: true,
                trapped: trapFocus,
                onMountAutoFocus: (0, import_primitive.composeEventHandlers)(onOpenAutoFocus, (event) => {
                  var _a;
                  event.preventDefault();
                  (_a = contentRef.current) == null ? void 0 : _a.focus({ preventScroll: true });
                }),
                onUnmountAutoFocus: onCloseAutoFocus,
                children: (0, import_jsx_runtime.jsx)(
                  import_react_dismissable_layer.DismissableLayer,
                  {
                    asChild: true,
                    disableOutsidePointerEvents,
                    onEscapeKeyDown,
                    onPointerDownOutside,
                    onFocusOutside,
                    onInteractOutside,
                    onDismiss,
                    children: (0, import_jsx_runtime.jsx)(
                      RovingFocusGroup.Root,
                      {
                        asChild: true,
                        ...rovingFocusGroupScope,
                        dir: rootContext.dir,
                        orientation: "vertical",
                        loop,
                        currentTabStopId: currentItemId,
                        onCurrentTabStopIdChange: setCurrentItemId,
                        onEntryFocus: (0, import_primitive.composeEventHandlers)(onEntryFocus, (event) => {
                          if (!rootContext.isUsingKeyboardRef.current) event.preventDefault();
                        }),
                        preventScrollOnEntryFocus: true,
                        children: (0, import_jsx_runtime.jsx)(
                          PopperPrimitive.Content,
                          {
                            role: "menu",
                            "aria-orientation": "vertical",
                            "data-state": getOpenState(context.open),
                            "data-radix-menu-content": "",
                            dir: rootContext.dir,
                            ...popperScope,
                            ...contentProps,
                            ref: composedRefs,
                            style: { outline: "none", ...contentProps.style },
                            onKeyDown: (0, import_primitive.composeEventHandlers)(contentProps.onKeyDown, (event) => {
                              const target = event.target;
                              const isKeyDownInside = target.closest("[data-radix-menu-content]") === event.currentTarget;
                              const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;
                              const isCharacterKey = event.key.length === 1;
                              if (isKeyDownInside) {
                                if (event.key === "Tab") event.preventDefault();
                                if (!isModifierKey && isCharacterKey) handleTypeaheadSearch(event.key);
                              }
                              const content = contentRef.current;
                              if (event.target !== content) return;
                              if (!FIRST_LAST_KEYS.includes(event.key)) return;
                              event.preventDefault();
                              const items = getItems().filter((item) => !item.disabled);
                              const candidateNodes = items.map((item) => item.ref.current);
                              if (LAST_KEYS.includes(event.key)) candidateNodes.reverse();
                              focusFirst(candidateNodes);
                            }),
                            onBlur: (0, import_primitive.composeEventHandlers)(props.onBlur, (event) => {
                              if (!event.currentTarget.contains(event.target)) {
                                window.clearTimeout(timerRef.current);
                                searchRef.current = "";
                              }
                            }),
                            onPointerMove: (0, import_primitive.composeEventHandlers)(
                              props.onPointerMove,
                              whenMouse((event) => {
                                const target = event.target;
                                const pointerXHasChanged = lastPointerXRef.current !== event.clientX;
                                if (event.currentTarget.contains(target) && pointerXHasChanged) {
                                  const newDir = event.clientX > lastPointerXRef.current ? "right" : "left";
                                  pointerDirRef.current = newDir;
                                  lastPointerXRef.current = event.clientX;
                                }
                              })
                            )
                          }
                        )
                      }
                    )
                  }
                )
              }
            ) })
          }
        );
      }
    );
    MenuContent.displayName = CONTENT_NAME;
    var GROUP_NAME = "MenuGroup";
    var MenuGroup = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeMenu, ...groupProps } = props;
        return (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.div, { role: "group", ...groupProps, ref: forwardedRef });
      }
    );
    MenuGroup.displayName = GROUP_NAME;
    var LABEL_NAME = "MenuLabel";
    var MenuLabel = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeMenu, ...labelProps } = props;
        return (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.div, { ...labelProps, ref: forwardedRef });
      }
    );
    MenuLabel.displayName = LABEL_NAME;
    var ITEM_NAME = "MenuItem";
    var ITEM_SELECT = "menu.itemSelect";
    var MenuItem = React2.forwardRef(
      (props, forwardedRef) => {
        const { disabled = false, onSelect, ...itemProps } = props;
        const ref = React2.useRef(null);
        const rootContext = useMenuRootContext(ITEM_NAME, props.__scopeMenu);
        const contentContext = useMenuContentContext(ITEM_NAME, props.__scopeMenu);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, ref);
        const isPointerDownRef = React2.useRef(false);
        const handleSelect = () => {
          const menuItem = ref.current;
          if (!disabled && menuItem) {
            const itemSelectEvent = new CustomEvent(ITEM_SELECT, { bubbles: true, cancelable: true });
            menuItem.addEventListener(ITEM_SELECT, (event) => onSelect == null ? void 0 : onSelect(event), { once: true });
            (0, import_react_primitive.dispatchDiscreteCustomEvent)(menuItem, itemSelectEvent);
            if (itemSelectEvent.defaultPrevented) {
              isPointerDownRef.current = false;
            } else {
              rootContext.onClose();
            }
          }
        };
        return (0, import_jsx_runtime.jsx)(
          MenuItemImpl,
          {
            ...itemProps,
            ref: composedRefs,
            disabled,
            onClick: (0, import_primitive.composeEventHandlers)(props.onClick, handleSelect),
            onPointerDown: (event) => {
              var _a;
              (_a = props.onPointerDown) == null ? void 0 : _a.call(props, event);
              isPointerDownRef.current = true;
            },
            onPointerUp: (0, import_primitive.composeEventHandlers)(props.onPointerUp, (event) => {
              var _a;
              if (!isPointerDownRef.current) (_a = event.currentTarget) == null ? void 0 : _a.click();
            }),
            onKeyDown: (0, import_primitive.composeEventHandlers)(props.onKeyDown, (event) => {
              const isTypingAhead = contentContext.searchRef.current !== "";
              if (disabled || isTypingAhead && event.key === " ") return;
              if (SELECTION_KEYS.includes(event.key)) {
                event.currentTarget.click();
                event.preventDefault();
              }
            })
          }
        );
      }
    );
    MenuItem.displayName = ITEM_NAME;
    var MenuItemImpl = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeMenu, disabled = false, textValue, ...itemProps } = props;
        const contentContext = useMenuContentContext(ITEM_NAME, __scopeMenu);
        const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenu);
        const ref = React2.useRef(null);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, ref);
        const [isFocused, setIsFocused] = React2.useState(false);
        const [textContent, setTextContent] = React2.useState("");
        React2.useEffect(() => {
          const menuItem = ref.current;
          if (menuItem) {
            setTextContent((menuItem.textContent ?? "").trim());
          }
        }, [itemProps.children]);
        return (0, import_jsx_runtime.jsx)(
          Collection.ItemSlot,
          {
            scope: __scopeMenu,
            disabled,
            textValue: textValue ?? textContent,
            children: (0, import_jsx_runtime.jsx)(RovingFocusGroup.Item, { asChild: true, ...rovingFocusGroupScope, focusable: !disabled, children: (0, import_jsx_runtime.jsx)(
              import_react_primitive.Primitive.div,
              {
                role: "menuitem",
                "data-highlighted": isFocused ? "" : void 0,
                "aria-disabled": disabled || void 0,
                "data-disabled": disabled ? "" : void 0,
                ...itemProps,
                ref: composedRefs,
                onPointerMove: (0, import_primitive.composeEventHandlers)(
                  props.onPointerMove,
                  whenMouse((event) => {
                    if (disabled) {
                      contentContext.onItemLeave(event);
                    } else {
                      contentContext.onItemEnter(event);
                      if (!event.defaultPrevented) {
                        const item = event.currentTarget;
                        item.focus({ preventScroll: true });
                      }
                    }
                  })
                ),
                onPointerLeave: (0, import_primitive.composeEventHandlers)(
                  props.onPointerLeave,
                  whenMouse((event) => contentContext.onItemLeave(event))
                ),
                onFocus: (0, import_primitive.composeEventHandlers)(props.onFocus, () => setIsFocused(true)),
                onBlur: (0, import_primitive.composeEventHandlers)(props.onBlur, () => setIsFocused(false))
              }
            ) })
          }
        );
      }
    );
    var CHECKBOX_ITEM_NAME = "MenuCheckboxItem";
    var MenuCheckboxItem = React2.forwardRef(
      (props, forwardedRef) => {
        const { checked = false, onCheckedChange, ...checkboxItemProps } = props;
        return (0, import_jsx_runtime.jsx)(ItemIndicatorProvider, { scope: props.__scopeMenu, checked, children: (0, import_jsx_runtime.jsx)(
          MenuItem,
          {
            role: "menuitemcheckbox",
            "aria-checked": isIndeterminate(checked) ? "mixed" : checked,
            ...checkboxItemProps,
            ref: forwardedRef,
            "data-state": getCheckedState(checked),
            onSelect: (0, import_primitive.composeEventHandlers)(
              checkboxItemProps.onSelect,
              () => onCheckedChange == null ? void 0 : onCheckedChange(isIndeterminate(checked) ? true : !checked),
              { checkForDefaultPrevented: false }
            )
          }
        ) });
      }
    );
    MenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;
    var RADIO_GROUP_NAME = "MenuRadioGroup";
    var [RadioGroupProvider, useRadioGroupContext] = createMenuContext(
      RADIO_GROUP_NAME,
      { value: void 0, onValueChange: () => {
      } }
    );
    var MenuRadioGroup = React2.forwardRef(
      (props, forwardedRef) => {
        const { value, onValueChange, ...groupProps } = props;
        const handleValueChange = (0, import_react_use_callback_ref.useCallbackRef)(onValueChange);
        return (0, import_jsx_runtime.jsx)(RadioGroupProvider, { scope: props.__scopeMenu, value, onValueChange: handleValueChange, children: (0, import_jsx_runtime.jsx)(MenuGroup, { ...groupProps, ref: forwardedRef }) });
      }
    );
    MenuRadioGroup.displayName = RADIO_GROUP_NAME;
    var RADIO_ITEM_NAME = "MenuRadioItem";
    var MenuRadioItem = React2.forwardRef(
      (props, forwardedRef) => {
        const { value, ...radioItemProps } = props;
        const context = useRadioGroupContext(RADIO_ITEM_NAME, props.__scopeMenu);
        const checked = value === context.value;
        return (0, import_jsx_runtime.jsx)(ItemIndicatorProvider, { scope: props.__scopeMenu, checked, children: (0, import_jsx_runtime.jsx)(
          MenuItem,
          {
            role: "menuitemradio",
            "aria-checked": checked,
            ...radioItemProps,
            ref: forwardedRef,
            "data-state": getCheckedState(checked),
            onSelect: (0, import_primitive.composeEventHandlers)(
              radioItemProps.onSelect,
              () => {
                var _a;
                return (_a = context.onValueChange) == null ? void 0 : _a.call(context, value);
              },
              { checkForDefaultPrevented: false }
            )
          }
        ) });
      }
    );
    MenuRadioItem.displayName = RADIO_ITEM_NAME;
    var ITEM_INDICATOR_NAME = "MenuItemIndicator";
    var [ItemIndicatorProvider, useItemIndicatorContext] = createMenuContext(
      ITEM_INDICATOR_NAME,
      { checked: false }
    );
    var MenuItemIndicator = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeMenu, forceMount, ...itemIndicatorProps } = props;
        const indicatorContext = useItemIndicatorContext(ITEM_INDICATOR_NAME, __scopeMenu);
        return (0, import_jsx_runtime.jsx)(
          import_react_presence.Presence,
          {
            present: forceMount || isIndeterminate(indicatorContext.checked) || indicatorContext.checked === true,
            children: (0, import_jsx_runtime.jsx)(
              import_react_primitive.Primitive.span,
              {
                ...itemIndicatorProps,
                ref: forwardedRef,
                "data-state": getCheckedState(indicatorContext.checked)
              }
            )
          }
        );
      }
    );
    MenuItemIndicator.displayName = ITEM_INDICATOR_NAME;
    var SEPARATOR_NAME = "MenuSeparator";
    var MenuSeparator = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeMenu, ...separatorProps } = props;
        return (0, import_jsx_runtime.jsx)(
          import_react_primitive.Primitive.div,
          {
            role: "separator",
            "aria-orientation": "horizontal",
            ...separatorProps,
            ref: forwardedRef
          }
        );
      }
    );
    MenuSeparator.displayName = SEPARATOR_NAME;
    var ARROW_NAME = "MenuArrow";
    var MenuArrow = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeMenu, ...arrowProps } = props;
        const popperScope = usePopperScope(__scopeMenu);
        return (0, import_jsx_runtime.jsx)(PopperPrimitive.Arrow, { ...popperScope, ...arrowProps, ref: forwardedRef });
      }
    );
    MenuArrow.displayName = ARROW_NAME;
    var SUB_NAME = "MenuSub";
    var [MenuSubProvider, useMenuSubContext] = createMenuContext(SUB_NAME);
    var MenuSub = (props) => {
      const { __scopeMenu, children, open = false, onOpenChange } = props;
      const parentMenuContext = useMenuContext(SUB_NAME, __scopeMenu);
      const popperScope = usePopperScope(__scopeMenu);
      const [trigger, setTrigger] = React2.useState(null);
      const [content, setContent] = React2.useState(null);
      const handleOpenChange = (0, import_react_use_callback_ref.useCallbackRef)(onOpenChange);
      React2.useEffect(() => {
        if (parentMenuContext.open === false) handleOpenChange(false);
        return () => handleOpenChange(false);
      }, [parentMenuContext.open, handleOpenChange]);
      return (0, import_jsx_runtime.jsx)(PopperPrimitive.Root, { ...popperScope, children: (0, import_jsx_runtime.jsx)(
        MenuProvider,
        {
          scope: __scopeMenu,
          open,
          onOpenChange: handleOpenChange,
          content,
          onContentChange: setContent,
          children: (0, import_jsx_runtime.jsx)(
            MenuSubProvider,
            {
              scope: __scopeMenu,
              contentId: (0, import_react_id.useId)(),
              triggerId: (0, import_react_id.useId)(),
              trigger,
              onTriggerChange: setTrigger,
              children
            }
          )
        }
      ) });
    };
    MenuSub.displayName = SUB_NAME;
    var SUB_TRIGGER_NAME = "MenuSubTrigger";
    var MenuSubTrigger = React2.forwardRef(
      (props, forwardedRef) => {
        const context = useMenuContext(SUB_TRIGGER_NAME, props.__scopeMenu);
        const rootContext = useMenuRootContext(SUB_TRIGGER_NAME, props.__scopeMenu);
        const subContext = useMenuSubContext(SUB_TRIGGER_NAME, props.__scopeMenu);
        const contentContext = useMenuContentContext(SUB_TRIGGER_NAME, props.__scopeMenu);
        const openTimerRef = React2.useRef(null);
        const { pointerGraceTimerRef, onPointerGraceIntentChange } = contentContext;
        const scope = { __scopeMenu: props.__scopeMenu };
        const clearOpenTimer = React2.useCallback(() => {
          if (openTimerRef.current) window.clearTimeout(openTimerRef.current);
          openTimerRef.current = null;
        }, []);
        React2.useEffect(() => clearOpenTimer, [clearOpenTimer]);
        React2.useEffect(() => {
          const pointerGraceTimer = pointerGraceTimerRef.current;
          return () => {
            window.clearTimeout(pointerGraceTimer);
            onPointerGraceIntentChange(null);
          };
        }, [pointerGraceTimerRef, onPointerGraceIntentChange]);
        return (0, import_jsx_runtime.jsx)(MenuAnchor, { asChild: true, ...scope, children: (0, import_jsx_runtime.jsx)(
          MenuItemImpl,
          {
            id: subContext.triggerId,
            "aria-haspopup": "menu",
            "aria-expanded": context.open,
            "aria-controls": subContext.contentId,
            "data-state": getOpenState(context.open),
            ...props,
            ref: (0, import_react_compose_refs.composeRefs)(forwardedRef, subContext.onTriggerChange),
            onClick: (event) => {
              var _a;
              (_a = props.onClick) == null ? void 0 : _a.call(props, event);
              if (props.disabled || event.defaultPrevented) return;
              event.currentTarget.focus();
              if (!context.open) context.onOpenChange(true);
            },
            onPointerMove: (0, import_primitive.composeEventHandlers)(
              props.onPointerMove,
              whenMouse((event) => {
                contentContext.onItemEnter(event);
                if (event.defaultPrevented) return;
                if (!props.disabled && !context.open && !openTimerRef.current) {
                  contentContext.onPointerGraceIntentChange(null);
                  openTimerRef.current = window.setTimeout(() => {
                    context.onOpenChange(true);
                    clearOpenTimer();
                  }, 100);
                }
              })
            ),
            onPointerLeave: (0, import_primitive.composeEventHandlers)(
              props.onPointerLeave,
              whenMouse((event) => {
                var _a, _b;
                clearOpenTimer();
                const contentRect = (_a = context.content) == null ? void 0 : _a.getBoundingClientRect();
                if (contentRect) {
                  const side = (_b = context.content) == null ? void 0 : _b.dataset.side;
                  const rightSide = side === "right";
                  const bleed = rightSide ? -5 : 5;
                  const contentNearEdge = contentRect[rightSide ? "left" : "right"];
                  const contentFarEdge = contentRect[rightSide ? "right" : "left"];
                  contentContext.onPointerGraceIntentChange({
                    area: [
                      // Apply a bleed on clientX to ensure that our exit point is
                      // consistently within polygon bounds
                      { x: event.clientX + bleed, y: event.clientY },
                      { x: contentNearEdge, y: contentRect.top },
                      { x: contentFarEdge, y: contentRect.top },
                      { x: contentFarEdge, y: contentRect.bottom },
                      { x: contentNearEdge, y: contentRect.bottom }
                    ],
                    side
                  });
                  window.clearTimeout(pointerGraceTimerRef.current);
                  pointerGraceTimerRef.current = window.setTimeout(
                    () => contentContext.onPointerGraceIntentChange(null),
                    300
                  );
                } else {
                  contentContext.onTriggerLeave(event);
                  if (event.defaultPrevented) return;
                  contentContext.onPointerGraceIntentChange(null);
                }
              })
            ),
            onKeyDown: (0, import_primitive.composeEventHandlers)(props.onKeyDown, (event) => {
              var _a;
              const isTypingAhead = contentContext.searchRef.current !== "";
              if (props.disabled || isTypingAhead && event.key === " ") return;
              if (SUB_OPEN_KEYS[rootContext.dir].includes(event.key)) {
                context.onOpenChange(true);
                (_a = context.content) == null ? void 0 : _a.focus();
                event.preventDefault();
              }
            })
          }
        ) });
      }
    );
    MenuSubTrigger.displayName = SUB_TRIGGER_NAME;
    var SUB_CONTENT_NAME = "MenuSubContent";
    var MenuSubContent = React2.forwardRef(
      (props, forwardedRef) => {
        const portalContext = usePortalContext(CONTENT_NAME, props.__scopeMenu);
        const { forceMount = portalContext.forceMount, ...subContentProps } = props;
        const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);
        const rootContext = useMenuRootContext(CONTENT_NAME, props.__scopeMenu);
        const subContext = useMenuSubContext(SUB_CONTENT_NAME, props.__scopeMenu);
        const ref = React2.useRef(null);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, ref);
        return (0, import_jsx_runtime.jsx)(Collection.Provider, { scope: props.__scopeMenu, children: (0, import_jsx_runtime.jsx)(import_react_presence.Presence, { present: forceMount || context.open, children: (0, import_jsx_runtime.jsx)(Collection.Slot, { scope: props.__scopeMenu, children: (0, import_jsx_runtime.jsx)(
          MenuContentImpl,
          {
            id: subContext.contentId,
            "aria-labelledby": subContext.triggerId,
            ...subContentProps,
            ref: composedRefs,
            align: "start",
            side: rootContext.dir === "rtl" ? "left" : "right",
            disableOutsidePointerEvents: false,
            disableOutsideScroll: false,
            trapFocus: false,
            onOpenAutoFocus: (event) => {
              var _a;
              if (rootContext.isUsingKeyboardRef.current) (_a = ref.current) == null ? void 0 : _a.focus();
              event.preventDefault();
            },
            onCloseAutoFocus: (event) => event.preventDefault(),
            onFocusOutside: (0, import_primitive.composeEventHandlers)(props.onFocusOutside, (event) => {
              if (event.target !== subContext.trigger) context.onOpenChange(false);
            }),
            onEscapeKeyDown: (0, import_primitive.composeEventHandlers)(props.onEscapeKeyDown, (event) => {
              rootContext.onClose();
              event.preventDefault();
            }),
            onKeyDown: (0, import_primitive.composeEventHandlers)(props.onKeyDown, (event) => {
              var _a;
              const isKeyDownInside = event.currentTarget.contains(event.target);
              const isCloseKey = SUB_CLOSE_KEYS[rootContext.dir].includes(event.key);
              if (isKeyDownInside && isCloseKey) {
                context.onOpenChange(false);
                (_a = subContext.trigger) == null ? void 0 : _a.focus();
                event.preventDefault();
              }
            })
          }
        ) }) }) });
      }
    );
    MenuSubContent.displayName = SUB_CONTENT_NAME;
    function getOpenState(open) {
      return open ? "open" : "closed";
    }
    function isIndeterminate(checked) {
      return checked === "indeterminate";
    }
    function getCheckedState(checked) {
      return isIndeterminate(checked) ? "indeterminate" : checked ? "checked" : "unchecked";
    }
    function focusFirst(candidates) {
      const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;
      for (const candidate of candidates) {
        if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;
        candidate.focus();
        if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;
      }
    }
    function wrapArray(array, startIndex) {
      return array.map((_, index2) => array[(startIndex + index2) % array.length]);
    }
    function getNextMatch(values, search, currentMatch) {
      const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);
      const normalizedSearch = isRepeated ? search[0] : search;
      const currentMatchIndex = currentMatch ? values.indexOf(currentMatch) : -1;
      let wrappedValues = wrapArray(values, Math.max(currentMatchIndex, 0));
      const excludeCurrentMatch = normalizedSearch.length === 1;
      if (excludeCurrentMatch) wrappedValues = wrappedValues.filter((v) => v !== currentMatch);
      const nextMatch = wrappedValues.find(
        (value) => value.toLowerCase().startsWith(normalizedSearch.toLowerCase())
      );
      return nextMatch !== currentMatch ? nextMatch : void 0;
    }
    function isPointInPolygon(point, polygon) {
      const { x, y } = point;
      let inside = false;
      for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {
        const xi = polygon[i].x;
        const yi = polygon[i].y;
        const xj = polygon[j].x;
        const yj = polygon[j].y;
        const intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;
        if (intersect) inside = !inside;
      }
      return inside;
    }
    function isPointerInGraceArea(event, area) {
      if (!area) return false;
      const cursorPos = { x: event.clientX, y: event.clientY };
      return isPointInPolygon(cursorPos, area);
    }
    function whenMouse(handler) {
      return (event) => event.pointerType === "mouse" ? handler(event) : void 0;
    }
    var Root3 = Menu;
    var Anchor2 = MenuAnchor;
    var Portal = MenuPortal;
    var Content2 = MenuContent;
    var Group = MenuGroup;
    var Label = MenuLabel;
    var Item2 = MenuItem;
    var CheckboxItem = MenuCheckboxItem;
    var RadioGroup = MenuRadioGroup;
    var RadioItem = MenuRadioItem;
    var ItemIndicator = MenuItemIndicator;
    var Separator = MenuSeparator;
    var Arrow2 = MenuArrow;
    var Sub = MenuSub;
    var SubTrigger = MenuSubTrigger;
    var SubContent = MenuSubContent;
  }
});

// node_modules/@radix-ui/react-context-menu/dist/index.js
var require_dist32 = __commonJS({
  "node_modules/@radix-ui/react-context-menu/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Arrow: () => Arrow2,
      CheckboxItem: () => CheckboxItem2,
      Content: () => Content2,
      ContextMenu: () => ContextMenu,
      ContextMenuArrow: () => ContextMenuArrow,
      ContextMenuCheckboxItem: () => ContextMenuCheckboxItem,
      ContextMenuContent: () => ContextMenuContent,
      ContextMenuGroup: () => ContextMenuGroup,
      ContextMenuItem: () => ContextMenuItem,
      ContextMenuItemIndicator: () => ContextMenuItemIndicator,
      ContextMenuLabel: () => ContextMenuLabel,
      ContextMenuPortal: () => ContextMenuPortal,
      ContextMenuRadioGroup: () => ContextMenuRadioGroup,
      ContextMenuRadioItem: () => ContextMenuRadioItem,
      ContextMenuSeparator: () => ContextMenuSeparator,
      ContextMenuSub: () => ContextMenuSub,
      ContextMenuSubContent: () => ContextMenuSubContent,
      ContextMenuSubTrigger: () => ContextMenuSubTrigger,
      ContextMenuTrigger: () => ContextMenuTrigger,
      Group: () => Group2,
      Item: () => Item2,
      ItemIndicator: () => ItemIndicator2,
      Label: () => Label2,
      Portal: () => Portal2,
      RadioGroup: () => RadioGroup2,
      RadioItem: () => RadioItem2,
      Root: () => Root2,
      Separator: () => Separator2,
      Sub: () => Sub2,
      SubContent: () => SubContent2,
      SubTrigger: () => SubTrigger2,
      Trigger: () => Trigger,
      createContextMenuScope: () => createContextMenuScope
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_primitive = require_dist7();
    var import_react_context = require_dist6();
    var import_react_primitive = require_dist3();
    var MenuPrimitive = __toESM2(require_dist31());
    var import_react_menu = require_dist31();
    var import_react_use_callback_ref = require_dist10();
    var import_react_use_controllable_state = require_dist11();
    var import_jsx_runtime = require_jsx_runtime();
    var CONTEXT_MENU_NAME = "ContextMenu";
    var [createContextMenuContext, createContextMenuScope] = (0, import_react_context.createContextScope)(CONTEXT_MENU_NAME, [
      import_react_menu.createMenuScope
    ]);
    var useMenuScope = (0, import_react_menu.createMenuScope)();
    var [ContextMenuProvider, useContextMenuContext] = createContextMenuContext(CONTEXT_MENU_NAME);
    var ContextMenu = (props) => {
      const { __scopeContextMenu, children, onOpenChange, dir, modal = true } = props;
      const [open, setOpen] = React2.useState(false);
      const menuScope = useMenuScope(__scopeContextMenu);
      const handleOpenChangeProp = (0, import_react_use_callback_ref.useCallbackRef)(onOpenChange);
      const handleOpenChange = React2.useCallback(
        (open2) => {
          setOpen(open2);
          handleOpenChangeProp(open2);
        },
        [handleOpenChangeProp]
      );
      return (0, import_jsx_runtime.jsx)(
        ContextMenuProvider,
        {
          scope: __scopeContextMenu,
          open,
          onOpenChange: handleOpenChange,
          modal,
          children: (0, import_jsx_runtime.jsx)(
            MenuPrimitive.Root,
            {
              ...menuScope,
              dir,
              open,
              onOpenChange: handleOpenChange,
              modal,
              children
            }
          )
        }
      );
    };
    ContextMenu.displayName = CONTEXT_MENU_NAME;
    var TRIGGER_NAME = "ContextMenuTrigger";
    var ContextMenuTrigger = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeContextMenu, disabled = false, ...triggerProps } = props;
        const context = useContextMenuContext(TRIGGER_NAME, __scopeContextMenu);
        const menuScope = useMenuScope(__scopeContextMenu);
        const pointRef = React2.useRef({ x: 0, y: 0 });
        const virtualRef = React2.useRef({
          getBoundingClientRect: () => DOMRect.fromRect({ width: 0, height: 0, ...pointRef.current })
        });
        const longPressTimerRef = React2.useRef(0);
        const clearLongPress = React2.useCallback(
          () => window.clearTimeout(longPressTimerRef.current),
          []
        );
        const handleOpen = (event) => {
          pointRef.current = { x: event.clientX, y: event.clientY };
          context.onOpenChange(true);
        };
        React2.useEffect(() => clearLongPress, [clearLongPress]);
        React2.useEffect(() => void (disabled && clearLongPress()), [disabled, clearLongPress]);
        return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
          (0, import_jsx_runtime.jsx)(MenuPrimitive.Anchor, { ...menuScope, virtualRef }),
          (0, import_jsx_runtime.jsx)(
            import_react_primitive.Primitive.span,
            {
              "data-state": context.open ? "open" : "closed",
              "data-disabled": disabled ? "" : void 0,
              ...triggerProps,
              ref: forwardedRef,
              style: { WebkitTouchCallout: "none", ...props.style },
              onContextMenu: disabled ? props.onContextMenu : (0, import_primitive.composeEventHandlers)(props.onContextMenu, (event) => {
                clearLongPress();
                handleOpen(event);
                event.preventDefault();
              }),
              onPointerDown: disabled ? props.onPointerDown : (0, import_primitive.composeEventHandlers)(
                props.onPointerDown,
                whenTouchOrPen((event) => {
                  clearLongPress();
                  longPressTimerRef.current = window.setTimeout(() => handleOpen(event), 700);
                })
              ),
              onPointerMove: disabled ? props.onPointerMove : (0, import_primitive.composeEventHandlers)(props.onPointerMove, whenTouchOrPen(clearLongPress)),
              onPointerCancel: disabled ? props.onPointerCancel : (0, import_primitive.composeEventHandlers)(props.onPointerCancel, whenTouchOrPen(clearLongPress)),
              onPointerUp: disabled ? props.onPointerUp : (0, import_primitive.composeEventHandlers)(props.onPointerUp, whenTouchOrPen(clearLongPress))
            }
          )
        ] });
      }
    );
    ContextMenuTrigger.displayName = TRIGGER_NAME;
    var PORTAL_NAME = "ContextMenuPortal";
    var ContextMenuPortal = (props) => {
      const { __scopeContextMenu, ...portalProps } = props;
      const menuScope = useMenuScope(__scopeContextMenu);
      return (0, import_jsx_runtime.jsx)(MenuPrimitive.Portal, { ...menuScope, ...portalProps });
    };
    ContextMenuPortal.displayName = PORTAL_NAME;
    var CONTENT_NAME = "ContextMenuContent";
    var ContextMenuContent = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeContextMenu, ...contentProps } = props;
        const context = useContextMenuContext(CONTENT_NAME, __scopeContextMenu);
        const menuScope = useMenuScope(__scopeContextMenu);
        const hasInteractedOutsideRef = React2.useRef(false);
        return (0, import_jsx_runtime.jsx)(
          MenuPrimitive.Content,
          {
            ...menuScope,
            ...contentProps,
            ref: forwardedRef,
            side: "right",
            sideOffset: 2,
            align: "start",
            onCloseAutoFocus: (event) => {
              var _a;
              (_a = props.onCloseAutoFocus) == null ? void 0 : _a.call(props, event);
              if (!event.defaultPrevented && hasInteractedOutsideRef.current) {
                event.preventDefault();
              }
              hasInteractedOutsideRef.current = false;
            },
            onInteractOutside: (event) => {
              var _a;
              (_a = props.onInteractOutside) == null ? void 0 : _a.call(props, event);
              if (!event.defaultPrevented && !context.modal) hasInteractedOutsideRef.current = true;
            },
            style: {
              ...props.style,
              // re-namespace exposed content custom properties
              ...{
                "--radix-context-menu-content-transform-origin": "var(--radix-popper-transform-origin)",
                "--radix-context-menu-content-available-width": "var(--radix-popper-available-width)",
                "--radix-context-menu-content-available-height": "var(--radix-popper-available-height)",
                "--radix-context-menu-trigger-width": "var(--radix-popper-anchor-width)",
                "--radix-context-menu-trigger-height": "var(--radix-popper-anchor-height)"
              }
            }
          }
        );
      }
    );
    ContextMenuContent.displayName = CONTENT_NAME;
    var GROUP_NAME = "ContextMenuGroup";
    var ContextMenuGroup = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeContextMenu, ...groupProps } = props;
        const menuScope = useMenuScope(__scopeContextMenu);
        return (0, import_jsx_runtime.jsx)(MenuPrimitive.Group, { ...menuScope, ...groupProps, ref: forwardedRef });
      }
    );
    ContextMenuGroup.displayName = GROUP_NAME;
    var LABEL_NAME = "ContextMenuLabel";
    var ContextMenuLabel = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeContextMenu, ...labelProps } = props;
        const menuScope = useMenuScope(__scopeContextMenu);
        return (0, import_jsx_runtime.jsx)(MenuPrimitive.Label, { ...menuScope, ...labelProps, ref: forwardedRef });
      }
    );
    ContextMenuLabel.displayName = LABEL_NAME;
    var ITEM_NAME = "ContextMenuItem";
    var ContextMenuItem = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeContextMenu, ...itemProps } = props;
        const menuScope = useMenuScope(__scopeContextMenu);
        return (0, import_jsx_runtime.jsx)(MenuPrimitive.Item, { ...menuScope, ...itemProps, ref: forwardedRef });
      }
    );
    ContextMenuItem.displayName = ITEM_NAME;
    var CHECKBOX_ITEM_NAME = "ContextMenuCheckboxItem";
    var ContextMenuCheckboxItem = React2.forwardRef((props, forwardedRef) => {
      const { __scopeContextMenu, ...checkboxItemProps } = props;
      const menuScope = useMenuScope(__scopeContextMenu);
      return (0, import_jsx_runtime.jsx)(MenuPrimitive.CheckboxItem, { ...menuScope, ...checkboxItemProps, ref: forwardedRef });
    });
    ContextMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;
    var RADIO_GROUP_NAME = "ContextMenuRadioGroup";
    var ContextMenuRadioGroup = React2.forwardRef((props, forwardedRef) => {
      const { __scopeContextMenu, ...radioGroupProps } = props;
      const menuScope = useMenuScope(__scopeContextMenu);
      return (0, import_jsx_runtime.jsx)(MenuPrimitive.RadioGroup, { ...menuScope, ...radioGroupProps, ref: forwardedRef });
    });
    ContextMenuRadioGroup.displayName = RADIO_GROUP_NAME;
    var RADIO_ITEM_NAME = "ContextMenuRadioItem";
    var ContextMenuRadioItem = React2.forwardRef((props, forwardedRef) => {
      const { __scopeContextMenu, ...radioItemProps } = props;
      const menuScope = useMenuScope(__scopeContextMenu);
      return (0, import_jsx_runtime.jsx)(MenuPrimitive.RadioItem, { ...menuScope, ...radioItemProps, ref: forwardedRef });
    });
    ContextMenuRadioItem.displayName = RADIO_ITEM_NAME;
    var INDICATOR_NAME = "ContextMenuItemIndicator";
    var ContextMenuItemIndicator = React2.forwardRef((props, forwardedRef) => {
      const { __scopeContextMenu, ...itemIndicatorProps } = props;
      const menuScope = useMenuScope(__scopeContextMenu);
      return (0, import_jsx_runtime.jsx)(MenuPrimitive.ItemIndicator, { ...menuScope, ...itemIndicatorProps, ref: forwardedRef });
    });
    ContextMenuItemIndicator.displayName = INDICATOR_NAME;
    var SEPARATOR_NAME = "ContextMenuSeparator";
    var ContextMenuSeparator = React2.forwardRef((props, forwardedRef) => {
      const { __scopeContextMenu, ...separatorProps } = props;
      const menuScope = useMenuScope(__scopeContextMenu);
      return (0, import_jsx_runtime.jsx)(MenuPrimitive.Separator, { ...menuScope, ...separatorProps, ref: forwardedRef });
    });
    ContextMenuSeparator.displayName = SEPARATOR_NAME;
    var ARROW_NAME = "ContextMenuArrow";
    var ContextMenuArrow = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeContextMenu, ...arrowProps } = props;
        const menuScope = useMenuScope(__scopeContextMenu);
        return (0, import_jsx_runtime.jsx)(MenuPrimitive.Arrow, { ...menuScope, ...arrowProps, ref: forwardedRef });
      }
    );
    ContextMenuArrow.displayName = ARROW_NAME;
    var SUB_NAME = "ContextMenuSub";
    var ContextMenuSub = (props) => {
      const { __scopeContextMenu, children, onOpenChange, open: openProp, defaultOpen } = props;
      const menuScope = useMenuScope(__scopeContextMenu);
      const [open, setOpen] = (0, import_react_use_controllable_state.useControllableState)({
        prop: openProp,
        defaultProp: defaultOpen,
        onChange: onOpenChange
      });
      return (0, import_jsx_runtime.jsx)(MenuPrimitive.Sub, { ...menuScope, open, onOpenChange: setOpen, children });
    };
    ContextMenuSub.displayName = SUB_NAME;
    var SUB_TRIGGER_NAME = "ContextMenuSubTrigger";
    var ContextMenuSubTrigger = React2.forwardRef((props, forwardedRef) => {
      const { __scopeContextMenu, ...triggerItemProps } = props;
      const menuScope = useMenuScope(__scopeContextMenu);
      return (0, import_jsx_runtime.jsx)(MenuPrimitive.SubTrigger, { ...menuScope, ...triggerItemProps, ref: forwardedRef });
    });
    ContextMenuSubTrigger.displayName = SUB_TRIGGER_NAME;
    var SUB_CONTENT_NAME = "ContextMenuSubContent";
    var ContextMenuSubContent = React2.forwardRef((props, forwardedRef) => {
      const { __scopeContextMenu, ...subContentProps } = props;
      const menuScope = useMenuScope(__scopeContextMenu);
      return (0, import_jsx_runtime.jsx)(
        MenuPrimitive.SubContent,
        {
          ...menuScope,
          ...subContentProps,
          ref: forwardedRef,
          style: {
            ...props.style,
            // re-namespace exposed content custom properties
            ...{
              "--radix-context-menu-content-transform-origin": "var(--radix-popper-transform-origin)",
              "--radix-context-menu-content-available-width": "var(--radix-popper-available-width)",
              "--radix-context-menu-content-available-height": "var(--radix-popper-available-height)",
              "--radix-context-menu-trigger-width": "var(--radix-popper-anchor-width)",
              "--radix-context-menu-trigger-height": "var(--radix-popper-anchor-height)"
            }
          }
        }
      );
    });
    ContextMenuSubContent.displayName = SUB_CONTENT_NAME;
    function whenTouchOrPen(handler) {
      return (event) => event.pointerType !== "mouse" ? handler(event) : void 0;
    }
    var Root2 = ContextMenu;
    var Trigger = ContextMenuTrigger;
    var Portal2 = ContextMenuPortal;
    var Content2 = ContextMenuContent;
    var Group2 = ContextMenuGroup;
    var Label2 = ContextMenuLabel;
    var Item2 = ContextMenuItem;
    var CheckboxItem2 = ContextMenuCheckboxItem;
    var RadioGroup2 = ContextMenuRadioGroup;
    var RadioItem2 = ContextMenuRadioItem;
    var ItemIndicator2 = ContextMenuItemIndicator;
    var Separator2 = ContextMenuSeparator;
    var Arrow2 = ContextMenuArrow;
    var Sub2 = ContextMenuSub;
    var SubTrigger2 = ContextMenuSubTrigger;
    var SubContent2 = ContextMenuSubContent;
  }
});

// node_modules/@radix-ui/number/dist/index.js
var require_dist33 = __commonJS({
  "node_modules/@radix-ui/number/dist/index.js"(exports, module) {
    "use strict";
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      clamp: () => clamp
    });
    module.exports = __toCommonJS2(src_exports);
    function clamp(value, [min, max]) {
      return Math.min(max, Math.max(min, value));
    }
  }
});

// node_modules/@radix-ui/react-scroll-area/dist/index.js
var require_dist34 = __commonJS({
  "node_modules/@radix-ui/react-scroll-area/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Corner: () => Corner,
      Root: () => Root,
      ScrollArea: () => ScrollArea,
      ScrollAreaCorner: () => ScrollAreaCorner,
      ScrollAreaScrollbar: () => ScrollAreaScrollbar,
      ScrollAreaThumb: () => ScrollAreaThumb,
      ScrollAreaViewport: () => ScrollAreaViewport,
      Scrollbar: () => Scrollbar,
      Thumb: () => Thumb,
      Viewport: () => Viewport,
      createScrollAreaScope: () => createScrollAreaScope
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_react_primitive = require_dist3();
    var import_react_presence = require_dist16();
    var import_react_context = require_dist6();
    var import_react_compose_refs = require_dist();
    var import_react_use_callback_ref = require_dist10();
    var import_react_direction = require_dist24();
    var import_react_use_layout_effect = require_dist8();
    var import_number = require_dist33();
    var import_primitive = require_dist7();
    var React3 = __toESM2(require_react());
    function useStateMachine(initialState, machine) {
      return React3.useReducer((state, event) => {
        const nextState = machine[state][event];
        return nextState ?? state;
      }, initialState);
    }
    var import_jsx_runtime = require_jsx_runtime();
    var SCROLL_AREA_NAME = "ScrollArea";
    var [createScrollAreaContext, createScrollAreaScope] = (0, import_react_context.createContextScope)(SCROLL_AREA_NAME);
    var [ScrollAreaProvider, useScrollAreaContext] = createScrollAreaContext(SCROLL_AREA_NAME);
    var ScrollArea = React2.forwardRef(
      (props, forwardedRef) => {
        const {
          __scopeScrollArea,
          type = "hover",
          dir,
          scrollHideDelay = 600,
          ...scrollAreaProps
        } = props;
        const [scrollArea, setScrollArea] = React2.useState(null);
        const [viewport, setViewport] = React2.useState(null);
        const [content, setContent] = React2.useState(null);
        const [scrollbarX, setScrollbarX] = React2.useState(null);
        const [scrollbarY, setScrollbarY] = React2.useState(null);
        const [cornerWidth, setCornerWidth] = React2.useState(0);
        const [cornerHeight, setCornerHeight] = React2.useState(0);
        const [scrollbarXEnabled, setScrollbarXEnabled] = React2.useState(false);
        const [scrollbarYEnabled, setScrollbarYEnabled] = React2.useState(false);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, (node) => setScrollArea(node));
        const direction = (0, import_react_direction.useDirection)(dir);
        return (0, import_jsx_runtime.jsx)(
          ScrollAreaProvider,
          {
            scope: __scopeScrollArea,
            type,
            dir: direction,
            scrollHideDelay,
            scrollArea,
            viewport,
            onViewportChange: setViewport,
            content,
            onContentChange: setContent,
            scrollbarX,
            onScrollbarXChange: setScrollbarX,
            scrollbarXEnabled,
            onScrollbarXEnabledChange: setScrollbarXEnabled,
            scrollbarY,
            onScrollbarYChange: setScrollbarY,
            scrollbarYEnabled,
            onScrollbarYEnabledChange: setScrollbarYEnabled,
            onCornerWidthChange: setCornerWidth,
            onCornerHeightChange: setCornerHeight,
            children: (0, import_jsx_runtime.jsx)(
              import_react_primitive.Primitive.div,
              {
                dir: direction,
                ...scrollAreaProps,
                ref: composedRefs,
                style: {
                  position: "relative",
                  // Pass corner sizes as CSS vars to reduce re-renders of context consumers
                  ["--radix-scroll-area-corner-width"]: cornerWidth + "px",
                  ["--radix-scroll-area-corner-height"]: cornerHeight + "px",
                  ...props.style
                }
              }
            )
          }
        );
      }
    );
    ScrollArea.displayName = SCROLL_AREA_NAME;
    var VIEWPORT_NAME = "ScrollAreaViewport";
    var ScrollAreaViewport = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeScrollArea, children, nonce, ...viewportProps } = props;
        const context = useScrollAreaContext(VIEWPORT_NAME, __scopeScrollArea);
        const ref = React2.useRef(null);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, ref, context.onViewportChange);
        return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
          (0, import_jsx_runtime.jsx)(
            "style",
            {
              dangerouslySetInnerHTML: {
                __html: `[data-radix-scroll-area-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-scroll-area-viewport]::-webkit-scrollbar{display:none}`
              },
              nonce
            }
          ),
          (0, import_jsx_runtime.jsx)(
            import_react_primitive.Primitive.div,
            {
              "data-radix-scroll-area-viewport": "",
              ...viewportProps,
              ref: composedRefs,
              style: {
                /**
                 * We don't support `visible` because the intention is to have at least one scrollbar
                 * if this component is used and `visible` will behave like `auto` in that case
                 * https://developer.mozilla.org/en-US/docs/Web/CSS/overflowed#description
                 *
                 * We don't handle `auto` because the intention is for the native implementation
                 * to be hidden if using this component. We just want to ensure the node is scrollable
                 * so could have used either `scroll` or `auto` here. We picked `scroll` to prevent
                 * the browser from having to work out whether to render native scrollbars or not,
                 * we tell it to with the intention of hiding them in CSS.
                 */
                overflowX: context.scrollbarXEnabled ? "scroll" : "hidden",
                overflowY: context.scrollbarYEnabled ? "scroll" : "hidden",
                ...props.style
              },
              children: (0, import_jsx_runtime.jsx)("div", { ref: context.onContentChange, style: { minWidth: "100%", display: "table" }, children })
            }
          )
        ] });
      }
    );
    ScrollAreaViewport.displayName = VIEWPORT_NAME;
    var SCROLLBAR_NAME = "ScrollAreaScrollbar";
    var ScrollAreaScrollbar = React2.forwardRef(
      (props, forwardedRef) => {
        const { forceMount, ...scrollbarProps } = props;
        const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);
        const { onScrollbarXEnabledChange, onScrollbarYEnabledChange } = context;
        const isHorizontal = props.orientation === "horizontal";
        React2.useEffect(() => {
          isHorizontal ? onScrollbarXEnabledChange(true) : onScrollbarYEnabledChange(true);
          return () => {
            isHorizontal ? onScrollbarXEnabledChange(false) : onScrollbarYEnabledChange(false);
          };
        }, [isHorizontal, onScrollbarXEnabledChange, onScrollbarYEnabledChange]);
        return context.type === "hover" ? (0, import_jsx_runtime.jsx)(ScrollAreaScrollbarHover, { ...scrollbarProps, ref: forwardedRef, forceMount }) : context.type === "scroll" ? (0, import_jsx_runtime.jsx)(ScrollAreaScrollbarScroll, { ...scrollbarProps, ref: forwardedRef, forceMount }) : context.type === "auto" ? (0, import_jsx_runtime.jsx)(ScrollAreaScrollbarAuto, { ...scrollbarProps, ref: forwardedRef, forceMount }) : context.type === "always" ? (0, import_jsx_runtime.jsx)(ScrollAreaScrollbarVisible, { ...scrollbarProps, ref: forwardedRef }) : null;
      }
    );
    ScrollAreaScrollbar.displayName = SCROLLBAR_NAME;
    var ScrollAreaScrollbarHover = React2.forwardRef((props, forwardedRef) => {
      const { forceMount, ...scrollbarProps } = props;
      const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);
      const [visible, setVisible] = React2.useState(false);
      React2.useEffect(() => {
        const scrollArea = context.scrollArea;
        let hideTimer = 0;
        if (scrollArea) {
          const handlePointerEnter = () => {
            window.clearTimeout(hideTimer);
            setVisible(true);
          };
          const handlePointerLeave = () => {
            hideTimer = window.setTimeout(() => setVisible(false), context.scrollHideDelay);
          };
          scrollArea.addEventListener("pointerenter", handlePointerEnter);
          scrollArea.addEventListener("pointerleave", handlePointerLeave);
          return () => {
            window.clearTimeout(hideTimer);
            scrollArea.removeEventListener("pointerenter", handlePointerEnter);
            scrollArea.removeEventListener("pointerleave", handlePointerLeave);
          };
        }
      }, [context.scrollArea, context.scrollHideDelay]);
      return (0, import_jsx_runtime.jsx)(import_react_presence.Presence, { present: forceMount || visible, children: (0, import_jsx_runtime.jsx)(
        ScrollAreaScrollbarAuto,
        {
          "data-state": visible ? "visible" : "hidden",
          ...scrollbarProps,
          ref: forwardedRef
        }
      ) });
    });
    var ScrollAreaScrollbarScroll = React2.forwardRef((props, forwardedRef) => {
      const { forceMount, ...scrollbarProps } = props;
      const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);
      const isHorizontal = props.orientation === "horizontal";
      const debounceScrollEnd = useDebounceCallback(() => send("SCROLL_END"), 100);
      const [state, send] = useStateMachine("hidden", {
        hidden: {
          SCROLL: "scrolling"
        },
        scrolling: {
          SCROLL_END: "idle",
          POINTER_ENTER: "interacting"
        },
        interacting: {
          SCROLL: "interacting",
          POINTER_LEAVE: "idle"
        },
        idle: {
          HIDE: "hidden",
          SCROLL: "scrolling",
          POINTER_ENTER: "interacting"
        }
      });
      React2.useEffect(() => {
        if (state === "idle") {
          const hideTimer = window.setTimeout(() => send("HIDE"), context.scrollHideDelay);
          return () => window.clearTimeout(hideTimer);
        }
      }, [state, context.scrollHideDelay, send]);
      React2.useEffect(() => {
        const viewport = context.viewport;
        const scrollDirection = isHorizontal ? "scrollLeft" : "scrollTop";
        if (viewport) {
          let prevScrollPos = viewport[scrollDirection];
          const handleScroll = () => {
            const scrollPos = viewport[scrollDirection];
            const hasScrollInDirectionChanged = prevScrollPos !== scrollPos;
            if (hasScrollInDirectionChanged) {
              send("SCROLL");
              debounceScrollEnd();
            }
            prevScrollPos = scrollPos;
          };
          viewport.addEventListener("scroll", handleScroll);
          return () => viewport.removeEventListener("scroll", handleScroll);
        }
      }, [context.viewport, isHorizontal, send, debounceScrollEnd]);
      return (0, import_jsx_runtime.jsx)(import_react_presence.Presence, { present: forceMount || state !== "hidden", children: (0, import_jsx_runtime.jsx)(
        ScrollAreaScrollbarVisible,
        {
          "data-state": state === "hidden" ? "hidden" : "visible",
          ...scrollbarProps,
          ref: forwardedRef,
          onPointerEnter: (0, import_primitive.composeEventHandlers)(props.onPointerEnter, () => send("POINTER_ENTER")),
          onPointerLeave: (0, import_primitive.composeEventHandlers)(props.onPointerLeave, () => send("POINTER_LEAVE"))
        }
      ) });
    });
    var ScrollAreaScrollbarAuto = React2.forwardRef((props, forwardedRef) => {
      const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);
      const { forceMount, ...scrollbarProps } = props;
      const [visible, setVisible] = React2.useState(false);
      const isHorizontal = props.orientation === "horizontal";
      const handleResize = useDebounceCallback(() => {
        if (context.viewport) {
          const isOverflowX = context.viewport.offsetWidth < context.viewport.scrollWidth;
          const isOverflowY = context.viewport.offsetHeight < context.viewport.scrollHeight;
          setVisible(isHorizontal ? isOverflowX : isOverflowY);
        }
      }, 10);
      useResizeObserver(context.viewport, handleResize);
      useResizeObserver(context.content, handleResize);
      return (0, import_jsx_runtime.jsx)(import_react_presence.Presence, { present: forceMount || visible, children: (0, import_jsx_runtime.jsx)(
        ScrollAreaScrollbarVisible,
        {
          "data-state": visible ? "visible" : "hidden",
          ...scrollbarProps,
          ref: forwardedRef
        }
      ) });
    });
    var ScrollAreaScrollbarVisible = React2.forwardRef((props, forwardedRef) => {
      const { orientation = "vertical", ...scrollbarProps } = props;
      const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);
      const thumbRef = React2.useRef(null);
      const pointerOffsetRef = React2.useRef(0);
      const [sizes, setSizes] = React2.useState({
        content: 0,
        viewport: 0,
        scrollbar: { size: 0, paddingStart: 0, paddingEnd: 0 }
      });
      const thumbRatio = getThumbRatio(sizes.viewport, sizes.content);
      const commonProps = {
        ...scrollbarProps,
        sizes,
        onSizesChange: setSizes,
        hasThumb: Boolean(thumbRatio > 0 && thumbRatio < 1),
        onThumbChange: (thumb) => thumbRef.current = thumb,
        onThumbPointerUp: () => pointerOffsetRef.current = 0,
        onThumbPointerDown: (pointerPos) => pointerOffsetRef.current = pointerPos
      };
      function getScrollPosition(pointerPos, dir) {
        return getScrollPositionFromPointer(pointerPos, pointerOffsetRef.current, sizes, dir);
      }
      if (orientation === "horizontal") {
        return (0, import_jsx_runtime.jsx)(
          ScrollAreaScrollbarX,
          {
            ...commonProps,
            ref: forwardedRef,
            onThumbPositionChange: () => {
              if (context.viewport && thumbRef.current) {
                const scrollPos = context.viewport.scrollLeft;
                const offset3 = getThumbOffsetFromScroll(scrollPos, sizes, context.dir);
                thumbRef.current.style.transform = `translate3d(${offset3}px, 0, 0)`;
              }
            },
            onWheelScroll: (scrollPos) => {
              if (context.viewport) context.viewport.scrollLeft = scrollPos;
            },
            onDragScroll: (pointerPos) => {
              if (context.viewport) {
                context.viewport.scrollLeft = getScrollPosition(pointerPos, context.dir);
              }
            }
          }
        );
      }
      if (orientation === "vertical") {
        return (0, import_jsx_runtime.jsx)(
          ScrollAreaScrollbarY,
          {
            ...commonProps,
            ref: forwardedRef,
            onThumbPositionChange: () => {
              if (context.viewport && thumbRef.current) {
                const scrollPos = context.viewport.scrollTop;
                const offset3 = getThumbOffsetFromScroll(scrollPos, sizes);
                thumbRef.current.style.transform = `translate3d(0, ${offset3}px, 0)`;
              }
            },
            onWheelScroll: (scrollPos) => {
              if (context.viewport) context.viewport.scrollTop = scrollPos;
            },
            onDragScroll: (pointerPos) => {
              if (context.viewport) context.viewport.scrollTop = getScrollPosition(pointerPos);
            }
          }
        );
      }
      return null;
    });
    var ScrollAreaScrollbarX = React2.forwardRef((props, forwardedRef) => {
      const { sizes, onSizesChange, ...scrollbarProps } = props;
      const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);
      const [computedStyle, setComputedStyle] = React2.useState();
      const ref = React2.useRef(null);
      const composeRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, ref, context.onScrollbarXChange);
      React2.useEffect(() => {
        if (ref.current) setComputedStyle(getComputedStyle(ref.current));
      }, [ref]);
      return (0, import_jsx_runtime.jsx)(
        ScrollAreaScrollbarImpl,
        {
          "data-orientation": "horizontal",
          ...scrollbarProps,
          ref: composeRefs,
          sizes,
          style: {
            bottom: 0,
            left: context.dir === "rtl" ? "var(--radix-scroll-area-corner-width)" : 0,
            right: context.dir === "ltr" ? "var(--radix-scroll-area-corner-width)" : 0,
            ["--radix-scroll-area-thumb-width"]: getThumbSize(sizes) + "px",
            ...props.style
          },
          onThumbPointerDown: (pointerPos) => props.onThumbPointerDown(pointerPos.x),
          onDragScroll: (pointerPos) => props.onDragScroll(pointerPos.x),
          onWheelScroll: (event, maxScrollPos) => {
            if (context.viewport) {
              const scrollPos = context.viewport.scrollLeft + event.deltaX;
              props.onWheelScroll(scrollPos);
              if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {
                event.preventDefault();
              }
            }
          },
          onResize: () => {
            if (ref.current && context.viewport && computedStyle) {
              onSizesChange({
                content: context.viewport.scrollWidth,
                viewport: context.viewport.offsetWidth,
                scrollbar: {
                  size: ref.current.clientWidth,
                  paddingStart: toInt(computedStyle.paddingLeft),
                  paddingEnd: toInt(computedStyle.paddingRight)
                }
              });
            }
          }
        }
      );
    });
    var ScrollAreaScrollbarY = React2.forwardRef((props, forwardedRef) => {
      const { sizes, onSizesChange, ...scrollbarProps } = props;
      const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);
      const [computedStyle, setComputedStyle] = React2.useState();
      const ref = React2.useRef(null);
      const composeRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, ref, context.onScrollbarYChange);
      React2.useEffect(() => {
        if (ref.current) setComputedStyle(getComputedStyle(ref.current));
      }, [ref]);
      return (0, import_jsx_runtime.jsx)(
        ScrollAreaScrollbarImpl,
        {
          "data-orientation": "vertical",
          ...scrollbarProps,
          ref: composeRefs,
          sizes,
          style: {
            top: 0,
            right: context.dir === "ltr" ? 0 : void 0,
            left: context.dir === "rtl" ? 0 : void 0,
            bottom: "var(--radix-scroll-area-corner-height)",
            ["--radix-scroll-area-thumb-height"]: getThumbSize(sizes) + "px",
            ...props.style
          },
          onThumbPointerDown: (pointerPos) => props.onThumbPointerDown(pointerPos.y),
          onDragScroll: (pointerPos) => props.onDragScroll(pointerPos.y),
          onWheelScroll: (event, maxScrollPos) => {
            if (context.viewport) {
              const scrollPos = context.viewport.scrollTop + event.deltaY;
              props.onWheelScroll(scrollPos);
              if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {
                event.preventDefault();
              }
            }
          },
          onResize: () => {
            if (ref.current && context.viewport && computedStyle) {
              onSizesChange({
                content: context.viewport.scrollHeight,
                viewport: context.viewport.offsetHeight,
                scrollbar: {
                  size: ref.current.clientHeight,
                  paddingStart: toInt(computedStyle.paddingTop),
                  paddingEnd: toInt(computedStyle.paddingBottom)
                }
              });
            }
          }
        }
      );
    });
    var [ScrollbarProvider, useScrollbarContext] = createScrollAreaContext(SCROLLBAR_NAME);
    var ScrollAreaScrollbarImpl = React2.forwardRef((props, forwardedRef) => {
      const {
        __scopeScrollArea,
        sizes,
        hasThumb,
        onThumbChange,
        onThumbPointerUp,
        onThumbPointerDown,
        onThumbPositionChange,
        onDragScroll,
        onWheelScroll,
        onResize,
        ...scrollbarProps
      } = props;
      const context = useScrollAreaContext(SCROLLBAR_NAME, __scopeScrollArea);
      const [scrollbar, setScrollbar] = React2.useState(null);
      const composeRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, (node) => setScrollbar(node));
      const rectRef = React2.useRef(null);
      const prevWebkitUserSelectRef = React2.useRef("");
      const viewport = context.viewport;
      const maxScrollPos = sizes.content - sizes.viewport;
      const handleWheelScroll = (0, import_react_use_callback_ref.useCallbackRef)(onWheelScroll);
      const handleThumbPositionChange = (0, import_react_use_callback_ref.useCallbackRef)(onThumbPositionChange);
      const handleResize = useDebounceCallback(onResize, 10);
      function handleDragScroll(event) {
        if (rectRef.current) {
          const x = event.clientX - rectRef.current.left;
          const y = event.clientY - rectRef.current.top;
          onDragScroll({ x, y });
        }
      }
      React2.useEffect(() => {
        const handleWheel = (event) => {
          const element = event.target;
          const isScrollbarWheel = scrollbar == null ? void 0 : scrollbar.contains(element);
          if (isScrollbarWheel) handleWheelScroll(event, maxScrollPos);
        };
        document.addEventListener("wheel", handleWheel, { passive: false });
        return () => document.removeEventListener("wheel", handleWheel, { passive: false });
      }, [viewport, scrollbar, maxScrollPos, handleWheelScroll]);
      React2.useEffect(handleThumbPositionChange, [sizes, handleThumbPositionChange]);
      useResizeObserver(scrollbar, handleResize);
      useResizeObserver(context.content, handleResize);
      return (0, import_jsx_runtime.jsx)(
        ScrollbarProvider,
        {
          scope: __scopeScrollArea,
          scrollbar,
          hasThumb,
          onThumbChange: (0, import_react_use_callback_ref.useCallbackRef)(onThumbChange),
          onThumbPointerUp: (0, import_react_use_callback_ref.useCallbackRef)(onThumbPointerUp),
          onThumbPositionChange: handleThumbPositionChange,
          onThumbPointerDown: (0, import_react_use_callback_ref.useCallbackRef)(onThumbPointerDown),
          children: (0, import_jsx_runtime.jsx)(
            import_react_primitive.Primitive.div,
            {
              ...scrollbarProps,
              ref: composeRefs,
              style: { position: "absolute", ...scrollbarProps.style },
              onPointerDown: (0, import_primitive.composeEventHandlers)(props.onPointerDown, (event) => {
                const mainPointer = 0;
                if (event.button === mainPointer) {
                  const element = event.target;
                  element.setPointerCapture(event.pointerId);
                  rectRef.current = scrollbar.getBoundingClientRect();
                  prevWebkitUserSelectRef.current = document.body.style.webkitUserSelect;
                  document.body.style.webkitUserSelect = "none";
                  if (context.viewport) context.viewport.style.scrollBehavior = "auto";
                  handleDragScroll(event);
                }
              }),
              onPointerMove: (0, import_primitive.composeEventHandlers)(props.onPointerMove, handleDragScroll),
              onPointerUp: (0, import_primitive.composeEventHandlers)(props.onPointerUp, (event) => {
                const element = event.target;
                if (element.hasPointerCapture(event.pointerId)) {
                  element.releasePointerCapture(event.pointerId);
                }
                document.body.style.webkitUserSelect = prevWebkitUserSelectRef.current;
                if (context.viewport) context.viewport.style.scrollBehavior = "";
                rectRef.current = null;
              })
            }
          )
        }
      );
    });
    var THUMB_NAME = "ScrollAreaThumb";
    var ScrollAreaThumb = React2.forwardRef(
      (props, forwardedRef) => {
        const { forceMount, ...thumbProps } = props;
        const scrollbarContext = useScrollbarContext(THUMB_NAME, props.__scopeScrollArea);
        return (0, import_jsx_runtime.jsx)(import_react_presence.Presence, { present: forceMount || scrollbarContext.hasThumb, children: (0, import_jsx_runtime.jsx)(ScrollAreaThumbImpl, { ref: forwardedRef, ...thumbProps }) });
      }
    );
    var ScrollAreaThumbImpl = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeScrollArea, style, ...thumbProps } = props;
        const scrollAreaContext = useScrollAreaContext(THUMB_NAME, __scopeScrollArea);
        const scrollbarContext = useScrollbarContext(THUMB_NAME, __scopeScrollArea);
        const { onThumbPositionChange } = scrollbarContext;
        const composedRef = (0, import_react_compose_refs.useComposedRefs)(
          forwardedRef,
          (node) => scrollbarContext.onThumbChange(node)
        );
        const removeUnlinkedScrollListenerRef = React2.useRef();
        const debounceScrollEnd = useDebounceCallback(() => {
          if (removeUnlinkedScrollListenerRef.current) {
            removeUnlinkedScrollListenerRef.current();
            removeUnlinkedScrollListenerRef.current = void 0;
          }
        }, 100);
        React2.useEffect(() => {
          const viewport = scrollAreaContext.viewport;
          if (viewport) {
            const handleScroll = () => {
              debounceScrollEnd();
              if (!removeUnlinkedScrollListenerRef.current) {
                const listener = addUnlinkedScrollListener(viewport, onThumbPositionChange);
                removeUnlinkedScrollListenerRef.current = listener;
                onThumbPositionChange();
              }
            };
            onThumbPositionChange();
            viewport.addEventListener("scroll", handleScroll);
            return () => viewport.removeEventListener("scroll", handleScroll);
          }
        }, [scrollAreaContext.viewport, debounceScrollEnd, onThumbPositionChange]);
        return (0, import_jsx_runtime.jsx)(
          import_react_primitive.Primitive.div,
          {
            "data-state": scrollbarContext.hasThumb ? "visible" : "hidden",
            ...thumbProps,
            ref: composedRef,
            style: {
              width: "var(--radix-scroll-area-thumb-width)",
              height: "var(--radix-scroll-area-thumb-height)",
              ...style
            },
            onPointerDownCapture: (0, import_primitive.composeEventHandlers)(props.onPointerDownCapture, (event) => {
              const thumb = event.target;
              const thumbRect = thumb.getBoundingClientRect();
              const x = event.clientX - thumbRect.left;
              const y = event.clientY - thumbRect.top;
              scrollbarContext.onThumbPointerDown({ x, y });
            }),
            onPointerUp: (0, import_primitive.composeEventHandlers)(props.onPointerUp, scrollbarContext.onThumbPointerUp)
          }
        );
      }
    );
    ScrollAreaThumb.displayName = THUMB_NAME;
    var CORNER_NAME = "ScrollAreaCorner";
    var ScrollAreaCorner = React2.forwardRef(
      (props, forwardedRef) => {
        const context = useScrollAreaContext(CORNER_NAME, props.__scopeScrollArea);
        const hasBothScrollbarsVisible = Boolean(context.scrollbarX && context.scrollbarY);
        const hasCorner = context.type !== "scroll" && hasBothScrollbarsVisible;
        return hasCorner ? (0, import_jsx_runtime.jsx)(ScrollAreaCornerImpl, { ...props, ref: forwardedRef }) : null;
      }
    );
    ScrollAreaCorner.displayName = CORNER_NAME;
    var ScrollAreaCornerImpl = React2.forwardRef((props, forwardedRef) => {
      const { __scopeScrollArea, ...cornerProps } = props;
      const context = useScrollAreaContext(CORNER_NAME, __scopeScrollArea);
      const [width, setWidth] = React2.useState(0);
      const [height, setHeight] = React2.useState(0);
      const hasSize = Boolean(width && height);
      useResizeObserver(context.scrollbarX, () => {
        var _a;
        const height2 = ((_a = context.scrollbarX) == null ? void 0 : _a.offsetHeight) || 0;
        context.onCornerHeightChange(height2);
        setHeight(height2);
      });
      useResizeObserver(context.scrollbarY, () => {
        var _a;
        const width2 = ((_a = context.scrollbarY) == null ? void 0 : _a.offsetWidth) || 0;
        context.onCornerWidthChange(width2);
        setWidth(width2);
      });
      return hasSize ? (0, import_jsx_runtime.jsx)(
        import_react_primitive.Primitive.div,
        {
          ...cornerProps,
          ref: forwardedRef,
          style: {
            width,
            height,
            position: "absolute",
            right: context.dir === "ltr" ? 0 : void 0,
            left: context.dir === "rtl" ? 0 : void 0,
            bottom: 0,
            ...props.style
          }
        }
      ) : null;
    });
    function toInt(value) {
      return value ? parseInt(value, 10) : 0;
    }
    function getThumbRatio(viewportSize, contentSize) {
      const ratio = viewportSize / contentSize;
      return isNaN(ratio) ? 0 : ratio;
    }
    function getThumbSize(sizes) {
      const ratio = getThumbRatio(sizes.viewport, sizes.content);
      const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;
      const thumbSize = (sizes.scrollbar.size - scrollbarPadding) * ratio;
      return Math.max(thumbSize, 18);
    }
    function getScrollPositionFromPointer(pointerPos, pointerOffset, sizes, dir = "ltr") {
      const thumbSizePx = getThumbSize(sizes);
      const thumbCenter = thumbSizePx / 2;
      const offset3 = pointerOffset || thumbCenter;
      const thumbOffsetFromEnd = thumbSizePx - offset3;
      const minPointerPos = sizes.scrollbar.paddingStart + offset3;
      const maxPointerPos = sizes.scrollbar.size - sizes.scrollbar.paddingEnd - thumbOffsetFromEnd;
      const maxScrollPos = sizes.content - sizes.viewport;
      const scrollRange = dir === "ltr" ? [0, maxScrollPos] : [maxScrollPos * -1, 0];
      const interpolate = linearScale([minPointerPos, maxPointerPos], scrollRange);
      return interpolate(pointerPos);
    }
    function getThumbOffsetFromScroll(scrollPos, sizes, dir = "ltr") {
      const thumbSizePx = getThumbSize(sizes);
      const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;
      const scrollbar = sizes.scrollbar.size - scrollbarPadding;
      const maxScrollPos = sizes.content - sizes.viewport;
      const maxThumbPos = scrollbar - thumbSizePx;
      const scrollClampRange = dir === "ltr" ? [0, maxScrollPos] : [maxScrollPos * -1, 0];
      const scrollWithoutMomentum = (0, import_number.clamp)(scrollPos, scrollClampRange);
      const interpolate = linearScale([0, maxScrollPos], [0, maxThumbPos]);
      return interpolate(scrollWithoutMomentum);
    }
    function linearScale(input, output) {
      return (value) => {
        if (input[0] === input[1] || output[0] === output[1]) return output[0];
        const ratio = (output[1] - output[0]) / (input[1] - input[0]);
        return output[0] + ratio * (value - input[0]);
      };
    }
    function isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos) {
      return scrollPos > 0 && scrollPos < maxScrollPos;
    }
    var addUnlinkedScrollListener = (node, handler = () => {
    }) => {
      let prevPosition = { left: node.scrollLeft, top: node.scrollTop };
      let rAF = 0;
      (function loop() {
        const position = { left: node.scrollLeft, top: node.scrollTop };
        const isHorizontalScroll = prevPosition.left !== position.left;
        const isVerticalScroll = prevPosition.top !== position.top;
        if (isHorizontalScroll || isVerticalScroll) handler();
        prevPosition = position;
        rAF = window.requestAnimationFrame(loop);
      })();
      return () => window.cancelAnimationFrame(rAF);
    };
    function useDebounceCallback(callback, delay) {
      const handleCallback = (0, import_react_use_callback_ref.useCallbackRef)(callback);
      const debounceTimerRef = React2.useRef(0);
      React2.useEffect(() => () => window.clearTimeout(debounceTimerRef.current), []);
      return React2.useCallback(() => {
        window.clearTimeout(debounceTimerRef.current);
        debounceTimerRef.current = window.setTimeout(handleCallback, delay);
      }, [handleCallback, delay]);
    }
    function useResizeObserver(element, onResize) {
      const handleResize = (0, import_react_use_callback_ref.useCallbackRef)(onResize);
      (0, import_react_use_layout_effect.useLayoutEffect)(() => {
        let rAF = 0;
        if (element) {
          const resizeObserver = new ResizeObserver(() => {
            cancelAnimationFrame(rAF);
            rAF = window.requestAnimationFrame(handleResize);
          });
          resizeObserver.observe(element);
          return () => {
            window.cancelAnimationFrame(rAF);
            resizeObserver.unobserve(element);
          };
        }
      }, [element, handleResize]);
    }
    var Root = ScrollArea;
    var Viewport = ScrollAreaViewport;
    var Scrollbar = ScrollAreaScrollbar;
    var Thumb = ScrollAreaThumb;
    var Corner = ScrollAreaCorner;
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/scroll-area.props.js
var require_scroll_area_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/scroll-area.props.js"(exports, module) {
    "use strict";
    var t = Object.defineProperty;
    var i = Object.getOwnPropertyDescriptor;
    var c = Object.getOwnPropertyNames;
    var u = Object.prototype.hasOwnProperty;
    var m = (e, s) => {
      for (var o in s) t(e, o, { get: s[o], enumerable: true });
    };
    var n = (e, s, o, a) => {
      if (s && typeof s == "object" || typeof s == "function") for (let r of c(s)) !u.call(e, r) && r !== o && t(e, r, { get: () => s[r], enumerable: !(a = i(s, r)) || a.enumerable });
      return e;
    };
    var b = (e) => n(t({}, "__esModule", { value: true }), e);
    var P = {};
    m(P, { scrollAreaPropDefs: () => f });
    module.exports = b(P);
    var l = require_as_child_prop();
    var p = require_radius_prop();
    var z = ["1", "2", "3"];
    var D = ["vertical", "horizontal", "both"];
    var f = { ...l.asChildPropDef, size: { type: "enum", className: "rt-r-size", values: z, default: "1", responsive: true }, ...p.radiusPropDef, scrollbars: { type: "enum", values: D, default: "both" } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/helpers/extract-margin-props.js
var require_extract_margin_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/helpers/extract-margin-props.js"(exports, module) {
    "use strict";
    var n = Object.defineProperty;
    var g = Object.getOwnPropertyDescriptor;
    var x = Object.getOwnPropertyNames;
    var c = Object.prototype.hasOwnProperty;
    var M = (t, r) => {
      for (var o in r) n(t, o, { get: r[o], enumerable: true });
    };
    var P = (t, r, o, p) => {
      if (r && typeof r == "object" || typeof r == "function") for (let m of x(r)) !c.call(t, m) && m !== o && n(t, m, { get: () => r[m], enumerable: !(p = g(r, m)) || p.enumerable });
      return t;
    };
    var f = (t) => P(n({}, "__esModule", { value: true }), t);
    var y = {};
    M(y, { extractMarginProps: () => u });
    module.exports = f(y);
    function u(t) {
      const { m: r, mx: o, my: p, mt: m, mr: s, mb: e, ml: i, ...a } = t;
      return { m: r, mx: o, my: p, mt: m, mr: s, mb: e, ml: i, rest: a };
    }
  }
});

// node_modules/@radix-ui/themes/dist/cjs/helpers/get-margin-styles.js
var require_get_margin_styles = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/helpers/get-margin-styles.js"(exports, module) {
    "use strict";
    var x = Object.create;
    var l = Object.defineProperty;
    var M = Object.getOwnPropertyDescriptor;
    var S = Object.getOwnPropertyNames;
    var h = Object.getPrototypeOf;
    var j = Object.prototype.hasOwnProperty;
    var D = (s, m) => {
      for (var r in m) l(s, r, { get: m[r], enumerable: true });
    };
    var i = (s, m, r, o) => {
      if (m && typeof m == "object" || typeof m == "function") for (let t of S(m)) !j.call(s, t) && t !== r && l(s, t, { get: () => m[t], enumerable: !(o = M(m, t)) || o.enumerable });
      return s;
    };
    var R = (s, m, r) => (r = s != null ? x(h(s)) : {}, i(m || !s || !s.__esModule ? l(r, "default", { value: s, enumerable: true }) : r, s));
    var d = (s) => i(l({}, "__esModule", { value: true }), s);
    var q = {};
    D(q, { getMarginStyles: () => k });
    module.exports = d(q);
    var p = R(require_classnames());
    var e = require_get_responsive_styles();
    var u = require_merge_styles();
    var n = require_margin_props();
    var a = n.marginPropDefs.m.values;
    function k(s) {
      const [m, r] = (0, e.getResponsiveStyles)({ className: "rt-r-m", customProperties: ["--margin"], propValues: a, value: s.m }), [o, t] = (0, e.getResponsiveStyles)({ className: "rt-r-mx", customProperties: ["--margin-left", "--margin-right"], propValues: a, value: s.mx }), [c, g] = (0, e.getResponsiveStyles)({ className: "rt-r-my", customProperties: ["--margin-top", "--margin-bottom"], propValues: a, value: s.my }), [P, N] = (0, e.getResponsiveStyles)({ className: "rt-r-mt", customProperties: ["--margin-top"], propValues: a, value: s.mt }), [C, f] = (0, e.getResponsiveStyles)({ className: "rt-r-mr", customProperties: ["--margin-right"], propValues: a, value: s.mr }), [v, y] = (0, e.getResponsiveStyles)({ className: "rt-r-mb", customProperties: ["--margin-bottom"], propValues: a, value: s.mb }), [V, b] = (0, e.getResponsiveStyles)({ className: "rt-r-ml", customProperties: ["--margin-left"], propValues: a, value: s.ml });
      return [(0, p.default)(m, o, c, P, C, v, V), (0, u.mergeStyles)(r, t, g, N, f, y, b)];
    }
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/scroll-area.js
var require_scroll_area = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/scroll-area.js"(exports, module) {
    "use strict";
    var x = Object.create;
    var p = Object.defineProperty;
    var M = Object.getOwnPropertyDescriptor;
    var R = Object.getOwnPropertyNames;
    var j = Object.getPrototypeOf;
    var E = Object.prototype.hasOwnProperty;
    var W = (r, e) => {
      for (var l in e) p(r, l, { get: e[l], enumerable: true });
    };
    var y = (r, e, l, i) => {
      if (e && typeof e == "object" || typeof e == "function") for (let s of R(e)) !E.call(r, s) && s !== l && p(r, s, { get: () => e[s], enumerable: !(i = M(e, s)) || i.enumerable });
      return r;
    };
    var n = (r, e, l) => (l = r != null ? x(j(r)) : {}, y(e || !r || !r.__esModule ? p(l, "default", { value: r, enumerable: true }) : l, r));
    var G = (r) => y(p({}, "__esModule", { value: true }), r);
    var H = {};
    W(H, { ScrollArea: () => f });
    module.exports = G(H);
    var o = n(require_react());
    var m = n(require_classnames());
    var a = n(require_dist34());
    var t = require_scroll_area_props();
    var v = require_extract_margin_props();
    var N = require_get_margin_styles();
    var S = require_get_responsive_styles();
    var b = require_get_subtree();
    var g = require_merge_styles();
    var f = o.forwardRef((r, e) => {
      const { rest: l, ...i } = (0, v.extractMarginProps)(r), [s, h] = (0, N.getMarginStyles)(i), { asChild: P, children: w, className: C, style: z, type: u, scrollHideDelay: V = u !== "scroll" ? 0 : void 0, dir: O, size: A = t.scrollAreaPropDefs.size.default, radius: d = t.scrollAreaPropDefs.radius.default, scrollbars: c = t.scrollAreaPropDefs.scrollbars.default, ...D } = l;
      return o.createElement(a.Root, { type: u, scrollHideDelay: V, className: (0, m.default)("rt-ScrollAreaRoot", s, C), style: (0, g.mergeStyles)(h, z), asChild: P }, (0, b.getSubtree)({ asChild: P, children: w }, (T) => o.createElement(o.Fragment, null, o.createElement(a.Viewport, { ...D, ref: e, className: "rt-ScrollAreaViewport" }, T), o.createElement("div", { className: "rt-ScrollAreaViewportFocusRing" }), c !== "vertical" ? o.createElement(a.Scrollbar, { "data-radius": d, orientation: "horizontal", className: (0, m.default)("rt-ScrollAreaScrollbar", (0, S.getResponsiveClassNames)({ className: "rt-r-size", value: A, propValues: t.scrollAreaPropDefs.size.values })) }, o.createElement(a.Thumb, { className: "rt-ScrollAreaThumb" })) : null, c !== "horizontal" ? o.createElement(a.Scrollbar, { "data-radius": d, orientation: "vertical", className: (0, m.default)("rt-ScrollAreaScrollbar", (0, S.getResponsiveClassNames)({ className: "rt-r-size", value: A, propValues: t.scrollAreaPropDefs.size.values })) }, o.createElement(a.Thumb, { className: "rt-ScrollAreaThumb" })) : null, c === "both" ? o.createElement(a.Corner, { className: "rt-ScrollAreaCorner" }) : null)));
    });
    f.displayName = "ScrollArea";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/base-menu.props.js
var require_base_menu_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/base-menu.props.js"(exports, module) {
    "use strict";
    var n = Object.defineProperty;
    var D = Object.getOwnPropertyDescriptor;
    var P = Object.getOwnPropertyNames;
    var l = Object.prototype.hasOwnProperty;
    var h = (e, t) => {
      for (var r in t) n(e, r, { get: t[r], enumerable: true });
    };
    var b = (e, t, r, a) => {
      if (t && typeof t == "object" || typeof t == "function") for (let s of P(t)) !l.call(e, s) && s !== r && n(e, s, { get: () => t[s], enumerable: !(a = D(t, s)) || a.enumerable });
      return e;
    };
    var d = (e) => b(n({}, "__esModule", { value: true }), e);
    var g = {};
    h(g, { baseMenuCheckboxItemPropDefs: () => m, baseMenuContentPropDefs: () => f, baseMenuItemPropDefs: () => c, baseMenuRadioItemPropDefs: () => u });
    module.exports = d(g);
    var i = require_as_child_prop();
    var o = require_color_prop();
    var p = require_high_contrast_prop();
    var y = ["1", "2"];
    var v = ["solid", "soft"];
    var f = { size: { type: "enum", className: "rt-r-size", values: y, default: "2", responsive: true }, variant: { type: "enum", className: "rt-variant", values: v, default: "solid" }, ...o.colorPropDef, ...p.highContrastPropDef };
    var c = { ...i.asChildPropDef, ...o.colorPropDef, shortcut: { type: "string" } };
    var m = { ...o.colorPropDef, shortcut: { type: "string" } };
    var u = { ...o.colorPropDef };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/context-menu.props.js
var require_context_menu_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/context-menu.props.js"(exports, module) {
    "use strict";
    var a = Object.defineProperty;
    var f = Object.getOwnPropertyDescriptor;
    var p = Object.getOwnPropertyNames;
    var u = Object.prototype.hasOwnProperty;
    var D = (t, e) => {
      for (var s in e) a(t, s, { get: e[s], enumerable: true });
    };
    var M = (t, e, s, r) => {
      if (e && typeof e == "object" || typeof e == "function") for (let n of p(e)) !u.call(t, n) && n !== s && a(t, n, { get: () => e[n], enumerable: !(r = f(e, n)) || r.enumerable });
      return t;
    };
    var P = (t) => M(a({}, "__esModule", { value: true }), t);
    var m = {};
    D(m, { contextMenuCheckboxItemPropDefs: () => o.baseMenuCheckboxItemPropDefs, contextMenuContentPropDefs: () => o.baseMenuContentPropDefs, contextMenuItemPropDefs: () => o.baseMenuItemPropDefs, contextMenuRadioItemPropDefs: () => o.baseMenuRadioItemPropDefs });
    module.exports = P(m);
    var o = require_base_menu_props();
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/context-menu.js
var require_context_menu = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/context-menu.js"(exports, module) {
    "use strict";
    "use client";
    var A = Object.create;
    var M = Object.defineProperty;
    var j = Object.getOwnPropertyDescriptor;
    var F = Object.getOwnPropertyNames;
    var q = Object.getPrototypeOf;
    var H = Object.prototype.hasOwnProperty;
    var J = (t, o) => {
      for (var n in o) M(t, n, { get: o[n], enumerable: true });
    };
    var D = (t, o, n, s) => {
      if (o && typeof o == "object" || typeof o == "function") for (let r of F(o)) !H.call(t, r) && r !== n && M(t, r, { get: () => o[r], enumerable: !(s = j(o, r)) || s.enumerable });
      return t;
    };
    var b = (t, o, n) => (n = t != null ? A(q(t)) : {}, D(o || !t || !t.__esModule ? M(n, "default", { value: t, enumerable: true }) : n, t));
    var K = (t) => D(M({}, "__esModule", { value: true }), t);
    var Q = {};
    J(Q, { CheckboxItem: () => w, Content: () => S, Group: () => T, Item: () => N, Label: () => R, RadioGroup: () => E, RadioItem: () => G, Root: () => v, Separator: () => L, Sub: () => B, SubContent: () => W, SubTrigger: () => k, Trigger: () => y });
    module.exports = K(Q);
    var e = b(require_react());
    var a = b(require_classnames());
    var u = b(require_dist32());
    var l = require_dist2();
    var h = require_scroll_area();
    var i = require_context_menu_props();
    var m = require_theme();
    var x = require_icons();
    var g = require_extract_props();
    var V = require_require_react_element();
    var v = (t) => e.createElement(u.Root, { ...t });
    v.displayName = "ContextMenu.Root";
    var y = e.forwardRef(({ children: t, ...o }, n) => e.createElement(u.Trigger, { ...o, ref: n, asChild: true }, (0, V.requireReactElement)(t)));
    y.displayName = "ContextMenu.Trigger";
    var O = e.createContext({});
    var S = e.forwardRef((t, o) => {
      const n = (0, m.useThemeContext)(), { size: s = i.contextMenuContentPropDefs.size.default, variant: r = i.contextMenuContentPropDefs.variant.default, highContrast: C = i.contextMenuContentPropDefs.highContrast.default } = t, { className: p, children: c, color: P, container: d, forceMount: f, ...z } = (0, g.extractProps)(t, i.contextMenuContentPropDefs), I = P || n.accentColor;
      return e.createElement(u.Portal, { container: d, forceMount: f }, e.createElement(m.Theme, { asChild: true }, e.createElement(u.Content, { "data-accent-color": I, alignOffset: -Number(s) * 4, collisionPadding: 10, ...z, asChild: false, ref: o, className: (0, a.default)("rt-PopperContent", "rt-BaseMenuContent", "rt-ContextMenuContent", p) }, e.createElement(h.ScrollArea, { type: "auto" }, e.createElement("div", { className: (0, a.default)("rt-BaseMenuViewport", "rt-ContextMenuViewport") }, e.createElement(O.Provider, { value: e.useMemo(() => ({ size: s, variant: r, color: I, highContrast: C }), [s, r, I, C]) }, c))))));
    });
    S.displayName = "ContextMenu.Content";
    var R = e.forwardRef(({ className: t, ...o }, n) => e.createElement(u.Label, { ...o, asChild: false, ref: n, className: (0, a.default)("rt-BaseMenuLabel", "rt-ContextMenuLabel", t) }));
    R.displayName = "ContextMenu.Label";
    var N = e.forwardRef((t, o) => {
      const { className: n, children: s, color: r = i.contextMenuItemPropDefs.color.default, shortcut: C, ...p } = t;
      return e.createElement(u.Item, { "data-accent-color": r, ...p, ref: o, className: (0, a.default)("rt-reset", "rt-BaseMenuItem", "rt-ContextMenuItem", n) }, e.createElement(l.Slottable, null, s), C && e.createElement("div", { className: "rt-BaseMenuShortcut rt-ContextMenuShortcut" }, C));
    });
    N.displayName = "ContextMenu.Item";
    var T = e.forwardRef(({ className: t, ...o }, n) => e.createElement(u.Group, { ...o, asChild: false, ref: n, className: (0, a.default)("rt-BaseMenuGroup", "rt-ContextMenuGroup", t) }));
    T.displayName = "ContextMenu.Group";
    var E = e.forwardRef(({ className: t, ...o }, n) => e.createElement(u.RadioGroup, { ...o, asChild: false, ref: n, className: (0, a.default)("rt-BaseMenuRadioGroup", "rt-ContextMenuRadioGroup", t) }));
    E.displayName = "ContextMenu.RadioGroup";
    var G = e.forwardRef((t, o) => {
      const { children: n, className: s, color: r = i.contextMenuRadioItemPropDefs.color.default, ...C } = t;
      return e.createElement(u.RadioItem, { ...C, asChild: false, ref: o, "data-accent-color": r, className: (0, a.default)("rt-BaseMenuItem", "rt-BaseMenuRadioItem", "rt-ContextMenuItem", "rt-ContextMenuRadioItem", s) }, e.createElement(l.Slottable, null, n), e.createElement(u.ItemIndicator, { className: "rt-BaseMenuItemIndicator rt-ContextMenuItemIndicator" }, e.createElement(x.ThickCheckIcon, { className: "rt-BaseMenuItemIndicatorIcon rt-ContextMenuItemIndicatorIcon" })));
    });
    G.displayName = "ContextMenu.RadioItem";
    var w = e.forwardRef((t, o) => {
      const { children: n, className: s, shortcut: r, color: C = i.contextMenuCheckboxItemPropDefs.color.default, ...p } = t;
      return e.createElement(u.CheckboxItem, { ...p, asChild: false, ref: o, "data-accent-color": C, className: (0, a.default)("rt-BaseMenuItem", "rt-BaseMenuCheckboxItem", "rt-ContextMenuItem", "rt-ContextMenuCheckboxItem", s) }, e.createElement(l.Slottable, null, n), e.createElement(u.ItemIndicator, { className: "rt-BaseMenuItemIndicator rt-ContextMenuItemIndicator" }, e.createElement(x.ThickCheckIcon, { className: "rt-BaseMenuItemIndicatorIcon rt-ContextMenuItemIndicatorIcon" })), r && e.createElement("div", { className: "rt-BaseMenuShortcut rt-ContextMenuShortcut" }, r));
    });
    w.displayName = "ContextMenu.CheckboxItem";
    var B = (t) => e.createElement(u.Sub, { ...t });
    B.displayName = "ContextMenu.Sub";
    var k = e.forwardRef((t, o) => {
      const { className: n, children: s, ...r } = t;
      return e.createElement(u.SubTrigger, { ...r, asChild: false, ref: o, className: (0, a.default)("rt-BaseMenuItem", "rt-BaseMenuSubTrigger", "rt-ContextMenuItem", "rt-ContextMenuSubTrigger", n) }, s, e.createElement("div", { className: "rt-BaseMenuShortcut rt-ContextMenuShortcut" }, e.createElement(x.ThickChevronRightIcon, { className: "rt-BaseMenuSubTriggerIcon rt-ContextMenuSubTriggerIcon" })));
    });
    k.displayName = "ContextMenu.SubTrigger";
    var W = e.forwardRef((t, o) => {
      const { size: n, variant: s, color: r, highContrast: C } = e.useContext(O), { className: p, children: c, container: P, forceMount: d, ...f } = (0, g.extractProps)({ size: n, variant: s, color: r, highContrast: C, ...t }, i.contextMenuContentPropDefs);
      return e.createElement(u.Portal, { container: P, forceMount: d }, e.createElement(m.Theme, { asChild: true }, e.createElement(u.SubContent, { "data-accent-color": r, alignOffset: -Number(n) * 4, sideOffset: 1, collisionPadding: 10, ...f, asChild: false, ref: o, className: (0, a.default)("rt-PopperContent", "rt-BaseMenuContent", "rt-BaseMenuSubContent", "rt-ContextMenuContent", "rt-ContextMenuSubContent", p) }, e.createElement(h.ScrollArea, { type: "auto" }, e.createElement("div", { className: (0, a.default)("rt-BaseMenuViewport", "rt-ContextMenuViewport") }, c)))));
    });
    W.displayName = "ContextMenu.SubContent";
    var L = e.forwardRef(({ className: t, ...o }, n) => e.createElement(u.Separator, { ...o, asChild: false, ref: n, className: (0, a.default)("rt-BaseMenuSeparator", "rt-ContextMenuSeparator", t) }));
    L.displayName = "ContextMenu.Separator";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/data-list.props.js
var require_data_list_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/data-list.props.js"(exports, module) {
    "use strict";
    var s = Object.defineProperty;
    var c = Object.getOwnPropertyDescriptor;
    var D = Object.getOwnPropertyNames;
    var P = Object.prototype.hasOwnProperty;
    var d = (t, e) => {
      for (var o in e) s(t, o, { get: e[o], enumerable: true });
    };
    var y = (t, e, o, i) => {
      if (e && typeof e == "object" || typeof e == "function") for (let r of D(e)) !P.call(t, r) && r !== o && s(t, r, { get: () => e[r], enumerable: !(i = c(e, r)) || i.enumerable });
      return t;
    };
    var g = (t) => y(s({}, "__esModule", { value: true }), t);
    var b = {};
    d(b, { dataListItemPropDefs: () => l, dataListLabelPropDefs: () => u, dataListRootPropDefs: () => f });
    module.exports = g(b);
    var a = require_color_prop();
    var n = require_high_contrast_prop();
    var p = require_leading_trim_prop();
    var m = require_width_props();
    var v = ["start", "center", "end", "baseline", "stretch"];
    var z = ["horizontal", "vertical"];
    var h = ["1", "2", "3"];
    var f = { orientation: { type: "enum", className: "rt-r-orientation", values: z, default: "horizontal", responsive: true }, size: { type: "enum", className: "rt-r-size", values: h, default: "2", responsive: true }, trim: { ...p.leadingTrimPropDef.trim, className: "rt-r-trim" } };
    var l = { align: { type: "enum", className: "rt-r-ai", values: v, responsive: true } };
    var u = { ...m.widthPropDefs, ...a.colorPropDef, ...n.highContrastPropDef };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/data-list.js
var require_data_list = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/data-list.js"(exports, module) {
    "use strict";
    var y = Object.create;
    var m = Object.defineProperty;
    var u = Object.getOwnPropertyDescriptor;
    var b = Object.getOwnPropertyNames;
    var I = Object.getPrototypeOf;
    var E = Object.prototype.hasOwnProperty;
    var N = (t, a) => {
      for (var e in a) m(t, e, { get: a[e], enumerable: true });
    };
    var d = (t, a, e, s) => {
      if (a && typeof a == "object" || typeof a == "function") for (let r of b(a)) !E.call(t, r) && r !== e && m(t, r, { get: () => a[r], enumerable: !(s = u(a, r)) || s.enumerable });
      return t;
    };
    var f = (t, a, e) => (e = t != null ? y(I(t)) : {}, d(a || !t || !t.__esModule ? m(e, "default", { value: t, enumerable: true }) : e, t));
    var w = (t) => d(m({}, "__esModule", { value: true }), t);
    var V = {};
    N(V, { Item: () => n, Label: () => D, Root: () => l, Value: () => P });
    module.exports = w(V);
    var i = f(require_classnames());
    var o = f(require_react());
    var c = require_text();
    var p = require_data_list_props();
    var L = require_extract_props();
    var R = require_margin_props();
    var l = o.forwardRef((t, a) => {
      const { className: e, ...s } = (0, L.extractProps)(t, p.dataListRootPropDefs, R.marginPropDefs);
      return o.createElement(c.Text, { asChild: true }, o.createElement("dl", { ...s, ref: a, className: (0, i.default)("rt-DataListRoot", e) }));
    });
    l.displayName = "DataList.Root";
    var n = o.forwardRef((t, a) => {
      const { className: e, ...s } = (0, L.extractProps)(t, p.dataListItemPropDefs);
      return o.createElement("div", { ...s, ref: a, className: (0, i.default)("rt-DataListItem", e) });
    });
    n.displayName = "DataList.Item";
    var D = o.forwardRef((t, a) => {
      const { className: e, color: s, ...r } = (0, L.extractProps)(t, p.dataListLabelPropDefs);
      return o.createElement("dt", { ...r, "data-accent-color": s, ref: a, className: (0, i.default)("rt-DataListLabel", e) });
    });
    D.displayName = "DataList.Label";
    var P = o.forwardRef(({ children: t, className: a, ...e }, s) => o.createElement("dd", { ...e, ref: s, className: (0, i.default)(a, "rt-DataListValue") }, t));
    P.displayName = "DataList.Value";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/dialog.js
var require_dialog = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/dialog.js"(exports, module) {
    "use strict";
    var W = Object.create;
    var s = Object.defineProperty;
    var O = Object.getOwnPropertyDescriptor;
    var B = Object.getOwnPropertyNames;
    var H = Object.getPrototypeOf;
    var S = Object.prototype.hasOwnProperty;
    var M = (o, e) => {
      for (var t in e) s(o, t, { get: e[t], enumerable: true });
    };
    var c = (o, e, t, l) => {
      if (e && typeof e == "object" || typeof e == "function") for (let a of B(e)) !S.call(o, a) && a !== t && s(o, a, { get: () => e[a], enumerable: !(l = O(e, a)) || l.enumerable });
      return o;
    };
    var n = (o, e, t) => (t = o != null ? W(H(o)) : {}, c(e || !o || !o.__esModule ? s(t, "default", { value: o, enumerable: true }) : t, o));
    var j = (o) => c(s({}, "__esModule", { value: true }), o);
    var z = {};
    M(z, { Close: () => d, Content: () => P, Description: () => C, Root: () => m, Title: () => f, Trigger: () => D });
    module.exports = j(z);
    var i = n(require_react());
    var y = n(require_classnames());
    var r = n(require_dist18());
    var T = require_dialog_props();
    var v = require_heading();
    var h = require_text();
    var R = require_theme();
    var p = require_extract_props();
    var g = require_require_react_element();
    var m = (o) => i.createElement(r.Root, { ...o, modal: true });
    m.displayName = "Dialog.Root";
    var D = i.forwardRef(({ children: o, ...e }, t) => i.createElement(r.Trigger, { ...e, ref: t, asChild: true }, (0, g.requireReactElement)(o)));
    D.displayName = "Dialog.Trigger";
    var P = i.forwardRef(({ align: o, ...e }, t) => {
      const { align: l, ...a } = T.dialogContentPropDefs, { className: E } = (0, p.extractProps)({ align: o }, { align: l }), { className: N, forceMount: u, container: x, ...w } = (0, p.extractProps)(e, a);
      return i.createElement(r.Portal, { container: x, forceMount: u }, i.createElement(R.Theme, { asChild: true }, i.createElement(r.Overlay, { className: "rt-BaseDialogOverlay rt-DialogOverlay" }, i.createElement("div", { className: "rt-BaseDialogScroll rt-DialogScroll" }, i.createElement("div", { className: `rt-BaseDialogScrollPadding rt-DialogScrollPadding ${E}` }, i.createElement(r.Content, { ...w, ref: t, className: (0, y.default)("rt-BaseDialogContent", "rt-DialogContent", N) }))))));
    });
    P.displayName = "Dialog.Content";
    var f = i.forwardRef((o, e) => i.createElement(r.Title, { asChild: true }, i.createElement(v.Heading, { size: "5", mb: "3", trim: "start", ...o, asChild: false, ref: e })));
    f.displayName = "Dialog.Title";
    var C = i.forwardRef((o, e) => i.createElement(r.Description, { asChild: true }, i.createElement(h.Text, { as: "p", size: "3", ...o, asChild: false, ref: e })));
    C.displayName = "Dialog.Description";
    var d = i.forwardRef(({ children: o, ...e }, t) => i.createElement(r.Close, { ...e, ref: t, asChild: true }, (0, g.requireReactElement)(o)));
    d.displayName = "Dialog.Close";
  }
});

// node_modules/@radix-ui/react-dropdown-menu/dist/index.js
var require_dist35 = __commonJS({
  "node_modules/@radix-ui/react-dropdown-menu/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Arrow: () => Arrow2,
      CheckboxItem: () => CheckboxItem2,
      Content: () => Content2,
      DropdownMenu: () => DropdownMenu,
      DropdownMenuArrow: () => DropdownMenuArrow,
      DropdownMenuCheckboxItem: () => DropdownMenuCheckboxItem,
      DropdownMenuContent: () => DropdownMenuContent,
      DropdownMenuGroup: () => DropdownMenuGroup,
      DropdownMenuItem: () => DropdownMenuItem,
      DropdownMenuItemIndicator: () => DropdownMenuItemIndicator,
      DropdownMenuLabel: () => DropdownMenuLabel,
      DropdownMenuPortal: () => DropdownMenuPortal,
      DropdownMenuRadioGroup: () => DropdownMenuRadioGroup,
      DropdownMenuRadioItem: () => DropdownMenuRadioItem,
      DropdownMenuSeparator: () => DropdownMenuSeparator,
      DropdownMenuSub: () => DropdownMenuSub,
      DropdownMenuSubContent: () => DropdownMenuSubContent,
      DropdownMenuSubTrigger: () => DropdownMenuSubTrigger,
      DropdownMenuTrigger: () => DropdownMenuTrigger,
      Group: () => Group2,
      Item: () => Item2,
      ItemIndicator: () => ItemIndicator2,
      Label: () => Label2,
      Portal: () => Portal2,
      RadioGroup: () => RadioGroup2,
      RadioItem: () => RadioItem2,
      Root: () => Root2,
      Separator: () => Separator2,
      Sub: () => Sub2,
      SubContent: () => SubContent2,
      SubTrigger: () => SubTrigger2,
      Trigger: () => Trigger,
      createDropdownMenuScope: () => createDropdownMenuScope
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_primitive = require_dist7();
    var import_react_compose_refs = require_dist();
    var import_react_context = require_dist6();
    var import_react_use_controllable_state = require_dist11();
    var import_react_primitive = require_dist3();
    var MenuPrimitive = __toESM2(require_dist31());
    var import_react_menu = require_dist31();
    var import_react_id = require_dist9();
    var import_jsx_runtime = require_jsx_runtime();
    var DROPDOWN_MENU_NAME = "DropdownMenu";
    var [createDropdownMenuContext, createDropdownMenuScope] = (0, import_react_context.createContextScope)(
      DROPDOWN_MENU_NAME,
      [import_react_menu.createMenuScope]
    );
    var useMenuScope = (0, import_react_menu.createMenuScope)();
    var [DropdownMenuProvider, useDropdownMenuContext] = createDropdownMenuContext(DROPDOWN_MENU_NAME);
    var DropdownMenu = (props) => {
      const {
        __scopeDropdownMenu,
        children,
        dir,
        open: openProp,
        defaultOpen,
        onOpenChange,
        modal = true
      } = props;
      const menuScope = useMenuScope(__scopeDropdownMenu);
      const triggerRef = React2.useRef(null);
      const [open = false, setOpen] = (0, import_react_use_controllable_state.useControllableState)({
        prop: openProp,
        defaultProp: defaultOpen,
        onChange: onOpenChange
      });
      return (0, import_jsx_runtime.jsx)(
        DropdownMenuProvider,
        {
          scope: __scopeDropdownMenu,
          triggerId: (0, import_react_id.useId)(),
          triggerRef,
          contentId: (0, import_react_id.useId)(),
          open,
          onOpenChange: setOpen,
          onOpenToggle: React2.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]),
          modal,
          children: (0, import_jsx_runtime.jsx)(MenuPrimitive.Root, { ...menuScope, open, onOpenChange: setOpen, dir, modal, children })
        }
      );
    };
    DropdownMenu.displayName = DROPDOWN_MENU_NAME;
    var TRIGGER_NAME = "DropdownMenuTrigger";
    var DropdownMenuTrigger = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeDropdownMenu, disabled = false, ...triggerProps } = props;
        const context = useDropdownMenuContext(TRIGGER_NAME, __scopeDropdownMenu);
        const menuScope = useMenuScope(__scopeDropdownMenu);
        return (0, import_jsx_runtime.jsx)(MenuPrimitive.Anchor, { asChild: true, ...menuScope, children: (0, import_jsx_runtime.jsx)(
          import_react_primitive.Primitive.button,
          {
            type: "button",
            id: context.triggerId,
            "aria-haspopup": "menu",
            "aria-expanded": context.open,
            "aria-controls": context.open ? context.contentId : void 0,
            "data-state": context.open ? "open" : "closed",
            "data-disabled": disabled ? "" : void 0,
            disabled,
            ...triggerProps,
            ref: (0, import_react_compose_refs.composeRefs)(forwardedRef, context.triggerRef),
            onPointerDown: (0, import_primitive.composeEventHandlers)(props.onPointerDown, (event) => {
              if (!disabled && event.button === 0 && event.ctrlKey === false) {
                context.onOpenToggle();
                if (!context.open) event.preventDefault();
              }
            }),
            onKeyDown: (0, import_primitive.composeEventHandlers)(props.onKeyDown, (event) => {
              if (disabled) return;
              if (["Enter", " "].includes(event.key)) context.onOpenToggle();
              if (event.key === "ArrowDown") context.onOpenChange(true);
              if (["Enter", " ", "ArrowDown"].includes(event.key)) event.preventDefault();
            })
          }
        ) });
      }
    );
    DropdownMenuTrigger.displayName = TRIGGER_NAME;
    var PORTAL_NAME = "DropdownMenuPortal";
    var DropdownMenuPortal = (props) => {
      const { __scopeDropdownMenu, ...portalProps } = props;
      const menuScope = useMenuScope(__scopeDropdownMenu);
      return (0, import_jsx_runtime.jsx)(MenuPrimitive.Portal, { ...menuScope, ...portalProps });
    };
    DropdownMenuPortal.displayName = PORTAL_NAME;
    var CONTENT_NAME = "DropdownMenuContent";
    var DropdownMenuContent = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeDropdownMenu, ...contentProps } = props;
        const context = useDropdownMenuContext(CONTENT_NAME, __scopeDropdownMenu);
        const menuScope = useMenuScope(__scopeDropdownMenu);
        const hasInteractedOutsideRef = React2.useRef(false);
        return (0, import_jsx_runtime.jsx)(
          MenuPrimitive.Content,
          {
            id: context.contentId,
            "aria-labelledby": context.triggerId,
            ...menuScope,
            ...contentProps,
            ref: forwardedRef,
            onCloseAutoFocus: (0, import_primitive.composeEventHandlers)(props.onCloseAutoFocus, (event) => {
              var _a;
              if (!hasInteractedOutsideRef.current) (_a = context.triggerRef.current) == null ? void 0 : _a.focus();
              hasInteractedOutsideRef.current = false;
              event.preventDefault();
            }),
            onInteractOutside: (0, import_primitive.composeEventHandlers)(props.onInteractOutside, (event) => {
              const originalEvent = event.detail.originalEvent;
              const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;
              const isRightClick = originalEvent.button === 2 || ctrlLeftClick;
              if (!context.modal || isRightClick) hasInteractedOutsideRef.current = true;
            }),
            style: {
              ...props.style,
              // re-namespace exposed content custom properties
              ...{
                "--radix-dropdown-menu-content-transform-origin": "var(--radix-popper-transform-origin)",
                "--radix-dropdown-menu-content-available-width": "var(--radix-popper-available-width)",
                "--radix-dropdown-menu-content-available-height": "var(--radix-popper-available-height)",
                "--radix-dropdown-menu-trigger-width": "var(--radix-popper-anchor-width)",
                "--radix-dropdown-menu-trigger-height": "var(--radix-popper-anchor-height)"
              }
            }
          }
        );
      }
    );
    DropdownMenuContent.displayName = CONTENT_NAME;
    var GROUP_NAME = "DropdownMenuGroup";
    var DropdownMenuGroup = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeDropdownMenu, ...groupProps } = props;
        const menuScope = useMenuScope(__scopeDropdownMenu);
        return (0, import_jsx_runtime.jsx)(MenuPrimitive.Group, { ...menuScope, ...groupProps, ref: forwardedRef });
      }
    );
    DropdownMenuGroup.displayName = GROUP_NAME;
    var LABEL_NAME = "DropdownMenuLabel";
    var DropdownMenuLabel = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeDropdownMenu, ...labelProps } = props;
        const menuScope = useMenuScope(__scopeDropdownMenu);
        return (0, import_jsx_runtime.jsx)(MenuPrimitive.Label, { ...menuScope, ...labelProps, ref: forwardedRef });
      }
    );
    DropdownMenuLabel.displayName = LABEL_NAME;
    var ITEM_NAME = "DropdownMenuItem";
    var DropdownMenuItem = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeDropdownMenu, ...itemProps } = props;
        const menuScope = useMenuScope(__scopeDropdownMenu);
        return (0, import_jsx_runtime.jsx)(MenuPrimitive.Item, { ...menuScope, ...itemProps, ref: forwardedRef });
      }
    );
    DropdownMenuItem.displayName = ITEM_NAME;
    var CHECKBOX_ITEM_NAME = "DropdownMenuCheckboxItem";
    var DropdownMenuCheckboxItem = React2.forwardRef((props, forwardedRef) => {
      const { __scopeDropdownMenu, ...checkboxItemProps } = props;
      const menuScope = useMenuScope(__scopeDropdownMenu);
      return (0, import_jsx_runtime.jsx)(MenuPrimitive.CheckboxItem, { ...menuScope, ...checkboxItemProps, ref: forwardedRef });
    });
    DropdownMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;
    var RADIO_GROUP_NAME = "DropdownMenuRadioGroup";
    var DropdownMenuRadioGroup = React2.forwardRef((props, forwardedRef) => {
      const { __scopeDropdownMenu, ...radioGroupProps } = props;
      const menuScope = useMenuScope(__scopeDropdownMenu);
      return (0, import_jsx_runtime.jsx)(MenuPrimitive.RadioGroup, { ...menuScope, ...radioGroupProps, ref: forwardedRef });
    });
    DropdownMenuRadioGroup.displayName = RADIO_GROUP_NAME;
    var RADIO_ITEM_NAME = "DropdownMenuRadioItem";
    var DropdownMenuRadioItem = React2.forwardRef((props, forwardedRef) => {
      const { __scopeDropdownMenu, ...radioItemProps } = props;
      const menuScope = useMenuScope(__scopeDropdownMenu);
      return (0, import_jsx_runtime.jsx)(MenuPrimitive.RadioItem, { ...menuScope, ...radioItemProps, ref: forwardedRef });
    });
    DropdownMenuRadioItem.displayName = RADIO_ITEM_NAME;
    var INDICATOR_NAME = "DropdownMenuItemIndicator";
    var DropdownMenuItemIndicator = React2.forwardRef((props, forwardedRef) => {
      const { __scopeDropdownMenu, ...itemIndicatorProps } = props;
      const menuScope = useMenuScope(__scopeDropdownMenu);
      return (0, import_jsx_runtime.jsx)(MenuPrimitive.ItemIndicator, { ...menuScope, ...itemIndicatorProps, ref: forwardedRef });
    });
    DropdownMenuItemIndicator.displayName = INDICATOR_NAME;
    var SEPARATOR_NAME = "DropdownMenuSeparator";
    var DropdownMenuSeparator = React2.forwardRef((props, forwardedRef) => {
      const { __scopeDropdownMenu, ...separatorProps } = props;
      const menuScope = useMenuScope(__scopeDropdownMenu);
      return (0, import_jsx_runtime.jsx)(MenuPrimitive.Separator, { ...menuScope, ...separatorProps, ref: forwardedRef });
    });
    DropdownMenuSeparator.displayName = SEPARATOR_NAME;
    var ARROW_NAME = "DropdownMenuArrow";
    var DropdownMenuArrow = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeDropdownMenu, ...arrowProps } = props;
        const menuScope = useMenuScope(__scopeDropdownMenu);
        return (0, import_jsx_runtime.jsx)(MenuPrimitive.Arrow, { ...menuScope, ...arrowProps, ref: forwardedRef });
      }
    );
    DropdownMenuArrow.displayName = ARROW_NAME;
    var DropdownMenuSub = (props) => {
      const { __scopeDropdownMenu, children, open: openProp, onOpenChange, defaultOpen } = props;
      const menuScope = useMenuScope(__scopeDropdownMenu);
      const [open = false, setOpen] = (0, import_react_use_controllable_state.useControllableState)({
        prop: openProp,
        defaultProp: defaultOpen,
        onChange: onOpenChange
      });
      return (0, import_jsx_runtime.jsx)(MenuPrimitive.Sub, { ...menuScope, open, onOpenChange: setOpen, children });
    };
    var SUB_TRIGGER_NAME = "DropdownMenuSubTrigger";
    var DropdownMenuSubTrigger = React2.forwardRef((props, forwardedRef) => {
      const { __scopeDropdownMenu, ...subTriggerProps } = props;
      const menuScope = useMenuScope(__scopeDropdownMenu);
      return (0, import_jsx_runtime.jsx)(MenuPrimitive.SubTrigger, { ...menuScope, ...subTriggerProps, ref: forwardedRef });
    });
    DropdownMenuSubTrigger.displayName = SUB_TRIGGER_NAME;
    var SUB_CONTENT_NAME = "DropdownMenuSubContent";
    var DropdownMenuSubContent = React2.forwardRef((props, forwardedRef) => {
      const { __scopeDropdownMenu, ...subContentProps } = props;
      const menuScope = useMenuScope(__scopeDropdownMenu);
      return (0, import_jsx_runtime.jsx)(
        MenuPrimitive.SubContent,
        {
          ...menuScope,
          ...subContentProps,
          ref: forwardedRef,
          style: {
            ...props.style,
            // re-namespace exposed content custom properties
            ...{
              "--radix-dropdown-menu-content-transform-origin": "var(--radix-popper-transform-origin)",
              "--radix-dropdown-menu-content-available-width": "var(--radix-popper-available-width)",
              "--radix-dropdown-menu-content-available-height": "var(--radix-popper-available-height)",
              "--radix-dropdown-menu-trigger-width": "var(--radix-popper-anchor-width)",
              "--radix-dropdown-menu-trigger-height": "var(--radix-popper-anchor-height)"
            }
          }
        }
      );
    });
    DropdownMenuSubContent.displayName = SUB_CONTENT_NAME;
    var Root2 = DropdownMenu;
    var Trigger = DropdownMenuTrigger;
    var Portal2 = DropdownMenuPortal;
    var Content2 = DropdownMenuContent;
    var Group2 = DropdownMenuGroup;
    var Label2 = DropdownMenuLabel;
    var Item2 = DropdownMenuItem;
    var CheckboxItem2 = DropdownMenuCheckboxItem;
    var RadioGroup2 = DropdownMenuRadioGroup;
    var RadioItem2 = DropdownMenuRadioItem;
    var ItemIndicator2 = DropdownMenuItemIndicator;
    var Separator2 = DropdownMenuSeparator;
    var Arrow2 = DropdownMenuArrow;
    var Sub2 = DropdownMenuSub;
    var SubTrigger2 = DropdownMenuSubTrigger;
    var SubContent2 = DropdownMenuSubContent;
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/dropdown-menu.props.js
var require_dropdown_menu_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/dropdown-menu.props.js"(exports, module) {
    "use strict";
    var p = Object.defineProperty;
    var a = Object.getOwnPropertyDescriptor;
    var d = Object.getOwnPropertyNames;
    var f = Object.prototype.hasOwnProperty;
    var u = (n, e) => {
      for (var r in e) p(n, r, { get: e[r], enumerable: true });
    };
    var D = (n, e, r, t) => {
      if (e && typeof e == "object" || typeof e == "function") for (let s of d(e)) !f.call(n, s) && s !== r && p(n, s, { get: () => e[s], enumerable: !(t = a(e, s)) || t.enumerable });
      return n;
    };
    var M = (n) => D(p({}, "__esModule", { value: true }), n);
    var P = {};
    u(P, { dropdownMenuCheckboxItemPropDefs: () => o.baseMenuCheckboxItemPropDefs, dropdownMenuContentPropDefs: () => o.baseMenuContentPropDefs, dropdownMenuItemPropDefs: () => o.baseMenuItemPropDefs, dropdownMenuRadioItemPropDefs: () => o.baseMenuRadioItemPropDefs });
    module.exports = M(P);
    var o = require_base_menu_props();
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/dropdown-menu.js
var require_dropdown_menu = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/dropdown-menu.js"(exports, module) {
    "use strict";
    "use client";
    var z = Object.create;
    var w = Object.defineProperty;
    var A = Object.getOwnPropertyDescriptor;
    var F = Object.getOwnPropertyNames;
    var q = Object.getPrototypeOf;
    var H = Object.prototype.hasOwnProperty;
    var J = (e, r) => {
      for (var n in r) w(e, n, { get: r[n], enumerable: true });
    };
    var W = (e, r, n, s) => {
      if (r && typeof r == "object" || typeof r == "function") for (let t of F(r)) !H.call(e, t) && t !== n && w(e, t, { get: () => r[t], enumerable: !(s = A(r, t)) || s.enumerable });
      return e;
    };
    var C = (e, r, n) => (n = e != null ? z(q(e)) : {}, W(r || !e || !e.__esModule ? w(n, "default", { value: e, enumerable: true }) : n, e));
    var K = (e) => W(w({}, "__esModule", { value: true }), e);
    var Q = {};
    J(Q, { CheckboxItem: () => N, Content: () => y, Group: () => S, Item: () => R, Label: () => v, RadioGroup: () => x, RadioItem: () => T, Root: () => b, Separator: () => k, Sub: () => E, SubContent: () => B, SubTrigger: () => G, Trigger: () => g, TriggerIcon: () => u.ChevronDownIcon });
    module.exports = K(Q);
    var o = C(require_react());
    var d = C(require_classnames());
    var p = C(require_dist35());
    var O = require_dist2();
    var I = require_scroll_area();
    var a = require_dropdown_menu_props();
    var M = require_theme();
    var u = require_icons();
    var h = require_extract_props();
    var V = require_require_react_element();
    var b = (e) => o.createElement(p.Root, { ...e });
    b.displayName = "DropdownMenu.Root";
    var g = o.forwardRef(({ children: e, ...r }, n) => o.createElement(p.Trigger, { ...r, ref: n, asChild: true }, (0, V.requireReactElement)(e)));
    g.displayName = "DropdownMenu.Trigger";
    var L = o.createContext({});
    var y = o.forwardRef((e, r) => {
      const n = (0, M.useThemeContext)(), { size: s = a.dropdownMenuContentPropDefs.size.default, variant: t = a.dropdownMenuContentPropDefs.variant.default, highContrast: i = a.dropdownMenuContentPropDefs.highContrast.default } = e, { className: m, children: D, color: l, container: c, forceMount: P, ...j } = (0, h.extractProps)(e, a.dropdownMenuContentPropDefs), f = l || n.accentColor;
      return o.createElement(p.Portal, { container: c, forceMount: P }, o.createElement(M.Theme, { asChild: true }, o.createElement(p.Content, { "data-accent-color": f, align: "start", sideOffset: 4, collisionPadding: 10, ...j, asChild: false, ref: r, className: (0, d.default)("rt-PopperContent", "rt-BaseMenuContent", "rt-DropdownMenuContent", m) }, o.createElement(I.ScrollArea, { type: "auto" }, o.createElement("div", { className: (0, d.default)("rt-BaseMenuViewport", "rt-DropdownMenuViewport") }, o.createElement(L.Provider, { value: o.useMemo(() => ({ size: s, variant: t, color: f, highContrast: i }), [s, t, f, i]) }, D))))));
    });
    y.displayName = "DropdownMenu.Content";
    var v = o.forwardRef(({ className: e, ...r }, n) => o.createElement(p.Label, { ...r, asChild: false, ref: n, className: (0, d.default)("rt-BaseMenuLabel", "rt-DropdownMenuLabel", e) }));
    v.displayName = "DropdownMenu.Label";
    var R = o.forwardRef((e, r) => {
      const { className: n, children: s, color: t = a.dropdownMenuItemPropDefs.color.default, shortcut: i, ...m } = e;
      return o.createElement(p.Item, { "data-accent-color": t, ...m, ref: r, className: (0, d.default)("rt-reset", "rt-BaseMenuItem", "rt-DropdownMenuItem", n) }, o.createElement(O.Slottable, null, s), i && o.createElement("div", { className: "rt-BaseMenuShortcut rt-DropdownMenuShortcut" }, i));
    });
    R.displayName = "DropdownMenu.Item";
    var S = o.forwardRef(({ className: e, ...r }, n) => o.createElement(p.Group, { ...r, asChild: false, ref: n, className: (0, d.default)("rt-BaseMenuGroup", "rt-DropdownMenuGroup", e) }));
    S.displayName = "DropdownMenu.Group";
    var x = o.forwardRef(({ className: e, ...r }, n) => o.createElement(p.RadioGroup, { ...r, asChild: false, ref: n, className: (0, d.default)("rt-BaseMenuRadioGroup", "rt-DropdownMenuRadioGroup", e) }));
    x.displayName = "DropdownMenu.RadioGroup";
    var T = o.forwardRef((e, r) => {
      const { children: n, className: s, color: t = a.dropdownMenuRadioItemPropDefs.color.default, ...i } = e;
      return o.createElement(p.RadioItem, { ...i, asChild: false, ref: r, "data-accent-color": t, className: (0, d.default)("rt-BaseMenuItem", "rt-BaseMenuRadioItem", "rt-DropdownMenuItem", "rt-DropdownMenuRadioItem", s) }, n, o.createElement(p.ItemIndicator, { className: "rt-BaseMenuItemIndicator rt-DropdownMenuItemIndicator" }, o.createElement(u.ThickCheckIcon, { className: "rt-BaseMenuItemIndicatorIcon rt-DropdownMenuItemIndicatorIcon" })));
    });
    T.displayName = "DropdownMenu.RadioItem";
    var N = o.forwardRef((e, r) => {
      const { children: n, className: s, shortcut: t, color: i = a.dropdownMenuCheckboxItemPropDefs.color.default, ...m } = e;
      return o.createElement(p.CheckboxItem, { ...m, asChild: false, ref: r, "data-accent-color": i, className: (0, d.default)("rt-BaseMenuItem", "rt-BaseMenuCheckboxItem", "rt-DropdownMenuItem", "rt-DropdownMenuCheckboxItem", s) }, n, o.createElement(p.ItemIndicator, { className: "rt-BaseMenuItemIndicator rt-DropdownMenuItemIndicator" }, o.createElement(u.ThickCheckIcon, { className: "rt-BaseMenuItemIndicatorIcon rt-ContextMenuItemIndicatorIcon" })), t && o.createElement("div", { className: "rt-BaseMenuShortcut rt-DropdownMenuShortcut" }, t));
    });
    N.displayName = "DropdownMenu.CheckboxItem";
    var E = (e) => o.createElement(p.Sub, { ...e });
    E.displayName = "DropdownMenu.Sub";
    var G = o.forwardRef((e, r) => {
      const { className: n, children: s, ...t } = e;
      return o.createElement(p.SubTrigger, { ...t, asChild: false, ref: r, className: (0, d.default)("rt-BaseMenuItem", "rt-BaseMenuSubTrigger", "rt-DropdownMenuItem", "rt-DropdownMenuSubTrigger", n) }, s, o.createElement("div", { className: "rt-BaseMenuShortcut rt-DropdownMenuShortcut" }, o.createElement(u.ThickChevronRightIcon, { className: "rt-BaseMenuSubTriggerIcon rt-DropdownMenuSubtriggerIcon" })));
    });
    G.displayName = "DropdownMenu.SubTrigger";
    var B = o.forwardRef((e, r) => {
      const { size: n, variant: s, color: t, highContrast: i } = o.useContext(L), { className: m, children: D, container: l, forceMount: c, ...P } = (0, h.extractProps)({ size: n, variant: s, color: t, highContrast: i, ...e }, a.dropdownMenuContentPropDefs);
      return o.createElement(p.Portal, { container: l, forceMount: c }, o.createElement(M.Theme, { asChild: true }, o.createElement(p.SubContent, { "data-accent-color": t, alignOffset: -Number(n) * 4, sideOffset: 1, collisionPadding: 10, ...P, asChild: false, ref: r, className: (0, d.default)("rt-PopperContent", "rt-BaseMenuContent", "rt-BaseMenuSubContent", "rt-DropdownMenuContent", "rt-DropdownMenuSubContent", m) }, o.createElement(I.ScrollArea, { type: "auto" }, o.createElement("div", { className: (0, d.default)("rt-BaseMenuViewport", "rt-DropdownMenuViewport") }, D)))));
    });
    B.displayName = "DropdownMenu.SubContent";
    var k = o.forwardRef(({ className: e, ...r }, n) => o.createElement(p.Separator, { ...r, asChild: false, ref: n, className: (0, d.default)("rt-BaseMenuSeparator", "rt-DropdownMenuSeparator", e) }));
    k.displayName = "DropdownMenu.Separator";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/em.props.js
var require_em_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/em.props.js"(exports, module) {
    "use strict";
    var e = Object.defineProperty;
    var a = Object.getOwnPropertyDescriptor;
    var s = Object.getOwnPropertyNames;
    var c = Object.prototype.hasOwnProperty;
    var n = (o, r) => {
      for (var t in r) e(o, t, { get: r[t], enumerable: true });
    };
    var x = (o, r, t, f) => {
      if (r && typeof r == "object" || typeof r == "function") for (let p of s(r)) !c.call(o, p) && p !== t && e(o, p, { get: () => r[p], enumerable: !(f = a(r, p)) || f.enumerable });
      return o;
    };
    var d = (o) => x(e({}, "__esModule", { value: true }), o);
    var h = {};
    n(h, { emPropDefs: () => P });
    module.exports = d(h);
    var m = require_as_child_prop();
    var i = require_text_wrap_prop();
    var D = require_truncate_prop();
    var P = { ...m.asChildPropDef, ...D.truncatePropDef, ...i.textWrapPropDef };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/em.js
var require_em = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/em.js"(exports, module) {
    "use strict";
    var l = Object.create;
    var t = Object.defineProperty;
    var y = Object.getOwnPropertyDescriptor;
    var d = Object.getOwnPropertyNames;
    var C = Object.getPrototypeOf;
    var R = Object.prototype.hasOwnProperty;
    var h = (e, o) => {
      for (var p in o) t(e, p, { get: o[p], enumerable: true });
    };
    var f = (e, o, p, r) => {
      if (o && typeof o == "object" || typeof o == "function") for (let m of d(o)) !R.call(e, m) && m !== p && t(e, m, { get: () => o[m], enumerable: !(r = y(o, m)) || r.enumerable });
      return e;
    };
    var n = (e, o, p) => (p = e != null ? l(C(e)) : {}, f(o || !e || !e.__esModule ? t(p, "default", { value: e, enumerable: true }) : p, e));
    var x = (e) => f(t({}, "__esModule", { value: true }), e);
    var D = {};
    h(D, { Em: () => s });
    module.exports = x(D);
    var P = n(require_react());
    var a = n(require_classnames());
    var E = require_dist2();
    var i = require_em_props();
    var c = require_extract_props();
    var s = P.forwardRef((e, o) => {
      const { asChild: p, className: r, ...m } = (0, c.extractProps)(e, i.emPropDefs);
      return P.createElement(p ? E.Slot : "em", { ...m, ref: o, className: (0, a.default)("rt-Em", r) });
    });
    s.displayName = "Em";
  }
});

// node_modules/@radix-ui/react-hover-card/dist/index.js
var require_dist36 = __commonJS({
  "node_modules/@radix-ui/react-hover-card/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Arrow: () => Arrow2,
      Content: () => Content2,
      HoverCard: () => HoverCard,
      HoverCardArrow: () => HoverCardArrow,
      HoverCardContent: () => HoverCardContent,
      HoverCardPortal: () => HoverCardPortal,
      HoverCardTrigger: () => HoverCardTrigger,
      Portal: () => Portal,
      Root: () => Root2,
      Trigger: () => Trigger,
      createHoverCardScope: () => createHoverCardScope
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_primitive = require_dist7();
    var import_react_context = require_dist6();
    var import_react_use_controllable_state = require_dist11();
    var import_react_compose_refs = require_dist();
    var PopperPrimitive = __toESM2(require_dist22());
    var import_react_popper = require_dist22();
    var import_react_portal = require_dist15();
    var import_react_presence = require_dist16();
    var import_react_primitive = require_dist3();
    var import_react_dismissable_layer = require_dist13();
    var import_jsx_runtime = require_jsx_runtime();
    var originalBodyUserSelect;
    var HOVERCARD_NAME = "HoverCard";
    var [createHoverCardContext, createHoverCardScope] = (0, import_react_context.createContextScope)(HOVERCARD_NAME, [
      import_react_popper.createPopperScope
    ]);
    var usePopperScope = (0, import_react_popper.createPopperScope)();
    var [HoverCardProvider, useHoverCardContext] = createHoverCardContext(HOVERCARD_NAME);
    var HoverCard = (props) => {
      const {
        __scopeHoverCard,
        children,
        open: openProp,
        defaultOpen,
        onOpenChange,
        openDelay = 700,
        closeDelay = 300
      } = props;
      const popperScope = usePopperScope(__scopeHoverCard);
      const openTimerRef = React2.useRef(0);
      const closeTimerRef = React2.useRef(0);
      const hasSelectionRef = React2.useRef(false);
      const isPointerDownOnContentRef = React2.useRef(false);
      const [open = false, setOpen] = (0, import_react_use_controllable_state.useControllableState)({
        prop: openProp,
        defaultProp: defaultOpen,
        onChange: onOpenChange
      });
      const handleOpen = React2.useCallback(() => {
        clearTimeout(closeTimerRef.current);
        openTimerRef.current = window.setTimeout(() => setOpen(true), openDelay);
      }, [openDelay, setOpen]);
      const handleClose = React2.useCallback(() => {
        clearTimeout(openTimerRef.current);
        if (!hasSelectionRef.current && !isPointerDownOnContentRef.current) {
          closeTimerRef.current = window.setTimeout(() => setOpen(false), closeDelay);
        }
      }, [closeDelay, setOpen]);
      const handleDismiss = React2.useCallback(() => setOpen(false), [setOpen]);
      React2.useEffect(() => {
        return () => {
          clearTimeout(openTimerRef.current);
          clearTimeout(closeTimerRef.current);
        };
      }, []);
      return (0, import_jsx_runtime.jsx)(
        HoverCardProvider,
        {
          scope: __scopeHoverCard,
          open,
          onOpenChange: setOpen,
          onOpen: handleOpen,
          onClose: handleClose,
          onDismiss: handleDismiss,
          hasSelectionRef,
          isPointerDownOnContentRef,
          children: (0, import_jsx_runtime.jsx)(PopperPrimitive.Root, { ...popperScope, children })
        }
      );
    };
    HoverCard.displayName = HOVERCARD_NAME;
    var TRIGGER_NAME = "HoverCardTrigger";
    var HoverCardTrigger = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeHoverCard, ...triggerProps } = props;
        const context = useHoverCardContext(TRIGGER_NAME, __scopeHoverCard);
        const popperScope = usePopperScope(__scopeHoverCard);
        return (0, import_jsx_runtime.jsx)(PopperPrimitive.Anchor, { asChild: true, ...popperScope, children: (0, import_jsx_runtime.jsx)(
          import_react_primitive.Primitive.a,
          {
            "data-state": context.open ? "open" : "closed",
            ...triggerProps,
            ref: forwardedRef,
            onPointerEnter: (0, import_primitive.composeEventHandlers)(props.onPointerEnter, excludeTouch(context.onOpen)),
            onPointerLeave: (0, import_primitive.composeEventHandlers)(props.onPointerLeave, excludeTouch(context.onClose)),
            onFocus: (0, import_primitive.composeEventHandlers)(props.onFocus, context.onOpen),
            onBlur: (0, import_primitive.composeEventHandlers)(props.onBlur, context.onClose),
            onTouchStart: (0, import_primitive.composeEventHandlers)(props.onTouchStart, (event) => event.preventDefault())
          }
        ) });
      }
    );
    HoverCardTrigger.displayName = TRIGGER_NAME;
    var PORTAL_NAME = "HoverCardPortal";
    var [PortalProvider, usePortalContext] = createHoverCardContext(PORTAL_NAME, {
      forceMount: void 0
    });
    var HoverCardPortal = (props) => {
      const { __scopeHoverCard, forceMount, children, container } = props;
      const context = useHoverCardContext(PORTAL_NAME, __scopeHoverCard);
      return (0, import_jsx_runtime.jsx)(PortalProvider, { scope: __scopeHoverCard, forceMount, children: (0, import_jsx_runtime.jsx)(import_react_presence.Presence, { present: forceMount || context.open, children: (0, import_jsx_runtime.jsx)(import_react_portal.Portal, { asChild: true, container, children }) }) });
    };
    HoverCardPortal.displayName = PORTAL_NAME;
    var CONTENT_NAME = "HoverCardContent";
    var HoverCardContent = React2.forwardRef(
      (props, forwardedRef) => {
        const portalContext = usePortalContext(CONTENT_NAME, props.__scopeHoverCard);
        const { forceMount = portalContext.forceMount, ...contentProps } = props;
        const context = useHoverCardContext(CONTENT_NAME, props.__scopeHoverCard);
        return (0, import_jsx_runtime.jsx)(import_react_presence.Presence, { present: forceMount || context.open, children: (0, import_jsx_runtime.jsx)(
          HoverCardContentImpl,
          {
            "data-state": context.open ? "open" : "closed",
            ...contentProps,
            onPointerEnter: (0, import_primitive.composeEventHandlers)(props.onPointerEnter, excludeTouch(context.onOpen)),
            onPointerLeave: (0, import_primitive.composeEventHandlers)(props.onPointerLeave, excludeTouch(context.onClose)),
            ref: forwardedRef
          }
        ) });
      }
    );
    HoverCardContent.displayName = CONTENT_NAME;
    var HoverCardContentImpl = React2.forwardRef((props, forwardedRef) => {
      const {
        __scopeHoverCard,
        onEscapeKeyDown,
        onPointerDownOutside,
        onFocusOutside,
        onInteractOutside,
        ...contentProps
      } = props;
      const context = useHoverCardContext(CONTENT_NAME, __scopeHoverCard);
      const popperScope = usePopperScope(__scopeHoverCard);
      const ref = React2.useRef(null);
      const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, ref);
      const [containSelection, setContainSelection] = React2.useState(false);
      React2.useEffect(() => {
        if (containSelection) {
          const body = document.body;
          originalBodyUserSelect = body.style.userSelect || body.style.webkitUserSelect;
          body.style.userSelect = "none";
          body.style.webkitUserSelect = "none";
          return () => {
            body.style.userSelect = originalBodyUserSelect;
            body.style.webkitUserSelect = originalBodyUserSelect;
          };
        }
      }, [containSelection]);
      React2.useEffect(() => {
        if (ref.current) {
          const handlePointerUp = () => {
            setContainSelection(false);
            context.isPointerDownOnContentRef.current = false;
            setTimeout(() => {
              var _a;
              const hasSelection = ((_a = document.getSelection()) == null ? void 0 : _a.toString()) !== "";
              if (hasSelection) context.hasSelectionRef.current = true;
            });
          };
          document.addEventListener("pointerup", handlePointerUp);
          return () => {
            document.removeEventListener("pointerup", handlePointerUp);
            context.hasSelectionRef.current = false;
            context.isPointerDownOnContentRef.current = false;
          };
        }
      }, [context.isPointerDownOnContentRef, context.hasSelectionRef]);
      React2.useEffect(() => {
        if (ref.current) {
          const tabbables = getTabbableNodes(ref.current);
          tabbables.forEach((tabbable) => tabbable.setAttribute("tabindex", "-1"));
        }
      });
      return (0, import_jsx_runtime.jsx)(
        import_react_dismissable_layer.DismissableLayer,
        {
          asChild: true,
          disableOutsidePointerEvents: false,
          onInteractOutside,
          onEscapeKeyDown,
          onPointerDownOutside,
          onFocusOutside: (0, import_primitive.composeEventHandlers)(onFocusOutside, (event) => {
            event.preventDefault();
          }),
          onDismiss: context.onDismiss,
          children: (0, import_jsx_runtime.jsx)(
            PopperPrimitive.Content,
            {
              ...popperScope,
              ...contentProps,
              onPointerDown: (0, import_primitive.composeEventHandlers)(contentProps.onPointerDown, (event) => {
                if (event.currentTarget.contains(event.target)) {
                  setContainSelection(true);
                }
                context.hasSelectionRef.current = false;
                context.isPointerDownOnContentRef.current = true;
              }),
              ref: composedRefs,
              style: {
                ...contentProps.style,
                userSelect: containSelection ? "text" : void 0,
                // Safari requires prefix
                WebkitUserSelect: containSelection ? "text" : void 0,
                // re-namespace exposed content custom properties
                ...{
                  "--radix-hover-card-content-transform-origin": "var(--radix-popper-transform-origin)",
                  "--radix-hover-card-content-available-width": "var(--radix-popper-available-width)",
                  "--radix-hover-card-content-available-height": "var(--radix-popper-available-height)",
                  "--radix-hover-card-trigger-width": "var(--radix-popper-anchor-width)",
                  "--radix-hover-card-trigger-height": "var(--radix-popper-anchor-height)"
                }
              }
            }
          )
        }
      );
    });
    var ARROW_NAME = "HoverCardArrow";
    var HoverCardArrow = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeHoverCard, ...arrowProps } = props;
        const popperScope = usePopperScope(__scopeHoverCard);
        return (0, import_jsx_runtime.jsx)(PopperPrimitive.Arrow, { ...popperScope, ...arrowProps, ref: forwardedRef });
      }
    );
    HoverCardArrow.displayName = ARROW_NAME;
    function excludeTouch(eventHandler) {
      return (event) => event.pointerType === "touch" ? void 0 : eventHandler();
    }
    function getTabbableNodes(container) {
      const nodes = [];
      const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {
        acceptNode: (node) => {
          return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
        }
      });
      while (walker.nextNode()) nodes.push(walker.currentNode);
      return nodes;
    }
    var Root2 = HoverCard;
    var Trigger = HoverCardTrigger;
    var Portal = HoverCardPortal;
    var Content2 = HoverCardContent;
    var Arrow2 = HoverCardArrow;
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/hover-card.props.js
var require_hover_card_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/hover-card.props.js"(exports, module) {
    "use strict";
    var s = Object.defineProperty;
    var h = Object.getOwnPropertyDescriptor;
    var m = Object.getOwnPropertyNames;
    var P = Object.prototype.hasOwnProperty;
    var a = (t, e) => {
      for (var r in e) s(t, r, { get: e[r], enumerable: true });
    };
    var D = (t, e, r, i) => {
      if (e && typeof e == "object" || typeof e == "function") for (let o of m(e)) !P.call(t, o) && o !== r && s(t, o, { get: () => e[o], enumerable: !(i = h(e, o)) || i.enumerable });
      return t;
    };
    var y = (t) => D(s({}, "__esModule", { value: true }), t);
    var w = {};
    a(w, { hoverCardContentPropDefs: () => d });
    module.exports = y(w);
    var f = require_as_child_prop();
    var n = require_height_props();
    var p = require_width_props();
    var C = ["1", "2", "3"];
    var d = { ...f.asChildPropDef, size: { type: "enum", className: "rt-r-size", values: C, default: "2", responsive: true }, width: p.widthPropDefs.width, minWidth: p.widthPropDefs.minWidth, maxWidth: { ...p.widthPropDefs.maxWidth, default: "480px" }, ...n.heightPropDefs };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/hover-card.js
var require_hover_card = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/hover-card.js"(exports, module) {
    "use strict";
    var R = Object.create;
    var i = Object.defineProperty;
    var y = Object.getOwnPropertyDescriptor;
    var T = Object.getOwnPropertyNames;
    var h = Object.getPrototypeOf;
    var u = Object.prototype.hasOwnProperty;
    var E = (r, e) => {
      for (var o in e) i(r, o, { get: e[o], enumerable: true });
    };
    var P = (r, e, o, a) => {
      if (e && typeof e == "object" || typeof e == "function") for (let t of T(e)) !u.call(r, t) && t !== o && i(r, t, { get: () => e[t], enumerable: !(a = y(e, t)) || a.enumerable });
      return r;
    };
    var s = (r, e, o) => (o = r != null ? R(h(r)) : {}, P(e || !r || !r.__esModule ? i(o, "default", { value: r, enumerable: true }) : o, r));
    var N = (r) => P(i({}, "__esModule", { value: true }), r);
    var x = {};
    E(x, { Content: () => v, Root: () => m, Trigger: () => d });
    module.exports = N(x);
    var n = s(require_react());
    var C = s(require_classnames());
    var p = s(require_dist36());
    var f = require_hover_card_props();
    var H = require_extract_props();
    var g = require_require_react_element();
    var l = require_theme();
    var m = (r) => n.createElement(p.Root, { closeDelay: 150, openDelay: 200, ...r });
    m.displayName = "HoverCard.Root";
    var d = n.forwardRef(({ children: r, className: e, ...o }, a) => n.createElement(p.Trigger, { ref: a, className: (0, C.default)("rt-HoverCardTrigger", e), ...o, asChild: true }, (0, g.requireReactElement)(r)));
    d.displayName = "HoverCard.Trigger";
    var v = n.forwardRef((r, e) => {
      const { className: o, forceMount: a, container: t, ...c } = (0, H.extractProps)(r, f.hoverCardContentPropDefs);
      return n.createElement(p.Portal, { container: t, forceMount: a }, n.createElement(l.Theme, { asChild: true }, n.createElement(p.Content, { align: "start", sideOffset: 8, collisionPadding: 10, ...c, ref: e, className: (0, C.default)("rt-PopperContent", "rt-HoverCardContent", o) })));
    });
    v.displayName = "HoverCard.Content";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/icon-button.js
var require_icon_button = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/icon-button.js"(exports, module) {
    "use strict";
    var f = Object.create;
    var r = Object.defineProperty;
    var I = Object.getOwnPropertyDescriptor;
    var i = Object.getOwnPropertyNames;
    var l = Object.getPrototypeOf;
    var y = Object.prototype.hasOwnProperty;
    var R = (t, o) => {
      for (var e in o) r(t, e, { get: o[e], enumerable: true });
    };
    var a = (t, o, e, p) => {
      if (o && typeof o == "object" || typeof o == "function") for (let n of i(o)) !y.call(t, n) && n !== e && r(t, n, { get: () => o[n], enumerable: !(p = I(o, n)) || p.enumerable });
      return t;
    };
    var c = (t, o, e) => (e = t != null ? f(l(t)) : {}, a(o || !t || !t.__esModule ? r(e, "default", { value: t, enumerable: true }) : e, t));
    var P = (t) => a(r({}, "__esModule", { value: true }), t);
    var d = {};
    R(d, { IconButton: () => s });
    module.exports = P(d);
    var B = c(require_react());
    var m = c(require_classnames());
    var u = require_base_button();
    var s = B.forwardRef(({ className: t, ...o }, e) => B.createElement(u.BaseButton, { ...o, ref: e, className: (0, m.default)("rt-IconButton", t) }));
    s.displayName = "IconButton";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/inset.props.js
var require_inset_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/inset.props.js"(exports, module) {
    "use strict";
    var u = Object.defineProperty;
    var i = Object.getOwnPropertyDescriptor;
    var m = Object.getOwnPropertyNames;
    var d = Object.prototype.hasOwnProperty;
    var f = (e, p) => {
      for (var t in p) u(e, t, { get: p[t], enumerable: true });
    };
    var c = (e, p, t, o) => {
      if (p && typeof p == "object" || typeof p == "function") for (let a of m(p)) !d.call(e, a) && a !== t && u(e, a, { get: () => p[a], enumerable: !(o = i(p, a)) || o.enumerable });
      return e;
    };
    var y = (e) => c(u({}, "__esModule", { value: true }), e);
    var v = {};
    f(v, { insetPropDefs: () => l });
    module.exports = y(v);
    var n = require_as_child_prop();
    var b = ["all", "x", "y", "top", "bottom", "left", "right"];
    var V = ["border-box", "padding-box"];
    var s = ["current", "0"];
    var l = { ...n.asChildPropDef, side: { type: "enum", className: "rt-r-side", values: b, default: "all", responsive: true }, clip: { type: "enum", className: "rt-r-clip", values: V, default: "border-box", responsive: true }, p: { type: "enum", className: "rt-r-p", values: s, parseValue: r, responsive: true }, px: { type: "enum", className: "rt-r-px", values: s, parseValue: r, responsive: true }, py: { type: "enum", className: "rt-r-py", values: s, parseValue: r, responsive: true }, pt: { type: "enum", className: "rt-r-pt", values: s, parseValue: r, responsive: true }, pr: { type: "enum", className: "rt-r-pr", values: s, parseValue: r, responsive: true }, pb: { type: "enum", className: "rt-r-pb", values: s, parseValue: r, responsive: true }, pl: { type: "enum", className: "rt-r-pl", values: s, parseValue: r, responsive: true } };
    function r(e) {
      return e === "current" ? "inset" : e;
    }
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/inset.js
var require_inset = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/inset.js"(exports, module) {
    "use strict";
    var y = Object.create;
    var s = Object.defineProperty;
    var I = Object.getOwnPropertyDescriptor;
    var v = Object.getOwnPropertyNames;
    var C = Object.getPrototypeOf;
    var D = Object.prototype.hasOwnProperty;
    var R = (e, o) => {
      for (var r in o) s(e, r, { get: o[r], enumerable: true });
    };
    var n = (e, o, r, t) => {
      if (o && typeof o == "object" || typeof o == "function") for (let p of v(o)) !D.call(e, p) && p !== r && s(e, p, { get: () => o[p], enumerable: !(t = I(o, p)) || t.enumerable });
      return e;
    };
    var i = (e, o, r) => (r = e != null ? y(C(e)) : {}, n(o || !e || !e.__esModule ? s(r, "default", { value: e, enumerable: true }) : r, e));
    var g = (e) => n(s({}, "__esModule", { value: true }), e);
    var h = {};
    R(h, { Inset: () => m });
    module.exports = g(h);
    var f = i(require_react());
    var a = i(require_classnames());
    var P = require_dist2();
    var c = require_inset_props();
    var d = require_extract_props();
    var l = require_margin_props();
    var m = f.forwardRef((e, o) => {
      const { asChild: r, className: t, ...p } = (0, d.extractProps)(e, c.insetPropDefs, l.marginPropDefs);
      return f.createElement(r ? P.Slot : "div", { ...p, ref: o, className: (0, a.default)("rt-Inset", t) });
    });
    m.displayName = "Inset";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/kbd.props.js
var require_kbd_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/kbd.props.js"(exports, module) {
    "use strict";
    var p = Object.defineProperty;
    var m = Object.getOwnPropertyDescriptor;
    var a = Object.getOwnPropertyNames;
    var n = Object.prototype.hasOwnProperty;
    var z = (e, s) => {
      for (var r in s) p(e, r, { get: s[r], enumerable: true });
    };
    var c = (e, s, r, t) => {
      if (s && typeof s == "object" || typeof s == "function") for (let o of a(s)) !n.call(e, o) && o !== r && p(e, o, { get: () => s[o], enumerable: !(t = m(s, o)) || t.enumerable });
      return e;
    };
    var u = (e) => c(p({}, "__esModule", { value: true }), e);
    var P = {};
    z(P, { kbdPropDefs: () => f });
    module.exports = u(P);
    var i = require_as_child_prop();
    var D = ["1", "2", "3", "4", "5", "6", "7", "8", "9"];
    var f = { ...i.asChildPropDef, size: { type: "enum", className: "rt-r-size", values: D, responsive: true } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/kbd.js
var require_kbd = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/kbd.js"(exports, module) {
    "use strict";
    var l = Object.create;
    var s = Object.defineProperty;
    var y = Object.getOwnPropertyDescriptor;
    var K = Object.getOwnPropertyNames;
    var k = Object.getPrototypeOf;
    var C = Object.prototype.hasOwnProperty;
    var D = (o, r) => {
      for (var p in r) s(o, p, { get: r[p], enumerable: true });
    };
    var d = (o, r, p, t) => {
      if (r && typeof r == "object" || typeof r == "function") for (let e of K(r)) !C.call(o, e) && e !== p && s(o, e, { get: () => r[e], enumerable: !(t = y(r, e)) || t.enumerable });
      return o;
    };
    var f = (o, r, p) => (p = o != null ? l(k(o)) : {}, d(r || !o || !o.__esModule ? s(p, "default", { value: o, enumerable: true }) : p, o));
    var R = (o) => d(s({}, "__esModule", { value: true }), o);
    var g = {};
    D(g, { Kbd: () => m });
    module.exports = R(g);
    var n = f(require_react());
    var a = f(require_classnames());
    var i = require_dist2();
    var P = require_kbd_props();
    var b = require_extract_props();
    var c = require_margin_props();
    var m = n.forwardRef((o, r) => {
      const { asChild: p, className: t, ...e } = (0, b.extractProps)(o, P.kbdPropDefs, c.marginPropDefs);
      return n.createElement(p ? i.Slot : "kbd", { ...e, ref: r, className: (0, a.default)("rt-reset", "rt-Kbd", t) });
    });
    m.displayName = "Kbd";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/link.props.js
var require_link_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/link.props.js"(exports, module) {
    "use strict";
    var p = Object.defineProperty;
    var P = Object.getOwnPropertyDescriptor;
    var c = Object.getOwnPropertyNames;
    var d = Object.prototype.hasOwnProperty;
    var y = (r, e) => {
      for (var t in e) p(r, t, { get: e[t], enumerable: true });
    };
    var h = (r, e, t, s) => {
      if (e && typeof e == "object" || typeof e == "function") for (let o of c(e)) !d.call(r, o) && o !== t && p(r, o, { get: () => e[o], enumerable: !(s = P(e, o)) || s.enumerable });
      return r;
    };
    var z = (r) => h(p({}, "__esModule", { value: true }), r);
    var C = {};
    y(C, { linkPropDefs: () => D });
    module.exports = z(C);
    var i = require_as_child_prop();
    var n = require_color_prop();
    var f = require_high_contrast_prop();
    var m = require_leading_trim_prop();
    var a = require_text_wrap_prop();
    var u = require_truncate_prop();
    var l = require_weight_prop();
    var v = ["1", "2", "3", "4", "5", "6", "7", "8", "9"];
    var g = ["auto", "always", "hover", "none"];
    var D = { ...i.asChildPropDef, size: { type: "enum", className: "rt-r-size", values: v, responsive: true }, ...l.weightPropDef, ...m.leadingTrimPropDef, ...u.truncatePropDef, ...a.textWrapPropDef, underline: { type: "enum", className: "rt-underline", values: g, default: "auto" }, ...n.accentColorPropDef, ...f.highContrastPropDef };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/link.js
var require_link = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/link.js"(exports, module) {
    "use strict";
    var y = Object.create;
    var s = Object.defineProperty;
    var L = Object.getOwnPropertyDescriptor;
    var h = Object.getOwnPropertyNames;
    var x = Object.getPrototypeOf;
    var C = Object.prototype.hasOwnProperty;
    var D = (o, r) => {
      for (var e in r) s(o, e, { get: r[e], enumerable: true });
    };
    var m = (o, r, e, t) => {
      if (r && typeof r == "object" || typeof r == "function") for (let p of h(r)) !C.call(o, p) && p !== e && s(o, p, { get: () => r[p], enumerable: !(t = L(r, p)) || t.enumerable });
      return o;
    };
    var a = (o, r, e) => (e = o != null ? y(x(o)) : {}, m(r || !o || !o.__esModule ? s(e, "default", { value: o, enumerable: true }) : e, o));
    var N = (o) => m(s({}, "__esModule", { value: true }), o);
    var R = {};
    D(R, { Link: () => i });
    module.exports = N(R);
    var n = a(require_react());
    var f = a(require_classnames());
    var P = require_text();
    var l = require_extract_props();
    var c = require_link_props();
    var i = n.forwardRef((o, r) => {
      const { children: e, className: t, color: p, asChild: k, ...d } = (0, l.extractProps)(o, c.linkPropDefs);
      return n.createElement(P.Text, { ...d, "data-accent-color": p, ref: r, asChild: true, className: (0, f.default)("rt-reset", "rt-Link", t) }, k ? e : n.createElement("a", null, e));
    });
    i.displayName = "Link";
  }
});

// node_modules/@radix-ui/react-popover/dist/index.js
var require_dist37 = __commonJS({
  "node_modules/@radix-ui/react-popover/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Anchor: () => Anchor2,
      Arrow: () => Arrow2,
      Close: () => Close,
      Content: () => Content2,
      Popover: () => Popover,
      PopoverAnchor: () => PopoverAnchor,
      PopoverArrow: () => PopoverArrow,
      PopoverClose: () => PopoverClose,
      PopoverContent: () => PopoverContent,
      PopoverPortal: () => PopoverPortal,
      PopoverTrigger: () => PopoverTrigger,
      Portal: () => Portal,
      Root: () => Root2,
      Trigger: () => Trigger,
      createPopoverScope: () => createPopoverScope
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_primitive = require_dist7();
    var import_react_compose_refs = require_dist();
    var import_react_context = require_dist6();
    var import_react_dismissable_layer = require_dist13();
    var import_react_focus_guards = require_dist17();
    var import_react_focus_scope = require_dist14();
    var import_react_id = require_dist9();
    var PopperPrimitive = __toESM2(require_dist22());
    var import_react_popper = require_dist22();
    var import_react_portal = require_dist15();
    var import_react_presence = require_dist16();
    var import_react_primitive = require_dist3();
    var import_react_slot = require_dist2();
    var import_react_use_controllable_state = require_dist11();
    var import_aria_hidden = (init_es20152(), __toCommonJS(es2015_exports2));
    var import_react_remove_scroll = (init_es2015(), __toCommonJS(es2015_exports));
    var import_jsx_runtime = require_jsx_runtime();
    var POPOVER_NAME = "Popover";
    var [createPopoverContext, createPopoverScope] = (0, import_react_context.createContextScope)(POPOVER_NAME, [
      import_react_popper.createPopperScope
    ]);
    var usePopperScope = (0, import_react_popper.createPopperScope)();
    var [PopoverProvider, usePopoverContext] = createPopoverContext(POPOVER_NAME);
    var Popover = (props) => {
      const {
        __scopePopover,
        children,
        open: openProp,
        defaultOpen,
        onOpenChange,
        modal = false
      } = props;
      const popperScope = usePopperScope(__scopePopover);
      const triggerRef = React2.useRef(null);
      const [hasCustomAnchor, setHasCustomAnchor] = React2.useState(false);
      const [open = false, setOpen] = (0, import_react_use_controllable_state.useControllableState)({
        prop: openProp,
        defaultProp: defaultOpen,
        onChange: onOpenChange
      });
      return (0, import_jsx_runtime.jsx)(PopperPrimitive.Root, { ...popperScope, children: (0, import_jsx_runtime.jsx)(
        PopoverProvider,
        {
          scope: __scopePopover,
          contentId: (0, import_react_id.useId)(),
          triggerRef,
          open,
          onOpenChange: setOpen,
          onOpenToggle: React2.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]),
          hasCustomAnchor,
          onCustomAnchorAdd: React2.useCallback(() => setHasCustomAnchor(true), []),
          onCustomAnchorRemove: React2.useCallback(() => setHasCustomAnchor(false), []),
          modal,
          children
        }
      ) });
    };
    Popover.displayName = POPOVER_NAME;
    var ANCHOR_NAME = "PopoverAnchor";
    var PopoverAnchor = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopePopover, ...anchorProps } = props;
        const context = usePopoverContext(ANCHOR_NAME, __scopePopover);
        const popperScope = usePopperScope(__scopePopover);
        const { onCustomAnchorAdd, onCustomAnchorRemove } = context;
        React2.useEffect(() => {
          onCustomAnchorAdd();
          return () => onCustomAnchorRemove();
        }, [onCustomAnchorAdd, onCustomAnchorRemove]);
        return (0, import_jsx_runtime.jsx)(PopperPrimitive.Anchor, { ...popperScope, ...anchorProps, ref: forwardedRef });
      }
    );
    PopoverAnchor.displayName = ANCHOR_NAME;
    var TRIGGER_NAME = "PopoverTrigger";
    var PopoverTrigger = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopePopover, ...triggerProps } = props;
        const context = usePopoverContext(TRIGGER_NAME, __scopePopover);
        const popperScope = usePopperScope(__scopePopover);
        const composedTriggerRef = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, context.triggerRef);
        const trigger = (0, import_jsx_runtime.jsx)(
          import_react_primitive.Primitive.button,
          {
            type: "button",
            "aria-haspopup": "dialog",
            "aria-expanded": context.open,
            "aria-controls": context.contentId,
            "data-state": getState(context.open),
            ...triggerProps,
            ref: composedTriggerRef,
            onClick: (0, import_primitive.composeEventHandlers)(props.onClick, context.onOpenToggle)
          }
        );
        return context.hasCustomAnchor ? trigger : (0, import_jsx_runtime.jsx)(PopperPrimitive.Anchor, { asChild: true, ...popperScope, children: trigger });
      }
    );
    PopoverTrigger.displayName = TRIGGER_NAME;
    var PORTAL_NAME = "PopoverPortal";
    var [PortalProvider, usePortalContext] = createPopoverContext(PORTAL_NAME, {
      forceMount: void 0
    });
    var PopoverPortal = (props) => {
      const { __scopePopover, forceMount, children, container } = props;
      const context = usePopoverContext(PORTAL_NAME, __scopePopover);
      return (0, import_jsx_runtime.jsx)(PortalProvider, { scope: __scopePopover, forceMount, children: (0, import_jsx_runtime.jsx)(import_react_presence.Presence, { present: forceMount || context.open, children: (0, import_jsx_runtime.jsx)(import_react_portal.Portal, { asChild: true, container, children }) }) });
    };
    PopoverPortal.displayName = PORTAL_NAME;
    var CONTENT_NAME = "PopoverContent";
    var PopoverContent = React2.forwardRef(
      (props, forwardedRef) => {
        const portalContext = usePortalContext(CONTENT_NAME, props.__scopePopover);
        const { forceMount = portalContext.forceMount, ...contentProps } = props;
        const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);
        return (0, import_jsx_runtime.jsx)(import_react_presence.Presence, { present: forceMount || context.open, children: context.modal ? (0, import_jsx_runtime.jsx)(PopoverContentModal, { ...contentProps, ref: forwardedRef }) : (0, import_jsx_runtime.jsx)(PopoverContentNonModal, { ...contentProps, ref: forwardedRef }) });
      }
    );
    PopoverContent.displayName = CONTENT_NAME;
    var PopoverContentModal = React2.forwardRef(
      (props, forwardedRef) => {
        const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);
        const contentRef = React2.useRef(null);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, contentRef);
        const isRightClickOutsideRef = React2.useRef(false);
        React2.useEffect(() => {
          const content = contentRef.current;
          if (content) return (0, import_aria_hidden.hideOthers)(content);
        }, []);
        return (0, import_jsx_runtime.jsx)(import_react_remove_scroll.RemoveScroll, { as: import_react_slot.Slot, allowPinchZoom: true, children: (0, import_jsx_runtime.jsx)(
          PopoverContentImpl,
          {
            ...props,
            ref: composedRefs,
            trapFocus: context.open,
            disableOutsidePointerEvents: true,
            onCloseAutoFocus: (0, import_primitive.composeEventHandlers)(props.onCloseAutoFocus, (event) => {
              var _a;
              event.preventDefault();
              if (!isRightClickOutsideRef.current) (_a = context.triggerRef.current) == null ? void 0 : _a.focus();
            }),
            onPointerDownOutside: (0, import_primitive.composeEventHandlers)(
              props.onPointerDownOutside,
              (event) => {
                const originalEvent = event.detail.originalEvent;
                const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;
                const isRightClick = originalEvent.button === 2 || ctrlLeftClick;
                isRightClickOutsideRef.current = isRightClick;
              },
              { checkForDefaultPrevented: false }
            ),
            onFocusOutside: (0, import_primitive.composeEventHandlers)(
              props.onFocusOutside,
              (event) => event.preventDefault(),
              { checkForDefaultPrevented: false }
            )
          }
        ) });
      }
    );
    var PopoverContentNonModal = React2.forwardRef(
      (props, forwardedRef) => {
        const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);
        const hasInteractedOutsideRef = React2.useRef(false);
        const hasPointerDownOutsideRef = React2.useRef(false);
        return (0, import_jsx_runtime.jsx)(
          PopoverContentImpl,
          {
            ...props,
            ref: forwardedRef,
            trapFocus: false,
            disableOutsidePointerEvents: false,
            onCloseAutoFocus: (event) => {
              var _a, _b;
              (_a = props.onCloseAutoFocus) == null ? void 0 : _a.call(props, event);
              if (!event.defaultPrevented) {
                if (!hasInteractedOutsideRef.current) (_b = context.triggerRef.current) == null ? void 0 : _b.focus();
                event.preventDefault();
              }
              hasInteractedOutsideRef.current = false;
              hasPointerDownOutsideRef.current = false;
            },
            onInteractOutside: (event) => {
              var _a, _b;
              (_a = props.onInteractOutside) == null ? void 0 : _a.call(props, event);
              if (!event.defaultPrevented) {
                hasInteractedOutsideRef.current = true;
                if (event.detail.originalEvent.type === "pointerdown") {
                  hasPointerDownOutsideRef.current = true;
                }
              }
              const target = event.target;
              const targetIsTrigger = (_b = context.triggerRef.current) == null ? void 0 : _b.contains(target);
              if (targetIsTrigger) event.preventDefault();
              if (event.detail.originalEvent.type === "focusin" && hasPointerDownOutsideRef.current) {
                event.preventDefault();
              }
            }
          }
        );
      }
    );
    var PopoverContentImpl = React2.forwardRef(
      (props, forwardedRef) => {
        const {
          __scopePopover,
          trapFocus,
          onOpenAutoFocus,
          onCloseAutoFocus,
          disableOutsidePointerEvents,
          onEscapeKeyDown,
          onPointerDownOutside,
          onFocusOutside,
          onInteractOutside,
          ...contentProps
        } = props;
        const context = usePopoverContext(CONTENT_NAME, __scopePopover);
        const popperScope = usePopperScope(__scopePopover);
        (0, import_react_focus_guards.useFocusGuards)();
        return (0, import_jsx_runtime.jsx)(
          import_react_focus_scope.FocusScope,
          {
            asChild: true,
            loop: true,
            trapped: trapFocus,
            onMountAutoFocus: onOpenAutoFocus,
            onUnmountAutoFocus: onCloseAutoFocus,
            children: (0, import_jsx_runtime.jsx)(
              import_react_dismissable_layer.DismissableLayer,
              {
                asChild: true,
                disableOutsidePointerEvents,
                onInteractOutside,
                onEscapeKeyDown,
                onPointerDownOutside,
                onFocusOutside,
                onDismiss: () => context.onOpenChange(false),
                children: (0, import_jsx_runtime.jsx)(
                  PopperPrimitive.Content,
                  {
                    "data-state": getState(context.open),
                    role: "dialog",
                    id: context.contentId,
                    ...popperScope,
                    ...contentProps,
                    ref: forwardedRef,
                    style: {
                      ...contentProps.style,
                      // re-namespace exposed content custom properties
                      ...{
                        "--radix-popover-content-transform-origin": "var(--radix-popper-transform-origin)",
                        "--radix-popover-content-available-width": "var(--radix-popper-available-width)",
                        "--radix-popover-content-available-height": "var(--radix-popper-available-height)",
                        "--radix-popover-trigger-width": "var(--radix-popper-anchor-width)",
                        "--radix-popover-trigger-height": "var(--radix-popper-anchor-height)"
                      }
                    }
                  }
                )
              }
            )
          }
        );
      }
    );
    var CLOSE_NAME = "PopoverClose";
    var PopoverClose = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopePopover, ...closeProps } = props;
        const context = usePopoverContext(CLOSE_NAME, __scopePopover);
        return (0, import_jsx_runtime.jsx)(
          import_react_primitive.Primitive.button,
          {
            type: "button",
            ...closeProps,
            ref: forwardedRef,
            onClick: (0, import_primitive.composeEventHandlers)(props.onClick, () => context.onOpenChange(false))
          }
        );
      }
    );
    PopoverClose.displayName = CLOSE_NAME;
    var ARROW_NAME = "PopoverArrow";
    var PopoverArrow = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopePopover, ...arrowProps } = props;
        const popperScope = usePopperScope(__scopePopover);
        return (0, import_jsx_runtime.jsx)(PopperPrimitive.Arrow, { ...popperScope, ...arrowProps, ref: forwardedRef });
      }
    );
    PopoverArrow.displayName = ARROW_NAME;
    function getState(open) {
      return open ? "open" : "closed";
    }
    var Root2 = Popover;
    var Anchor2 = PopoverAnchor;
    var Trigger = PopoverTrigger;
    var Portal = PopoverPortal;
    var Content2 = PopoverContent;
    var Close = PopoverClose;
    var Arrow2 = PopoverArrow;
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/popover.props.js
var require_popover_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/popover.props.js"(exports, module) {
    "use strict";
    var s = Object.defineProperty;
    var h = Object.getOwnPropertyDescriptor;
    var m = Object.getOwnPropertyNames;
    var d = Object.prototype.hasOwnProperty;
    var D = (t, e) => {
      for (var p in e) s(t, p, { get: e[p], enumerable: true });
    };
    var a = (t, e, p, i) => {
      if (e && typeof e == "object" || typeof e == "function") for (let o of m(e)) !d.call(t, o) && o !== p && s(t, o, { get: () => e[o], enumerable: !(i = h(e, o)) || i.enumerable });
      return t;
    };
    var y = (t) => a(s({}, "__esModule", { value: true }), t);
    var c = {};
    D(c, { popoverContentPropDefs: () => P });
    module.exports = y(c);
    var f = require_as_child_prop();
    var n = require_height_props();
    var r = require_width_props();
    var w = ["1", "2", "3", "4"];
    var P = { ...f.asChildPropDef, size: { type: "enum", className: "rt-r-size", values: w, default: "2", responsive: true }, width: r.widthPropDefs.width, minWidth: r.widthPropDefs.minWidth, maxWidth: { ...r.widthPropDefs.maxWidth, default: "480px" }, ...n.heightPropDefs };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/popover.js
var require_popover = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/popover.js"(exports, module) {
    "use strict";
    var T = Object.create;
    var s = Object.defineProperty;
    var E = Object.getOwnPropertyDescriptor;
    var A = Object.getOwnPropertyNames;
    var u = Object.getPrototypeOf;
    var x = Object.prototype.hasOwnProperty;
    var N = (o, e) => {
      for (var r in e) s(o, r, { get: e[r], enumerable: true });
    };
    var c = (o, e, r, P) => {
      if (e && typeof e == "object" || typeof e == "function") for (let p of A(e)) !x.call(o, p) && p !== r && s(o, p, { get: () => e[p], enumerable: !(P = E(e, p)) || P.enumerable });
      return o;
    };
    var i = (o, e, r) => (r = o != null ? T(u(o)) : {}, c(e || !o || !o.__esModule ? s(r, "default", { value: o, enumerable: true }) : r, o));
    var W = (o) => c(s({}, "__esModule", { value: true }), o);
    var w = {};
    N(w, { Anchor: () => C, Close: () => l, Content: () => f, Root: () => m, Trigger: () => a });
    module.exports = W(w);
    var t = i(require_react());
    var g = i(require_classnames());
    var n = i(require_dist37());
    var R = require_extract_props();
    var v = require_require_react_element();
    var h = require_popover_props();
    var d = require_theme();
    var m = (o) => t.createElement(n.Root, { ...o });
    m.displayName = "Popover.Root";
    var a = t.forwardRef(({ children: o, ...e }, r) => t.createElement(n.Trigger, { ...e, ref: r, asChild: true }, (0, v.requireReactElement)(o)));
    a.displayName = "Popover.Trigger";
    var f = t.forwardRef((o, e) => {
      const { className: r, forceMount: P, container: p, ...y } = (0, R.extractProps)(o, h.popoverContentPropDefs);
      return t.createElement(n.Portal, { container: p, forceMount: P }, t.createElement(d.Theme, { asChild: true }, t.createElement(n.Content, { align: "start", sideOffset: 8, collisionPadding: 10, ...y, ref: e, className: (0, g.default)("rt-PopperContent", "rt-PopoverContent", r) })));
    });
    f.displayName = "Popover.Content";
    var l = t.forwardRef(({ children: o, ...e }, r) => t.createElement(n.Close, { ...e, ref: r, asChild: true }, (0, v.requireReactElement)(o)));
    l.displayName = "Popover.Close";
    var C = t.forwardRef(({ children: o, ...e }, r) => t.createElement(n.Anchor, { ...e, ref: r }));
    C.displayName = "Popover.Anchor";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/portal.js
var require_portal = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/portal.js"(exports, module) {
    "use strict";
    var e = Object.defineProperty;
    var m = Object.getOwnPropertyDescriptor;
    var p = Object.getOwnPropertyNames;
    var x = Object.prototype.hasOwnProperty;
    var P = (r, o) => {
      for (var a in o) e(r, a, { get: o[a], enumerable: true });
    };
    var b = (r, o, a, f) => {
      if (o && typeof o == "object" || typeof o == "function") for (let t of p(o)) !x.call(r, t) && t !== a && e(r, t, { get: () => o[t], enumerable: !(f = m(o, t)) || f.enumerable });
      return r;
    };
    var c = (r) => b(e({}, "__esModule", { value: true }), r);
    var d = {};
    P(d, { Portal: () => l.Portal });
    module.exports = c(d);
    var l = require_dist15();
  }
});

// node_modules/@radix-ui/react-progress/dist/index.js
var require_dist38 = __commonJS({
  "node_modules/@radix-ui/react-progress/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Indicator: () => Indicator,
      Progress: () => Progress,
      ProgressIndicator: () => ProgressIndicator,
      Root: () => Root,
      createProgressScope: () => createProgressScope
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_react_context = require_dist6();
    var import_react_primitive = require_dist3();
    var import_jsx_runtime = require_jsx_runtime();
    var PROGRESS_NAME = "Progress";
    var DEFAULT_MAX = 100;
    var [createProgressContext, createProgressScope] = (0, import_react_context.createContextScope)(PROGRESS_NAME);
    var [ProgressProvider, useProgressContext] = createProgressContext(PROGRESS_NAME);
    var Progress = React2.forwardRef(
      (props, forwardedRef) => {
        const {
          __scopeProgress,
          value: valueProp = null,
          max: maxProp,
          getValueLabel = defaultGetValueLabel,
          ...progressProps
        } = props;
        if ((maxProp || maxProp === 0) && !isValidMaxNumber(maxProp)) {
          console.error(getInvalidMaxError(`${maxProp}`, "Progress"));
        }
        const max = isValidMaxNumber(maxProp) ? maxProp : DEFAULT_MAX;
        if (valueProp !== null && !isValidValueNumber(valueProp, max)) {
          console.error(getInvalidValueError(`${valueProp}`, "Progress"));
        }
        const value = isValidValueNumber(valueProp, max) ? valueProp : null;
        const valueLabel = isNumber(value) ? getValueLabel(value, max) : void 0;
        return (0, import_jsx_runtime.jsx)(ProgressProvider, { scope: __scopeProgress, value, max, children: (0, import_jsx_runtime.jsx)(
          import_react_primitive.Primitive.div,
          {
            "aria-valuemax": max,
            "aria-valuemin": 0,
            "aria-valuenow": isNumber(value) ? value : void 0,
            "aria-valuetext": valueLabel,
            role: "progressbar",
            "data-state": getProgressState(value, max),
            "data-value": value ?? void 0,
            "data-max": max,
            ...progressProps,
            ref: forwardedRef
          }
        ) });
      }
    );
    Progress.displayName = PROGRESS_NAME;
    var INDICATOR_NAME = "ProgressIndicator";
    var ProgressIndicator = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeProgress, ...indicatorProps } = props;
        const context = useProgressContext(INDICATOR_NAME, __scopeProgress);
        return (0, import_jsx_runtime.jsx)(
          import_react_primitive.Primitive.div,
          {
            "data-state": getProgressState(context.value, context.max),
            "data-value": context.value ?? void 0,
            "data-max": context.max,
            ...indicatorProps,
            ref: forwardedRef
          }
        );
      }
    );
    ProgressIndicator.displayName = INDICATOR_NAME;
    function defaultGetValueLabel(value, max) {
      return `${Math.round(value / max * 100)}%`;
    }
    function getProgressState(value, maxValue) {
      return value == null ? "indeterminate" : value === maxValue ? "complete" : "loading";
    }
    function isNumber(value) {
      return typeof value === "number";
    }
    function isValidMaxNumber(max) {
      return isNumber(max) && !isNaN(max) && max > 0;
    }
    function isValidValueNumber(value, max) {
      return isNumber(value) && !isNaN(value) && value <= max && value >= 0;
    }
    function getInvalidMaxError(propValue, componentName) {
      return `Invalid prop \`max\` of value \`${propValue}\` supplied to \`${componentName}\`. Only numbers greater than 0 are valid max values. Defaulting to \`${DEFAULT_MAX}\`.`;
    }
    function getInvalidValueError(propValue, componentName) {
      return `Invalid prop \`value\` of value \`${propValue}\` supplied to \`${componentName}\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${DEFAULT_MAX} if no \`max\` prop is set)
  - \`null\` or \`undefined\` if the progress is indeterminate.

Defaulting to \`null\`.`;
    }
    var Root = Progress;
    var Indicator = ProgressIndicator;
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/progress.props.js
var require_progress_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/progress.props.js"(exports, module) {
    "use strict";
    var t = Object.defineProperty;
    var m = Object.getOwnPropertyDescriptor;
    var u = Object.getOwnPropertyNames;
    var c = Object.prototype.hasOwnProperty;
    var l = (s, r) => {
      for (var o in r) t(s, o, { get: r[o], enumerable: true });
    };
    var v = (s, r, o, a) => {
      if (r && typeof r == "object" || typeof r == "function") for (let e of u(r)) !c.call(s, e) && e !== o && t(s, e, { get: () => r[e], enumerable: !(a = m(r, e)) || a.enumerable });
      return s;
    };
    var D = (s) => v(t({}, "__esModule", { value: true }), s);
    var y = {};
    l(y, { progressPropDefs: () => n });
    module.exports = D(y);
    var p = require_color_prop();
    var i = require_high_contrast_prop();
    var f = require_radius_prop();
    var P = ["1", "2", "3"];
    var d = ["classic", "surface", "soft"];
    var n = { size: { type: "enum", className: "rt-r-size", values: P, default: "2", responsive: true }, variant: { type: "enum", className: "rt-variant", values: d, default: "surface" }, ...p.colorPropDef, ...i.highContrastPropDef, ...f.radiusPropDef, duration: { type: "string" } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/progress.js
var require_progress = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/progress.js"(exports, module) {
    "use strict";
    var R = Object.create;
    var m = Object.defineProperty;
    var x = Object.getOwnPropertyDescriptor;
    var h = Object.getOwnPropertyNames;
    var D = Object.getPrototypeOf;
    var N = Object.prototype.hasOwnProperty;
    var j = (r, o) => {
      for (var e in o) m(r, e, { get: o[e], enumerable: true });
    };
    var P = (r, o, e, t) => {
      if (o && typeof o == "object" || typeof o == "function") for (let s of h(o)) !N.call(r, s) && s !== e && m(r, s, { get: () => o[s], enumerable: !(t = x(o, s)) || t.enumerable });
      return r;
    };
    var i = (r, o, e) => (e = r != null ? R(D(r)) : {}, P(o || !r || !r.__esModule ? m(e, "default", { value: r, enumerable: true }) : e, r));
    var w = (r) => P(m({}, "__esModule", { value: true }), r);
    var C = {};
    j(C, { Progress: () => n });
    module.exports = w(C);
    var a = i(require_react());
    var g = i(require_classnames());
    var f = i(require_dist38());
    var d = require_progress_props();
    var l = require_extract_props();
    var u = require_merge_styles();
    var c = require_margin_props();
    var n = a.forwardRef((r, o) => {
      const { className: e, style: t, color: s, radius: y, duration: v, ...p } = (0, l.extractProps)(r, d.progressPropDefs, c.marginPropDefs);
      return a.createElement(f.Root, { "data-accent-color": s, "data-radius": y, ref: o, className: (0, g.default)("rt-ProgressRoot", e), style: (0, u.mergeStyles)({ "--progress-duration": "value" in p ? void 0 : v, "--progress-value": "value" in p ? p.value : void 0, "--progress-max": "max" in p ? p.max : void 0 }, t), ...p, asChild: false }, a.createElement(f.Indicator, { className: "rt-ProgressIndicator" }));
    });
    n.displayName = "Progress";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/quote.props.js
var require_quote_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/quote.props.js"(exports, module) {
    "use strict";
    var e = Object.defineProperty;
    var a = Object.getOwnPropertyDescriptor;
    var s = Object.getOwnPropertyNames;
    var c = Object.prototype.hasOwnProperty;
    var n = (r, o) => {
      for (var p in o) e(r, p, { get: o[p], enumerable: true });
    };
    var u = (r, o, p, f) => {
      if (o && typeof o == "object" || typeof o == "function") for (let t of s(o)) !c.call(r, t) && t !== p && e(r, t, { get: () => o[t], enumerable: !(f = a(o, t)) || f.enumerable });
      return r;
    };
    var x = (r) => u(e({}, "__esModule", { value: true }), r);
    var d = {};
    n(d, { quotePropDefs: () => P });
    module.exports = x(d);
    var m = require_as_child_prop();
    var i = require_text_wrap_prop();
    var D = require_truncate_prop();
    var P = { ...m.asChildPropDef, ...D.truncatePropDef, ...i.textWrapPropDef };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/quote.js
var require_quote = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/quote.js"(exports, module) {
    "use strict";
    var l = Object.create;
    var s = Object.defineProperty;
    var Q = Object.getOwnPropertyDescriptor;
    var y = Object.getOwnPropertyNames;
    var d = Object.getPrototypeOf;
    var q = Object.prototype.hasOwnProperty;
    var C = (o, e) => {
      for (var t in e) s(o, t, { get: e[t], enumerable: true });
    };
    var f = (o, e, t, r) => {
      if (e && typeof e == "object" || typeof e == "function") for (let p of y(e)) !q.call(o, p) && p !== t && s(o, p, { get: () => e[p], enumerable: !(r = Q(e, p)) || r.enumerable });
      return o;
    };
    var n = (o, e, t) => (t = o != null ? l(d(o)) : {}, f(e || !o || !o.__esModule ? s(t, "default", { value: o, enumerable: true }) : t, o));
    var R = (o) => f(s({}, "__esModule", { value: true }), o);
    var h = {};
    C(h, { Quote: () => m });
    module.exports = R(h);
    var u = n(require_react());
    var P = n(require_classnames());
    var a = require_dist2();
    var i = require_quote_props();
    var c = require_extract_props();
    var m = u.forwardRef((o, e) => {
      const { asChild: t, className: r, ...p } = (0, c.extractProps)(o, i.quotePropDefs);
      return u.createElement(t ? a.Slot : "q", { ...p, ref: e, className: (0, P.default)("rt-Quote", r) });
    });
    m.displayName = "Quote";
  }
});

// node_modules/@radix-ui/react-radio-group/dist/index.js
var require_dist39 = __commonJS({
  "node_modules/@radix-ui/react-radio-group/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Indicator: () => Indicator,
      Item: () => Item2,
      RadioGroup: () => RadioGroup,
      RadioGroupIndicator: () => RadioGroupIndicator,
      RadioGroupItem: () => RadioGroupItem,
      Root: () => Root2,
      createRadioGroupScope: () => createRadioGroupScope
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_primitive2 = require_dist7();
    var import_react_compose_refs2 = require_dist();
    var import_react_context2 = require_dist6();
    var import_react_primitive2 = require_dist3();
    var RovingFocusGroup = __toESM2(require_dist30());
    var import_react_roving_focus = require_dist30();
    var import_react_use_controllable_state = require_dist11();
    var import_react_direction = require_dist24();
    var React3 = __toESM2(require_react());
    var import_primitive = require_dist7();
    var import_react_compose_refs = require_dist();
    var import_react_context = require_dist6();
    var import_react_use_size = require_dist21();
    var import_react_use_previous = require_dist27();
    var import_react_presence = require_dist16();
    var import_react_primitive = require_dist3();
    var import_jsx_runtime = require_jsx_runtime();
    var RADIO_NAME = "Radio";
    var [createRadioContext, createRadioScope] = (0, import_react_context.createContextScope)(RADIO_NAME);
    var [RadioProvider, useRadioContext] = createRadioContext(RADIO_NAME);
    var Radio = React3.forwardRef(
      (props, forwardedRef) => {
        const {
          __scopeRadio,
          name,
          checked = false,
          required,
          disabled,
          value = "on",
          onCheck,
          ...radioProps
        } = props;
        const [button, setButton] = React3.useState(null);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, (node) => setButton(node));
        const hasConsumerStoppedPropagationRef = React3.useRef(false);
        const isFormControl = button ? Boolean(button.closest("form")) : true;
        return (0, import_jsx_runtime.jsxs)(RadioProvider, { scope: __scopeRadio, checked, disabled, children: [
          (0, import_jsx_runtime.jsx)(
            import_react_primitive.Primitive.button,
            {
              type: "button",
              role: "radio",
              "aria-checked": checked,
              "data-state": getState(checked),
              "data-disabled": disabled ? "" : void 0,
              disabled,
              value,
              ...radioProps,
              ref: composedRefs,
              onClick: (0, import_primitive.composeEventHandlers)(props.onClick, (event) => {
                if (!checked) onCheck == null ? void 0 : onCheck();
                if (isFormControl) {
                  hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();
                  if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();
                }
              })
            }
          ),
          isFormControl && (0, import_jsx_runtime.jsx)(
            BubbleInput,
            {
              control: button,
              bubbles: !hasConsumerStoppedPropagationRef.current,
              name,
              value,
              checked,
              required,
              disabled,
              style: { transform: "translateX(-100%)" }
            }
          )
        ] });
      }
    );
    Radio.displayName = RADIO_NAME;
    var INDICATOR_NAME = "RadioIndicator";
    var RadioIndicator = React3.forwardRef(
      (props, forwardedRef) => {
        const { __scopeRadio, forceMount, ...indicatorProps } = props;
        const context = useRadioContext(INDICATOR_NAME, __scopeRadio);
        return (0, import_jsx_runtime.jsx)(import_react_presence.Presence, { present: forceMount || context.checked, children: (0, import_jsx_runtime.jsx)(
          import_react_primitive.Primitive.span,
          {
            "data-state": getState(context.checked),
            "data-disabled": context.disabled ? "" : void 0,
            ...indicatorProps,
            ref: forwardedRef
          }
        ) });
      }
    );
    RadioIndicator.displayName = INDICATOR_NAME;
    var BubbleInput = (props) => {
      const { control, checked, bubbles = true, ...inputProps } = props;
      const ref = React3.useRef(null);
      const prevChecked = (0, import_react_use_previous.usePrevious)(checked);
      const controlSize = (0, import_react_use_size.useSize)(control);
      React3.useEffect(() => {
        const input = ref.current;
        const inputProto = window.HTMLInputElement.prototype;
        const descriptor = Object.getOwnPropertyDescriptor(inputProto, "checked");
        const setChecked = descriptor.set;
        if (prevChecked !== checked && setChecked) {
          const event = new Event("click", { bubbles });
          setChecked.call(input, checked);
          input.dispatchEvent(event);
        }
      }, [prevChecked, checked, bubbles]);
      return (0, import_jsx_runtime.jsx)(
        "input",
        {
          type: "radio",
          "aria-hidden": true,
          defaultChecked: checked,
          ...inputProps,
          tabIndex: -1,
          ref,
          style: {
            ...props.style,
            ...controlSize,
            position: "absolute",
            pointerEvents: "none",
            opacity: 0,
            margin: 0
          }
        }
      );
    };
    function getState(checked) {
      return checked ? "checked" : "unchecked";
    }
    var import_jsx_runtime2 = require_jsx_runtime();
    var ARROW_KEYS = ["ArrowUp", "ArrowDown", "ArrowLeft", "ArrowRight"];
    var RADIO_GROUP_NAME = "RadioGroup";
    var [createRadioGroupContext, createRadioGroupScope] = (0, import_react_context2.createContextScope)(RADIO_GROUP_NAME, [
      import_react_roving_focus.createRovingFocusGroupScope,
      createRadioScope
    ]);
    var useRovingFocusGroupScope = (0, import_react_roving_focus.createRovingFocusGroupScope)();
    var useRadioScope = createRadioScope();
    var [RadioGroupProvider, useRadioGroupContext] = createRadioGroupContext(RADIO_GROUP_NAME);
    var RadioGroup = React2.forwardRef(
      (props, forwardedRef) => {
        const {
          __scopeRadioGroup,
          name,
          defaultValue,
          value: valueProp,
          required = false,
          disabled = false,
          orientation,
          dir,
          loop = true,
          onValueChange,
          ...groupProps
        } = props;
        const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeRadioGroup);
        const direction = (0, import_react_direction.useDirection)(dir);
        const [value, setValue] = (0, import_react_use_controllable_state.useControllableState)({
          prop: valueProp,
          defaultProp: defaultValue,
          onChange: onValueChange
        });
        return (0, import_jsx_runtime2.jsx)(
          RadioGroupProvider,
          {
            scope: __scopeRadioGroup,
            name,
            required,
            disabled,
            value,
            onValueChange: setValue,
            children: (0, import_jsx_runtime2.jsx)(
              RovingFocusGroup.Root,
              {
                asChild: true,
                ...rovingFocusGroupScope,
                orientation,
                dir: direction,
                loop,
                children: (0, import_jsx_runtime2.jsx)(
                  import_react_primitive2.Primitive.div,
                  {
                    role: "radiogroup",
                    "aria-required": required,
                    "aria-orientation": orientation,
                    "data-disabled": disabled ? "" : void 0,
                    dir: direction,
                    ...groupProps,
                    ref: forwardedRef
                  }
                )
              }
            )
          }
        );
      }
    );
    RadioGroup.displayName = RADIO_GROUP_NAME;
    var ITEM_NAME = "RadioGroupItem";
    var RadioGroupItem = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeRadioGroup, disabled, ...itemProps } = props;
        const context = useRadioGroupContext(ITEM_NAME, __scopeRadioGroup);
        const isDisabled = context.disabled || disabled;
        const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeRadioGroup);
        const radioScope = useRadioScope(__scopeRadioGroup);
        const ref = React2.useRef(null);
        const composedRefs = (0, import_react_compose_refs2.useComposedRefs)(forwardedRef, ref);
        const checked = context.value === itemProps.value;
        const isArrowKeyPressedRef = React2.useRef(false);
        React2.useEffect(() => {
          const handleKeyDown = (event) => {
            if (ARROW_KEYS.includes(event.key)) {
              isArrowKeyPressedRef.current = true;
            }
          };
          const handleKeyUp = () => isArrowKeyPressedRef.current = false;
          document.addEventListener("keydown", handleKeyDown);
          document.addEventListener("keyup", handleKeyUp);
          return () => {
            document.removeEventListener("keydown", handleKeyDown);
            document.removeEventListener("keyup", handleKeyUp);
          };
        }, []);
        return (0, import_jsx_runtime2.jsx)(
          RovingFocusGroup.Item,
          {
            asChild: true,
            ...rovingFocusGroupScope,
            focusable: !isDisabled,
            active: checked,
            children: (0, import_jsx_runtime2.jsx)(
              Radio,
              {
                disabled: isDisabled,
                required: context.required,
                checked,
                ...radioScope,
                ...itemProps,
                name: context.name,
                ref: composedRefs,
                onCheck: () => context.onValueChange(itemProps.value),
                onKeyDown: (0, import_primitive2.composeEventHandlers)((event) => {
                  if (event.key === "Enter") event.preventDefault();
                }),
                onFocus: (0, import_primitive2.composeEventHandlers)(itemProps.onFocus, () => {
                  var _a;
                  if (isArrowKeyPressedRef.current) (_a = ref.current) == null ? void 0 : _a.click();
                })
              }
            )
          }
        );
      }
    );
    RadioGroupItem.displayName = ITEM_NAME;
    var INDICATOR_NAME2 = "RadioGroupIndicator";
    var RadioGroupIndicator = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeRadioGroup, ...indicatorProps } = props;
        const radioScope = useRadioScope(__scopeRadioGroup);
        return (0, import_jsx_runtime2.jsx)(RadioIndicator, { ...radioScope, ...indicatorProps, ref: forwardedRef });
      }
    );
    RadioGroupIndicator.displayName = INDICATOR_NAME2;
    var Root2 = RadioGroup;
    var Item2 = RadioGroupItem;
    var Indicator = RadioGroupIndicator;
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/radio-cards.props.js
var require_radio_cards_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/radio-cards.props.js"(exports, module) {
    "use strict";
    var a = Object.defineProperty;
    var u = Object.getOwnPropertyDescriptor;
    var l = Object.getOwnPropertyNames;
    var c = Object.prototype.hasOwnProperty;
    var D = (r, e) => {
      for (var s in e) a(r, s, { get: e[s], enumerable: true });
    };
    var P = (r, e, s, p) => {
      if (e && typeof e == "object" || typeof e == "function") for (let o of l(e)) !c.call(r, o) && o !== s && a(r, o, { get: () => e[o], enumerable: !(p = u(e, o)) || p.enumerable });
      return r;
    };
    var d = (r) => P(a({}, "__esModule", { value: true }), r);
    var y = {};
    D(y, { radioCardsRootPropDefs: () => n });
    module.exports = d(y);
    var f = require_as_child_prop();
    var i = require_color_prop();
    var m = require_high_contrast_prop();
    var t = require_grid_props();
    var v = ["1", "2", "3"];
    var g = ["surface", "classic"];
    var n = { ...f.asChildPropDef, size: { type: "enum", className: "rt-r-size", values: v, default: "2", responsive: true }, variant: { type: "enum", className: "rt-variant", values: g, default: "surface" }, ...i.colorPropDef, ...m.highContrastPropDef, columns: { ...t.gridPropDefs.columns, default: "repeat(auto-fit, minmax(160px, 1fr))" }, gap: { ...t.gridPropDefs.gap, default: "4" } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/radio-cards.js
var require_radio_cards = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/radio-cards.js"(exports, module) {
    "use strict";
    var y = Object.create;
    var p = Object.defineProperty;
    var I = Object.getOwnPropertyDescriptor;
    var u = Object.getOwnPropertyNames;
    var G = Object.getPrototypeOf;
    var h = Object.prototype.hasOwnProperty;
    var v = (o, r) => {
      for (var t in r) p(o, t, { get: r[t], enumerable: true });
    };
    var f = (o, r, t, s) => {
      if (r && typeof r == "object" || typeof r == "function") for (let e of u(r)) !h.call(o, e) && e !== t && p(o, e, { get: () => r[e], enumerable: !(s = I(r, e)) || s.enumerable });
      return o;
    };
    var i = (o, r, t) => (t = o != null ? y(G(o)) : {}, f(r || !o || !o.__esModule ? p(t, "default", { value: o, enumerable: true }) : t, o));
    var E = (o) => f(p({}, "__esModule", { value: true }), o);
    var N = {};
    v(N, { Item: () => R, Root: () => m });
    module.exports = E(N);
    var a = i(require_react());
    var d = i(require_classnames());
    var n = i(require_dist39());
    var P = require_radio_cards_props();
    var C = require_grid();
    var l = require_extract_props();
    var c = require_margin_props();
    var m = a.forwardRef((o, r) => {
      const { className: t, color: s, ...e } = (0, l.extractProps)(o, P.radioCardsRootPropDefs, c.marginPropDefs);
      return a.createElement(C.Grid, { asChild: true }, a.createElement(n.Root, { "data-accent-color": s, ...e, ref: r, className: (0, d.default)("rt-RadioCardsRoot", t) }));
    });
    m.displayName = "RadioCards.Root";
    var R = a.forwardRef(({ className: o, ...r }, t) => a.createElement(n.Item, { ...r, asChild: false, ref: t, className: (0, d.default)("rt-reset", "rt-BaseCard", "rt-RadioCardsItem", o) }));
    R.displayName = "RadioCards.Item";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/radio-group.props.js
var require_radio_group_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/radio-group.props.js"(exports, module) {
    "use strict";
    var t = Object.defineProperty;
    var m = Object.getOwnPropertyDescriptor;
    var c = Object.getOwnPropertyNames;
    var u = Object.prototype.hasOwnProperty;
    var l = (r, s) => {
      for (var o in s) t(r, o, { get: s[o], enumerable: true });
    };
    var v = (r, s, o, a) => {
      if (s && typeof s == "object" || typeof s == "function") for (let e of c(s)) !u.call(r, e) && e !== o && t(r, e, { get: () => s[e], enumerable: !(a = m(s, e)) || a.enumerable });
      return r;
    };
    var D = (r) => v(t({}, "__esModule", { value: true }), r);
    var y = {};
    l(y, { radioGroupRootPropDefs: () => n });
    module.exports = D(y);
    var p = require_as_child_prop();
    var i = require_color_prop();
    var f = require_high_contrast_prop();
    var P = ["1", "2", "3"];
    var d = ["classic", "surface", "soft"];
    var n = { ...p.asChildPropDef, size: { type: "enum", className: "rt-r-size", values: P, default: "2", responsive: true }, variant: { type: "enum", className: "rt-variant", values: d, default: "surface" }, ...i.colorPropDef, ...f.highContrastPropDef };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/radio-group.js
var require_radio_group = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/radio-group.js"(exports, module) {
    "use strict";
    "use client";
    var g = Object.create;
    var R = Object.defineProperty;
    var D = Object.getOwnPropertyDescriptor;
    var w = Object.getOwnPropertyNames;
    var O = Object.getPrototypeOf;
    var z = Object.prototype.hasOwnProperty;
    var M = (o, e) => {
      for (var r in e) R(o, r, { get: e[r], enumerable: true });
    };
    var y = (o, e, r, p) => {
      if (e && typeof e == "object" || typeof e == "function") for (let t of w(e)) !z.call(o, t) && t !== r && R(o, t, { get: () => e[t], enumerable: !(p = D(e, t)) || p.enumerable });
      return o;
    };
    var n = (o, e, r) => (r = o != null ? g(O(o)) : {}, y(e || !o || !o.__esModule ? R(r, "default", { value: o, enumerable: true }) : r, o));
    var T = (o) => y(R({}, "__esModule", { value: true }), o);
    var A = {};
    M(A, { Item: () => I, Root: () => l });
    module.exports = T(A);
    var a = n(require_react());
    var m = n(require_classnames());
    var v = require_dist6();
    var x = n(require_dist39());
    var G = require_dist39();
    var d = require_radio_group_props();
    var S = require_text();
    var f = require_extract_props();
    var P = require_margin_props();
    var C = "RadioGroup";
    var [W] = (0, v.createContextScope)(C, [G.createRadioGroupScope]);
    var h = (0, G.createRadioGroupScope)();
    var [j, N] = W(C);
    var l = a.forwardRef(({ color: o = d.radioGroupRootPropDefs.color.default, highContrast: e = d.radioGroupRootPropDefs.highContrast.default, size: r = d.radioGroupRootPropDefs.size.default, variant: p = d.radioGroupRootPropDefs.variant.default, ...t }, s) => {
      const { __scopeRadioGroup: i, className: u, ...E } = (0, f.extractProps)(t, P.marginPropDefs), _ = h(i);
      return a.createElement(j, { scope: i, color: o, highContrast: e, size: r, variant: p }, a.createElement(x.Root, { ..._, ...E, ref: s, className: (0, m.default)("rt-RadioGroupRoot", u) }));
    });
    l.displayName = "RadioGroup.Root";
    var I = a.forwardRef((o, e) => {
      const { __scopeRadioGroup: r, children: p, className: t, style: s, ...i } = o, { size: u } = N("RadioGroupItem", r);
      return p ? a.createElement(S.Text, { as: "label", size: u, className: (0, m.default)("rt-RadioGroupItem", t), style: s }, a.createElement(c, { __scopeRadioGroup: r, ...i, ref: e }), p && a.createElement("span", { className: "rt-RadioGroupItemInner" }, p)) : a.createElement(c, { __scopeRadioGroup: r, ...i, ref: e, className: t, style: s });
    });
    I.displayName = "RadioGroup.Item";
    var c = a.forwardRef(({ __scopeRadioGroup: o, ...e }, r) => {
      const p = N("RadioGroupItemRadio", o), t = h(o), { color: s, className: i } = (0, f.extractProps)({ ...e, ...p }, d.radioGroupRootPropDefs, P.marginPropDefs);
      return a.createElement(x.Item, { ...t, "data-accent-color": s, ...e, asChild: false, ref: r, className: (0, m.default)("rt-reset", "rt-BaseRadioRoot", i) });
    });
    c.displayName = "RadioGroup.ItemRadio";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/base-radio.props.js
var require_base_radio_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/base-radio.props.js"(exports, module) {
    "use strict";
    var t = Object.defineProperty;
    var n = Object.getOwnPropertyDescriptor;
    var c = Object.getOwnPropertyNames;
    var m = Object.prototype.hasOwnProperty;
    var u = (e, s) => {
      for (var o in s) t(e, o, { get: s[o], enumerable: true });
    };
    var l = (e, s, o, a) => {
      if (s && typeof s == "object" || typeof s == "function") for (let r of c(s)) !m.call(e, r) && r !== o && t(e, r, { get: () => s[r], enumerable: !(a = n(s, r)) || a.enumerable });
      return e;
    };
    var v = (e) => l(t({}, "__esModule", { value: true }), e);
    var y = {};
    u(y, { baseRadioPropDefs: () => f });
    module.exports = v(y);
    var p = require_color_prop();
    var i = require_high_contrast_prop();
    var D = ["1", "2", "3"];
    var P = ["classic", "surface", "soft"];
    var f = { size: { type: "enum", className: "rt-r-size", values: D, default: "2", responsive: true }, variant: { type: "enum", className: "rt-variant", values: P, default: "surface" }, ...p.colorPropDef, ...i.highContrastPropDef };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/radio.props.js
var require_radio_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/radio.props.js"(exports, module) {
    "use strict";
    var s = Object.defineProperty;
    var d = Object.getOwnPropertyDescriptor;
    var i = Object.getOwnPropertyNames;
    var D = Object.prototype.hasOwnProperty;
    var P = (r, o) => {
      for (var e in o) s(r, e, { get: o[e], enumerable: true });
    };
    var b = (r, o, e, f) => {
      if (o && typeof o == "object" || typeof o == "function") for (let a of i(o)) !D.call(r, a) && a !== e && s(r, a, { get: () => o[a], enumerable: !(f = d(o, a)) || f.enumerable });
      return r;
    };
    var m = (r) => b(s({}, "__esModule", { value: true }), r);
    var t = {};
    P(t, { radioPropDefs: () => p.baseRadioPropDefs });
    module.exports = m(t);
    var p = require_base_radio_props();
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/radio.js
var require_radio = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/radio.js"(exports, module) {
    "use strict";
    "use client";
    var v = Object.create;
    var a = Object.defineProperty;
    var C = Object.getOwnPropertyDescriptor;
    var N = Object.getOwnPropertyNames;
    var D = Object.getPrototypeOf;
    var E = Object.prototype.hasOwnProperty;
    var j = (o, e) => {
      for (var r in e) a(o, r, { get: e[r], enumerable: true });
    };
    var n = (o, e, r, p) => {
      if (e && typeof e == "object" || typeof e == "function") for (let t of N(e)) !E.call(o, t) && t !== r && a(o, t, { get: () => e[t], enumerable: !(p = C(e, t)) || p.enumerable });
      return o;
    };
    var m = (o, e, r) => (r = o != null ? v(D(o)) : {}, n(e || !o || !o.__esModule ? a(r, "default", { value: o, enumerable: true }) : r, o));
    var x = (o) => n(a({}, "__esModule", { value: true }), o);
    var I = {};
    j(I, { Radio: () => i });
    module.exports = x(I);
    var s = m(require_react());
    var d = m(require_classnames());
    var f = require_dist7();
    var u = require_dist();
    var l = require_radio_props();
    var R = require_margin_props();
    var c = require_extract_props();
    var i = s.forwardRef((o, e) => {
      const r = s.useRef(null), { className: p, color: t, onChange: P, onValueChange: y, ...g } = (0, c.extractProps)(o, l.radioPropDefs, R.marginPropDefs);
      return s.createElement("input", { type: "radio", "data-accent-color": t, ...g, onChange: (0, f.composeEventHandlers)(P, (h) => y == null ? void 0 : y(h.currentTarget.value)), ref: (0, u.composeRefs)(r, e), className: (0, d.default)("rt-reset", "rt-BaseRadioRoot", "rt-RadioRoot", p) });
    });
    i.displayName = "Radio";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/reset.js
var require_reset = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/reset.js"(exports, module) {
    "use strict";
    var P = Object.create;
    var p = Object.defineProperty;
    var c = Object.getOwnPropertyDescriptor;
    var d = Object.getOwnPropertyNames;
    var u = Object.getPrototypeOf;
    var y = Object.prototype.hasOwnProperty;
    var h = (e, o) => {
      for (var t in o) p(e, t, { get: o[t], enumerable: true });
    };
    var n = (e, o, t, s) => {
      if (o && typeof o == "object" || typeof o == "function") for (let r of d(o)) !y.call(e, r) && r !== t && p(e, r, { get: () => o[r], enumerable: !(s = c(o, r)) || s.enumerable });
      return e;
    };
    var a = (e, o, t) => (t = e != null ? P(u(e)) : {}, n(o || !e || !e.__esModule ? p(t, "default", { value: e, enumerable: true }) : t, e));
    var x = (e) => n(p({}, "__esModule", { value: true }), e);
    var N = {};
    h(N, { Reset: () => m });
    module.exports = x(N);
    var f = a(require_react());
    var i = a(require_classnames());
    var l = require_dist2();
    var R = require_require_react_element();
    var m = f.forwardRef(({ className: e, children: o, ...t }, s) => f.createElement(l.Slot, { ...t, ref: s, className: (0, i.default)("rt-reset", e) }, (0, R.requireReactElement)(o)));
    m.displayName = "Reset";
  }
});

// node_modules/@radix-ui/react-toggle/dist/index.js
var require_dist40 = __commonJS({
  "node_modules/@radix-ui/react-toggle/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Root: () => Root,
      Toggle: () => Toggle
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_primitive = require_dist7();
    var import_react_use_controllable_state = require_dist11();
    var import_react_primitive = require_dist3();
    var import_jsx_runtime = require_jsx_runtime();
    var NAME = "Toggle";
    var Toggle = React2.forwardRef((props, forwardedRef) => {
      const { pressed: pressedProp, defaultPressed = false, onPressedChange, ...buttonProps } = props;
      const [pressed = false, setPressed] = (0, import_react_use_controllable_state.useControllableState)({
        prop: pressedProp,
        onChange: onPressedChange,
        defaultProp: defaultPressed
      });
      return (0, import_jsx_runtime.jsx)(
        import_react_primitive.Primitive.button,
        {
          type: "button",
          "aria-pressed": pressed,
          "data-state": pressed ? "on" : "off",
          "data-disabled": props.disabled ? "" : void 0,
          ...buttonProps,
          ref: forwardedRef,
          onClick: (0, import_primitive.composeEventHandlers)(props.onClick, () => {
            if (!props.disabled) {
              setPressed(!pressed);
            }
          })
        }
      );
    });
    Toggle.displayName = NAME;
    var Root = Toggle;
  }
});

// node_modules/@radix-ui/react-toggle-group/dist/index.js
var require_dist41 = __commonJS({
  "node_modules/@radix-ui/react-toggle-group/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Item: () => Item2,
      Root: () => Root2,
      ToggleGroup: () => ToggleGroup,
      ToggleGroupItem: () => ToggleGroupItem,
      createToggleGroupScope: () => createToggleGroupScope
    });
    module.exports = __toCommonJS2(src_exports);
    var import_react2 = __toESM2(require_react());
    var import_react_context = require_dist6();
    var import_react_primitive = require_dist3();
    var RovingFocusGroup = __toESM2(require_dist30());
    var import_react_roving_focus = require_dist30();
    var import_react_toggle = require_dist40();
    var import_react_use_controllable_state = require_dist11();
    var import_react_direction = require_dist24();
    var import_jsx_runtime = require_jsx_runtime();
    var TOGGLE_GROUP_NAME = "ToggleGroup";
    var [createToggleGroupContext, createToggleGroupScope] = (0, import_react_context.createContextScope)(TOGGLE_GROUP_NAME, [
      import_react_roving_focus.createRovingFocusGroupScope
    ]);
    var useRovingFocusGroupScope = (0, import_react_roving_focus.createRovingFocusGroupScope)();
    var ToggleGroup = import_react2.default.forwardRef((props, forwardedRef) => {
      const { type, ...toggleGroupProps } = props;
      if (type === "single") {
        const singleProps = toggleGroupProps;
        return (0, import_jsx_runtime.jsx)(ToggleGroupImplSingle, { ...singleProps, ref: forwardedRef });
      }
      if (type === "multiple") {
        const multipleProps = toggleGroupProps;
        return (0, import_jsx_runtime.jsx)(ToggleGroupImplMultiple, { ...multipleProps, ref: forwardedRef });
      }
      throw new Error(`Missing prop \`type\` expected on \`${TOGGLE_GROUP_NAME}\``);
    });
    ToggleGroup.displayName = TOGGLE_GROUP_NAME;
    var [ToggleGroupValueProvider, useToggleGroupValueContext] = createToggleGroupContext(TOGGLE_GROUP_NAME);
    var ToggleGroupImplSingle = import_react2.default.forwardRef((props, forwardedRef) => {
      const {
        value: valueProp,
        defaultValue,
        onValueChange = () => {
        },
        ...toggleGroupSingleProps
      } = props;
      const [value, setValue] = (0, import_react_use_controllable_state.useControllableState)({
        prop: valueProp,
        defaultProp: defaultValue,
        onChange: onValueChange
      });
      return (0, import_jsx_runtime.jsx)(
        ToggleGroupValueProvider,
        {
          scope: props.__scopeToggleGroup,
          type: "single",
          value: value ? [value] : [],
          onItemActivate: setValue,
          onItemDeactivate: import_react2.default.useCallback(() => setValue(""), [setValue]),
          children: (0, import_jsx_runtime.jsx)(ToggleGroupImpl, { ...toggleGroupSingleProps, ref: forwardedRef })
        }
      );
    });
    var ToggleGroupImplMultiple = import_react2.default.forwardRef((props, forwardedRef) => {
      const {
        value: valueProp,
        defaultValue,
        onValueChange = () => {
        },
        ...toggleGroupMultipleProps
      } = props;
      const [value = [], setValue] = (0, import_react_use_controllable_state.useControllableState)({
        prop: valueProp,
        defaultProp: defaultValue,
        onChange: onValueChange
      });
      const handleButtonActivate = import_react2.default.useCallback(
        (itemValue) => setValue((prevValue = []) => [...prevValue, itemValue]),
        [setValue]
      );
      const handleButtonDeactivate = import_react2.default.useCallback(
        (itemValue) => setValue((prevValue = []) => prevValue.filter((value2) => value2 !== itemValue)),
        [setValue]
      );
      return (0, import_jsx_runtime.jsx)(
        ToggleGroupValueProvider,
        {
          scope: props.__scopeToggleGroup,
          type: "multiple",
          value,
          onItemActivate: handleButtonActivate,
          onItemDeactivate: handleButtonDeactivate,
          children: (0, import_jsx_runtime.jsx)(ToggleGroupImpl, { ...toggleGroupMultipleProps, ref: forwardedRef })
        }
      );
    });
    ToggleGroup.displayName = TOGGLE_GROUP_NAME;
    var [ToggleGroupContext, useToggleGroupContext] = createToggleGroupContext(TOGGLE_GROUP_NAME);
    var ToggleGroupImpl = import_react2.default.forwardRef(
      (props, forwardedRef) => {
        const {
          __scopeToggleGroup,
          disabled = false,
          rovingFocus = true,
          orientation,
          dir,
          loop = true,
          ...toggleGroupProps
        } = props;
        const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeToggleGroup);
        const direction = (0, import_react_direction.useDirection)(dir);
        const commonProps = { role: "group", dir: direction, ...toggleGroupProps };
        return (0, import_jsx_runtime.jsx)(ToggleGroupContext, { scope: __scopeToggleGroup, rovingFocus, disabled, children: rovingFocus ? (0, import_jsx_runtime.jsx)(
          RovingFocusGroup.Root,
          {
            asChild: true,
            ...rovingFocusGroupScope,
            orientation,
            dir: direction,
            loop,
            children: (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.div, { ...commonProps, ref: forwardedRef })
          }
        ) : (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.div, { ...commonProps, ref: forwardedRef }) });
      }
    );
    var ITEM_NAME = "ToggleGroupItem";
    var ToggleGroupItem = import_react2.default.forwardRef(
      (props, forwardedRef) => {
        const valueContext = useToggleGroupValueContext(ITEM_NAME, props.__scopeToggleGroup);
        const context = useToggleGroupContext(ITEM_NAME, props.__scopeToggleGroup);
        const rovingFocusGroupScope = useRovingFocusGroupScope(props.__scopeToggleGroup);
        const pressed = valueContext.value.includes(props.value);
        const disabled = context.disabled || props.disabled;
        const commonProps = { ...props, pressed, disabled };
        const ref = import_react2.default.useRef(null);
        return context.rovingFocus ? (0, import_jsx_runtime.jsx)(
          RovingFocusGroup.Item,
          {
            asChild: true,
            ...rovingFocusGroupScope,
            focusable: !disabled,
            active: pressed,
            ref,
            children: (0, import_jsx_runtime.jsx)(ToggleGroupItemImpl, { ...commonProps, ref: forwardedRef })
          }
        ) : (0, import_jsx_runtime.jsx)(ToggleGroupItemImpl, { ...commonProps, ref: forwardedRef });
      }
    );
    ToggleGroupItem.displayName = ITEM_NAME;
    var ToggleGroupItemImpl = import_react2.default.forwardRef(
      (props, forwardedRef) => {
        const { __scopeToggleGroup, value, ...itemProps } = props;
        const valueContext = useToggleGroupValueContext(ITEM_NAME, __scopeToggleGroup);
        const singleProps = { role: "radio", "aria-checked": props.pressed, "aria-pressed": void 0 };
        const typeProps = valueContext.type === "single" ? singleProps : void 0;
        return (0, import_jsx_runtime.jsx)(
          import_react_toggle.Toggle,
          {
            ...typeProps,
            ...itemProps,
            ref: forwardedRef,
            onPressedChange: (pressed) => {
              if (pressed) {
                valueContext.onItemActivate(value);
              } else {
                valueContext.onItemDeactivate(value);
              }
            }
          }
        );
      }
    );
    var Root2 = ToggleGroup;
    var Item2 = ToggleGroupItem;
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/segmented-control.props.js
var require_segmented_control_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/segmented-control.props.js"(exports, module) {
    "use strict";
    var a = Object.defineProperty;
    var n = Object.getOwnPropertyDescriptor;
    var f = Object.getOwnPropertyNames;
    var u = Object.prototype.hasOwnProperty;
    var c = (s, e) => {
      for (var t in e) a(s, t, { get: e[t], enumerable: true });
    };
    var m = (s, e, t, o) => {
      if (e && typeof e == "object" || typeof e == "function") for (let r of f(e)) !u.call(s, r) && r !== t && a(s, r, { get: () => e[r], enumerable: !(o = n(e, r)) || o.enumerable });
      return s;
    };
    var l = (s) => m(a({}, "__esModule", { value: true }), s);
    var y = {};
    c(y, { segmentedControlRootPropDefs: () => i });
    module.exports = l(y);
    var p = require_radius_prop();
    var v = ["1", "2", "3"];
    var d = ["surface", "classic"];
    var i = { size: { type: "enum", className: "rt-r-size", values: v, default: "2", responsive: true }, variant: { type: "enum", className: "rt-variant", values: d, default: "surface" }, ...p.radiusPropDef };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/segmented-control.js
var require_segmented_control = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/segmented-control.js"(exports, module) {
    "use strict";
    "use client";
    var N = Object.create;
    var m = Object.defineProperty;
    var T = Object.getOwnPropertyDescriptor;
    var V = Object.getOwnPropertyNames;
    var b = Object.getPrototypeOf;
    var w = Object.prototype.hasOwnProperty;
    var D = (e, o) => {
      for (var t in o) m(e, t, { get: o[t], enumerable: true });
    };
    var g = (e, o, t, s) => {
      if (o && typeof o == "object" || typeof o == "function") for (let n of V(o)) !w.call(e, n) && n !== t && m(e, n, { get: () => o[n], enumerable: !(s = T(o, n)) || s.enumerable });
      return e;
    };
    var a = (e, o, t) => (t = e != null ? N(b(e)) : {}, g(o || !e || !e.__esModule ? m(t, "default", { value: e, enumerable: true }) : t, e));
    var G = (e) => g(m({}, "__esModule", { value: true }), e);
    var x = {};
    D(x, { Item: () => i, Root: () => l });
    module.exports = G(x);
    var r = a(require_react());
    var p = a(require_classnames());
    var f = a(require_dist41());
    var P = require_dist11();
    var C = require_segmented_control_props();
    var u = require_extract_props();
    var S = require_margin_props();
    var l = r.forwardRef((e, o) => {
      const { className: t, children: s, radius: n, value: v, defaultValue: I, onValueChange: c, ...y } = (0, u.extractProps)(e, C.segmentedControlRootPropDefs, S.marginPropDefs), [R, h] = (0, P.useControllableState)({ prop: v, onChange: c, defaultProp: I });
      return r.createElement(f.Root, { "data-radius": n, ref: o, className: (0, p.default)("rt-SegmentedControlRoot", t), onValueChange: (d) => {
        d && h(d);
      }, ...y, type: "single", value: R, asChild: false, disabled: false }, s, r.createElement("div", { className: "rt-SegmentedControlIndicator" }));
    });
    l.displayName = "SegmentedControl.Root";
    var i = r.forwardRef(({ children: e, className: o, ...t }, s) => r.createElement(f.Item, { ref: s, className: (0, p.default)("rt-reset", "rt-SegmentedControlItem", o), ...t, disabled: false, asChild: false }, r.createElement("span", { className: "rt-SegmentedControlItemSeparator" }), r.createElement("span", { className: "rt-SegmentedControlItemLabel" }, r.createElement("span", { className: "rt-SegmentedControlItemLabelActive" }, e), r.createElement("span", { className: "rt-SegmentedControlItemLabelInactive" }, e))));
    i.displayName = "SegmentedControl.Item";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/section.props.js
var require_section_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/section.props.js"(exports, module) {
    "use strict";
    var t = Object.defineProperty;
    var n = Object.getOwnPropertyDescriptor;
    var f = Object.getOwnPropertyNames;
    var l = Object.prototype.hasOwnProperty;
    var y = (e, s) => {
      for (var o in s) t(e, o, { get: s[o], enumerable: true });
    };
    var u = (e, s, o, r) => {
      if (s && typeof s == "object" || typeof s == "function") for (let p of f(s)) !l.call(e, p) && p !== o && t(e, p, { get: () => s[p], enumerable: !(r = n(s, p)) || r.enumerable });
      return e;
    };
    var c = (e) => u(t({}, "__esModule", { value: true }), e);
    var d = {};
    y(d, { sectionPropDefs: () => a });
    module.exports = c(d);
    var i = require_as_child_prop();
    var P = ["1", "2", "3", "4"];
    var m = ["none", "initial"];
    var a = { ...i.asChildPropDef, size: { type: "enum", className: "rt-r-size", values: P, default: "3", responsive: true }, display: { type: "enum", className: "rt-r-display", values: m, parseValue: D, responsive: true } };
    function D(e) {
      return e === "initial" ? "block" : e;
    }
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/section.js
var require_section = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/section.js"(exports, module) {
    "use strict";
    var d = Object.create;
    var s = Object.defineProperty;
    var u = Object.getOwnPropertyDescriptor;
    var C = Object.getOwnPropertyNames;
    var R = Object.getPrototypeOf;
    var g = Object.prototype.hasOwnProperty;
    var h = (o, r) => {
      for (var t in r) s(o, t, { get: r[t], enumerable: true });
    };
    var i = (o, r, t, e) => {
      if (r && typeof r == "object" || typeof r == "function") for (let p of C(r)) !g.call(o, p) && p !== t && s(o, p, { get: () => r[p], enumerable: !(e = u(r, p)) || e.enumerable });
      return o;
    };
    var n = (o, r, t) => (t = o != null ? d(R(o)) : {}, i(r || !o || !o.__esModule ? s(t, "default", { value: o, enumerable: true }) : t, o));
    var j = (o) => i(s({}, "__esModule", { value: true }), o);
    var v = {};
    h(v, { Section: () => m });
    module.exports = j(v);
    var c = n(require_react());
    var a = n(require_classnames());
    var f = require_dist2();
    var P = require_section_props();
    var l = require_extract_props();
    var y = require_layout_props();
    var S = require_margin_props();
    var m = c.forwardRef((o, r) => {
      const { asChild: t, className: e, ...p } = (0, l.extractProps)(o, P.sectionPropDefs, y.layoutPropDefs, S.marginPropDefs);
      return c.createElement(t ? f.Slot : "section", { ...p, ref: r, className: (0, a.default)("rt-Section", e) });
    });
    m.displayName = "Section";
  }
});

// node_modules/@radix-ui/react-select/dist/index.js
var require_dist42 = __commonJS({
  "node_modules/@radix-ui/react-select/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Arrow: () => Arrow2,
      Content: () => Content2,
      Group: () => Group,
      Icon: () => Icon,
      Item: () => Item,
      ItemIndicator: () => ItemIndicator,
      ItemText: () => ItemText,
      Label: () => Label,
      Portal: () => Portal,
      Root: () => Root2,
      ScrollDownButton: () => ScrollDownButton,
      ScrollUpButton: () => ScrollUpButton,
      Select: () => Select,
      SelectArrow: () => SelectArrow,
      SelectContent: () => SelectContent,
      SelectGroup: () => SelectGroup,
      SelectIcon: () => SelectIcon,
      SelectItem: () => SelectItem,
      SelectItemIndicator: () => SelectItemIndicator,
      SelectItemText: () => SelectItemText,
      SelectLabel: () => SelectLabel,
      SelectPortal: () => SelectPortal,
      SelectScrollDownButton: () => SelectScrollDownButton,
      SelectScrollUpButton: () => SelectScrollUpButton,
      SelectSeparator: () => SelectSeparator,
      SelectTrigger: () => SelectTrigger,
      SelectValue: () => SelectValue,
      SelectViewport: () => SelectViewport,
      Separator: () => Separator,
      Trigger: () => Trigger,
      Value: () => Value,
      Viewport: () => Viewport,
      createSelectScope: () => createSelectScope
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var ReactDOM2 = __toESM2(require_react_dom());
    var import_number = require_dist33();
    var import_primitive = require_dist7();
    var import_react_collection = require_dist29();
    var import_react_compose_refs = require_dist();
    var import_react_context = require_dist6();
    var import_react_direction = require_dist24();
    var import_react_dismissable_layer = require_dist13();
    var import_react_focus_guards = require_dist17();
    var import_react_focus_scope = require_dist14();
    var import_react_id = require_dist9();
    var PopperPrimitive = __toESM2(require_dist22());
    var import_react_popper = require_dist22();
    var import_react_portal = require_dist15();
    var import_react_primitive = require_dist3();
    var import_react_slot = require_dist2();
    var import_react_use_callback_ref = require_dist10();
    var import_react_use_controllable_state = require_dist11();
    var import_react_use_layout_effect = require_dist8();
    var import_react_use_previous = require_dist27();
    var import_react_visually_hidden = require_dist4();
    var import_aria_hidden = (init_es20152(), __toCommonJS(es2015_exports2));
    var import_react_remove_scroll = (init_es2015(), __toCommonJS(es2015_exports));
    var import_jsx_runtime = require_jsx_runtime();
    var OPEN_KEYS = [" ", "Enter", "ArrowUp", "ArrowDown"];
    var SELECTION_KEYS = [" ", "Enter"];
    var SELECT_NAME = "Select";
    var [Collection, useCollection, createCollectionScope] = (0, import_react_collection.createCollection)(SELECT_NAME);
    var [createSelectContext, createSelectScope] = (0, import_react_context.createContextScope)(SELECT_NAME, [
      createCollectionScope,
      import_react_popper.createPopperScope
    ]);
    var usePopperScope = (0, import_react_popper.createPopperScope)();
    var [SelectProvider, useSelectContext] = createSelectContext(SELECT_NAME);
    var [SelectNativeOptionsProvider, useSelectNativeOptionsContext] = createSelectContext(SELECT_NAME);
    var Select = (props) => {
      const {
        __scopeSelect,
        children,
        open: openProp,
        defaultOpen,
        onOpenChange,
        value: valueProp,
        defaultValue,
        onValueChange,
        dir,
        name,
        autoComplete,
        disabled,
        required
      } = props;
      const popperScope = usePopperScope(__scopeSelect);
      const [trigger, setTrigger] = React2.useState(null);
      const [valueNode, setValueNode] = React2.useState(null);
      const [valueNodeHasChildren, setValueNodeHasChildren] = React2.useState(false);
      const direction = (0, import_react_direction.useDirection)(dir);
      const [open = false, setOpen] = (0, import_react_use_controllable_state.useControllableState)({
        prop: openProp,
        defaultProp: defaultOpen,
        onChange: onOpenChange
      });
      const [value, setValue] = (0, import_react_use_controllable_state.useControllableState)({
        prop: valueProp,
        defaultProp: defaultValue,
        onChange: onValueChange
      });
      const triggerPointerDownPosRef = React2.useRef(null);
      const isFormControl = trigger ? Boolean(trigger.closest("form")) : true;
      const [nativeOptionsSet, setNativeOptionsSet] = React2.useState(/* @__PURE__ */ new Set());
      const nativeSelectKey = Array.from(nativeOptionsSet).map((option) => option.props.value).join(";");
      return (0, import_jsx_runtime.jsx)(PopperPrimitive.Root, { ...popperScope, children: (0, import_jsx_runtime.jsxs)(
        SelectProvider,
        {
          required,
          scope: __scopeSelect,
          trigger,
          onTriggerChange: setTrigger,
          valueNode,
          onValueNodeChange: setValueNode,
          valueNodeHasChildren,
          onValueNodeHasChildrenChange: setValueNodeHasChildren,
          contentId: (0, import_react_id.useId)(),
          value,
          onValueChange: setValue,
          open,
          onOpenChange: setOpen,
          dir: direction,
          triggerPointerDownPosRef,
          disabled,
          children: [
            (0, import_jsx_runtime.jsx)(Collection.Provider, { scope: __scopeSelect, children: (0, import_jsx_runtime.jsx)(
              SelectNativeOptionsProvider,
              {
                scope: props.__scopeSelect,
                onNativeOptionAdd: React2.useCallback((option) => {
                  setNativeOptionsSet((prev) => new Set(prev).add(option));
                }, []),
                onNativeOptionRemove: React2.useCallback((option) => {
                  setNativeOptionsSet((prev) => {
                    const optionsSet = new Set(prev);
                    optionsSet.delete(option);
                    return optionsSet;
                  });
                }, []),
                children
              }
            ) }),
            isFormControl ? (0, import_jsx_runtime.jsxs)(
              BubbleSelect,
              {
                "aria-hidden": true,
                required,
                tabIndex: -1,
                name,
                autoComplete,
                value,
                onChange: (event) => setValue(event.target.value),
                disabled,
                children: [
                  value === void 0 ? (0, import_jsx_runtime.jsx)("option", { value: "" }) : null,
                  Array.from(nativeOptionsSet)
                ]
              },
              nativeSelectKey
            ) : null
          ]
        }
      ) });
    };
    Select.displayName = SELECT_NAME;
    var TRIGGER_NAME = "SelectTrigger";
    var SelectTrigger = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeSelect, disabled = false, ...triggerProps } = props;
        const popperScope = usePopperScope(__scopeSelect);
        const context = useSelectContext(TRIGGER_NAME, __scopeSelect);
        const isDisabled = context.disabled || disabled;
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, context.onTriggerChange);
        const getItems = useCollection(__scopeSelect);
        const [searchRef, handleTypeaheadSearch, resetTypeahead] = useTypeaheadSearch((search) => {
          const enabledItems = getItems().filter((item) => !item.disabled);
          const currentItem = enabledItems.find((item) => item.value === context.value);
          const nextItem = findNextItem(enabledItems, search, currentItem);
          if (nextItem !== void 0) {
            context.onValueChange(nextItem.value);
          }
        });
        const handleOpen = () => {
          if (!isDisabled) {
            context.onOpenChange(true);
            resetTypeahead();
          }
        };
        return (0, import_jsx_runtime.jsx)(PopperPrimitive.Anchor, { asChild: true, ...popperScope, children: (0, import_jsx_runtime.jsx)(
          import_react_primitive.Primitive.button,
          {
            type: "button",
            role: "combobox",
            "aria-controls": context.contentId,
            "aria-expanded": context.open,
            "aria-required": context.required,
            "aria-autocomplete": "none",
            dir: context.dir,
            "data-state": context.open ? "open" : "closed",
            disabled: isDisabled,
            "data-disabled": isDisabled ? "" : void 0,
            "data-placeholder": shouldShowPlaceholder(context.value) ? "" : void 0,
            ...triggerProps,
            ref: composedRefs,
            onClick: (0, import_primitive.composeEventHandlers)(triggerProps.onClick, (event) => {
              event.currentTarget.focus();
            }),
            onPointerDown: (0, import_primitive.composeEventHandlers)(triggerProps.onPointerDown, (event) => {
              const target = event.target;
              if (target.hasPointerCapture(event.pointerId)) {
                target.releasePointerCapture(event.pointerId);
              }
              if (event.button === 0 && event.ctrlKey === false) {
                handleOpen();
                context.triggerPointerDownPosRef.current = {
                  x: Math.round(event.pageX),
                  y: Math.round(event.pageY)
                };
                event.preventDefault();
              }
            }),
            onKeyDown: (0, import_primitive.composeEventHandlers)(triggerProps.onKeyDown, (event) => {
              const isTypingAhead = searchRef.current !== "";
              const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;
              if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);
              if (isTypingAhead && event.key === " ") return;
              if (OPEN_KEYS.includes(event.key)) {
                handleOpen();
                event.preventDefault();
              }
            })
          }
        ) });
      }
    );
    SelectTrigger.displayName = TRIGGER_NAME;
    var VALUE_NAME = "SelectValue";
    var SelectValue = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeSelect, className, style, children, placeholder = "", ...valueProps } = props;
        const context = useSelectContext(VALUE_NAME, __scopeSelect);
        const { onValueNodeHasChildrenChange } = context;
        const hasChildren = children !== void 0;
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, context.onValueNodeChange);
        (0, import_react_use_layout_effect.useLayoutEffect)(() => {
          onValueNodeHasChildrenChange(hasChildren);
        }, [onValueNodeHasChildrenChange, hasChildren]);
        return (0, import_jsx_runtime.jsx)(
          import_react_primitive.Primitive.span,
          {
            ...valueProps,
            ref: composedRefs,
            style: { pointerEvents: "none" },
            children: shouldShowPlaceholder(context.value) ? (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: placeholder }) : children
          }
        );
      }
    );
    SelectValue.displayName = VALUE_NAME;
    var ICON_NAME = "SelectIcon";
    var SelectIcon = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeSelect, children, ...iconProps } = props;
        return (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.span, { "aria-hidden": true, ...iconProps, ref: forwardedRef, children: children || "▼" });
      }
    );
    SelectIcon.displayName = ICON_NAME;
    var PORTAL_NAME = "SelectPortal";
    var SelectPortal = (props) => {
      return (0, import_jsx_runtime.jsx)(import_react_portal.Portal, { asChild: true, ...props });
    };
    SelectPortal.displayName = PORTAL_NAME;
    var CONTENT_NAME = "SelectContent";
    var SelectContent = React2.forwardRef(
      (props, forwardedRef) => {
        const context = useSelectContext(CONTENT_NAME, props.__scopeSelect);
        const [fragment, setFragment] = React2.useState();
        (0, import_react_use_layout_effect.useLayoutEffect)(() => {
          setFragment(new DocumentFragment());
        }, []);
        if (!context.open) {
          const frag = fragment;
          return frag ? ReactDOM2.createPortal(
            (0, import_jsx_runtime.jsx)(SelectContentProvider, { scope: props.__scopeSelect, children: (0, import_jsx_runtime.jsx)(Collection.Slot, { scope: props.__scopeSelect, children: (0, import_jsx_runtime.jsx)("div", { children: props.children }) }) }),
            frag
          ) : null;
        }
        return (0, import_jsx_runtime.jsx)(SelectContentImpl, { ...props, ref: forwardedRef });
      }
    );
    SelectContent.displayName = CONTENT_NAME;
    var CONTENT_MARGIN = 10;
    var [SelectContentProvider, useSelectContentContext] = createSelectContext(CONTENT_NAME);
    var CONTENT_IMPL_NAME = "SelectContentImpl";
    var SelectContentImpl = React2.forwardRef(
      (props, forwardedRef) => {
        const {
          __scopeSelect,
          position = "item-aligned",
          onCloseAutoFocus,
          onEscapeKeyDown,
          onPointerDownOutside,
          //
          // PopperContent props
          side,
          sideOffset,
          align,
          alignOffset,
          arrowPadding,
          collisionBoundary,
          collisionPadding,
          sticky,
          hideWhenDetached,
          avoidCollisions,
          //
          ...contentProps
        } = props;
        const context = useSelectContext(CONTENT_NAME, __scopeSelect);
        const [content, setContent] = React2.useState(null);
        const [viewport, setViewport] = React2.useState(null);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, (node) => setContent(node));
        const [selectedItem, setSelectedItem] = React2.useState(null);
        const [selectedItemText, setSelectedItemText] = React2.useState(
          null
        );
        const getItems = useCollection(__scopeSelect);
        const [isPositioned, setIsPositioned] = React2.useState(false);
        const firstValidItemFoundRef = React2.useRef(false);
        React2.useEffect(() => {
          if (content) return (0, import_aria_hidden.hideOthers)(content);
        }, [content]);
        (0, import_react_focus_guards.useFocusGuards)();
        const focusFirst = React2.useCallback(
          (candidates) => {
            const [firstItem, ...restItems] = getItems().map((item) => item.ref.current);
            const [lastItem] = restItems.slice(-1);
            const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;
            for (const candidate of candidates) {
              if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;
              candidate == null ? void 0 : candidate.scrollIntoView({ block: "nearest" });
              if (candidate === firstItem && viewport) viewport.scrollTop = 0;
              if (candidate === lastItem && viewport) viewport.scrollTop = viewport.scrollHeight;
              candidate == null ? void 0 : candidate.focus();
              if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;
            }
          },
          [getItems, viewport]
        );
        const focusSelectedItem = React2.useCallback(
          () => focusFirst([selectedItem, content]),
          [focusFirst, selectedItem, content]
        );
        React2.useEffect(() => {
          if (isPositioned) {
            focusSelectedItem();
          }
        }, [isPositioned, focusSelectedItem]);
        const { onOpenChange, triggerPointerDownPosRef } = context;
        React2.useEffect(() => {
          if (content) {
            let pointerMoveDelta = { x: 0, y: 0 };
            const handlePointerMove = (event) => {
              var _a, _b;
              pointerMoveDelta = {
                x: Math.abs(Math.round(event.pageX) - (((_a = triggerPointerDownPosRef.current) == null ? void 0 : _a.x) ?? 0)),
                y: Math.abs(Math.round(event.pageY) - (((_b = triggerPointerDownPosRef.current) == null ? void 0 : _b.y) ?? 0))
              };
            };
            const handlePointerUp = (event) => {
              if (pointerMoveDelta.x <= 10 && pointerMoveDelta.y <= 10) {
                event.preventDefault();
              } else {
                if (!content.contains(event.target)) {
                  onOpenChange(false);
                }
              }
              document.removeEventListener("pointermove", handlePointerMove);
              triggerPointerDownPosRef.current = null;
            };
            if (triggerPointerDownPosRef.current !== null) {
              document.addEventListener("pointermove", handlePointerMove);
              document.addEventListener("pointerup", handlePointerUp, { capture: true, once: true });
            }
            return () => {
              document.removeEventListener("pointermove", handlePointerMove);
              document.removeEventListener("pointerup", handlePointerUp, { capture: true });
            };
          }
        }, [content, onOpenChange, triggerPointerDownPosRef]);
        React2.useEffect(() => {
          const close = () => onOpenChange(false);
          window.addEventListener("blur", close);
          window.addEventListener("resize", close);
          return () => {
            window.removeEventListener("blur", close);
            window.removeEventListener("resize", close);
          };
        }, [onOpenChange]);
        const [searchRef, handleTypeaheadSearch] = useTypeaheadSearch((search) => {
          const enabledItems = getItems().filter((item) => !item.disabled);
          const currentItem = enabledItems.find((item) => item.ref.current === document.activeElement);
          const nextItem = findNextItem(enabledItems, search, currentItem);
          if (nextItem) {
            setTimeout(() => nextItem.ref.current.focus());
          }
        });
        const itemRefCallback = React2.useCallback(
          (node, value, disabled) => {
            const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;
            const isSelectedItem = context.value !== void 0 && context.value === value;
            if (isSelectedItem || isFirstValidItem) {
              setSelectedItem(node);
              if (isFirstValidItem) firstValidItemFoundRef.current = true;
            }
          },
          [context.value]
        );
        const handleItemLeave = React2.useCallback(() => content == null ? void 0 : content.focus(), [content]);
        const itemTextRefCallback = React2.useCallback(
          (node, value, disabled) => {
            const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;
            const isSelectedItem = context.value !== void 0 && context.value === value;
            if (isSelectedItem || isFirstValidItem) {
              setSelectedItemText(node);
            }
          },
          [context.value]
        );
        const SelectPosition = position === "popper" ? SelectPopperPosition : SelectItemAlignedPosition;
        const popperContentProps = SelectPosition === SelectPopperPosition ? {
          side,
          sideOffset,
          align,
          alignOffset,
          arrowPadding,
          collisionBoundary,
          collisionPadding,
          sticky,
          hideWhenDetached,
          avoidCollisions
        } : {};
        return (0, import_jsx_runtime.jsx)(
          SelectContentProvider,
          {
            scope: __scopeSelect,
            content,
            viewport,
            onViewportChange: setViewport,
            itemRefCallback,
            selectedItem,
            onItemLeave: handleItemLeave,
            itemTextRefCallback,
            focusSelectedItem,
            selectedItemText,
            position,
            isPositioned,
            searchRef,
            children: (0, import_jsx_runtime.jsx)(import_react_remove_scroll.RemoveScroll, { as: import_react_slot.Slot, allowPinchZoom: true, children: (0, import_jsx_runtime.jsx)(
              import_react_focus_scope.FocusScope,
              {
                asChild: true,
                trapped: context.open,
                onMountAutoFocus: (event) => {
                  event.preventDefault();
                },
                onUnmountAutoFocus: (0, import_primitive.composeEventHandlers)(onCloseAutoFocus, (event) => {
                  var _a;
                  (_a = context.trigger) == null ? void 0 : _a.focus({ preventScroll: true });
                  event.preventDefault();
                }),
                children: (0, import_jsx_runtime.jsx)(
                  import_react_dismissable_layer.DismissableLayer,
                  {
                    asChild: true,
                    disableOutsidePointerEvents: true,
                    onEscapeKeyDown,
                    onPointerDownOutside,
                    onFocusOutside: (event) => event.preventDefault(),
                    onDismiss: () => context.onOpenChange(false),
                    children: (0, import_jsx_runtime.jsx)(
                      SelectPosition,
                      {
                        role: "listbox",
                        id: context.contentId,
                        "data-state": context.open ? "open" : "closed",
                        dir: context.dir,
                        onContextMenu: (event) => event.preventDefault(),
                        ...contentProps,
                        ...popperContentProps,
                        onPlaced: () => setIsPositioned(true),
                        ref: composedRefs,
                        style: {
                          // flex layout so we can place the scroll buttons properly
                          display: "flex",
                          flexDirection: "column",
                          // reset the outline by default as the content MAY get focused
                          outline: "none",
                          ...contentProps.style
                        },
                        onKeyDown: (0, import_primitive.composeEventHandlers)(contentProps.onKeyDown, (event) => {
                          const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;
                          if (event.key === "Tab") event.preventDefault();
                          if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);
                          if (["ArrowUp", "ArrowDown", "Home", "End"].includes(event.key)) {
                            const items = getItems().filter((item) => !item.disabled);
                            let candidateNodes = items.map((item) => item.ref.current);
                            if (["ArrowUp", "End"].includes(event.key)) {
                              candidateNodes = candidateNodes.slice().reverse();
                            }
                            if (["ArrowUp", "ArrowDown"].includes(event.key)) {
                              const currentElement = event.target;
                              const currentIndex = candidateNodes.indexOf(currentElement);
                              candidateNodes = candidateNodes.slice(currentIndex + 1);
                            }
                            setTimeout(() => focusFirst(candidateNodes));
                            event.preventDefault();
                          }
                        })
                      }
                    )
                  }
                )
              }
            ) })
          }
        );
      }
    );
    SelectContentImpl.displayName = CONTENT_IMPL_NAME;
    var ITEM_ALIGNED_POSITION_NAME = "SelectItemAlignedPosition";
    var SelectItemAlignedPosition = React2.forwardRef((props, forwardedRef) => {
      const { __scopeSelect, onPlaced, ...popperProps } = props;
      const context = useSelectContext(CONTENT_NAME, __scopeSelect);
      const contentContext = useSelectContentContext(CONTENT_NAME, __scopeSelect);
      const [contentWrapper, setContentWrapper] = React2.useState(null);
      const [content, setContent] = React2.useState(null);
      const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, (node) => setContent(node));
      const getItems = useCollection(__scopeSelect);
      const shouldExpandOnScrollRef = React2.useRef(false);
      const shouldRepositionRef = React2.useRef(true);
      const { viewport, selectedItem, selectedItemText, focusSelectedItem } = contentContext;
      const position = React2.useCallback(() => {
        if (context.trigger && context.valueNode && contentWrapper && content && viewport && selectedItem && selectedItemText) {
          const triggerRect = context.trigger.getBoundingClientRect();
          const contentRect = content.getBoundingClientRect();
          const valueNodeRect = context.valueNode.getBoundingClientRect();
          const itemTextRect = selectedItemText.getBoundingClientRect();
          if (context.dir !== "rtl") {
            const itemTextOffset = itemTextRect.left - contentRect.left;
            const left = valueNodeRect.left - itemTextOffset;
            const leftDelta = triggerRect.left - left;
            const minContentWidth = triggerRect.width + leftDelta;
            const contentWidth = Math.max(minContentWidth, contentRect.width);
            const rightEdge = window.innerWidth - CONTENT_MARGIN;
            const clampedLeft = (0, import_number.clamp)(left, [CONTENT_MARGIN, rightEdge - contentWidth]);
            contentWrapper.style.minWidth = minContentWidth + "px";
            contentWrapper.style.left = clampedLeft + "px";
          } else {
            const itemTextOffset = contentRect.right - itemTextRect.right;
            const right = window.innerWidth - valueNodeRect.right - itemTextOffset;
            const rightDelta = window.innerWidth - triggerRect.right - right;
            const minContentWidth = triggerRect.width + rightDelta;
            const contentWidth = Math.max(minContentWidth, contentRect.width);
            const leftEdge = window.innerWidth - CONTENT_MARGIN;
            const clampedRight = (0, import_number.clamp)(right, [CONTENT_MARGIN, leftEdge - contentWidth]);
            contentWrapper.style.minWidth = minContentWidth + "px";
            contentWrapper.style.right = clampedRight + "px";
          }
          const items = getItems();
          const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;
          const itemsHeight = viewport.scrollHeight;
          const contentStyles = window.getComputedStyle(content);
          const contentBorderTopWidth = parseInt(contentStyles.borderTopWidth, 10);
          const contentPaddingTop = parseInt(contentStyles.paddingTop, 10);
          const contentBorderBottomWidth = parseInt(contentStyles.borderBottomWidth, 10);
          const contentPaddingBottom = parseInt(contentStyles.paddingBottom, 10);
          const fullContentHeight = contentBorderTopWidth + contentPaddingTop + itemsHeight + contentPaddingBottom + contentBorderBottomWidth;
          const minContentHeight = Math.min(selectedItem.offsetHeight * 5, fullContentHeight);
          const viewportStyles = window.getComputedStyle(viewport);
          const viewportPaddingTop = parseInt(viewportStyles.paddingTop, 10);
          const viewportPaddingBottom = parseInt(viewportStyles.paddingBottom, 10);
          const topEdgeToTriggerMiddle = triggerRect.top + triggerRect.height / 2 - CONTENT_MARGIN;
          const triggerMiddleToBottomEdge = availableHeight - topEdgeToTriggerMiddle;
          const selectedItemHalfHeight = selectedItem.offsetHeight / 2;
          const itemOffsetMiddle = selectedItem.offsetTop + selectedItemHalfHeight;
          const contentTopToItemMiddle = contentBorderTopWidth + contentPaddingTop + itemOffsetMiddle;
          const itemMiddleToContentBottom = fullContentHeight - contentTopToItemMiddle;
          const willAlignWithoutTopOverflow = contentTopToItemMiddle <= topEdgeToTriggerMiddle;
          if (willAlignWithoutTopOverflow) {
            const isLastItem = selectedItem === items[items.length - 1].ref.current;
            contentWrapper.style.bottom = "0px";
            const viewportOffsetBottom = content.clientHeight - viewport.offsetTop - viewport.offsetHeight;
            const clampedTriggerMiddleToBottomEdge = Math.max(
              triggerMiddleToBottomEdge,
              selectedItemHalfHeight + // viewport might have padding bottom, include it to avoid a scrollable viewport
              (isLastItem ? viewportPaddingBottom : 0) + viewportOffsetBottom + contentBorderBottomWidth
            );
            const height = contentTopToItemMiddle + clampedTriggerMiddleToBottomEdge;
            contentWrapper.style.height = height + "px";
          } else {
            const isFirstItem = selectedItem === items[0].ref.current;
            contentWrapper.style.top = "0px";
            const clampedTopEdgeToTriggerMiddle = Math.max(
              topEdgeToTriggerMiddle,
              contentBorderTopWidth + viewport.offsetTop + // viewport might have padding top, include it to avoid a scrollable viewport
              (isFirstItem ? viewportPaddingTop : 0) + selectedItemHalfHeight
            );
            const height = clampedTopEdgeToTriggerMiddle + itemMiddleToContentBottom;
            contentWrapper.style.height = height + "px";
            viewport.scrollTop = contentTopToItemMiddle - topEdgeToTriggerMiddle + viewport.offsetTop;
          }
          contentWrapper.style.margin = `${CONTENT_MARGIN}px 0`;
          contentWrapper.style.minHeight = minContentHeight + "px";
          contentWrapper.style.maxHeight = availableHeight + "px";
          onPlaced == null ? void 0 : onPlaced();
          requestAnimationFrame(() => shouldExpandOnScrollRef.current = true);
        }
      }, [
        getItems,
        context.trigger,
        context.valueNode,
        contentWrapper,
        content,
        viewport,
        selectedItem,
        selectedItemText,
        context.dir,
        onPlaced
      ]);
      (0, import_react_use_layout_effect.useLayoutEffect)(() => position(), [position]);
      const [contentZIndex, setContentZIndex] = React2.useState();
      (0, import_react_use_layout_effect.useLayoutEffect)(() => {
        if (content) setContentZIndex(window.getComputedStyle(content).zIndex);
      }, [content]);
      const handleScrollButtonChange = React2.useCallback(
        (node) => {
          if (node && shouldRepositionRef.current === true) {
            position();
            focusSelectedItem == null ? void 0 : focusSelectedItem();
            shouldRepositionRef.current = false;
          }
        },
        [position, focusSelectedItem]
      );
      return (0, import_jsx_runtime.jsx)(
        SelectViewportProvider,
        {
          scope: __scopeSelect,
          contentWrapper,
          shouldExpandOnScrollRef,
          onScrollButtonChange: handleScrollButtonChange,
          children: (0, import_jsx_runtime.jsx)(
            "div",
            {
              ref: setContentWrapper,
              style: {
                display: "flex",
                flexDirection: "column",
                position: "fixed",
                zIndex: contentZIndex
              },
              children: (0, import_jsx_runtime.jsx)(
                import_react_primitive.Primitive.div,
                {
                  ...popperProps,
                  ref: composedRefs,
                  style: {
                    // When we get the height of the content, it includes borders. If we were to set
                    // the height without having `boxSizing: 'border-box'` it would be too big.
                    boxSizing: "border-box",
                    // We need to ensure the content doesn't get taller than the wrapper
                    maxHeight: "100%",
                    ...popperProps.style
                  }
                }
              )
            }
          )
        }
      );
    });
    SelectItemAlignedPosition.displayName = ITEM_ALIGNED_POSITION_NAME;
    var POPPER_POSITION_NAME = "SelectPopperPosition";
    var SelectPopperPosition = React2.forwardRef((props, forwardedRef) => {
      const {
        __scopeSelect,
        align = "start",
        collisionPadding = CONTENT_MARGIN,
        ...popperProps
      } = props;
      const popperScope = usePopperScope(__scopeSelect);
      return (0, import_jsx_runtime.jsx)(
        PopperPrimitive.Content,
        {
          ...popperScope,
          ...popperProps,
          ref: forwardedRef,
          align,
          collisionPadding,
          style: {
            // Ensure border-box for floating-ui calculations
            boxSizing: "border-box",
            ...popperProps.style,
            // re-namespace exposed content custom properties
            ...{
              "--radix-select-content-transform-origin": "var(--radix-popper-transform-origin)",
              "--radix-select-content-available-width": "var(--radix-popper-available-width)",
              "--radix-select-content-available-height": "var(--radix-popper-available-height)",
              "--radix-select-trigger-width": "var(--radix-popper-anchor-width)",
              "--radix-select-trigger-height": "var(--radix-popper-anchor-height)"
            }
          }
        }
      );
    });
    SelectPopperPosition.displayName = POPPER_POSITION_NAME;
    var [SelectViewportProvider, useSelectViewportContext] = createSelectContext(CONTENT_NAME, {});
    var VIEWPORT_NAME = "SelectViewport";
    var SelectViewport = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeSelect, nonce, ...viewportProps } = props;
        const contentContext = useSelectContentContext(VIEWPORT_NAME, __scopeSelect);
        const viewportContext = useSelectViewportContext(VIEWPORT_NAME, __scopeSelect);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, contentContext.onViewportChange);
        const prevScrollTopRef = React2.useRef(0);
        return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
          (0, import_jsx_runtime.jsx)(
            "style",
            {
              dangerouslySetInnerHTML: {
                __html: `[data-radix-select-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-select-viewport]::-webkit-scrollbar{display:none}`
              },
              nonce
            }
          ),
          (0, import_jsx_runtime.jsx)(Collection.Slot, { scope: __scopeSelect, children: (0, import_jsx_runtime.jsx)(
            import_react_primitive.Primitive.div,
            {
              "data-radix-select-viewport": "",
              role: "presentation",
              ...viewportProps,
              ref: composedRefs,
              style: {
                // we use position: 'relative' here on the `viewport` so that when we call
                // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport
                // (independent of the scrollUpButton).
                position: "relative",
                flex: 1,
                overflow: "auto",
                ...viewportProps.style
              },
              onScroll: (0, import_primitive.composeEventHandlers)(viewportProps.onScroll, (event) => {
                const viewport = event.currentTarget;
                const { contentWrapper, shouldExpandOnScrollRef } = viewportContext;
                if ((shouldExpandOnScrollRef == null ? void 0 : shouldExpandOnScrollRef.current) && contentWrapper) {
                  const scrolledBy = Math.abs(prevScrollTopRef.current - viewport.scrollTop);
                  if (scrolledBy > 0) {
                    const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;
                    const cssMinHeight = parseFloat(contentWrapper.style.minHeight);
                    const cssHeight = parseFloat(contentWrapper.style.height);
                    const prevHeight = Math.max(cssMinHeight, cssHeight);
                    if (prevHeight < availableHeight) {
                      const nextHeight = prevHeight + scrolledBy;
                      const clampedNextHeight = Math.min(availableHeight, nextHeight);
                      const heightDiff = nextHeight - clampedNextHeight;
                      contentWrapper.style.height = clampedNextHeight + "px";
                      if (contentWrapper.style.bottom === "0px") {
                        viewport.scrollTop = heightDiff > 0 ? heightDiff : 0;
                        contentWrapper.style.justifyContent = "flex-end";
                      }
                    }
                  }
                }
                prevScrollTopRef.current = viewport.scrollTop;
              })
            }
          ) })
        ] });
      }
    );
    SelectViewport.displayName = VIEWPORT_NAME;
    var GROUP_NAME = "SelectGroup";
    var [SelectGroupContextProvider, useSelectGroupContext] = createSelectContext(GROUP_NAME);
    var SelectGroup = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeSelect, ...groupProps } = props;
        const groupId = (0, import_react_id.useId)();
        return (0, import_jsx_runtime.jsx)(SelectGroupContextProvider, { scope: __scopeSelect, id: groupId, children: (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.div, { role: "group", "aria-labelledby": groupId, ...groupProps, ref: forwardedRef }) });
      }
    );
    SelectGroup.displayName = GROUP_NAME;
    var LABEL_NAME = "SelectLabel";
    var SelectLabel = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeSelect, ...labelProps } = props;
        const groupContext = useSelectGroupContext(LABEL_NAME, __scopeSelect);
        return (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.div, { id: groupContext.id, ...labelProps, ref: forwardedRef });
      }
    );
    SelectLabel.displayName = LABEL_NAME;
    var ITEM_NAME = "SelectItem";
    var [SelectItemContextProvider, useSelectItemContext] = createSelectContext(ITEM_NAME);
    var SelectItem = React2.forwardRef(
      (props, forwardedRef) => {
        const {
          __scopeSelect,
          value,
          disabled = false,
          textValue: textValueProp,
          ...itemProps
        } = props;
        const context = useSelectContext(ITEM_NAME, __scopeSelect);
        const contentContext = useSelectContentContext(ITEM_NAME, __scopeSelect);
        const isSelected = context.value === value;
        const [textValue, setTextValue] = React2.useState(textValueProp ?? "");
        const [isFocused, setIsFocused] = React2.useState(false);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(
          forwardedRef,
          (node) => {
            var _a;
            return (_a = contentContext.itemRefCallback) == null ? void 0 : _a.call(contentContext, node, value, disabled);
          }
        );
        const textId = (0, import_react_id.useId)();
        const handleSelect = () => {
          if (!disabled) {
            context.onValueChange(value);
            context.onOpenChange(false);
          }
        };
        if (value === "") {
          throw new Error(
            "A <Select.Item /> must have a value prop that is not an empty string. This is because the Select value can be set to an empty string to clear the selection and show the placeholder."
          );
        }
        return (0, import_jsx_runtime.jsx)(
          SelectItemContextProvider,
          {
            scope: __scopeSelect,
            value,
            disabled,
            textId,
            isSelected,
            onItemTextChange: React2.useCallback((node) => {
              setTextValue((prevTextValue) => prevTextValue || ((node == null ? void 0 : node.textContent) ?? "").trim());
            }, []),
            children: (0, import_jsx_runtime.jsx)(
              Collection.ItemSlot,
              {
                scope: __scopeSelect,
                value,
                disabled,
                textValue,
                children: (0, import_jsx_runtime.jsx)(
                  import_react_primitive.Primitive.div,
                  {
                    role: "option",
                    "aria-labelledby": textId,
                    "data-highlighted": isFocused ? "" : void 0,
                    "aria-selected": isSelected && isFocused,
                    "data-state": isSelected ? "checked" : "unchecked",
                    "aria-disabled": disabled || void 0,
                    "data-disabled": disabled ? "" : void 0,
                    tabIndex: disabled ? void 0 : -1,
                    ...itemProps,
                    ref: composedRefs,
                    onFocus: (0, import_primitive.composeEventHandlers)(itemProps.onFocus, () => setIsFocused(true)),
                    onBlur: (0, import_primitive.composeEventHandlers)(itemProps.onBlur, () => setIsFocused(false)),
                    onPointerUp: (0, import_primitive.composeEventHandlers)(itemProps.onPointerUp, handleSelect),
                    onPointerMove: (0, import_primitive.composeEventHandlers)(itemProps.onPointerMove, (event) => {
                      var _a;
                      if (disabled) {
                        (_a = contentContext.onItemLeave) == null ? void 0 : _a.call(contentContext);
                      } else {
                        event.currentTarget.focus({ preventScroll: true });
                      }
                    }),
                    onPointerLeave: (0, import_primitive.composeEventHandlers)(itemProps.onPointerLeave, (event) => {
                      var _a;
                      if (event.currentTarget === document.activeElement) {
                        (_a = contentContext.onItemLeave) == null ? void 0 : _a.call(contentContext);
                      }
                    }),
                    onKeyDown: (0, import_primitive.composeEventHandlers)(itemProps.onKeyDown, (event) => {
                      var _a;
                      const isTypingAhead = ((_a = contentContext.searchRef) == null ? void 0 : _a.current) !== "";
                      if (isTypingAhead && event.key === " ") return;
                      if (SELECTION_KEYS.includes(event.key)) handleSelect();
                      if (event.key === " ") event.preventDefault();
                    })
                  }
                )
              }
            )
          }
        );
      }
    );
    SelectItem.displayName = ITEM_NAME;
    var ITEM_TEXT_NAME = "SelectItemText";
    var SelectItemText = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeSelect, className, style, ...itemTextProps } = props;
        const context = useSelectContext(ITEM_TEXT_NAME, __scopeSelect);
        const contentContext = useSelectContentContext(ITEM_TEXT_NAME, __scopeSelect);
        const itemContext = useSelectItemContext(ITEM_TEXT_NAME, __scopeSelect);
        const nativeOptionsContext = useSelectNativeOptionsContext(ITEM_TEXT_NAME, __scopeSelect);
        const [itemTextNode, setItemTextNode] = React2.useState(null);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(
          forwardedRef,
          (node) => setItemTextNode(node),
          itemContext.onItemTextChange,
          (node) => {
            var _a;
            return (_a = contentContext.itemTextRefCallback) == null ? void 0 : _a.call(contentContext, node, itemContext.value, itemContext.disabled);
          }
        );
        const textContent = itemTextNode == null ? void 0 : itemTextNode.textContent;
        const nativeOption = React2.useMemo(
          () => (0, import_jsx_runtime.jsx)("option", { value: itemContext.value, disabled: itemContext.disabled, children: textContent }, itemContext.value),
          [itemContext.disabled, itemContext.value, textContent]
        );
        const { onNativeOptionAdd, onNativeOptionRemove } = nativeOptionsContext;
        (0, import_react_use_layout_effect.useLayoutEffect)(() => {
          onNativeOptionAdd(nativeOption);
          return () => onNativeOptionRemove(nativeOption);
        }, [onNativeOptionAdd, onNativeOptionRemove, nativeOption]);
        return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
          (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.span, { id: itemContext.textId, ...itemTextProps, ref: composedRefs }),
          itemContext.isSelected && context.valueNode && !context.valueNodeHasChildren ? ReactDOM2.createPortal(itemTextProps.children, context.valueNode) : null
        ] });
      }
    );
    SelectItemText.displayName = ITEM_TEXT_NAME;
    var ITEM_INDICATOR_NAME = "SelectItemIndicator";
    var SelectItemIndicator = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeSelect, ...itemIndicatorProps } = props;
        const itemContext = useSelectItemContext(ITEM_INDICATOR_NAME, __scopeSelect);
        return itemContext.isSelected ? (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.span, { "aria-hidden": true, ...itemIndicatorProps, ref: forwardedRef }) : null;
      }
    );
    SelectItemIndicator.displayName = ITEM_INDICATOR_NAME;
    var SCROLL_UP_BUTTON_NAME = "SelectScrollUpButton";
    var SelectScrollUpButton = React2.forwardRef((props, forwardedRef) => {
      const contentContext = useSelectContentContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);
      const viewportContext = useSelectViewportContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);
      const [canScrollUp, setCanScrollUp] = React2.useState(false);
      const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, viewportContext.onScrollButtonChange);
      (0, import_react_use_layout_effect.useLayoutEffect)(() => {
        if (contentContext.viewport && contentContext.isPositioned) {
          let handleScroll2 = function() {
            const canScrollUp2 = viewport.scrollTop > 0;
            setCanScrollUp(canScrollUp2);
          };
          var handleScroll = handleScroll2;
          const viewport = contentContext.viewport;
          handleScroll2();
          viewport.addEventListener("scroll", handleScroll2);
          return () => viewport.removeEventListener("scroll", handleScroll2);
        }
      }, [contentContext.viewport, contentContext.isPositioned]);
      return canScrollUp ? (0, import_jsx_runtime.jsx)(
        SelectScrollButtonImpl,
        {
          ...props,
          ref: composedRefs,
          onAutoScroll: () => {
            const { viewport, selectedItem } = contentContext;
            if (viewport && selectedItem) {
              viewport.scrollTop = viewport.scrollTop - selectedItem.offsetHeight;
            }
          }
        }
      ) : null;
    });
    SelectScrollUpButton.displayName = SCROLL_UP_BUTTON_NAME;
    var SCROLL_DOWN_BUTTON_NAME = "SelectScrollDownButton";
    var SelectScrollDownButton = React2.forwardRef((props, forwardedRef) => {
      const contentContext = useSelectContentContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);
      const viewportContext = useSelectViewportContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);
      const [canScrollDown, setCanScrollDown] = React2.useState(false);
      const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, viewportContext.onScrollButtonChange);
      (0, import_react_use_layout_effect.useLayoutEffect)(() => {
        if (contentContext.viewport && contentContext.isPositioned) {
          let handleScroll2 = function() {
            const maxScroll = viewport.scrollHeight - viewport.clientHeight;
            const canScrollDown2 = Math.ceil(viewport.scrollTop) < maxScroll;
            setCanScrollDown(canScrollDown2);
          };
          var handleScroll = handleScroll2;
          const viewport = contentContext.viewport;
          handleScroll2();
          viewport.addEventListener("scroll", handleScroll2);
          return () => viewport.removeEventListener("scroll", handleScroll2);
        }
      }, [contentContext.viewport, contentContext.isPositioned]);
      return canScrollDown ? (0, import_jsx_runtime.jsx)(
        SelectScrollButtonImpl,
        {
          ...props,
          ref: composedRefs,
          onAutoScroll: () => {
            const { viewport, selectedItem } = contentContext;
            if (viewport && selectedItem) {
              viewport.scrollTop = viewport.scrollTop + selectedItem.offsetHeight;
            }
          }
        }
      ) : null;
    });
    SelectScrollDownButton.displayName = SCROLL_DOWN_BUTTON_NAME;
    var SelectScrollButtonImpl = React2.forwardRef((props, forwardedRef) => {
      const { __scopeSelect, onAutoScroll, ...scrollIndicatorProps } = props;
      const contentContext = useSelectContentContext("SelectScrollButton", __scopeSelect);
      const autoScrollTimerRef = React2.useRef(null);
      const getItems = useCollection(__scopeSelect);
      const clearAutoScrollTimer = React2.useCallback(() => {
        if (autoScrollTimerRef.current !== null) {
          window.clearInterval(autoScrollTimerRef.current);
          autoScrollTimerRef.current = null;
        }
      }, []);
      React2.useEffect(() => {
        return () => clearAutoScrollTimer();
      }, [clearAutoScrollTimer]);
      (0, import_react_use_layout_effect.useLayoutEffect)(() => {
        var _a;
        const activeItem = getItems().find((item) => item.ref.current === document.activeElement);
        (_a = activeItem == null ? void 0 : activeItem.ref.current) == null ? void 0 : _a.scrollIntoView({ block: "nearest" });
      }, [getItems]);
      return (0, import_jsx_runtime.jsx)(
        import_react_primitive.Primitive.div,
        {
          "aria-hidden": true,
          ...scrollIndicatorProps,
          ref: forwardedRef,
          style: { flexShrink: 0, ...scrollIndicatorProps.style },
          onPointerDown: (0, import_primitive.composeEventHandlers)(scrollIndicatorProps.onPointerDown, () => {
            if (autoScrollTimerRef.current === null) {
              autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);
            }
          }),
          onPointerMove: (0, import_primitive.composeEventHandlers)(scrollIndicatorProps.onPointerMove, () => {
            var _a;
            (_a = contentContext.onItemLeave) == null ? void 0 : _a.call(contentContext);
            if (autoScrollTimerRef.current === null) {
              autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);
            }
          }),
          onPointerLeave: (0, import_primitive.composeEventHandlers)(scrollIndicatorProps.onPointerLeave, () => {
            clearAutoScrollTimer();
          })
        }
      );
    });
    var SEPARATOR_NAME = "SelectSeparator";
    var SelectSeparator = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeSelect, ...separatorProps } = props;
        return (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.div, { "aria-hidden": true, ...separatorProps, ref: forwardedRef });
      }
    );
    SelectSeparator.displayName = SEPARATOR_NAME;
    var ARROW_NAME = "SelectArrow";
    var SelectArrow = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeSelect, ...arrowProps } = props;
        const popperScope = usePopperScope(__scopeSelect);
        const context = useSelectContext(ARROW_NAME, __scopeSelect);
        const contentContext = useSelectContentContext(ARROW_NAME, __scopeSelect);
        return context.open && contentContext.position === "popper" ? (0, import_jsx_runtime.jsx)(PopperPrimitive.Arrow, { ...popperScope, ...arrowProps, ref: forwardedRef }) : null;
      }
    );
    SelectArrow.displayName = ARROW_NAME;
    function shouldShowPlaceholder(value) {
      return value === "" || value === void 0;
    }
    var BubbleSelect = React2.forwardRef(
      (props, forwardedRef) => {
        const { value, ...selectProps } = props;
        const ref = React2.useRef(null);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, ref);
        const prevValue = (0, import_react_use_previous.usePrevious)(value);
        React2.useEffect(() => {
          const select = ref.current;
          const selectProto = window.HTMLSelectElement.prototype;
          const descriptor = Object.getOwnPropertyDescriptor(
            selectProto,
            "value"
          );
          const setValue = descriptor.set;
          if (prevValue !== value && setValue) {
            const event = new Event("change", { bubbles: true });
            setValue.call(select, value);
            select.dispatchEvent(event);
          }
        }, [prevValue, value]);
        return (0, import_jsx_runtime.jsx)(import_react_visually_hidden.VisuallyHidden, { asChild: true, children: (0, import_jsx_runtime.jsx)("select", { ...selectProps, ref: composedRefs, defaultValue: value }) });
      }
    );
    BubbleSelect.displayName = "BubbleSelect";
    function useTypeaheadSearch(onSearchChange) {
      const handleSearchChange = (0, import_react_use_callback_ref.useCallbackRef)(onSearchChange);
      const searchRef = React2.useRef("");
      const timerRef = React2.useRef(0);
      const handleTypeaheadSearch = React2.useCallback(
        (key) => {
          const search = searchRef.current + key;
          handleSearchChange(search);
          (function updateSearch(value) {
            searchRef.current = value;
            window.clearTimeout(timerRef.current);
            if (value !== "") timerRef.current = window.setTimeout(() => updateSearch(""), 1e3);
          })(search);
        },
        [handleSearchChange]
      );
      const resetTypeahead = React2.useCallback(() => {
        searchRef.current = "";
        window.clearTimeout(timerRef.current);
      }, []);
      React2.useEffect(() => {
        return () => window.clearTimeout(timerRef.current);
      }, []);
      return [searchRef, handleTypeaheadSearch, resetTypeahead];
    }
    function findNextItem(items, search, currentItem) {
      const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);
      const normalizedSearch = isRepeated ? search[0] : search;
      const currentItemIndex = currentItem ? items.indexOf(currentItem) : -1;
      let wrappedItems = wrapArray(items, Math.max(currentItemIndex, 0));
      const excludeCurrentItem = normalizedSearch.length === 1;
      if (excludeCurrentItem) wrappedItems = wrappedItems.filter((v) => v !== currentItem);
      const nextItem = wrappedItems.find(
        (item) => item.textValue.toLowerCase().startsWith(normalizedSearch.toLowerCase())
      );
      return nextItem !== currentItem ? nextItem : void 0;
    }
    function wrapArray(array, startIndex) {
      return array.map((_, index2) => array[(startIndex + index2) % array.length]);
    }
    var Root2 = Select;
    var Trigger = SelectTrigger;
    var Value = SelectValue;
    var Icon = SelectIcon;
    var Portal = SelectPortal;
    var Content2 = SelectContent;
    var Viewport = SelectViewport;
    var Group = SelectGroup;
    var Label = SelectLabel;
    var Item = SelectItem;
    var ItemText = SelectItemText;
    var ItemIndicator = SelectItemIndicator;
    var ScrollUpButton = SelectScrollUpButton;
    var ScrollDownButton = SelectScrollDownButton;
    var Separator = SelectSeparator;
    var Arrow2 = SelectArrow;
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/select.props.js
var require_select_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/select.props.js"(exports, module) {
    "use strict";
    var o = Object.defineProperty;
    var m = Object.getOwnPropertyDescriptor;
    var u = Object.getOwnPropertyNames;
    var D = Object.prototype.hasOwnProperty;
    var P = (s, e) => {
      for (var r in e) o(s, r, { get: e[r], enumerable: true });
    };
    var g = (s, e, r, i) => {
      if (e && typeof e == "object" || typeof e == "function") for (let t of u(e)) !D.call(s, t) && t !== r && o(s, t, { get: () => e[t], enumerable: !(i = m(e, t)) || i.enumerable });
      return s;
    };
    var v = (s) => g(o({}, "__esModule", { value: true }), s);
    var z = {};
    P(z, { selectContentPropDefs: () => l, selectRootPropDefs: () => f, selectTriggerPropDefs: () => c });
    module.exports = v(z);
    var a = require_color_prop();
    var n = require_high_contrast_prop();
    var p = require_radius_prop();
    var d = ["1", "2", "3"];
    var f = { size: { type: "enum", className: "rt-r-size", values: d, default: "2", responsive: true } };
    var y = ["classic", "surface", "soft", "ghost"];
    var c = { variant: { type: "enum", className: "rt-variant", values: y, default: "surface" }, ...a.colorPropDef, ...p.radiusPropDef, placeholder: { type: "string" } };
    var h = ["solid", "soft"];
    var l = { variant: { type: "enum", className: "rt-variant", values: h, default: "solid" }, ...a.colorPropDef, ...n.highContrastPropDef };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/select.js
var require_select = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/select.js"(exports, module) {
    "use strict";
    "use client";
    var G = Object.create;
    var n = Object.defineProperty;
    var L = Object.getOwnPropertyDescriptor;
    var D = Object.getOwnPropertyNames;
    var z = Object.getPrototypeOf;
    var V = Object.prototype.hasOwnProperty;
    var W = (t, o) => {
      for (var r in o) n(t, r, { get: o[r], enumerable: true });
    };
    var b = (t, o, r, i) => {
      if (o && typeof o == "object" || typeof o == "function") for (let s of D(o)) !V.call(t, s) && s !== r && n(t, s, { get: () => o[s], enumerable: !(i = L(o, s)) || i.enumerable });
      return t;
    };
    var m = (t, o, r) => (r = t != null ? G(z(t)) : {}, b(o || !t || !t.__esModule ? n(r, "default", { value: t, enumerable: true }) : r, t));
    var A = (t) => b(n({}, "__esModule", { value: true }), t);
    var O = {};
    W(O, { Content: () => I, Group: () => N, Item: () => T, Label: () => R, Root: () => v, Separator: () => x, Trigger: () => h });
    module.exports = A(O);
    var e = m(require_react());
    var c = m(require_classnames());
    var l = m(require_dist42());
    var S = m(require_dist34());
    var y = require_extract_props();
    var w = require_margin_props();
    var P = require_icons();
    var p = require_select_props();
    var f = require_theme();
    var g = e.createContext({});
    var v = (t) => {
      const { children: o, size: r = p.selectRootPropDefs.size.default, ...i } = t;
      return e.createElement(l.Root, { ...i }, e.createElement(g.Provider, { value: e.useMemo(() => ({ size: r }), [r]) }, o));
    };
    v.displayName = "Select.Root";
    var h = e.forwardRef((t, o) => {
      const r = e.useContext(g), { children: i, className: s, color: d, radius: C, placeholder: a, ...u } = (0, y.extractProps)({ size: r == null ? void 0 : r.size, ...t }, { size: p.selectRootPropDefs.size }, p.selectTriggerPropDefs, w.marginPropDefs);
      return e.createElement(l.Trigger, { asChild: true }, e.createElement("button", { "data-accent-color": d, "data-radius": C, ...u, ref: o, className: (0, c.default)("rt-reset", "rt-SelectTrigger", s) }, e.createElement("span", { className: "rt-SelectTriggerInner" }, e.createElement(l.Value, { placeholder: a }, i)), e.createElement(l.Icon, { asChild: true }, e.createElement(P.ChevronDownIcon, { className: "rt-SelectIcon" }))));
    });
    h.displayName = "Select.Trigger";
    var I = e.forwardRef((t, o) => {
      const r = e.useContext(g), { className: i, children: s, color: d, container: C, ...a } = (0, y.extractProps)({ size: r == null ? void 0 : r.size, ...t }, { size: p.selectRootPropDefs.size }, p.selectContentPropDefs), u = (0, f.useThemeContext)(), E = d || u.accentColor;
      return e.createElement(l.Portal, { container: C }, e.createElement(f.Theme, { asChild: true }, e.createElement(l.Content, { "data-accent-color": E, sideOffset: 4, ...a, asChild: false, ref: o, className: (0, c.default)({ "rt-PopperContent": a.position === "popper" }, "rt-SelectContent", i) }, e.createElement(S.Root, { type: "auto", className: "rt-ScrollAreaRoot" }, e.createElement(l.Viewport, { asChild: true, className: "rt-SelectViewport" }, e.createElement(S.Viewport, { className: "rt-ScrollAreaViewport", style: { overflowY: void 0 } }, s)), e.createElement(S.Scrollbar, { className: "rt-ScrollAreaScrollbar rt-r-size-1", orientation: "vertical" }, e.createElement(S.Thumb, { className: "rt-ScrollAreaThumb" }))))));
    });
    I.displayName = "Select.Content";
    var T = e.forwardRef((t, o) => {
      const { className: r, children: i, ...s } = t;
      return e.createElement(l.Item, { ...s, asChild: false, ref: o, className: (0, c.default)("rt-SelectItem", r) }, e.createElement(l.ItemIndicator, { className: "rt-SelectItemIndicator" }, e.createElement(P.ThickCheckIcon, { className: "rt-SelectItemIndicatorIcon" })), e.createElement(l.ItemText, null, i));
    });
    T.displayName = "Select.Item";
    var N = e.forwardRef(({ className: t, ...o }, r) => e.createElement(l.Group, { ...o, asChild: false, ref: r, className: (0, c.default)("rt-SelectGroup", t) }));
    N.displayName = "Select.Group";
    var R = e.forwardRef(({ className: t, ...o }, r) => e.createElement(l.Label, { ...o, asChild: false, ref: r, className: (0, c.default)("rt-SelectLabel", t) }));
    R.displayName = "Select.Label";
    var x = e.forwardRef(({ className: t, ...o }, r) => e.createElement(l.Separator, { ...o, asChild: false, ref: r, className: (0, c.default)("rt-SelectSeparator", t) }));
    x.displayName = "Select.Separator";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/separator.props.js
var require_separator_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/separator.props.js"(exports, module) {
    "use strict";
    var s = Object.defineProperty;
    var p = Object.getOwnPropertyDescriptor;
    var l = Object.getOwnPropertyNames;
    var f = Object.prototype.hasOwnProperty;
    var c = (e, o) => {
      for (var t in o) s(e, t, { get: o[t], enumerable: true });
    };
    var u = (e, o, t, a) => {
      if (o && typeof o == "object" || typeof o == "function") for (let r of l(o)) !f.call(e, r) && r !== t && s(e, r, { get: () => o[r], enumerable: !(a = p(o, r)) || a.enumerable });
      return e;
    };
    var m = (e) => u(s({}, "__esModule", { value: true }), e);
    var v = {};
    c(v, { separatorPropDefs: () => n });
    module.exports = m(v);
    var i = require_color_prop();
    var y = ["horizontal", "vertical"];
    var d = ["1", "2", "3", "4"];
    var n = { orientation: { type: "enum", className: "rt-r-orientation", values: y, default: "horizontal", responsive: true }, size: { type: "enum", className: "rt-r-size", values: d, default: "1", responsive: true }, color: { ...i.colorPropDef.color, default: "gray" }, decorative: { type: "boolean", default: true } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/separator.js
var require_separator = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/separator.js"(exports, module) {
    "use strict";
    var y = Object.create;
    var a = Object.defineProperty;
    var S = Object.getOwnPropertyDescriptor;
    var D = Object.getOwnPropertyNames;
    var R = Object.getPrototypeOf;
    var g = Object.prototype.hasOwnProperty;
    var u = (r, o) => {
      for (var p in o) a(r, p, { get: o[p], enumerable: true });
    };
    var m = (r, o, p, t) => {
      if (o && typeof o == "object" || typeof o == "function") for (let e of D(o)) !g.call(r, e) && e !== p && a(r, e, { get: () => o[e], enumerable: !(t = S(o, e)) || t.enumerable });
      return r;
    };
    var n = (r, o, p) => (p = r != null ? y(R(r)) : {}, m(o || !r || !r.__esModule ? a(p, "default", { value: r, enumerable: true }) : p, r));
    var x = (r) => m(a({}, "__esModule", { value: true }), r);
    var N = {};
    u(N, { Separator: () => s });
    module.exports = x(N);
    var f = n(require_react());
    var i = n(require_classnames());
    var P = require_separator_props();
    var c = require_extract_props();
    var l = require_margin_props();
    var s = f.forwardRef((r, o) => {
      const { className: p, color: t, decorative: e, ...d } = (0, c.extractProps)(r, P.separatorPropDefs, l.marginPropDefs);
      return f.createElement("span", { "data-accent-color": t, role: e ? void 0 : "separator", ...d, ref: o, className: (0, i.default)("rt-Separator", p) });
    });
    s.displayName = "Separator";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/skeleton.props.js
var require_skeleton_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/skeleton.props.js"(exports, module) {
    "use strict";
    var t = Object.defineProperty;
    var l = Object.getOwnPropertyDescriptor;
    var m = Object.getOwnPropertyNames;
    var n = Object.prototype.hasOwnProperty;
    var d = (e, o) => {
      for (var r in o) t(e, r, { get: o[r], enumerable: true });
    };
    var D = (e, o, r, f) => {
      if (o && typeof o == "object" || typeof o == "function") for (let p of m(o)) !n.call(e, p) && p !== r && t(e, p, { get: () => o[p], enumerable: !(f = l(o, p)) || f.enumerable });
      return e;
    };
    var P = (e) => D(t({}, "__esModule", { value: true }), e);
    var g = {};
    d(g, { skeletonPropDefs: () => a });
    module.exports = P(g);
    var s = require_height_props();
    var i = require_width_props();
    var a = { loading: { type: "boolean", default: true }, ...i.widthPropDefs, ...s.heightPropDefs };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/skeleton.js
var require_skeleton = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/skeleton.js"(exports, module) {
    "use strict";
    var g = Object.create;
    var n = Object.defineProperty;
    var u = Object.getOwnPropertyDescriptor;
    var h = Object.getOwnPropertyNames;
    var x = Object.getPrototypeOf;
    var D = Object.prototype.hasOwnProperty;
    var E = (e, o) => {
      for (var r in o) n(e, r, { get: o[r], enumerable: true });
    };
    var i = (e, o, r, p) => {
      if (o && typeof o == "object" || typeof o == "function") for (let t of h(o)) !D.call(e, t) && t !== r && n(e, t, { get: () => o[t], enumerable: !(p = u(o, t)) || p.enumerable });
      return e;
    };
    var a = (e, o, r) => (r = e != null ? g(x(e)) : {}, i(o || !e || !e.__esModule ? n(r, "default", { value: e, enumerable: true }) : r, e));
    var R = (e) => i(n({}, "__esModule", { value: true }), e);
    var N = {};
    E(N, { Skeleton: () => m });
    module.exports = R(N);
    var s = a(require_react());
    var l = a(require_classnames());
    var f = require_dist2();
    var P = require_inert();
    var d = require_extract_props();
    var k = require_margin_props();
    var c = require_skeleton_props();
    var m = s.forwardRef((e, o) => {
      const { children: r, className: p, loading: t, ...S } = (0, d.extractProps)(e, c.skeletonPropDefs, k.marginPropDefs);
      if (!t) return r;
      const y = s.isValidElement(r) ? f.Slot : "span";
      return s.createElement(y, { ref: o, "aria-hidden": true, className: (0, l.default)("rt-Skeleton", p), "data-inline-skeleton": s.isValidElement(r) ? void 0 : true, tabIndex: -1, inert: P.inert, ...S }, r);
    });
    m.displayName = "Skeleton";
  }
});

// node_modules/@radix-ui/react-slider/dist/index.js
var require_dist43 = __commonJS({
  "node_modules/@radix-ui/react-slider/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Range: () => Range,
      Root: () => Root,
      Slider: () => Slider,
      SliderRange: () => SliderRange,
      SliderThumb: () => SliderThumb,
      SliderTrack: () => SliderTrack,
      Thumb: () => Thumb,
      Track: () => Track,
      createSliderScope: () => createSliderScope
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_number = require_dist33();
    var import_primitive = require_dist7();
    var import_react_compose_refs = require_dist();
    var import_react_context = require_dist6();
    var import_react_use_controllable_state = require_dist11();
    var import_react_direction = require_dist24();
    var import_react_use_previous = require_dist27();
    var import_react_use_size = require_dist21();
    var import_react_primitive = require_dist3();
    var import_react_collection = require_dist29();
    var import_jsx_runtime = require_jsx_runtime();
    var PAGE_KEYS = ["PageUp", "PageDown"];
    var ARROW_KEYS = ["ArrowUp", "ArrowDown", "ArrowLeft", "ArrowRight"];
    var BACK_KEYS = {
      "from-left": ["Home", "PageDown", "ArrowDown", "ArrowLeft"],
      "from-right": ["Home", "PageDown", "ArrowDown", "ArrowRight"],
      "from-bottom": ["Home", "PageDown", "ArrowDown", "ArrowLeft"],
      "from-top": ["Home", "PageDown", "ArrowUp", "ArrowLeft"]
    };
    var SLIDER_NAME = "Slider";
    var [Collection, useCollection, createCollectionScope] = (0, import_react_collection.createCollection)(SLIDER_NAME);
    var [createSliderContext, createSliderScope] = (0, import_react_context.createContextScope)(SLIDER_NAME, [
      createCollectionScope
    ]);
    var [SliderProvider, useSliderContext] = createSliderContext(SLIDER_NAME);
    var Slider = React2.forwardRef(
      (props, forwardedRef) => {
        const {
          name,
          min = 0,
          max = 100,
          step = 1,
          orientation = "horizontal",
          disabled = false,
          minStepsBetweenThumbs = 0,
          defaultValue = [min],
          value,
          onValueChange = () => {
          },
          onValueCommit = () => {
          },
          inverted = false,
          ...sliderProps
        } = props;
        const thumbRefs = React2.useRef(/* @__PURE__ */ new Set());
        const valueIndexToChangeRef = React2.useRef(0);
        const isHorizontal = orientation === "horizontal";
        const SliderOrientation = isHorizontal ? SliderHorizontal : SliderVertical;
        const [values = [], setValues] = (0, import_react_use_controllable_state.useControllableState)({
          prop: value,
          defaultProp: defaultValue,
          onChange: (value2) => {
            var _a;
            const thumbs = [...thumbRefs.current];
            (_a = thumbs[valueIndexToChangeRef.current]) == null ? void 0 : _a.focus();
            onValueChange(value2);
          }
        });
        const valuesBeforeSlideStartRef = React2.useRef(values);
        function handleSlideStart(value2) {
          const closestIndex = getClosestValueIndex(values, value2);
          updateValues(value2, closestIndex);
        }
        function handleSlideMove(value2) {
          updateValues(value2, valueIndexToChangeRef.current);
        }
        function handleSlideEnd() {
          const prevValue = valuesBeforeSlideStartRef.current[valueIndexToChangeRef.current];
          const nextValue = values[valueIndexToChangeRef.current];
          const hasChanged = nextValue !== prevValue;
          if (hasChanged) onValueCommit(values);
        }
        function updateValues(value2, atIndex, { commit } = { commit: false }) {
          const decimalCount = getDecimalCount(step);
          const snapToStep = roundValue(Math.round((value2 - min) / step) * step + min, decimalCount);
          const nextValue = (0, import_number.clamp)(snapToStep, [min, max]);
          setValues((prevValues = []) => {
            const nextValues = getNextSortedValues(prevValues, nextValue, atIndex);
            if (hasMinStepsBetweenValues(nextValues, minStepsBetweenThumbs * step)) {
              valueIndexToChangeRef.current = nextValues.indexOf(nextValue);
              const hasChanged = String(nextValues) !== String(prevValues);
              if (hasChanged && commit) onValueCommit(nextValues);
              return hasChanged ? nextValues : prevValues;
            } else {
              return prevValues;
            }
          });
        }
        return (0, import_jsx_runtime.jsx)(
          SliderProvider,
          {
            scope: props.__scopeSlider,
            name,
            disabled,
            min,
            max,
            valueIndexToChangeRef,
            thumbs: thumbRefs.current,
            values,
            orientation,
            children: (0, import_jsx_runtime.jsx)(Collection.Provider, { scope: props.__scopeSlider, children: (0, import_jsx_runtime.jsx)(Collection.Slot, { scope: props.__scopeSlider, children: (0, import_jsx_runtime.jsx)(
              SliderOrientation,
              {
                "aria-disabled": disabled,
                "data-disabled": disabled ? "" : void 0,
                ...sliderProps,
                ref: forwardedRef,
                onPointerDown: (0, import_primitive.composeEventHandlers)(sliderProps.onPointerDown, () => {
                  if (!disabled) valuesBeforeSlideStartRef.current = values;
                }),
                min,
                max,
                inverted,
                onSlideStart: disabled ? void 0 : handleSlideStart,
                onSlideMove: disabled ? void 0 : handleSlideMove,
                onSlideEnd: disabled ? void 0 : handleSlideEnd,
                onHomeKeyDown: () => !disabled && updateValues(min, 0, { commit: true }),
                onEndKeyDown: () => !disabled && updateValues(max, values.length - 1, { commit: true }),
                onStepKeyDown: ({ event, direction: stepDirection }) => {
                  if (!disabled) {
                    const isPageKey = PAGE_KEYS.includes(event.key);
                    const isSkipKey = isPageKey || event.shiftKey && ARROW_KEYS.includes(event.key);
                    const multiplier = isSkipKey ? 10 : 1;
                    const atIndex = valueIndexToChangeRef.current;
                    const value2 = values[atIndex];
                    const stepInDirection = step * multiplier * stepDirection;
                    updateValues(value2 + stepInDirection, atIndex, { commit: true });
                  }
                }
              }
            ) }) })
          }
        );
      }
    );
    Slider.displayName = SLIDER_NAME;
    var [SliderOrientationProvider, useSliderOrientationContext] = createSliderContext(SLIDER_NAME, {
      startEdge: "left",
      endEdge: "right",
      size: "width",
      direction: 1
    });
    var SliderHorizontal = React2.forwardRef(
      (props, forwardedRef) => {
        const {
          min,
          max,
          dir,
          inverted,
          onSlideStart,
          onSlideMove,
          onSlideEnd,
          onStepKeyDown,
          ...sliderProps
        } = props;
        const [slider, setSlider] = React2.useState(null);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, (node) => setSlider(node));
        const rectRef = React2.useRef();
        const direction = (0, import_react_direction.useDirection)(dir);
        const isDirectionLTR = direction === "ltr";
        const isSlidingFromLeft = isDirectionLTR && !inverted || !isDirectionLTR && inverted;
        function getValueFromPointer(pointerPosition) {
          const rect = rectRef.current || slider.getBoundingClientRect();
          const input = [0, rect.width];
          const output = isSlidingFromLeft ? [min, max] : [max, min];
          const value = linearScale(input, output);
          rectRef.current = rect;
          return value(pointerPosition - rect.left);
        }
        return (0, import_jsx_runtime.jsx)(
          SliderOrientationProvider,
          {
            scope: props.__scopeSlider,
            startEdge: isSlidingFromLeft ? "left" : "right",
            endEdge: isSlidingFromLeft ? "right" : "left",
            direction: isSlidingFromLeft ? 1 : -1,
            size: "width",
            children: (0, import_jsx_runtime.jsx)(
              SliderImpl,
              {
                dir: direction,
                "data-orientation": "horizontal",
                ...sliderProps,
                ref: composedRefs,
                style: {
                  ...sliderProps.style,
                  ["--radix-slider-thumb-transform"]: "translateX(-50%)"
                },
                onSlideStart: (event) => {
                  const value = getValueFromPointer(event.clientX);
                  onSlideStart == null ? void 0 : onSlideStart(value);
                },
                onSlideMove: (event) => {
                  const value = getValueFromPointer(event.clientX);
                  onSlideMove == null ? void 0 : onSlideMove(value);
                },
                onSlideEnd: () => {
                  rectRef.current = void 0;
                  onSlideEnd == null ? void 0 : onSlideEnd();
                },
                onStepKeyDown: (event) => {
                  const slideDirection = isSlidingFromLeft ? "from-left" : "from-right";
                  const isBackKey = BACK_KEYS[slideDirection].includes(event.key);
                  onStepKeyDown == null ? void 0 : onStepKeyDown({ event, direction: isBackKey ? -1 : 1 });
                }
              }
            )
          }
        );
      }
    );
    var SliderVertical = React2.forwardRef(
      (props, forwardedRef) => {
        const {
          min,
          max,
          inverted,
          onSlideStart,
          onSlideMove,
          onSlideEnd,
          onStepKeyDown,
          ...sliderProps
        } = props;
        const sliderRef = React2.useRef(null);
        const ref = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, sliderRef);
        const rectRef = React2.useRef();
        const isSlidingFromBottom = !inverted;
        function getValueFromPointer(pointerPosition) {
          const rect = rectRef.current || sliderRef.current.getBoundingClientRect();
          const input = [0, rect.height];
          const output = isSlidingFromBottom ? [max, min] : [min, max];
          const value = linearScale(input, output);
          rectRef.current = rect;
          return value(pointerPosition - rect.top);
        }
        return (0, import_jsx_runtime.jsx)(
          SliderOrientationProvider,
          {
            scope: props.__scopeSlider,
            startEdge: isSlidingFromBottom ? "bottom" : "top",
            endEdge: isSlidingFromBottom ? "top" : "bottom",
            size: "height",
            direction: isSlidingFromBottom ? 1 : -1,
            children: (0, import_jsx_runtime.jsx)(
              SliderImpl,
              {
                "data-orientation": "vertical",
                ...sliderProps,
                ref,
                style: {
                  ...sliderProps.style,
                  ["--radix-slider-thumb-transform"]: "translateY(50%)"
                },
                onSlideStart: (event) => {
                  const value = getValueFromPointer(event.clientY);
                  onSlideStart == null ? void 0 : onSlideStart(value);
                },
                onSlideMove: (event) => {
                  const value = getValueFromPointer(event.clientY);
                  onSlideMove == null ? void 0 : onSlideMove(value);
                },
                onSlideEnd: () => {
                  rectRef.current = void 0;
                  onSlideEnd == null ? void 0 : onSlideEnd();
                },
                onStepKeyDown: (event) => {
                  const slideDirection = isSlidingFromBottom ? "from-bottom" : "from-top";
                  const isBackKey = BACK_KEYS[slideDirection].includes(event.key);
                  onStepKeyDown == null ? void 0 : onStepKeyDown({ event, direction: isBackKey ? -1 : 1 });
                }
              }
            )
          }
        );
      }
    );
    var SliderImpl = React2.forwardRef(
      (props, forwardedRef) => {
        const {
          __scopeSlider,
          onSlideStart,
          onSlideMove,
          onSlideEnd,
          onHomeKeyDown,
          onEndKeyDown,
          onStepKeyDown,
          ...sliderProps
        } = props;
        const context = useSliderContext(SLIDER_NAME, __scopeSlider);
        return (0, import_jsx_runtime.jsx)(
          import_react_primitive.Primitive.span,
          {
            ...sliderProps,
            ref: forwardedRef,
            onKeyDown: (0, import_primitive.composeEventHandlers)(props.onKeyDown, (event) => {
              if (event.key === "Home") {
                onHomeKeyDown(event);
                event.preventDefault();
              } else if (event.key === "End") {
                onEndKeyDown(event);
                event.preventDefault();
              } else if (PAGE_KEYS.concat(ARROW_KEYS).includes(event.key)) {
                onStepKeyDown(event);
                event.preventDefault();
              }
            }),
            onPointerDown: (0, import_primitive.composeEventHandlers)(props.onPointerDown, (event) => {
              const target = event.target;
              target.setPointerCapture(event.pointerId);
              event.preventDefault();
              if (context.thumbs.has(target)) {
                target.focus();
              } else {
                onSlideStart(event);
              }
            }),
            onPointerMove: (0, import_primitive.composeEventHandlers)(props.onPointerMove, (event) => {
              const target = event.target;
              if (target.hasPointerCapture(event.pointerId)) onSlideMove(event);
            }),
            onPointerUp: (0, import_primitive.composeEventHandlers)(props.onPointerUp, (event) => {
              const target = event.target;
              if (target.hasPointerCapture(event.pointerId)) {
                target.releasePointerCapture(event.pointerId);
                onSlideEnd(event);
              }
            })
          }
        );
      }
    );
    var TRACK_NAME = "SliderTrack";
    var SliderTrack = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeSlider, ...trackProps } = props;
        const context = useSliderContext(TRACK_NAME, __scopeSlider);
        return (0, import_jsx_runtime.jsx)(
          import_react_primitive.Primitive.span,
          {
            "data-disabled": context.disabled ? "" : void 0,
            "data-orientation": context.orientation,
            ...trackProps,
            ref: forwardedRef
          }
        );
      }
    );
    SliderTrack.displayName = TRACK_NAME;
    var RANGE_NAME = "SliderRange";
    var SliderRange = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeSlider, ...rangeProps } = props;
        const context = useSliderContext(RANGE_NAME, __scopeSlider);
        const orientation = useSliderOrientationContext(RANGE_NAME, __scopeSlider);
        const ref = React2.useRef(null);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, ref);
        const valuesCount = context.values.length;
        const percentages = context.values.map(
          (value) => convertValueToPercentage(value, context.min, context.max)
        );
        const offsetStart = valuesCount > 1 ? Math.min(...percentages) : 0;
        const offsetEnd = 100 - Math.max(...percentages);
        return (0, import_jsx_runtime.jsx)(
          import_react_primitive.Primitive.span,
          {
            "data-orientation": context.orientation,
            "data-disabled": context.disabled ? "" : void 0,
            ...rangeProps,
            ref: composedRefs,
            style: {
              ...props.style,
              [orientation.startEdge]: offsetStart + "%",
              [orientation.endEdge]: offsetEnd + "%"
            }
          }
        );
      }
    );
    SliderRange.displayName = RANGE_NAME;
    var THUMB_NAME = "SliderThumb";
    var SliderThumb = React2.forwardRef(
      (props, forwardedRef) => {
        const getItems = useCollection(props.__scopeSlider);
        const [thumb, setThumb] = React2.useState(null);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, (node) => setThumb(node));
        const index2 = React2.useMemo(
          () => thumb ? getItems().findIndex((item) => item.ref.current === thumb) : -1,
          [getItems, thumb]
        );
        return (0, import_jsx_runtime.jsx)(SliderThumbImpl, { ...props, ref: composedRefs, index: index2 });
      }
    );
    var SliderThumbImpl = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeSlider, index: index2, name, ...thumbProps } = props;
        const context = useSliderContext(THUMB_NAME, __scopeSlider);
        const orientation = useSliderOrientationContext(THUMB_NAME, __scopeSlider);
        const [thumb, setThumb] = React2.useState(null);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, (node) => setThumb(node));
        const isFormControl = thumb ? Boolean(thumb.closest("form")) : true;
        const size3 = (0, import_react_use_size.useSize)(thumb);
        const value = context.values[index2];
        const percent = value === void 0 ? 0 : convertValueToPercentage(value, context.min, context.max);
        const label = getLabel(index2, context.values.length);
        const orientationSize = size3 == null ? void 0 : size3[orientation.size];
        const thumbInBoundsOffset = orientationSize ? getThumbInBoundsOffset(orientationSize, percent, orientation.direction) : 0;
        React2.useEffect(() => {
          if (thumb) {
            context.thumbs.add(thumb);
            return () => {
              context.thumbs.delete(thumb);
            };
          }
        }, [thumb, context.thumbs]);
        return (0, import_jsx_runtime.jsxs)(
          "span",
          {
            style: {
              transform: "var(--radix-slider-thumb-transform)",
              position: "absolute",
              [orientation.startEdge]: `calc(${percent}% + ${thumbInBoundsOffset}px)`
            },
            children: [
              (0, import_jsx_runtime.jsx)(Collection.ItemSlot, { scope: props.__scopeSlider, children: (0, import_jsx_runtime.jsx)(
                import_react_primitive.Primitive.span,
                {
                  role: "slider",
                  "aria-label": props["aria-label"] || label,
                  "aria-valuemin": context.min,
                  "aria-valuenow": value,
                  "aria-valuemax": context.max,
                  "aria-orientation": context.orientation,
                  "data-orientation": context.orientation,
                  "data-disabled": context.disabled ? "" : void 0,
                  tabIndex: context.disabled ? void 0 : 0,
                  ...thumbProps,
                  ref: composedRefs,
                  style: value === void 0 ? { display: "none" } : props.style,
                  onFocus: (0, import_primitive.composeEventHandlers)(props.onFocus, () => {
                    context.valueIndexToChangeRef.current = index2;
                  })
                }
              ) }),
              isFormControl && (0, import_jsx_runtime.jsx)(
                BubbleInput,
                {
                  name: name ?? (context.name ? context.name + (context.values.length > 1 ? "[]" : "") : void 0),
                  value
                },
                index2
              )
            ]
          }
        );
      }
    );
    SliderThumb.displayName = THUMB_NAME;
    var BubbleInput = (props) => {
      const { value, ...inputProps } = props;
      const ref = React2.useRef(null);
      const prevValue = (0, import_react_use_previous.usePrevious)(value);
      React2.useEffect(() => {
        const input = ref.current;
        const inputProto = window.HTMLInputElement.prototype;
        const descriptor = Object.getOwnPropertyDescriptor(inputProto, "value");
        const setValue = descriptor.set;
        if (prevValue !== value && setValue) {
          const event = new Event("input", { bubbles: true });
          setValue.call(input, value);
          input.dispatchEvent(event);
        }
      }, [prevValue, value]);
      return (0, import_jsx_runtime.jsx)("input", { style: { display: "none" }, ...inputProps, ref, defaultValue: value });
    };
    function getNextSortedValues(prevValues = [], nextValue, atIndex) {
      const nextValues = [...prevValues];
      nextValues[atIndex] = nextValue;
      return nextValues.sort((a, b) => a - b);
    }
    function convertValueToPercentage(value, min, max) {
      const maxSteps = max - min;
      const percentPerStep = 100 / maxSteps;
      const percentage = percentPerStep * (value - min);
      return (0, import_number.clamp)(percentage, [0, 100]);
    }
    function getLabel(index2, totalValues) {
      if (totalValues > 2) {
        return `Value ${index2 + 1} of ${totalValues}`;
      } else if (totalValues === 2) {
        return ["Minimum", "Maximum"][index2];
      } else {
        return void 0;
      }
    }
    function getClosestValueIndex(values, nextValue) {
      if (values.length === 1) return 0;
      const distances = values.map((value) => Math.abs(value - nextValue));
      const closestDistance = Math.min(...distances);
      return distances.indexOf(closestDistance);
    }
    function getThumbInBoundsOffset(width, left, direction) {
      const halfWidth = width / 2;
      const halfPercent = 50;
      const offset3 = linearScale([0, halfPercent], [0, halfWidth]);
      return (halfWidth - offset3(left) * direction) * direction;
    }
    function getStepsBetweenValues(values) {
      return values.slice(0, -1).map((value, index2) => values[index2 + 1] - value);
    }
    function hasMinStepsBetweenValues(values, minStepsBetweenValues) {
      if (minStepsBetweenValues > 0) {
        const stepsBetweenValues = getStepsBetweenValues(values);
        const actualMinStepsBetweenValues = Math.min(...stepsBetweenValues);
        return actualMinStepsBetweenValues >= minStepsBetweenValues;
      }
      return true;
    }
    function linearScale(input, output) {
      return (value) => {
        if (input[0] === input[1] || output[0] === output[1]) return output[0];
        const ratio = (output[1] - output[0]) / (input[1] - input[0]);
        return output[0] + ratio * (value - input[0]);
      };
    }
    function getDecimalCount(value) {
      return (String(value).split(".")[1] || "").length;
    }
    function roundValue(value, decimalCount) {
      const rounder = Math.pow(10, decimalCount);
      return Math.round(value * rounder) / rounder;
    }
    var Root = Slider;
    var Track = SliderTrack;
    var Range = SliderRange;
    var Thumb = SliderThumb;
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/slider.props.js
var require_slider_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/slider.props.js"(exports, module) {
    "use strict";
    var t = Object.defineProperty;
    var m = Object.getOwnPropertyDescriptor;
    var c = Object.getOwnPropertyNames;
    var u = Object.prototype.hasOwnProperty;
    var l = (e, s) => {
      for (var o in s) t(e, o, { get: s[o], enumerable: true });
    };
    var v = (e, s, o, a) => {
      if (s && typeof s == "object" || typeof s == "function") for (let r of c(s)) !u.call(e, r) && r !== o && t(e, r, { get: () => s[r], enumerable: !(a = m(s, r)) || a.enumerable });
      return e;
    };
    var D = (e) => v(t({}, "__esModule", { value: true }), e);
    var y = {};
    l(y, { sliderPropDefs: () => n });
    module.exports = D(y);
    var p = require_color_prop();
    var i = require_high_contrast_prop();
    var f = require_radius_prop();
    var P = ["1", "2", "3"];
    var d = ["classic", "surface", "soft"];
    var n = { size: { type: "enum", className: "rt-r-size", values: P, default: "2", responsive: true }, variant: { type: "enum", className: "rt-variant", values: d, default: "surface" }, ...p.colorPropDef, ...i.highContrastPropDef, ...f.radiusPropDef };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/slider.js
var require_slider = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/slider.js"(exports, module) {
    "use strict";
    var y = Object.create;
    var a = Object.defineProperty;
    var v = Object.getOwnPropertyDescriptor;
    var g = Object.getOwnPropertyNames;
    var N = Object.getPrototypeOf;
    var R = Object.prototype.hasOwnProperty;
    var T = (e, r) => {
      for (var o in r) a(e, o, { get: r[o], enumerable: true });
    };
    var P = (e, r, o, p) => {
      if (r && typeof r == "object" || typeof r == "function") for (let i of g(r)) !R.call(e, i) && i !== o && a(e, i, { get: () => r[i], enumerable: !(p = v(r, i)) || p.enumerable });
      return e;
    };
    var l = (e, r, o) => (o = e != null ? y(N(e)) : {}, P(r || !e || !e.__esModule ? a(o, "default", { value: e, enumerable: true }) : o, e));
    var C = (e) => P(a({}, "__esModule", { value: true }), e);
    var k = {};
    T(k, { Slider: () => n });
    module.exports = C(k);
    var t = l(require_react());
    var m = l(require_classnames());
    var d = l(require_dist43());
    var c = require_slider_props();
    var S = require_extract_props();
    var u = require_margin_props();
    var n = t.forwardRef((e, r) => {
      const { className: o, color: p, radius: i, tabIndex: f, ...s } = (0, S.extractProps)(e, c.sliderPropDefs, u.marginPropDefs);
      return t.createElement(d.Root, { "data-accent-color": p, "data-radius": i, ref: r, ...s, asChild: false, className: (0, m.default)("rt-SliderRoot", o) }, t.createElement(d.Track, { className: "rt-SliderTrack" }, t.createElement(d.Range, { className: (0, m.default)("rt-SliderRange", { "rt-high-contrast": e.highContrast }), "data-inverted": s.inverted ? "" : void 0 })), (s.value ?? s.defaultValue ?? []).map((x, h) => t.createElement(d.Thumb, { key: h, className: "rt-SliderThumb", ...f !== void 0 ? { tabIndex: f } : void 0 })));
    });
    n.displayName = "Slider";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/strong.props.js
var require_strong_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/strong.props.js"(exports, module) {
    "use strict";
    var e = Object.defineProperty;
    var P = Object.getOwnPropertyDescriptor;
    var a = Object.getOwnPropertyNames;
    var n = Object.prototype.hasOwnProperty;
    var c = (o, r) => {
      for (var p in r) e(o, p, { get: r[p], enumerable: true });
    };
    var x = (o, r, p, f) => {
      if (r && typeof r == "object" || typeof r == "function") for (let t of a(r)) !n.call(o, t) && t !== p && e(o, t, { get: () => r[t], enumerable: !(f = P(r, t)) || f.enumerable });
      return o;
    };
    var d = (o) => x(e({}, "__esModule", { value: true }), o);
    var g = {};
    c(g, { strongPropDefs: () => D });
    module.exports = d(g);
    var m = require_as_child_prop();
    var i = require_text_wrap_prop();
    var s = require_truncate_prop();
    var D = { ...m.asChildPropDef, ...s.truncatePropDef, ...i.textWrapPropDef };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/strong.js
var require_strong = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/strong.js"(exports, module) {
    "use strict";
    var c = Object.create;
    var s = Object.defineProperty;
    var l = Object.getOwnPropertyDescriptor;
    var y = Object.getOwnPropertyNames;
    var d = Object.getPrototypeOf;
    var C = Object.prototype.hasOwnProperty;
    var R = (o, r) => {
      for (var t in r) s(o, t, { get: r[t], enumerable: true });
    };
    var m = (o, r, t, p) => {
      if (r && typeof r == "object" || typeof r == "function") for (let e of y(r)) !C.call(o, e) && e !== t && s(o, e, { get: () => r[e], enumerable: !(p = l(r, e)) || p.enumerable });
      return o;
    };
    var f = (o, r, t) => (t = o != null ? c(d(o)) : {}, m(r || !o || !o.__esModule ? s(t, "default", { value: o, enumerable: true }) : t, o));
    var h = (o) => m(s({}, "__esModule", { value: true }), o);
    var x = {};
    R(x, { Strong: () => n });
    module.exports = h(x);
    var g = f(require_react());
    var P = f(require_classnames());
    var a = require_dist2();
    var i = require_extract_props();
    var S = require_strong_props();
    var n = g.forwardRef((o, r) => {
      const { asChild: t, className: p, ...e } = (0, i.extractProps)(o, S.strongPropDefs);
      return g.createElement(t ? a.Slot : "strong", { ...e, ref: r, className: (0, P.default)("rt-Strong", p) });
    });
    n.displayName = "Strong";
  }
});

// node_modules/@radix-ui/react-switch/dist/index.js
var require_dist44 = __commonJS({
  "node_modules/@radix-ui/react-switch/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Root: () => Root,
      Switch: () => Switch,
      SwitchThumb: () => SwitchThumb,
      Thumb: () => Thumb,
      createSwitchScope: () => createSwitchScope
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_primitive = require_dist7();
    var import_react_compose_refs = require_dist();
    var import_react_context = require_dist6();
    var import_react_use_controllable_state = require_dist11();
    var import_react_use_previous = require_dist27();
    var import_react_use_size = require_dist21();
    var import_react_primitive = require_dist3();
    var import_jsx_runtime = require_jsx_runtime();
    var SWITCH_NAME = "Switch";
    var [createSwitchContext, createSwitchScope] = (0, import_react_context.createContextScope)(SWITCH_NAME);
    var [SwitchProvider, useSwitchContext] = createSwitchContext(SWITCH_NAME);
    var Switch = React2.forwardRef(
      (props, forwardedRef) => {
        const {
          __scopeSwitch,
          name,
          checked: checkedProp,
          defaultChecked,
          required,
          disabled,
          value = "on",
          onCheckedChange,
          ...switchProps
        } = props;
        const [button, setButton] = React2.useState(null);
        const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, (node) => setButton(node));
        const hasConsumerStoppedPropagationRef = React2.useRef(false);
        const isFormControl = button ? Boolean(button.closest("form")) : true;
        const [checked = false, setChecked] = (0, import_react_use_controllable_state.useControllableState)({
          prop: checkedProp,
          defaultProp: defaultChecked,
          onChange: onCheckedChange
        });
        return (0, import_jsx_runtime.jsxs)(SwitchProvider, { scope: __scopeSwitch, checked, disabled, children: [
          (0, import_jsx_runtime.jsx)(
            import_react_primitive.Primitive.button,
            {
              type: "button",
              role: "switch",
              "aria-checked": checked,
              "aria-required": required,
              "data-state": getState(checked),
              "data-disabled": disabled ? "" : void 0,
              disabled,
              value,
              ...switchProps,
              ref: composedRefs,
              onClick: (0, import_primitive.composeEventHandlers)(props.onClick, (event) => {
                setChecked((prevChecked) => !prevChecked);
                if (isFormControl) {
                  hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();
                  if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();
                }
              })
            }
          ),
          isFormControl && (0, import_jsx_runtime.jsx)(
            BubbleInput,
            {
              control: button,
              bubbles: !hasConsumerStoppedPropagationRef.current,
              name,
              value,
              checked,
              required,
              disabled,
              style: { transform: "translateX(-100%)" }
            }
          )
        ] });
      }
    );
    Switch.displayName = SWITCH_NAME;
    var THUMB_NAME = "SwitchThumb";
    var SwitchThumb = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeSwitch, ...thumbProps } = props;
        const context = useSwitchContext(THUMB_NAME, __scopeSwitch);
        return (0, import_jsx_runtime.jsx)(
          import_react_primitive.Primitive.span,
          {
            "data-state": getState(context.checked),
            "data-disabled": context.disabled ? "" : void 0,
            ...thumbProps,
            ref: forwardedRef
          }
        );
      }
    );
    SwitchThumb.displayName = THUMB_NAME;
    var BubbleInput = (props) => {
      const { control, checked, bubbles = true, ...inputProps } = props;
      const ref = React2.useRef(null);
      const prevChecked = (0, import_react_use_previous.usePrevious)(checked);
      const controlSize = (0, import_react_use_size.useSize)(control);
      React2.useEffect(() => {
        const input = ref.current;
        const inputProto = window.HTMLInputElement.prototype;
        const descriptor = Object.getOwnPropertyDescriptor(inputProto, "checked");
        const setChecked = descriptor.set;
        if (prevChecked !== checked && setChecked) {
          const event = new Event("click", { bubbles });
          setChecked.call(input, checked);
          input.dispatchEvent(event);
        }
      }, [prevChecked, checked, bubbles]);
      return (0, import_jsx_runtime.jsx)(
        "input",
        {
          type: "checkbox",
          "aria-hidden": true,
          defaultChecked: checked,
          ...inputProps,
          tabIndex: -1,
          ref,
          style: {
            ...props.style,
            ...controlSize,
            position: "absolute",
            pointerEvents: "none",
            opacity: 0,
            margin: 0
          }
        }
      );
    };
    function getState(checked) {
      return checked ? "checked" : "unchecked";
    }
    var Root = Switch;
    var Thumb = SwitchThumb;
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/switch.props.js
var require_switch_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/switch.props.js"(exports, module) {
    "use strict";
    var t = Object.defineProperty;
    var m = Object.getOwnPropertyDescriptor;
    var c = Object.getOwnPropertyNames;
    var u = Object.prototype.hasOwnProperty;
    var l = (e, s) => {
      for (var o in s) t(e, o, { get: s[o], enumerable: true });
    };
    var v = (e, s, o, a) => {
      if (s && typeof s == "object" || typeof s == "function") for (let r of c(s)) !u.call(e, r) && r !== o && t(e, r, { get: () => s[r], enumerable: !(a = m(s, r)) || a.enumerable });
      return e;
    };
    var D = (e) => v(t({}, "__esModule", { value: true }), e);
    var z = {};
    l(z, { switchPropDefs: () => n });
    module.exports = D(z);
    var p = require_color_prop();
    var i = require_high_contrast_prop();
    var f = require_radius_prop();
    var P = ["1", "2", "3"];
    var y = ["classic", "surface", "soft"];
    var n = { size: { type: "enum", className: "rt-r-size", values: P, default: "2", responsive: true }, variant: { type: "enum", className: "rt-variant", values: y, default: "surface" }, ...p.colorPropDef, ...i.highContrastPropDef, ...f.radiusPropDef };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/switch.js
var require_switch = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/switch.js"(exports, module) {
    "use strict";
    var S = Object.create;
    var p = Object.defineProperty;
    var d = Object.getOwnPropertyDescriptor;
    var y = Object.getOwnPropertyNames;
    var u = Object.getPrototypeOf;
    var R = Object.prototype.hasOwnProperty;
    var g = (t, o) => {
      for (var r in o) p(t, r, { get: o[r], enumerable: true });
    };
    var h = (t, o, r, i) => {
      if (o && typeof o == "object" || typeof o == "function") for (let e of y(o)) !R.call(t, e) && e !== r && p(t, e, { get: () => o[e], enumerable: !(i = d(o, e)) || i.enumerable });
      return t;
    };
    var s = (t, o, r) => (r = t != null ? S(u(t)) : {}, h(o || !t || !t.__esModule ? p(r, "default", { value: t, enumerable: true }) : r, t));
    var C = (t) => h(p({}, "__esModule", { value: true }), t);
    var D = {};
    g(D, { Switch: () => a });
    module.exports = C(D);
    var m = s(require_react());
    var c = s(require_classnames());
    var f = s(require_dist44());
    var n = require_extract_props();
    var w = require_margin_props();
    var P = require_switch_props();
    var a = m.forwardRef((t, o) => {
      const { className: r, color: i, radius: e, ...l } = (0, n.extractProps)(t, P.switchPropDefs, w.marginPropDefs);
      return m.createElement(f.Root, { "data-accent-color": i, "data-radius": e, ...l, asChild: false, ref: o, className: (0, c.default)("rt-reset", "rt-SwitchRoot", r) }, m.createElement(f.Thumb, { className: (0, c.default)("rt-SwitchThumb", { "rt-high-contrast": t.highContrast }) }));
    });
    a.displayName = "Switch";
  }
});

// node_modules/@radix-ui/react-navigation-menu/dist/index.js
var require_dist45 = __commonJS({
  "node_modules/@radix-ui/react-navigation-menu/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Content: () => Content,
      Indicator: () => Indicator,
      Item: () => Item,
      Link: () => Link,
      List: () => List,
      NavigationMenu: () => NavigationMenu,
      NavigationMenuContent: () => NavigationMenuContent,
      NavigationMenuIndicator: () => NavigationMenuIndicator,
      NavigationMenuItem: () => NavigationMenuItem,
      NavigationMenuLink: () => NavigationMenuLink,
      NavigationMenuList: () => NavigationMenuList,
      NavigationMenuSub: () => NavigationMenuSub,
      NavigationMenuTrigger: () => NavigationMenuTrigger,
      NavigationMenuViewport: () => NavigationMenuViewport,
      Root: () => Root2,
      Sub: () => Sub,
      Trigger: () => Trigger,
      Viewport: () => Viewport,
      createNavigationMenuScope: () => createNavigationMenuScope
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_react_dom = __toESM2(require_react_dom());
    var import_react_context = require_dist6();
    var import_primitive = require_dist7();
    var import_react_primitive = require_dist3();
    var import_react_use_controllable_state = require_dist11();
    var import_react_compose_refs = require_dist();
    var import_react_direction = require_dist24();
    var import_react_presence = require_dist16();
    var import_react_id = require_dist9();
    var import_react_collection = require_dist29();
    var import_react_dismissable_layer = require_dist13();
    var import_react_use_previous = require_dist27();
    var import_react_use_layout_effect = require_dist8();
    var import_react_use_callback_ref = require_dist10();
    var VisuallyHiddenPrimitive = __toESM2(require_dist4());
    var import_jsx_runtime = require_jsx_runtime();
    var NAVIGATION_MENU_NAME = "NavigationMenu";
    var [Collection, useCollection, createCollectionScope] = (0, import_react_collection.createCollection)(NAVIGATION_MENU_NAME);
    var [FocusGroupCollection, useFocusGroupCollection, createFocusGroupCollectionScope] = (0, import_react_collection.createCollection)(NAVIGATION_MENU_NAME);
    var [createNavigationMenuContext, createNavigationMenuScope] = (0, import_react_context.createContextScope)(
      NAVIGATION_MENU_NAME,
      [createCollectionScope, createFocusGroupCollectionScope]
    );
    var [NavigationMenuProviderImpl, useNavigationMenuContext] = createNavigationMenuContext(NAVIGATION_MENU_NAME);
    var [ViewportContentProvider, useViewportContentContext] = createNavigationMenuContext(NAVIGATION_MENU_NAME);
    var NavigationMenu = React2.forwardRef(
      (props, forwardedRef) => {
        const {
          __scopeNavigationMenu,
          value: valueProp,
          onValueChange,
          defaultValue,
          delayDuration = 200,
          skipDelayDuration = 300,
          orientation = "horizontal",
          dir,
          ...NavigationMenuProps
        } = props;
        const [navigationMenu, setNavigationMenu] = React2.useState(null);
        const composedRef = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, (node) => setNavigationMenu(node));
        const direction = (0, import_react_direction.useDirection)(dir);
        const openTimerRef = React2.useRef(0);
        const closeTimerRef = React2.useRef(0);
        const skipDelayTimerRef = React2.useRef(0);
        const [isOpenDelayed, setIsOpenDelayed] = React2.useState(true);
        const [value = "", setValue] = (0, import_react_use_controllable_state.useControllableState)({
          prop: valueProp,
          onChange: (value2) => {
            const isOpen = value2 !== "";
            const hasSkipDelayDuration = skipDelayDuration > 0;
            if (isOpen) {
              window.clearTimeout(skipDelayTimerRef.current);
              if (hasSkipDelayDuration) setIsOpenDelayed(false);
            } else {
              window.clearTimeout(skipDelayTimerRef.current);
              skipDelayTimerRef.current = window.setTimeout(
                () => setIsOpenDelayed(true),
                skipDelayDuration
              );
            }
            onValueChange == null ? void 0 : onValueChange(value2);
          },
          defaultProp: defaultValue
        });
        const startCloseTimer = React2.useCallback(() => {
          window.clearTimeout(closeTimerRef.current);
          closeTimerRef.current = window.setTimeout(() => setValue(""), 150);
        }, [setValue]);
        const handleOpen = React2.useCallback(
          (itemValue) => {
            window.clearTimeout(closeTimerRef.current);
            setValue(itemValue);
          },
          [setValue]
        );
        const handleDelayedOpen = React2.useCallback(
          (itemValue) => {
            const isOpenItem = value === itemValue;
            if (isOpenItem) {
              window.clearTimeout(closeTimerRef.current);
            } else {
              openTimerRef.current = window.setTimeout(() => {
                window.clearTimeout(closeTimerRef.current);
                setValue(itemValue);
              }, delayDuration);
            }
          },
          [value, setValue, delayDuration]
        );
        React2.useEffect(() => {
          return () => {
            window.clearTimeout(openTimerRef.current);
            window.clearTimeout(closeTimerRef.current);
            window.clearTimeout(skipDelayTimerRef.current);
          };
        }, []);
        return (0, import_jsx_runtime.jsx)(
          NavigationMenuProvider,
          {
            scope: __scopeNavigationMenu,
            isRootMenu: true,
            value,
            dir: direction,
            orientation,
            rootNavigationMenu: navigationMenu,
            onTriggerEnter: (itemValue) => {
              window.clearTimeout(openTimerRef.current);
              if (isOpenDelayed) handleDelayedOpen(itemValue);
              else handleOpen(itemValue);
            },
            onTriggerLeave: () => {
              window.clearTimeout(openTimerRef.current);
              startCloseTimer();
            },
            onContentEnter: () => window.clearTimeout(closeTimerRef.current),
            onContentLeave: startCloseTimer,
            onItemSelect: (itemValue) => {
              setValue((prevValue) => prevValue === itemValue ? "" : itemValue);
            },
            onItemDismiss: () => setValue(""),
            children: (0, import_jsx_runtime.jsx)(
              import_react_primitive.Primitive.nav,
              {
                "aria-label": "Main",
                "data-orientation": orientation,
                dir: direction,
                ...NavigationMenuProps,
                ref: composedRef
              }
            )
          }
        );
      }
    );
    NavigationMenu.displayName = NAVIGATION_MENU_NAME;
    var SUB_NAME = "NavigationMenuSub";
    var NavigationMenuSub = React2.forwardRef(
      (props, forwardedRef) => {
        const {
          __scopeNavigationMenu,
          value: valueProp,
          onValueChange,
          defaultValue,
          orientation = "horizontal",
          ...subProps
        } = props;
        const context = useNavigationMenuContext(SUB_NAME, __scopeNavigationMenu);
        const [value = "", setValue] = (0, import_react_use_controllable_state.useControllableState)({
          prop: valueProp,
          onChange: onValueChange,
          defaultProp: defaultValue
        });
        return (0, import_jsx_runtime.jsx)(
          NavigationMenuProvider,
          {
            scope: __scopeNavigationMenu,
            isRootMenu: false,
            value,
            dir: context.dir,
            orientation,
            rootNavigationMenu: context.rootNavigationMenu,
            onTriggerEnter: (itemValue) => setValue(itemValue),
            onItemSelect: (itemValue) => setValue(itemValue),
            onItemDismiss: () => setValue(""),
            children: (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.div, { "data-orientation": orientation, ...subProps, ref: forwardedRef })
          }
        );
      }
    );
    NavigationMenuSub.displayName = SUB_NAME;
    var NavigationMenuProvider = (props) => {
      const {
        scope,
        isRootMenu,
        rootNavigationMenu,
        dir,
        orientation,
        children,
        value,
        onItemSelect,
        onItemDismiss,
        onTriggerEnter,
        onTriggerLeave,
        onContentEnter,
        onContentLeave
      } = props;
      const [viewport, setViewport] = React2.useState(null);
      const [viewportContent, setViewportContent] = React2.useState(/* @__PURE__ */ new Map());
      const [indicatorTrack, setIndicatorTrack] = React2.useState(null);
      return (0, import_jsx_runtime.jsx)(
        NavigationMenuProviderImpl,
        {
          scope,
          isRootMenu,
          rootNavigationMenu,
          value,
          previousValue: (0, import_react_use_previous.usePrevious)(value),
          baseId: (0, import_react_id.useId)(),
          dir,
          orientation,
          viewport,
          onViewportChange: setViewport,
          indicatorTrack,
          onIndicatorTrackChange: setIndicatorTrack,
          onTriggerEnter: (0, import_react_use_callback_ref.useCallbackRef)(onTriggerEnter),
          onTriggerLeave: (0, import_react_use_callback_ref.useCallbackRef)(onTriggerLeave),
          onContentEnter: (0, import_react_use_callback_ref.useCallbackRef)(onContentEnter),
          onContentLeave: (0, import_react_use_callback_ref.useCallbackRef)(onContentLeave),
          onItemSelect: (0, import_react_use_callback_ref.useCallbackRef)(onItemSelect),
          onItemDismiss: (0, import_react_use_callback_ref.useCallbackRef)(onItemDismiss),
          onViewportContentChange: React2.useCallback((contentValue, contentData) => {
            setViewportContent((prevContent) => {
              prevContent.set(contentValue, contentData);
              return new Map(prevContent);
            });
          }, []),
          onViewportContentRemove: React2.useCallback((contentValue) => {
            setViewportContent((prevContent) => {
              if (!prevContent.has(contentValue)) return prevContent;
              prevContent.delete(contentValue);
              return new Map(prevContent);
            });
          }, []),
          children: (0, import_jsx_runtime.jsx)(Collection.Provider, { scope, children: (0, import_jsx_runtime.jsx)(ViewportContentProvider, { scope, items: viewportContent, children }) })
        }
      );
    };
    var LIST_NAME = "NavigationMenuList";
    var NavigationMenuList = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeNavigationMenu, ...listProps } = props;
        const context = useNavigationMenuContext(LIST_NAME, __scopeNavigationMenu);
        const list = (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.ul, { "data-orientation": context.orientation, ...listProps, ref: forwardedRef });
        return (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.div, { style: { position: "relative" }, ref: context.onIndicatorTrackChange, children: (0, import_jsx_runtime.jsx)(Collection.Slot, { scope: __scopeNavigationMenu, children: context.isRootMenu ? (0, import_jsx_runtime.jsx)(FocusGroup, { asChild: true, children: list }) : list }) });
      }
    );
    NavigationMenuList.displayName = LIST_NAME;
    var ITEM_NAME = "NavigationMenuItem";
    var [NavigationMenuItemContextProvider, useNavigationMenuItemContext] = createNavigationMenuContext(ITEM_NAME);
    var NavigationMenuItem = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeNavigationMenu, value: valueProp, ...itemProps } = props;
        const autoValue = (0, import_react_id.useId)();
        const value = valueProp || autoValue || "LEGACY_REACT_AUTO_VALUE";
        const contentRef = React2.useRef(null);
        const triggerRef = React2.useRef(null);
        const focusProxyRef = React2.useRef(null);
        const restoreContentTabOrderRef = React2.useRef(() => {
        });
        const wasEscapeCloseRef = React2.useRef(false);
        const handleContentEntry = React2.useCallback((side = "start") => {
          if (contentRef.current) {
            restoreContentTabOrderRef.current();
            const candidates = getTabbableCandidates(contentRef.current);
            if (candidates.length) focusFirst(side === "start" ? candidates : candidates.reverse());
          }
        }, []);
        const handleContentExit = React2.useCallback(() => {
          if (contentRef.current) {
            const candidates = getTabbableCandidates(contentRef.current);
            if (candidates.length) restoreContentTabOrderRef.current = removeFromTabOrder(candidates);
          }
        }, []);
        return (0, import_jsx_runtime.jsx)(
          NavigationMenuItemContextProvider,
          {
            scope: __scopeNavigationMenu,
            value,
            triggerRef,
            contentRef,
            focusProxyRef,
            wasEscapeCloseRef,
            onEntryKeyDown: handleContentEntry,
            onFocusProxyEnter: handleContentEntry,
            onRootContentClose: handleContentExit,
            onContentFocusOutside: handleContentExit,
            children: (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.li, { ...itemProps, ref: forwardedRef })
          }
        );
      }
    );
    NavigationMenuItem.displayName = ITEM_NAME;
    var TRIGGER_NAME = "NavigationMenuTrigger";
    var NavigationMenuTrigger = React2.forwardRef((props, forwardedRef) => {
      const { __scopeNavigationMenu, disabled, ...triggerProps } = props;
      const context = useNavigationMenuContext(TRIGGER_NAME, props.__scopeNavigationMenu);
      const itemContext = useNavigationMenuItemContext(TRIGGER_NAME, props.__scopeNavigationMenu);
      const ref = React2.useRef(null);
      const composedRefs = (0, import_react_compose_refs.useComposedRefs)(ref, itemContext.triggerRef, forwardedRef);
      const triggerId = makeTriggerId(context.baseId, itemContext.value);
      const contentId = makeContentId(context.baseId, itemContext.value);
      const hasPointerMoveOpenedRef = React2.useRef(false);
      const wasClickCloseRef = React2.useRef(false);
      const open = itemContext.value === context.value;
      return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
        (0, import_jsx_runtime.jsx)(Collection.ItemSlot, { scope: __scopeNavigationMenu, value: itemContext.value, children: (0, import_jsx_runtime.jsx)(FocusGroupItem, { asChild: true, children: (0, import_jsx_runtime.jsx)(
          import_react_primitive.Primitive.button,
          {
            id: triggerId,
            disabled,
            "data-disabled": disabled ? "" : void 0,
            "data-state": getOpenState(open),
            "aria-expanded": open,
            "aria-controls": contentId,
            ...triggerProps,
            ref: composedRefs,
            onPointerEnter: (0, import_primitive.composeEventHandlers)(props.onPointerEnter, () => {
              wasClickCloseRef.current = false;
              itemContext.wasEscapeCloseRef.current = false;
            }),
            onPointerMove: (0, import_primitive.composeEventHandlers)(
              props.onPointerMove,
              whenMouse(() => {
                if (disabled || wasClickCloseRef.current || itemContext.wasEscapeCloseRef.current || hasPointerMoveOpenedRef.current)
                  return;
                context.onTriggerEnter(itemContext.value);
                hasPointerMoveOpenedRef.current = true;
              })
            ),
            onPointerLeave: (0, import_primitive.composeEventHandlers)(
              props.onPointerLeave,
              whenMouse(() => {
                if (disabled) return;
                context.onTriggerLeave();
                hasPointerMoveOpenedRef.current = false;
              })
            ),
            onClick: (0, import_primitive.composeEventHandlers)(props.onClick, () => {
              context.onItemSelect(itemContext.value);
              wasClickCloseRef.current = open;
            }),
            onKeyDown: (0, import_primitive.composeEventHandlers)(props.onKeyDown, (event) => {
              const verticalEntryKey = context.dir === "rtl" ? "ArrowLeft" : "ArrowRight";
              const entryKey = { horizontal: "ArrowDown", vertical: verticalEntryKey }[context.orientation];
              if (open && event.key === entryKey) {
                itemContext.onEntryKeyDown();
                event.preventDefault();
              }
            })
          }
        ) }) }),
        open && (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
          (0, import_jsx_runtime.jsx)(
            VisuallyHiddenPrimitive.Root,
            {
              "aria-hidden": true,
              tabIndex: 0,
              ref: itemContext.focusProxyRef,
              onFocus: (event) => {
                const content = itemContext.contentRef.current;
                const prevFocusedElement = event.relatedTarget;
                const wasTriggerFocused = prevFocusedElement === ref.current;
                const wasFocusFromContent = content == null ? void 0 : content.contains(prevFocusedElement);
                if (wasTriggerFocused || !wasFocusFromContent) {
                  itemContext.onFocusProxyEnter(wasTriggerFocused ? "start" : "end");
                }
              }
            }
          ),
          context.viewport && (0, import_jsx_runtime.jsx)("span", { "aria-owns": contentId })
        ] })
      ] });
    });
    NavigationMenuTrigger.displayName = TRIGGER_NAME;
    var LINK_NAME = "NavigationMenuLink";
    var LINK_SELECT = "navigationMenu.linkSelect";
    var NavigationMenuLink = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeNavigationMenu, active, onSelect, ...linkProps } = props;
        return (0, import_jsx_runtime.jsx)(FocusGroupItem, { asChild: true, children: (0, import_jsx_runtime.jsx)(
          import_react_primitive.Primitive.a,
          {
            "data-active": active ? "" : void 0,
            "aria-current": active ? "page" : void 0,
            ...linkProps,
            ref: forwardedRef,
            onClick: (0, import_primitive.composeEventHandlers)(
              props.onClick,
              (event) => {
                const target = event.target;
                const linkSelectEvent = new CustomEvent(LINK_SELECT, {
                  bubbles: true,
                  cancelable: true
                });
                target.addEventListener(LINK_SELECT, (event2) => onSelect == null ? void 0 : onSelect(event2), { once: true });
                (0, import_react_primitive.dispatchDiscreteCustomEvent)(target, linkSelectEvent);
                if (!linkSelectEvent.defaultPrevented && !event.metaKey) {
                  const rootContentDismissEvent = new CustomEvent(ROOT_CONTENT_DISMISS, {
                    bubbles: true,
                    cancelable: true
                  });
                  (0, import_react_primitive.dispatchDiscreteCustomEvent)(target, rootContentDismissEvent);
                }
              },
              { checkForDefaultPrevented: false }
            )
          }
        ) });
      }
    );
    NavigationMenuLink.displayName = LINK_NAME;
    var INDICATOR_NAME = "NavigationMenuIndicator";
    var NavigationMenuIndicator = React2.forwardRef((props, forwardedRef) => {
      const { forceMount, ...indicatorProps } = props;
      const context = useNavigationMenuContext(INDICATOR_NAME, props.__scopeNavigationMenu);
      const isVisible = Boolean(context.value);
      return context.indicatorTrack ? import_react_dom.default.createPortal(
        (0, import_jsx_runtime.jsx)(import_react_presence.Presence, { present: forceMount || isVisible, children: (0, import_jsx_runtime.jsx)(NavigationMenuIndicatorImpl, { ...indicatorProps, ref: forwardedRef }) }),
        context.indicatorTrack
      ) : null;
    });
    NavigationMenuIndicator.displayName = INDICATOR_NAME;
    var NavigationMenuIndicatorImpl = React2.forwardRef((props, forwardedRef) => {
      const { __scopeNavigationMenu, ...indicatorProps } = props;
      const context = useNavigationMenuContext(INDICATOR_NAME, __scopeNavigationMenu);
      const getItems = useCollection(__scopeNavigationMenu);
      const [activeTrigger, setActiveTrigger] = React2.useState(
        null
      );
      const [position, setPosition] = React2.useState(null);
      const isHorizontal = context.orientation === "horizontal";
      const isVisible = Boolean(context.value);
      React2.useEffect(() => {
        var _a;
        const items = getItems();
        const triggerNode = (_a = items.find((item) => item.value === context.value)) == null ? void 0 : _a.ref.current;
        if (triggerNode) setActiveTrigger(triggerNode);
      }, [getItems, context.value]);
      const handlePositionChange = () => {
        if (activeTrigger) {
          setPosition({
            size: isHorizontal ? activeTrigger.offsetWidth : activeTrigger.offsetHeight,
            offset: isHorizontal ? activeTrigger.offsetLeft : activeTrigger.offsetTop
          });
        }
      };
      useResizeObserver(activeTrigger, handlePositionChange);
      useResizeObserver(context.indicatorTrack, handlePositionChange);
      return position ? (0, import_jsx_runtime.jsx)(
        import_react_primitive.Primitive.div,
        {
          "aria-hidden": true,
          "data-state": isVisible ? "visible" : "hidden",
          "data-orientation": context.orientation,
          ...indicatorProps,
          ref: forwardedRef,
          style: {
            position: "absolute",
            ...isHorizontal ? {
              left: 0,
              width: position.size + "px",
              transform: `translateX(${position.offset}px)`
            } : {
              top: 0,
              height: position.size + "px",
              transform: `translateY(${position.offset}px)`
            },
            ...indicatorProps.style
          }
        }
      ) : null;
    });
    var CONTENT_NAME = "NavigationMenuContent";
    var NavigationMenuContent = React2.forwardRef((props, forwardedRef) => {
      const { forceMount, ...contentProps } = props;
      const context = useNavigationMenuContext(CONTENT_NAME, props.__scopeNavigationMenu);
      const itemContext = useNavigationMenuItemContext(CONTENT_NAME, props.__scopeNavigationMenu);
      const composedRefs = (0, import_react_compose_refs.useComposedRefs)(itemContext.contentRef, forwardedRef);
      const open = itemContext.value === context.value;
      const commonProps = {
        value: itemContext.value,
        triggerRef: itemContext.triggerRef,
        focusProxyRef: itemContext.focusProxyRef,
        wasEscapeCloseRef: itemContext.wasEscapeCloseRef,
        onContentFocusOutside: itemContext.onContentFocusOutside,
        onRootContentClose: itemContext.onRootContentClose,
        ...contentProps
      };
      return !context.viewport ? (0, import_jsx_runtime.jsx)(import_react_presence.Presence, { present: forceMount || open, children: (0, import_jsx_runtime.jsx)(
        NavigationMenuContentImpl,
        {
          "data-state": getOpenState(open),
          ...commonProps,
          ref: composedRefs,
          onPointerEnter: (0, import_primitive.composeEventHandlers)(props.onPointerEnter, context.onContentEnter),
          onPointerLeave: (0, import_primitive.composeEventHandlers)(
            props.onPointerLeave,
            whenMouse(context.onContentLeave)
          ),
          style: {
            // Prevent interaction when animating out
            pointerEvents: !open && context.isRootMenu ? "none" : void 0,
            ...commonProps.style
          }
        }
      ) }) : (0, import_jsx_runtime.jsx)(ViewportContentMounter, { forceMount, ...commonProps, ref: composedRefs });
    });
    NavigationMenuContent.displayName = CONTENT_NAME;
    var ViewportContentMounter = React2.forwardRef((props, forwardedRef) => {
      const context = useNavigationMenuContext(CONTENT_NAME, props.__scopeNavigationMenu);
      const { onViewportContentChange, onViewportContentRemove } = context;
      (0, import_react_use_layout_effect.useLayoutEffect)(() => {
        onViewportContentChange(props.value, {
          ref: forwardedRef,
          ...props
        });
      }, [props, forwardedRef, onViewportContentChange]);
      (0, import_react_use_layout_effect.useLayoutEffect)(() => {
        return () => onViewportContentRemove(props.value);
      }, [props.value, onViewportContentRemove]);
      return null;
    });
    var ROOT_CONTENT_DISMISS = "navigationMenu.rootContentDismiss";
    var NavigationMenuContentImpl = React2.forwardRef((props, forwardedRef) => {
      const {
        __scopeNavigationMenu,
        value,
        triggerRef,
        focusProxyRef,
        wasEscapeCloseRef,
        onRootContentClose,
        onContentFocusOutside,
        ...contentProps
      } = props;
      const context = useNavigationMenuContext(CONTENT_NAME, __scopeNavigationMenu);
      const ref = React2.useRef(null);
      const composedRefs = (0, import_react_compose_refs.useComposedRefs)(ref, forwardedRef);
      const triggerId = makeTriggerId(context.baseId, value);
      const contentId = makeContentId(context.baseId, value);
      const getItems = useCollection(__scopeNavigationMenu);
      const prevMotionAttributeRef = React2.useRef(null);
      const { onItemDismiss } = context;
      React2.useEffect(() => {
        const content = ref.current;
        if (context.isRootMenu && content) {
          const handleClose = () => {
            var _a;
            onItemDismiss();
            onRootContentClose();
            if (content.contains(document.activeElement)) (_a = triggerRef.current) == null ? void 0 : _a.focus();
          };
          content.addEventListener(ROOT_CONTENT_DISMISS, handleClose);
          return () => content.removeEventListener(ROOT_CONTENT_DISMISS, handleClose);
        }
      }, [context.isRootMenu, props.value, triggerRef, onItemDismiss, onRootContentClose]);
      const motionAttribute = React2.useMemo(() => {
        const items = getItems();
        const values = items.map((item) => item.value);
        if (context.dir === "rtl") values.reverse();
        const index2 = values.indexOf(context.value);
        const prevIndex = values.indexOf(context.previousValue);
        const isSelected = value === context.value;
        const wasSelected = prevIndex === values.indexOf(value);
        if (!isSelected && !wasSelected) return prevMotionAttributeRef.current;
        const attribute = (() => {
          if (index2 !== prevIndex) {
            if (isSelected && prevIndex !== -1) return index2 > prevIndex ? "from-end" : "from-start";
            if (wasSelected && index2 !== -1) return index2 > prevIndex ? "to-start" : "to-end";
          }
          return null;
        })();
        prevMotionAttributeRef.current = attribute;
        return attribute;
      }, [context.previousValue, context.value, context.dir, getItems, value]);
      return (0, import_jsx_runtime.jsx)(FocusGroup, { asChild: true, children: (0, import_jsx_runtime.jsx)(
        import_react_dismissable_layer.DismissableLayer,
        {
          id: contentId,
          "aria-labelledby": triggerId,
          "data-motion": motionAttribute,
          "data-orientation": context.orientation,
          ...contentProps,
          ref: composedRefs,
          disableOutsidePointerEvents: false,
          onDismiss: () => {
            var _a;
            const rootContentDismissEvent = new Event(ROOT_CONTENT_DISMISS, {
              bubbles: true,
              cancelable: true
            });
            (_a = ref.current) == null ? void 0 : _a.dispatchEvent(rootContentDismissEvent);
          },
          onFocusOutside: (0, import_primitive.composeEventHandlers)(props.onFocusOutside, (event) => {
            var _a;
            onContentFocusOutside();
            const target = event.target;
            if ((_a = context.rootNavigationMenu) == null ? void 0 : _a.contains(target)) event.preventDefault();
          }),
          onPointerDownOutside: (0, import_primitive.composeEventHandlers)(props.onPointerDownOutside, (event) => {
            var _a;
            const target = event.target;
            const isTrigger = getItems().some((item) => {
              var _a2;
              return (_a2 = item.ref.current) == null ? void 0 : _a2.contains(target);
            });
            const isRootViewport = context.isRootMenu && ((_a = context.viewport) == null ? void 0 : _a.contains(target));
            if (isTrigger || isRootViewport || !context.isRootMenu) event.preventDefault();
          }),
          onKeyDown: (0, import_primitive.composeEventHandlers)(props.onKeyDown, (event) => {
            var _a;
            const isMetaKey = event.altKey || event.ctrlKey || event.metaKey;
            const isTabKey = event.key === "Tab" && !isMetaKey;
            if (isTabKey) {
              const candidates = getTabbableCandidates(event.currentTarget);
              const focusedElement = document.activeElement;
              const index2 = candidates.findIndex((candidate) => candidate === focusedElement);
              const isMovingBackwards = event.shiftKey;
              const nextCandidates = isMovingBackwards ? candidates.slice(0, index2).reverse() : candidates.slice(index2 + 1, candidates.length);
              if (focusFirst(nextCandidates)) {
                event.preventDefault();
              } else {
                (_a = focusProxyRef.current) == null ? void 0 : _a.focus();
              }
            }
          }),
          onEscapeKeyDown: (0, import_primitive.composeEventHandlers)(props.onEscapeKeyDown, (event) => {
            wasEscapeCloseRef.current = true;
          })
        }
      ) });
    });
    var VIEWPORT_NAME = "NavigationMenuViewport";
    var NavigationMenuViewport = React2.forwardRef((props, forwardedRef) => {
      const { forceMount, ...viewportProps } = props;
      const context = useNavigationMenuContext(VIEWPORT_NAME, props.__scopeNavigationMenu);
      const open = Boolean(context.value);
      return (0, import_jsx_runtime.jsx)(import_react_presence.Presence, { present: forceMount || open, children: (0, import_jsx_runtime.jsx)(NavigationMenuViewportImpl, { ...viewportProps, ref: forwardedRef }) });
    });
    NavigationMenuViewport.displayName = VIEWPORT_NAME;
    var NavigationMenuViewportImpl = React2.forwardRef((props, forwardedRef) => {
      const { __scopeNavigationMenu, children, ...viewportImplProps } = props;
      const context = useNavigationMenuContext(VIEWPORT_NAME, __scopeNavigationMenu);
      const composedRefs = (0, import_react_compose_refs.useComposedRefs)(forwardedRef, context.onViewportChange);
      const viewportContentContext = useViewportContentContext(
        CONTENT_NAME,
        props.__scopeNavigationMenu
      );
      const [size3, setSize] = React2.useState(null);
      const [content, setContent] = React2.useState(null);
      const viewportWidth = size3 ? (size3 == null ? void 0 : size3.width) + "px" : void 0;
      const viewportHeight = size3 ? (size3 == null ? void 0 : size3.height) + "px" : void 0;
      const open = Boolean(context.value);
      const activeContentValue = open ? context.value : context.previousValue;
      const handleSizeChange = () => {
        if (content) setSize({ width: content.offsetWidth, height: content.offsetHeight });
      };
      useResizeObserver(content, handleSizeChange);
      return (0, import_jsx_runtime.jsx)(
        import_react_primitive.Primitive.div,
        {
          "data-state": getOpenState(open),
          "data-orientation": context.orientation,
          ...viewportImplProps,
          ref: composedRefs,
          style: {
            // Prevent interaction when animating out
            pointerEvents: !open && context.isRootMenu ? "none" : void 0,
            ["--radix-navigation-menu-viewport-width"]: viewportWidth,
            ["--radix-navigation-menu-viewport-height"]: viewportHeight,
            ...viewportImplProps.style
          },
          onPointerEnter: (0, import_primitive.composeEventHandlers)(props.onPointerEnter, context.onContentEnter),
          onPointerLeave: (0, import_primitive.composeEventHandlers)(props.onPointerLeave, whenMouse(context.onContentLeave)),
          children: Array.from(viewportContentContext.items).map(([value, { ref, forceMount, ...props2 }]) => {
            const isActive = activeContentValue === value;
            return (0, import_jsx_runtime.jsx)(import_react_presence.Presence, { present: forceMount || isActive, children: (0, import_jsx_runtime.jsx)(
              NavigationMenuContentImpl,
              {
                ...props2,
                ref: (0, import_react_compose_refs.composeRefs)(ref, (node) => {
                  if (isActive && node) setContent(node);
                })
              }
            ) }, value);
          })
        }
      );
    });
    var FOCUS_GROUP_NAME = "FocusGroup";
    var FocusGroup = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeNavigationMenu, ...groupProps } = props;
        const context = useNavigationMenuContext(FOCUS_GROUP_NAME, __scopeNavigationMenu);
        return (0, import_jsx_runtime.jsx)(FocusGroupCollection.Provider, { scope: __scopeNavigationMenu, children: (0, import_jsx_runtime.jsx)(FocusGroupCollection.Slot, { scope: __scopeNavigationMenu, children: (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.div, { dir: context.dir, ...groupProps, ref: forwardedRef }) }) });
      }
    );
    var ARROW_KEYS = ["ArrowRight", "ArrowLeft", "ArrowUp", "ArrowDown"];
    var FOCUS_GROUP_ITEM_NAME = "FocusGroupItem";
    var FocusGroupItem = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeNavigationMenu, ...groupProps } = props;
        const getItems = useFocusGroupCollection(__scopeNavigationMenu);
        const context = useNavigationMenuContext(FOCUS_GROUP_ITEM_NAME, __scopeNavigationMenu);
        return (0, import_jsx_runtime.jsx)(FocusGroupCollection.ItemSlot, { scope: __scopeNavigationMenu, children: (0, import_jsx_runtime.jsx)(
          import_react_primitive.Primitive.button,
          {
            ...groupProps,
            ref: forwardedRef,
            onKeyDown: (0, import_primitive.composeEventHandlers)(props.onKeyDown, (event) => {
              const isFocusNavigationKey = ["Home", "End", ...ARROW_KEYS].includes(event.key);
              if (isFocusNavigationKey) {
                let candidateNodes = getItems().map((item) => item.ref.current);
                const prevItemKey = context.dir === "rtl" ? "ArrowRight" : "ArrowLeft";
                const prevKeys = [prevItemKey, "ArrowUp", "End"];
                if (prevKeys.includes(event.key)) candidateNodes.reverse();
                if (ARROW_KEYS.includes(event.key)) {
                  const currentIndex = candidateNodes.indexOf(event.currentTarget);
                  candidateNodes = candidateNodes.slice(currentIndex + 1);
                }
                setTimeout(() => focusFirst(candidateNodes));
                event.preventDefault();
              }
            })
          }
        ) });
      }
    );
    function getTabbableCandidates(container) {
      const nodes = [];
      const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {
        acceptNode: (node) => {
          const isHiddenInput = node.tagName === "INPUT" && node.type === "hidden";
          if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;
          return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
        }
      });
      while (walker.nextNode()) nodes.push(walker.currentNode);
      return nodes;
    }
    function focusFirst(candidates) {
      const previouslyFocusedElement = document.activeElement;
      return candidates.some((candidate) => {
        if (candidate === previouslyFocusedElement) return true;
        candidate.focus();
        return document.activeElement !== previouslyFocusedElement;
      });
    }
    function removeFromTabOrder(candidates) {
      candidates.forEach((candidate) => {
        candidate.dataset.tabindex = candidate.getAttribute("tabindex") || "";
        candidate.setAttribute("tabindex", "-1");
      });
      return () => {
        candidates.forEach((candidate) => {
          const prevTabIndex = candidate.dataset.tabindex;
          candidate.setAttribute("tabindex", prevTabIndex);
        });
      };
    }
    function useResizeObserver(element, onResize) {
      const handleResize = (0, import_react_use_callback_ref.useCallbackRef)(onResize);
      (0, import_react_use_layout_effect.useLayoutEffect)(() => {
        let rAF = 0;
        if (element) {
          const resizeObserver = new ResizeObserver(() => {
            cancelAnimationFrame(rAF);
            rAF = window.requestAnimationFrame(handleResize);
          });
          resizeObserver.observe(element);
          return () => {
            window.cancelAnimationFrame(rAF);
            resizeObserver.unobserve(element);
          };
        }
      }, [element, handleResize]);
    }
    function getOpenState(open) {
      return open ? "open" : "closed";
    }
    function makeTriggerId(baseId, value) {
      return `${baseId}-trigger-${value}`;
    }
    function makeContentId(baseId, value) {
      return `${baseId}-content-${value}`;
    }
    function whenMouse(handler) {
      return (event) => event.pointerType === "mouse" ? handler(event) : void 0;
    }
    var Root2 = NavigationMenu;
    var Sub = NavigationMenuSub;
    var List = NavigationMenuList;
    var Item = NavigationMenuItem;
    var Trigger = NavigationMenuTrigger;
    var Link = NavigationMenuLink;
    var Indicator = NavigationMenuIndicator;
    var Content = NavigationMenuContent;
    var Viewport = NavigationMenuViewport;
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/base-tab-list.props.js
var require_base_tab_list_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/base-tab-list.props.js"(exports, module) {
    "use strict";
    var o = Object.defineProperty;
    var n = Object.getOwnPropertyDescriptor;
    var i = Object.getOwnPropertyNames;
    var m = Object.prototype.hasOwnProperty;
    var c = (s, e) => {
      for (var t in e) o(s, t, { get: e[t], enumerable: true });
    };
    var l = (s, e, t, p) => {
      if (e && typeof e == "object" || typeof e == "function") for (let r of i(e)) !m.call(s, r) && r !== t && o(s, r, { get: () => e[r], enumerable: !(p = n(e, r)) || p.enumerable });
      return s;
    };
    var y = (s) => l(o({}, "__esModule", { value: true }), s);
    var P = {};
    c(P, { baseTabListPropDefs: () => u });
    module.exports = y(P);
    var a = require_color_prop();
    var f = require_high_contrast_prop();
    var w = ["1", "2"];
    var v = ["nowrap", "wrap", "wrap-reverse"];
    var D = ["start", "center", "end"];
    var u = { size: { type: "enum", className: "rt-r-size", values: w, default: "2", responsive: true }, wrap: { type: "enum", className: "rt-r-fw", values: v, responsive: true }, justify: { type: "enum", className: "rt-r-jc", values: D, responsive: true }, ...a.colorPropDef, ...f.highContrastPropDef };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/tab-nav.props.js
var require_tab_nav_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/tab-nav.props.js"(exports, module) {
    "use strict";
    var r = Object.defineProperty;
    var b = Object.getOwnPropertyDescriptor;
    var D = Object.getOwnPropertyNames;
    var P = Object.prototype.hasOwnProperty;
    var l = (e, o) => {
      for (var a in o) r(e, a, { get: o[a], enumerable: true });
    };
    var m = (e, o, a, t) => {
      if (o && typeof o == "object" || typeof o == "function") for (let p of D(o)) !P.call(e, p) && p !== a && r(e, p, { get: () => o[p], enumerable: !(t = b(o, p)) || t.enumerable });
      return e;
    };
    var n = (e) => m(r({}, "__esModule", { value: true }), e);
    var v = {};
    l(v, { tabNavLinkPropDefs: () => f, tabNavRootPropDefs: () => i.baseTabListPropDefs });
    module.exports = n(v);
    var s = require_as_child_prop();
    var i = require_base_tab_list_props();
    var f = { ...s.asChildPropDef, active: { type: "boolean", default: false } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/tab-nav.js
var require_tab_nav = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/tab-nav.js"(exports, module) {
    "use strict";
    var k = Object.create;
    var n = Object.defineProperty;
    var c = Object.getOwnPropertyDescriptor;
    var g = Object.getOwnPropertyNames;
    var y = Object.getPrototypeOf;
    var R = Object.prototype.hasOwnProperty;
    var u = (o, a) => {
      for (var e in a) n(o, e, { get: a[e], enumerable: true });
    };
    var b = (o, a, e, s) => {
      if (a && typeof a == "object" || typeof a == "function") for (let r of g(a)) !R.call(o, r) && r !== e && n(o, r, { get: () => a[r], enumerable: !(s = c(a, r)) || s.enumerable });
      return o;
    };
    var m = (o, a, e) => (e = o != null ? k(y(o)) : {}, b(a || !o || !o.__esModule ? n(e, "default", { value: o, enumerable: true }) : e, o));
    var M = (o) => b(n({}, "__esModule", { value: true }), o);
    var h = {};
    u(h, { Link: () => f, Root: () => v });
    module.exports = M(h);
    var t = m(require_react());
    var N = m(require_classnames());
    var p = m(require_dist45());
    var l = require_tab_nav_props();
    var P = require_extract_props();
    var L = require_get_subtree();
    var d = require_margin_props();
    var v = t.forwardRef((o, a) => {
      const { children: e, className: s, color: r, ...i } = (0, P.extractProps)(o, l.tabNavRootPropDefs, d.marginPropDefs);
      return t.createElement(p.Root, { className: "rt-TabNavRoot", "data-accent-color": r, ...i, asChild: false, ref: a }, t.createElement(p.List, { className: (0, N.default)("rt-reset", "rt-BaseTabList", "rt-TabNavList", s) }, e));
    });
    v.displayName = "TabNav.Root";
    var f = t.forwardRef((o, a) => {
      const { asChild: e, children: s, className: r, ...i } = o;
      return t.createElement(p.Item, { className: "rt-TabNavItem" }, t.createElement(p.Link, { ...i, ref: a, className: (0, N.default)("rt-reset", "rt-BaseTabListTrigger", "rt-TabNavLink", r), onSelect: void 0, asChild: e }, (0, L.getSubtree)({ asChild: e, children: s }, (T) => t.createElement(t.Fragment, null, t.createElement("span", { className: "rt-BaseTabListTriggerInner rt-TabNavLinkInner" }, T), t.createElement("span", { className: "rt-BaseTabListTriggerInnerHidden rt-TabNavLinkInnerHidden" }, T)))));
    });
    f.displayName = "TabNav.Link";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/table.props.js
var require_table_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/table.props.js"(exports, module) {
    "use strict";
    var a = Object.defineProperty;
    var f = Object.getOwnPropertyDescriptor;
    var c = Object.getOwnPropertyNames;
    var m = Object.prototype.hasOwnProperty;
    var y = (e, s) => {
      for (var r in s) a(e, r, { get: s[r], enumerable: true });
    };
    var v = (e, s, r, o) => {
      if (s && typeof s == "object" || typeof s == "function") for (let t of c(s)) !m.call(e, t) && t !== r && a(e, t, { get: () => s[t], enumerable: !(o = f(s, t)) || o.enumerable });
      return e;
    };
    var d = (e) => v(a({}, "__esModule", { value: true }), e);
    var N = {};
    y(N, { tableCellPropDefs: () => p, tableRootPropDefs: () => u, tableRowPropDefs: () => l });
    module.exports = d(N);
    var n = require_padding_props();
    var i = require_width_props();
    var b = ["1", "2", "3"];
    var g = ["surface", "ghost"];
    var D = ["auto", "fixed"];
    var u = { size: { type: "enum", className: "rt-r-size", values: b, default: "2", responsive: true }, variant: { type: "enum", className: "rt-variant", values: g, default: "ghost" }, layout: { type: "enum", className: "rt-r-tl", values: D, responsive: true } };
    var P = ["start", "center", "end", "baseline"];
    var l = { align: { type: "enum", className: "rt-r-va", values: P, parseValue: V, responsive: true } };
    function V(e) {
      return { baseline: "baseline", start: "top", center: "middle", end: "bottom" }[e];
    }
    var j = ["start", "center", "end"];
    var p = { justify: { type: "enum", className: "rt-r-ta", values: j, parseValue: z, responsive: true }, ...i.widthPropDefs, ...n.paddingPropDefs };
    function z(e) {
      return { start: "left", center: "center", end: "right" }[e];
    }
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/table.js
var require_table = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/table.js"(exports, module) {
    "use strict";
    var v = Object.create;
    var m = Object.defineProperty;
    var D = Object.getOwnPropertyDescriptor;
    var x = Object.getOwnPropertyNames;
    var B = Object.getPrototypeOf;
    var O = Object.prototype.hasOwnProperty;
    var W = (e, o) => {
      for (var l in o) m(e, l, { get: o[l], enumerable: true });
    };
    var c = (e, o, l, r) => {
      if (o && typeof o == "object" || typeof o == "function") for (let p of x(o)) !O.call(e, p) && p !== l && m(e, p, { get: () => o[p], enumerable: !(r = D(o, p)) || r.enumerable });
      return e;
    };
    var y = (e, o, l) => (l = e != null ? v(B(e)) : {}, c(o || !e || !e.__esModule ? m(l, "default", { value: e, enumerable: true }) : l, e));
    var g = (e) => c(m({}, "__esModule", { value: true }), e);
    var G = {};
    W(G, { Body: () => P, Cell: () => f, ColumnHeaderCell: () => R, Header: () => b, Root: () => d, Row: () => T, RowHeaderCell: () => C });
    module.exports = g(G);
    var a = y(require_react());
    var s = y(require_classnames());
    var t = require_table_props();
    var n = require_extract_props();
    var i = require_get_responsive_styles();
    var w = require_margin_props();
    var u = require_scroll_area();
    var d = a.forwardRef((e, o) => {
      const { layout: l, ...r } = t.tableRootPropDefs, { className: p, children: H, layout: N, ...E } = (0, n.extractProps)(e, r, w.marginPropDefs), h = (0, i.getResponsiveClassNames)({ value: N, className: t.tableRootPropDefs.layout.className, propValues: t.tableRootPropDefs.layout.values });
      return a.createElement("div", { ref: o, className: (0, s.default)("rt-TableRoot", p), ...E }, a.createElement(u.ScrollArea, null, a.createElement("table", { className: (0, s.default)("rt-TableRootTable", h) }, H)));
    });
    d.displayName = "Table.Root";
    var b = a.forwardRef(({ className: e, ...o }, l) => a.createElement("thead", { ...o, ref: l, className: (0, s.default)("rt-TableHeader", e) }));
    b.displayName = "Table.Header";
    var P = a.forwardRef(({ className: e, ...o }, l) => a.createElement("tbody", { ...o, ref: l, className: (0, s.default)("rt-TableBody", e) }));
    P.displayName = "Table.Body";
    var T = a.forwardRef((e, o) => {
      const { className: l, ...r } = (0, n.extractProps)(e, t.tableRowPropDefs);
      return a.createElement("tr", { ...r, ref: o, className: (0, s.default)("rt-TableRow", l) });
    });
    T.displayName = "Table.Row";
    var f = a.forwardRef((e, o) => {
      const { className: l, ...r } = (0, n.extractProps)(e, t.tableCellPropDefs);
      return a.createElement("td", { className: (0, s.default)("rt-TableCell", l), ref: o, ...r });
    });
    f.displayName = "Table.Cell";
    var R = a.forwardRef((e, o) => {
      const { className: l, ...r } = (0, n.extractProps)(e, t.tableCellPropDefs);
      return a.createElement("th", { className: (0, s.default)("rt-TableCell", "rt-TableColumnHeaderCell", l), scope: "col", ref: o, ...r });
    });
    R.displayName = "Table.ColumnHeaderCell";
    var C = a.forwardRef((e, o) => {
      const { className: l, ...r } = (0, n.extractProps)(e, t.tableCellPropDefs);
      return a.createElement("th", { className: (0, s.default)("rt-TableCell", "rt-TableRowHeaderCell", l), scope: "row", ref: o, ...r });
    });
    C.displayName = "Table.RowHeaderCell";
  }
});

// node_modules/@radix-ui/react-tabs/dist/index.js
var require_dist46 = __commonJS({
  "node_modules/@radix-ui/react-tabs/dist/index.js"(exports, module) {
    "use strict";
    "use client";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS2 = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var src_exports = {};
    __export2(src_exports, {
      Content: () => Content,
      List: () => List,
      Root: () => Root2,
      Tabs: () => Tabs,
      TabsContent: () => TabsContent,
      TabsList: () => TabsList,
      TabsTrigger: () => TabsTrigger,
      Trigger: () => Trigger,
      createTabsScope: () => createTabsScope
    });
    module.exports = __toCommonJS2(src_exports);
    var React2 = __toESM2(require_react());
    var import_primitive = require_dist7();
    var import_react_context = require_dist6();
    var import_react_roving_focus = require_dist30();
    var import_react_presence = require_dist16();
    var import_react_primitive = require_dist3();
    var RovingFocusGroup = __toESM2(require_dist30());
    var import_react_direction = require_dist24();
    var import_react_use_controllable_state = require_dist11();
    var import_react_id = require_dist9();
    var import_jsx_runtime = require_jsx_runtime();
    var TABS_NAME = "Tabs";
    var [createTabsContext, createTabsScope] = (0, import_react_context.createContextScope)(TABS_NAME, [
      import_react_roving_focus.createRovingFocusGroupScope
    ]);
    var useRovingFocusGroupScope = (0, import_react_roving_focus.createRovingFocusGroupScope)();
    var [TabsProvider, useTabsContext] = createTabsContext(TABS_NAME);
    var Tabs = React2.forwardRef(
      (props, forwardedRef) => {
        const {
          __scopeTabs,
          value: valueProp,
          onValueChange,
          defaultValue,
          orientation = "horizontal",
          dir,
          activationMode = "automatic",
          ...tabsProps
        } = props;
        const direction = (0, import_react_direction.useDirection)(dir);
        const [value, setValue] = (0, import_react_use_controllable_state.useControllableState)({
          prop: valueProp,
          onChange: onValueChange,
          defaultProp: defaultValue
        });
        return (0, import_jsx_runtime.jsx)(
          TabsProvider,
          {
            scope: __scopeTabs,
            baseId: (0, import_react_id.useId)(),
            value,
            onValueChange: setValue,
            orientation,
            dir: direction,
            activationMode,
            children: (0, import_jsx_runtime.jsx)(
              import_react_primitive.Primitive.div,
              {
                dir: direction,
                "data-orientation": orientation,
                ...tabsProps,
                ref: forwardedRef
              }
            )
          }
        );
      }
    );
    Tabs.displayName = TABS_NAME;
    var TAB_LIST_NAME = "TabsList";
    var TabsList = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeTabs, loop = true, ...listProps } = props;
        const context = useTabsContext(TAB_LIST_NAME, __scopeTabs);
        const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);
        return (0, import_jsx_runtime.jsx)(
          RovingFocusGroup.Root,
          {
            asChild: true,
            ...rovingFocusGroupScope,
            orientation: context.orientation,
            dir: context.dir,
            loop,
            children: (0, import_jsx_runtime.jsx)(
              import_react_primitive.Primitive.div,
              {
                role: "tablist",
                "aria-orientation": context.orientation,
                ...listProps,
                ref: forwardedRef
              }
            )
          }
        );
      }
    );
    TabsList.displayName = TAB_LIST_NAME;
    var TRIGGER_NAME = "TabsTrigger";
    var TabsTrigger = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeTabs, value, disabled = false, ...triggerProps } = props;
        const context = useTabsContext(TRIGGER_NAME, __scopeTabs);
        const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);
        const triggerId = makeTriggerId(context.baseId, value);
        const contentId = makeContentId(context.baseId, value);
        const isSelected = value === context.value;
        return (0, import_jsx_runtime.jsx)(
          RovingFocusGroup.Item,
          {
            asChild: true,
            ...rovingFocusGroupScope,
            focusable: !disabled,
            active: isSelected,
            children: (0, import_jsx_runtime.jsx)(
              import_react_primitive.Primitive.button,
              {
                type: "button",
                role: "tab",
                "aria-selected": isSelected,
                "aria-controls": contentId,
                "data-state": isSelected ? "active" : "inactive",
                "data-disabled": disabled ? "" : void 0,
                disabled,
                id: triggerId,
                ...triggerProps,
                ref: forwardedRef,
                onMouseDown: (0, import_primitive.composeEventHandlers)(props.onMouseDown, (event) => {
                  if (!disabled && event.button === 0 && event.ctrlKey === false) {
                    context.onValueChange(value);
                  } else {
                    event.preventDefault();
                  }
                }),
                onKeyDown: (0, import_primitive.composeEventHandlers)(props.onKeyDown, (event) => {
                  if ([" ", "Enter"].includes(event.key)) context.onValueChange(value);
                }),
                onFocus: (0, import_primitive.composeEventHandlers)(props.onFocus, () => {
                  const isAutomaticActivation = context.activationMode !== "manual";
                  if (!isSelected && !disabled && isAutomaticActivation) {
                    context.onValueChange(value);
                  }
                })
              }
            )
          }
        );
      }
    );
    TabsTrigger.displayName = TRIGGER_NAME;
    var CONTENT_NAME = "TabsContent";
    var TabsContent = React2.forwardRef(
      (props, forwardedRef) => {
        const { __scopeTabs, value, forceMount, children, ...contentProps } = props;
        const context = useTabsContext(CONTENT_NAME, __scopeTabs);
        const triggerId = makeTriggerId(context.baseId, value);
        const contentId = makeContentId(context.baseId, value);
        const isSelected = value === context.value;
        const isMountAnimationPreventedRef = React2.useRef(isSelected);
        React2.useEffect(() => {
          const rAF = requestAnimationFrame(() => isMountAnimationPreventedRef.current = false);
          return () => cancelAnimationFrame(rAF);
        }, []);
        return (0, import_jsx_runtime.jsx)(import_react_presence.Presence, { present: forceMount || isSelected, children: ({ present }) => (0, import_jsx_runtime.jsx)(
          import_react_primitive.Primitive.div,
          {
            "data-state": isSelected ? "active" : "inactive",
            "data-orientation": context.orientation,
            role: "tabpanel",
            "aria-labelledby": triggerId,
            hidden: !present,
            id: contentId,
            tabIndex: 0,
            ...contentProps,
            ref: forwardedRef,
            style: {
              ...props.style,
              animationDuration: isMountAnimationPreventedRef.current ? "0s" : void 0
            },
            children: present && children
          }
        ) });
      }
    );
    TabsContent.displayName = CONTENT_NAME;
    function makeTriggerId(baseId, value) {
      return `${baseId}-trigger-${value}`;
    }
    function makeContentId(baseId, value) {
      return `${baseId}-content-${value}`;
    }
    var Root2 = Tabs;
    var List = TabsList;
    var Trigger = TabsTrigger;
    var Content = TabsContent;
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/tabs.props.js
var require_tabs_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/tabs.props.js"(exports, module) {
    "use strict";
    var e = Object.defineProperty;
    var P = Object.getOwnPropertyDescriptor;
    var i = Object.getOwnPropertyNames;
    var n = Object.prototype.hasOwnProperty;
    var m = (s, o) => {
      for (var r in o) e(s, r, { get: o[r], enumerable: true });
    };
    var c = (s, o, r, a) => {
      if (o && typeof o == "object" || typeof o == "function") for (let t of i(o)) !n.call(s, t) && t !== r && e(s, t, { get: () => o[t], enumerable: !(a = P(o, t)) || a.enumerable });
      return s;
    };
    var x = (s) => c(e({}, "__esModule", { value: true }), s);
    var C = {};
    m(C, { tabsContentPropDefs: () => b, tabsListPropDefs: () => D.baseTabListPropDefs, tabsRootPropDefs: () => f });
    module.exports = x(C);
    var p = require_as_child_prop();
    var D = require_base_tab_list_props();
    var f = { ...p.asChildPropDef };
    var b = { ...p.asChildPropDef };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/tabs.js
var require_tabs = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/tabs.js"(exports, module) {
    "use strict";
    var d = Object.create;
    var n = Object.defineProperty;
    var R = Object.getOwnPropertyDescriptor;
    var C = Object.getOwnPropertyNames;
    var L = Object.getPrototypeOf;
    var N = Object.prototype.hasOwnProperty;
    var v = (s, e) => {
      for (var t in e) n(s, t, { get: e[t], enumerable: true });
    };
    var c = (s, e, t, o) => {
      if (e && typeof e == "object" || typeof e == "function") for (let a of C(e)) !N.call(s, a) && a !== t && n(s, a, { get: () => e[a], enumerable: !(o = R(e, a)) || o.enumerable });
      return s;
    };
    var P = (s, e, t) => (t = s != null ? d(L(s)) : {}, c(e || !s || !s.__esModule ? n(t, "default", { value: s, enumerable: true }) : t, s));
    var E = (s) => c(n({}, "__esModule", { value: true }), s);
    var h = {};
    v(h, { Content: () => l, List: () => f, Root: () => b, Trigger: () => g });
    module.exports = E(h);
    var r = P(require_react());
    var p = P(require_classnames());
    var i = P(require_dist46());
    var y = require_tabs_props();
    var T = require_extract_props();
    var m = require_margin_props();
    var b = r.forwardRef((s, e) => {
      const { className: t, ...o } = (0, T.extractProps)(s, m.marginPropDefs);
      return r.createElement(i.Root, { ...o, ref: e, className: (0, p.default)("rt-TabsRoot", t) });
    });
    b.displayName = "Tabs.Root";
    var f = r.forwardRef((s, e) => {
      const { className: t, color: o, ...a } = (0, T.extractProps)(s, y.tabsListPropDefs, m.marginPropDefs);
      return r.createElement(i.List, { "data-accent-color": o, ...a, asChild: false, ref: e, className: (0, p.default)("rt-BaseTabList", "rt-TabsList", t) });
    });
    f.displayName = "Tabs.List";
    var g = r.forwardRef((s, e) => {
      const { className: t, children: o, ...a } = s;
      return r.createElement(i.Trigger, { ...a, asChild: false, ref: e, className: (0, p.default)("rt-reset", "rt-BaseTabListTrigger", "rt-TabsTrigger", t) }, r.createElement("span", { className: "rt-BaseTabListTriggerInner rt-TabsTriggerInner" }, o), r.createElement("span", { className: "rt-BaseTabListTriggerInnerHidden rt-TabsTriggerInnerHidden" }, o));
    });
    g.displayName = "Tabs.Trigger";
    var l = r.forwardRef((s, e) => {
      const { className: t, ...o } = (0, T.extractProps)(s, m.marginPropDefs);
      return r.createElement(i.Content, { ...o, ref: e, className: (0, p.default)("rt-TabsContent", t) });
    });
    l.displayName = "Tabs.Content";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/text-area.props.js
var require_text_area_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/text-area.props.js"(exports, module) {
    "use strict";
    var o = Object.defineProperty;
    var f = Object.getOwnPropertyDescriptor;
    var u = Object.getOwnPropertyNames;
    var c = Object.prototype.hasOwnProperty;
    var m = (s, e) => {
      for (var t in e) o(s, t, { get: e[t], enumerable: true });
    };
    var l = (s, e, t, a) => {
      if (e && typeof e == "object" || typeof e == "function") for (let r of u(e)) !c.call(s, r) && r !== t && o(s, r, { get: () => e[r], enumerable: !(a = f(e, r)) || a.enumerable });
      return s;
    };
    var v = (s) => l(o({}, "__esModule", { value: true }), s);
    var P = {};
    m(P, { textAreaPropDefs: () => n });
    module.exports = v(P);
    var i = require_color_prop();
    var p = require_radius_prop();
    var z = ["1", "2", "3"];
    var y = ["classic", "surface", "soft"];
    var D = ["none", "vertical", "horizontal", "both"];
    var n = { size: { type: "enum", className: "rt-r-size", values: z, default: "2", responsive: true }, variant: { type: "enum", className: "rt-variant", values: y, default: "surface" }, resize: { type: "enum", className: "rt-r-resize", values: D, responsive: true }, ...i.colorPropDef, ...p.radiusPropDef };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/text-area.js
var require_text_area = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/text-area.js"(exports, module) {
    "use strict";
    var d = Object.create;
    var a = Object.defineProperty;
    var T = Object.getOwnPropertyDescriptor;
    var y = Object.getOwnPropertyNames;
    var u = Object.getPrototypeOf;
    var g = Object.prototype.hasOwnProperty;
    var v = (e, r) => {
      for (var t in r) a(e, t, { get: r[t], enumerable: true });
    };
    var n = (e, r, t, p) => {
      if (r && typeof r == "object" || typeof r == "function") for (let o of y(r)) !g.call(e, o) && o !== t && a(e, o, { get: () => r[o], enumerable: !(p = T(r, o)) || p.enumerable });
      return e;
    };
    var i = (e, r, t) => (t = e != null ? d(u(e)) : {}, n(r || !e || !e.__esModule ? a(t, "default", { value: e, enumerable: true }) : t, e));
    var D = (e) => n(a({}, "__esModule", { value: true }), e);
    var N = {};
    v(N, { TextArea: () => m });
    module.exports = D(N);
    var s = i(require_react());
    var f = i(require_classnames());
    var x = require_text_area_props();
    var P = require_extract_props();
    var l = require_margin_props();
    var m = s.forwardRef((e, r) => {
      const { className: t, color: p, radius: o, style: A, ...c } = (0, P.extractProps)(e, x.textAreaPropDefs, l.marginPropDefs);
      return s.createElement("div", { "data-accent-color": p, "data-radius": o, className: (0, f.default)("rt-TextAreaRoot", t), style: A }, s.createElement("textarea", { className: "rt-reset rt-TextAreaInput", ref: r, ...c }));
    });
    m.displayName = "TextArea";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/text-field.props.js
var require_text_field_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/text-field.props.js"(exports, module) {
    "use strict";
    var t = Object.defineProperty;
    var m = Object.getOwnPropertyDescriptor;
    var c = Object.getOwnPropertyNames;
    var u = Object.prototype.hasOwnProperty;
    var D = (s, e) => {
      for (var o in e) t(s, o, { get: e[o], enumerable: true });
    };
    var P = (s, e, o, a) => {
      if (e && typeof e == "object" || typeof e == "function") for (let p of c(e)) !u.call(s, p) && p !== o && t(s, p, { get: () => e[p], enumerable: !(a = m(e, p)) || a.enumerable });
      return s;
    };
    var y = (s) => P(t({}, "__esModule", { value: true }), s);
    var z = {};
    D(z, { textFieldRootPropDefs: () => l, textFieldSlotPropDefs: () => d });
    module.exports = y(z);
    var f = require_color_prop();
    var r = require_padding_props();
    var i = require_radius_prop();
    var n = require_flex_props();
    var g = ["1", "2", "3"];
    var v = ["classic", "surface", "soft"];
    var l = { size: { type: "enum", className: "rt-r-size", values: g, default: "2", responsive: true }, variant: { type: "enum", className: "rt-variant", values: v, default: "surface" }, ...f.colorPropDef, ...i.radiusPropDef };
    var x = ["left", "right"];
    var d = { side: { type: "enum", values: x }, ...f.colorPropDef, gap: n.flexPropDefs.gap, px: r.paddingPropDefs.px, pl: r.paddingPropDefs.pl, pr: r.paddingPropDefs.pr };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/text-field.js
var require_text_field = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/text-field.js"(exports, module) {
    "use strict";
    "use client";
    var v = Object.create;
    var p = Object.defineProperty;
    var N = Object.getOwnPropertyDescriptor;
    var w = Object.getOwnPropertyNames;
    var D = Object.getPrototypeOf;
    var E = Object.prototype.hasOwnProperty;
    var b = (t, e) => {
      for (var o in e) p(t, o, { get: e[o], enumerable: true });
    };
    var P = (t, e, o, s) => {
      if (e && typeof e == "object" || typeof e == "function") for (let r of w(e)) !E.call(t, r) && r !== o && p(t, r, { get: () => e[r], enumerable: !(s = N(e, r)) || s.enumerable });
      return t;
    };
    var T = (t, e, o) => (o = t != null ? v(D(t)) : {}, P(e || !t || !t.__esModule ? p(o, "default", { value: t, enumerable: true }) : o, t));
    var I = (t) => P(p({}, "__esModule", { value: true }), t);
    var j = {};
    b(j, { Root: () => u, Slot: () => c });
    module.exports = I(j);
    var l = T(require_react());
    var d = T(require_classnames());
    var F = require_dist();
    var n = require_text_field_props();
    var m = require_extract_props();
    var R = require_margin_props();
    var u = l.forwardRef((t, e) => {
      const o = l.useRef(null), { children: s, className: r, color: a, radius: y, style: S, ...h } = (0, m.extractProps)(t, n.textFieldRootPropDefs, R.marginPropDefs);
      return l.createElement("div", { "data-accent-color": a, "data-radius": y, style: S, className: (0, d.default)("rt-TextFieldRoot", r), onPointerDown: (g) => {
        const f = g.target;
        if (f.closest("input, button, a")) return;
        const i = o.current;
        if (!i) return;
        const x = f.closest(`
            .rt-TextFieldSlot[data-side='right'],
            .rt-TextFieldSlot:not([data-side='right']) ~ .rt-TextFieldSlot:not([data-side='left'])
          `) ? i.value.length : 0;
        requestAnimationFrame(() => {
          try {
            i.setSelectionRange(x, x);
          } catch {
          }
          i.focus();
        });
      } }, l.createElement("input", { spellCheck: "false", ...h, ref: (0, F.composeRefs)(o, e), className: "rt-reset rt-TextFieldInput" }), s);
    });
    u.displayName = "TextField.Root";
    var c = l.forwardRef((t, e) => {
      const { className: o, color: s, side: r, ...a } = (0, m.extractProps)(t, n.textFieldSlotPropDefs);
      return l.createElement("div", { "data-accent-color": s, "data-side": r, ...a, ref: e, className: (0, d.default)("rt-TextFieldSlot", o) });
    });
    c.displayName = "TextField.Slot";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/theme-panel.js
var require_theme_panel = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/theme-panel.js"(exports, module) {
    "use strict";
    "use client";
    var q = Object.create;
    var b = Object.defineProperty;
    var J = Object.getOwnPropertyDescriptor;
    var Q = Object.getOwnPropertyNames;
    var Y = Object.getPrototypeOf;
    var _ = Object.prototype.hasOwnProperty;
    var R = (n, l) => {
      for (var i in l) b(n, i, { get: l[i], enumerable: true });
    };
    var E = (n, l, i, p) => {
      if (l && typeof l == "object" || typeof l == "function") for (let r of Q(l)) !_.call(n, r) && r !== i && b(n, r, { get: () => l[r], enumerable: !(p = J(l, r)) || p.enumerable });
      return n;
    };
    var e9 = (n, l, i) => (i = n != null ? q(Y(n)) : {}, E(l || !n || !n.__esModule ? b(i, "default", { value: n, enumerable: true }) : i, n));
    var t9 = (n) => E(b({}, "__esModule", { value: true }), n);
    var a9 = {};
    R(a9, { ThemePanel: () => H });
    module.exports = t9(a9);
    var e = e9(require_react());
    var S = require_dist10();
    var o = require_cjs();
    var h = require_theme();
    var N = require_inert();
    var z = require_get_matching_gray_color();
    var d = require_theme_props();
    var H = e.forwardRef(({ defaultOpen: n = true, ...l }, i) => {
      const [p, r] = e.useState(n);
      return e.createElement(K, { ...l, ref: i, open: p, onOpenChange: r });
    });
    H.displayName = "ThemePanel";
    var K = e.forwardRef((n, l) => {
      const { open: i, onOpenChange: p, onAppearanceChange: r, ...y } = n, G = (0, h.useThemeContext)(), { appearance: c, onAppearanceChange: I, accentColor: u, onAccentColorChange: $, grayColor: g, onGrayColorChange: F, panelBackground: L, onPanelBackgroundChange: O, radius: T, onRadiusChange: D, scaling: w, onScalingChange: j } = G, A = r !== void 0, V = (0, S.useCallbackRef)(r), x = e.useCallback((t) => {
        const a = o9();
        if (c !== "inherit") {
          I(t);
          return;
        }
        A ? V(t) : (Z(t), n9(t)), a();
      }, [c, I, A, V]), k = (0, z.getMatchingGrayColor)(u), B = g === "auto" ? k : g, [W, P] = e.useState("idle");
      async function U() {
        const t = { appearance: c === d.themePropDefs.appearance.default ? void 0 : c, accentColor: u === d.themePropDefs.accentColor.default ? void 0 : u, grayColor: g === d.themePropDefs.grayColor.default ? void 0 : g, panelBackground: L === d.themePropDefs.panelBackground.default ? void 0 : L, radius: T === d.themePropDefs.radius.default ? void 0 : T, scaling: w === d.themePropDefs.scaling.default ? void 0 : w }, a = Object.keys(t).filter((s) => t[s] !== void 0).map((s) => `${s}="${t[s]}"`).join(" "), m = a ? `<Theme ${a}>` : "<Theme>";
        P("copying"), await navigator.clipboard.writeText(m), P("copied"), setTimeout(() => P("idle"), 2e3);
      }
      const [M, Z] = e.useState(c === "inherit" ? null : c), v = `
      [contenteditable],
      [role="combobox"],
      [role="listbox"],
      [role="menu"],
      input:not([type="radio"], [type="checkbox"]),
      select,
      textarea
    `;
      return e.useEffect(() => {
        function t(a) {
          var _a, _b;
          const m = a.altKey || a.ctrlKey || a.shiftKey || a.metaKey, s = (_a = document.activeElement) == null ? void 0 : _a.closest(v);
          ((_b = a.key) == null ? void 0 : _b.toUpperCase()) === "T" && !m && !s && p(!i);
        }
        return document.addEventListener("keydown", t), () => document.removeEventListener("keydown", t);
      }, [p, i, v]), e.useEffect(() => {
        function t(a) {
          var _a, _b;
          const m = a.altKey || a.ctrlKey || a.shiftKey || a.metaKey, s = (_a = document.activeElement) == null ? void 0 : _a.closest(v);
          ((_b = a.key) == null ? void 0 : _b.toUpperCase()) === "D" && !m && !s && x(M === "light" ? "dark" : "light");
        }
        return document.addEventListener("keydown", t), () => document.removeEventListener("keydown", t);
      }, [x, M, v]), e.useEffect(() => {
        const t = document.documentElement, a = document.body;
        function m() {
          const f = t.classList.contains("dark") || t.classList.contains("dark-theme") || a.classList.contains("dark") || a.classList.contains("dark-theme");
          Z(c === "inherit" ? f ? "dark" : "light" : c);
        }
        const s = new MutationObserver(function(f) {
          f.forEach(function(X) {
            X.attributeName === "class" && m();
          });
        });
        return m(), c === "inherit" && (s.observe(t, { attributes: true }), s.observe(a, { attributes: true })), () => s.disconnect();
      }, [c]), e.createElement(h.Theme, { asChild: true, radius: "medium", scaling: "100%" }, e.createElement(o.Flex, { direction: "column", position: "fixed", top: "0", right: "0", mr: "4", mt: "4", inert: i ? void 0 : N.inert, ...y, ref: l, style: { zIndex: 9999, overflow: "hidden", maxHeight: "calc(100vh - var(--space-4) - var(--space-4))", borderRadius: "var(--radius-4)", backgroundColor: "var(--color-panel-solid)", transformOrigin: "top center", transitionProperty: "transform, box-shadow", transitionDuration: "200ms", transitionTimingFunction: i ? "ease-out" : "ease-in", transform: i ? "none" : "translateX(105%)", boxShadow: i ? "var(--shadow-5)" : "var(--shadow-2)", ...n.style } }, e.createElement(o.ScrollArea, null, e.createElement(o.Box, { flexGrow: "1", p: "5", position: "relative" }, e.createElement(o.Box, { position: "absolute", top: "0", right: "0", m: "2" }, e.createElement(o.Tooltip, { content: "Press T to show/hide the Theme Panel", side: "bottom", sideOffset: 6 }, e.createElement(o.Kbd, { asChild: true, size: "3", tabIndex: 0, className: "rt-ThemePanelShortcut" }, e.createElement("button", { onClick: () => p(!i) }, "T")))), e.createElement(o.Heading, { size: "5", trim: "both", as: "h3", mb: "5" }, "Theme"), e.createElement(o.Text, { id: "accent-color-title", as: "p", size: "2", weight: "medium", mt: "5" }, "Accent color"), e.createElement(o.Grid, { columns: "10", gap: "2", mt: "3", role: "group", "aria-labelledby": "accent-color-title" }, d.themePropDefs.accentColor.values.map((t) => e.createElement("label", { key: t, className: "rt-ThemePanelSwatch", style: { backgroundColor: `var(--${t}-9)` } }, e.createElement(o.Tooltip, { content: `${C(t)}${u === "gray" && B !== "gray" ? ` (${C(B)})` : ""}` }, e.createElement("input", { className: "rt-ThemePanelSwatchInput", type: "radio", name: "accentColor", value: t, checked: u === t, onChange: (a) => $(a.target.value) }))))), e.createElement(o.Flex, { asChild: true, align: "center", justify: "between" }, e.createElement(o.Text, { as: "p", id: "gray-color-title", size: "2", weight: "medium", mt: "5" }, "Gray color")), e.createElement(o.Grid, { columns: "10", gap: "2", mt: "3", role: "group", "aria-labelledby": "gray-color-title" }, d.themePropDefs.grayColor.values.map((t) => e.createElement(o.Flex, { key: t, asChild: true, align: "center", justify: "center" }, e.createElement("label", { className: "rt-ThemePanelSwatch", style: { backgroundColor: t === "auto" ? `var(--${k}-9)` : t === "gray" ? "var(--gray-9)" : `var(--${t}-9)`, filter: t === "gray" ? "saturate(0)" : void 0 } }, e.createElement(o.Tooltip, { content: `${C(t)}${t === "auto" ? ` (${C(k)})` : ""}` }, e.createElement("input", { className: "rt-ThemePanelSwatchInput", type: "radio", name: "grayColor", value: t, checked: g === t, onChange: (a) => F(a.target.value) })))))), e.createElement(o.Text, { id: "appearance-title", as: "p", size: "2", weight: "medium", mt: "5" }, "Appearance"), e.createElement(o.Grid, { columns: "2", gap: "2", mt: "3", role: "group", "aria-labelledby": "appearance-title" }, ["light", "dark"].map((t) => e.createElement("label", { key: t, className: "rt-ThemePanelRadioCard" }, e.createElement("input", { className: "rt-ThemePanelRadioCardInput", type: "radio", name: "appearance", value: t, checked: M === t, onChange: (a) => x(a.target.value) }), e.createElement(o.Flex, { align: "center", justify: "center", height: "32px", gap: "2" }, t === "light" ? e.createElement("svg", { width: "15", height: "15", viewBox: "0 0 15 15", fill: "none", xmlns: "http://www.w3.org/2000/svg", style: { margin: "0 -1px" } }, e.createElement("path", { d: "M7.5 0C7.77614 0 8 0.223858 8 0.5V2.5C8 2.77614 7.77614 3 7.5 3C7.22386 3 7 2.77614 7 2.5V0.5C7 0.223858 7.22386 0 7.5 0ZM2.1967 2.1967C2.39196 2.00144 2.70854 2.00144 2.90381 2.1967L4.31802 3.61091C4.51328 3.80617 4.51328 4.12276 4.31802 4.31802C4.12276 4.51328 3.80617 4.51328 3.61091 4.31802L2.1967 2.90381C2.00144 2.70854 2.00144 2.39196 2.1967 2.1967ZM0.5 7C0.223858 7 0 7.22386 0 7.5C0 7.77614 0.223858 8 0.5 8H2.5C2.77614 8 3 7.77614 3 7.5C3 7.22386 2.77614 7 2.5 7H0.5ZM2.1967 12.8033C2.00144 12.608 2.00144 12.2915 2.1967 12.0962L3.61091 10.682C3.80617 10.4867 4.12276 10.4867 4.31802 10.682C4.51328 10.8772 4.51328 11.1938 4.31802 11.3891L2.90381 12.8033C2.70854 12.9986 2.39196 12.9986 2.1967 12.8033ZM12.5 7C12.2239 7 12 7.22386 12 7.5C12 7.77614 12.2239 8 12.5 8H14.5C14.7761 8 15 7.77614 15 7.5C15 7.22386 14.7761 7 14.5 7H12.5ZM10.682 4.31802C10.4867 4.12276 10.4867 3.80617 10.682 3.61091L12.0962 2.1967C12.2915 2.00144 12.608 2.00144 12.8033 2.1967C12.9986 2.39196 12.9986 2.70854 12.8033 2.90381L11.3891 4.31802C11.1938 4.51328 10.8772 4.51328 10.682 4.31802ZM8 12.5C8 12.2239 7.77614 12 7.5 12C7.22386 12 7 12.2239 7 12.5V14.5C7 14.7761 7.22386 15 7.5 15C7.77614 15 8 14.7761 8 14.5V12.5ZM10.682 10.682C10.8772 10.4867 11.1938 10.4867 11.3891 10.682L12.8033 12.0962C12.9986 12.2915 12.9986 12.608 12.8033 12.8033C12.608 12.9986 12.2915 12.9986 12.0962 12.8033L10.682 11.3891C10.4867 11.1938 10.4867 10.8772 10.682 10.682ZM5.5 7.5C5.5 6.39543 6.39543 5.5 7.5 5.5C8.60457 5.5 9.5 6.39543 9.5 7.5C9.5 8.60457 8.60457 9.5 7.5 9.5C6.39543 9.5 5.5 8.60457 5.5 7.5ZM7.5 4.5C5.84315 4.5 4.5 5.84315 4.5 7.5C4.5 9.15685 5.84315 10.5 7.5 10.5C9.15685 10.5 10.5 9.15685 10.5 7.5C10.5 5.84315 9.15685 4.5 7.5 4.5Z", fill: "currentColor", fillRule: "evenodd", clipRule: "evenodd" })) : e.createElement("svg", { width: "15", height: "15", viewBox: "0 0 15 15", fill: "none", xmlns: "http://www.w3.org/2000/svg", style: { margin: "0 -1px" } }, e.createElement("path", { d: "M2.89998 0.499976C2.89998 0.279062 2.72089 0.0999756 2.49998 0.0999756C2.27906 0.0999756 2.09998 0.279062 2.09998 0.499976V1.09998H1.49998C1.27906 1.09998 1.09998 1.27906 1.09998 1.49998C1.09998 1.72089 1.27906 1.89998 1.49998 1.89998H2.09998V2.49998C2.09998 2.72089 2.27906 2.89998 2.49998 2.89998C2.72089 2.89998 2.89998 2.72089 2.89998 2.49998V1.89998H3.49998C3.72089 1.89998 3.89998 1.72089 3.89998 1.49998C3.89998 1.27906 3.72089 1.09998 3.49998 1.09998H2.89998V0.499976ZM5.89998 3.49998C5.89998 3.27906 5.72089 3.09998 5.49998 3.09998C5.27906 3.09998 5.09998 3.27906 5.09998 3.49998V4.09998H4.49998C4.27906 4.09998 4.09998 4.27906 4.09998 4.49998C4.09998 4.72089 4.27906 4.89998 4.49998 4.89998H5.09998V5.49998C5.09998 5.72089 5.27906 5.89998 5.49998 5.89998C5.72089 5.89998 5.89998 5.72089 5.89998 5.49998V4.89998H6.49998C6.72089 4.89998 6.89998 4.72089 6.89998 4.49998C6.89998 4.27906 6.72089 4.09998 6.49998 4.09998H5.89998V3.49998ZM1.89998 6.49998C1.89998 6.27906 1.72089 6.09998 1.49998 6.09998C1.27906 6.09998 1.09998 6.27906 1.09998 6.49998V7.09998H0.499976C0.279062 7.09998 0.0999756 7.27906 0.0999756 7.49998C0.0999756 7.72089 0.279062 7.89998 0.499976 7.89998H1.09998V8.49998C1.09998 8.72089 1.27906 8.89997 1.49998 8.89997C1.72089 8.89997 1.89998 8.72089 1.89998 8.49998V7.89998H2.49998C2.72089 7.89998 2.89998 7.72089 2.89998 7.49998C2.89998 7.27906 2.72089 7.09998 2.49998 7.09998H1.89998V6.49998ZM8.54406 0.98184L8.24618 0.941586C8.03275 0.917676 7.90692 1.1655 8.02936 1.34194C8.17013 1.54479 8.29981 1.75592 8.41754 1.97445C8.91878 2.90485 9.20322 3.96932 9.20322 5.10022C9.20322 8.37201 6.82247 11.0878 3.69887 11.6097C3.45736 11.65 3.20988 11.6772 2.96008 11.6906C2.74563 11.702 2.62729 11.9535 2.77721 12.1072C2.84551 12.1773 2.91535 12.2458 2.98667 12.3128L3.05883 12.3795L3.31883 12.6045L3.50684 12.7532L3.62796 12.8433L3.81491 12.9742L3.99079 13.089C4.11175 13.1651 4.23536 13.2375 4.36157 13.3059L4.62496 13.4412L4.88553 13.5607L5.18837 13.6828L5.43169 13.7686C5.56564 13.8128 5.70149 13.8529 5.83857 13.8885C5.94262 13.9155 6.04767 13.9401 6.15405 13.9622C6.27993 13.9883 6.40713 14.0109 6.53544 14.0298L6.85241 14.0685L7.11934 14.0892C7.24637 14.0965 7.37436 14.1002 7.50322 14.1002C11.1483 14.1002 14.1032 11.1453 14.1032 7.50023C14.1032 7.25044 14.0893 7.00389 14.0623 6.76131L14.0255 6.48407C13.991 6.26083 13.9453 6.04129 13.8891 5.82642C13.8213 5.56709 13.7382 5.31398 13.6409 5.06881L13.5279 4.80132L13.4507 4.63542L13.3766 4.48666C13.2178 4.17773 13.0353 3.88295 12.8312 3.60423L12.6782 3.40352L12.4793 3.16432L12.3157 2.98361L12.1961 2.85951L12.0355 2.70246L11.8134 2.50184L11.4925 2.24191L11.2483 2.06498L10.9562 1.87446L10.6346 1.68894L10.3073 1.52378L10.1938 1.47176L9.95488 1.3706L9.67791 1.2669L9.42566 1.1846L9.10075 1.09489L8.83599 1.03486L8.54406 0.98184ZM10.4032 5.30023C10.4032 4.27588 10.2002 3.29829 9.83244 2.40604C11.7623 3.28995 13.1032 5.23862 13.1032 7.50023C13.1032 10.593 10.596 13.1002 7.50322 13.1002C6.63646 13.1002 5.81597 12.9036 5.08355 12.5522C6.5419 12.0941 7.81081 11.2082 8.74322 10.0416C8.87963 10.2284 9.10028 10.3497 9.34928 10.3497C9.76349 10.3497 10.0993 10.0139 10.0993 9.59971C10.0993 9.24256 9.84965 8.94373 9.51535 8.86816C9.57741 8.75165 9.63653 8.63334 9.6926 8.51332C9.88358 8.63163 10.1088 8.69993 10.35 8.69993C11.0403 8.69993 11.6 8.14028 11.6 7.44993C11.6 6.75976 11.0406 6.20024 10.3505 6.19993C10.3853 5.90487 10.4032 5.60464 10.4032 5.30023Z", fill: "currentColor", fillRule: "evenodd", clipRule: "evenodd" })), e.createElement(o.Text, { size: "1", weight: "medium" }, C(t)))))), e.createElement(o.Text, { id: "radius-title", as: "p", size: "2", weight: "medium", mt: "5" }, "Radius"), e.createElement(o.Grid, { columns: "5", gap: "2", mt: "3", role: "group", "aria-labelledby": "radius-title" }, d.themePropDefs.radius.values.map((t) => e.createElement(o.Flex, { key: t, direction: "column", align: "center" }, e.createElement("label", { className: "rt-ThemePanelRadioCard" }, e.createElement("input", { className: "rt-ThemePanelRadioCardInput", type: "radio", name: "radius", id: `theme-panel-radius-${t}`, value: t, checked: T === t, onChange: (a) => D(a.target.value) }), e.createElement(h.Theme, { asChild: true, radius: t }, e.createElement(o.Box, { m: "3", width: "32px", height: "32px", style: { borderTopLeftRadius: t === "full" ? "80%" : "var(--radius-5)", backgroundImage: "linear-gradient(to bottom right, var(--accent-3), var(--accent-4))", borderTop: "2px solid var(--accent-a8)", borderLeft: "2px solid var(--accent-a8)" } }))), e.createElement(o.Box, { asChild: true, pt: "2" }, e.createElement(o.Text, { asChild: true, size: "1", color: "gray" }, e.createElement("label", { htmlFor: `theme-panel-radius-${t}` }, C(t))))))), e.createElement(o.Text, { id: "scaling-title", as: "p", size: "2", weight: "medium", mt: "5" }, "Scaling"), e.createElement(o.Grid, { columns: "5", gap: "2", mt: "3", role: "group", "aria-labelledby": "scaling-title" }, d.themePropDefs.scaling.values.map((t) => e.createElement("label", { key: t, className: "rt-ThemePanelRadioCard" }, e.createElement("input", { className: "rt-ThemePanelRadioCardInput", type: "radio", name: "scaling", value: t, checked: w === t, onChange: (a) => j(a.target.value) }), e.createElement(o.Flex, { align: "center", justify: "center", height: "32px" }, e.createElement(h.Theme, { asChild: true, scaling: t }, e.createElement(o.Flex, { align: "center", justify: "center" }, e.createElement(o.Text, { size: "1", weight: "medium" }, C(t)))))))), e.createElement(o.Flex, { mt: "5", align: "center", gap: "2" }, e.createElement(o.Text, { id: "panel-background-title", as: "p", size: "2", weight: "medium" }, "Panel background"), e.createElement(o.Popover.Root, null, e.createElement(o.Popover.Trigger, null, e.createElement(o.IconButton, { size: "1", variant: "ghost", color: "gray" }, e.createElement(o.AccessibleIcon, { label: "Learn more about panel background options" }, e.createElement("svg", { width: "15", height: "15", viewBox: "0 0 15 15", fill: "currentColor", xmlns: "http://www.w3.org/2000/svg" }, e.createElement("path", { d: "M7.49991 0.876892C3.84222 0.876892 0.877075 3.84204 0.877075 7.49972C0.877075 11.1574 3.84222 14.1226 7.49991 14.1226C11.1576 14.1226 14.1227 11.1574 14.1227 7.49972C14.1227 3.84204 11.1576 0.876892 7.49991 0.876892ZM1.82707 7.49972C1.82707 4.36671 4.36689 1.82689 7.49991 1.82689C10.6329 1.82689 13.1727 4.36671 13.1727 7.49972C13.1727 10.6327 10.6329 13.1726 7.49991 13.1726C4.36689 13.1726 1.82707 10.6327 1.82707 7.49972ZM8.24992 4.49999C8.24992 4.9142 7.91413 5.24999 7.49992 5.24999C7.08571 5.24999 6.74992 4.9142 6.74992 4.49999C6.74992 4.08577 7.08571 3.74999 7.49992 3.74999C7.91413 3.74999 8.24992 4.08577 8.24992 4.49999ZM6.00003 5.99999H6.50003H7.50003C7.77618 5.99999 8.00003 6.22384 8.00003 6.49999V9.99999H8.50003H9.00003V11H8.50003H7.50003H6.50003H6.00003V9.99999H6.50003H7.00003V6.99999H6.50003H6.00003V5.99999Z", fillRule: "evenodd", clipRule: "evenodd" }))))), e.createElement(o.Popover.Content, { size: "1", style: { maxWidth: 220 }, side: "top", align: "center" }, e.createElement(o.Text, { as: "p", size: "2" }, "Whether Card and Table panels are translucent, showing some of the background behind them.")))), e.createElement(o.Grid, { columns: "2", gap: "2", mt: "3", role: "group", "aria-labelledby": "panel-background-title" }, d.themePropDefs.panelBackground.values.map((t) => e.createElement("label", { key: t, className: "rt-ThemePanelRadioCard" }, e.createElement("input", { className: "rt-ThemePanelRadioCardInput", type: "radio", name: "panelBackground", value: t, checked: L === t, onChange: (a) => O(a.target.value) }), e.createElement(o.Flex, { align: "center", justify: "center", height: "32px", gap: "2" }, t === "solid" ? e.createElement("svg", { width: "15", height: "15", viewBox: "0 0 15 15", fill: "none", xmlns: "http://www.w3.org/2000/svg", style: { margin: "0 -2px" } }, e.createElement("path", { d: "M0.877075 7.49988C0.877075 3.84219 3.84222 0.877045 7.49991 0.877045C11.1576 0.877045 14.1227 3.84219 14.1227 7.49988C14.1227 11.1575 11.1576 14.1227 7.49991 14.1227C3.84222 14.1227 0.877075 11.1575 0.877075 7.49988ZM7.49991 1.82704C4.36689 1.82704 1.82708 4.36686 1.82708 7.49988C1.82708 10.6329 4.36689 13.1727 7.49991 13.1727C10.6329 13.1727 13.1727 10.6329 13.1727 7.49988C13.1727 4.36686 10.6329 1.82704 7.49991 1.82704Z", fill: "currentColor", fillRule: "evenodd", clipRule: "evenodd" })) : e.createElement("svg", { width: "15", height: "15", viewBox: "0 0 15 15", fill: "none", xmlns: "http://www.w3.org/2000/svg", style: { margin: "0 -2px" } }, e.createElement("path", { opacity: ".05", d: "M6.78296 13.376C8.73904 9.95284 8.73904 5.04719 6.78296 1.62405L7.21708 1.37598C9.261 4.95283 9.261 10.0472 7.21708 13.624L6.78296 13.376Z", fill: "currentColor", fillRule: "evenodd", clipRule: "evenodd" }), e.createElement("path", { opacity: ".1", d: "M7.28204 13.4775C9.23929 9.99523 9.23929 5.00475 7.28204 1.52248L7.71791 1.2775C9.76067 4.9119 9.76067 10.0881 7.71791 13.7225L7.28204 13.4775Z", fill: "currentColor", fillRule: "evenodd", clipRule: "evenodd" }), e.createElement("path", { opacity: ".15", d: "M7.82098 13.5064C9.72502 9.99523 9.72636 5.01411 7.82492 1.50084L8.26465 1.26285C10.2465 4.92466 10.2451 10.085 8.26052 13.7448L7.82098 13.5064Z", fill: "currentColor", fillRule: "evenodd", clipRule: "evenodd" }), e.createElement("path", { opacity: ".2", d: "M8.41284 13.429C10.1952 9.92842 10.1957 5.07537 8.41435 1.57402L8.85999 1.34729C10.7139 4.99113 10.7133 10.0128 8.85841 13.6559L8.41284 13.429Z", fill: "currentColor", fillRule: "evenodd", clipRule: "evenodd" }), e.createElement("path", { opacity: ".25", d: "M9.02441 13.2956C10.6567 9.8379 10.6586 5.17715 9.03005 1.71656L9.48245 1.50366C11.1745 5.09919 11.1726 9.91629 9.47657 13.5091L9.02441 13.2956Z", fill: "currentColor", fillRule: "evenodd", clipRule: "evenodd" }), e.createElement("path", { opacity: ".3", d: "M9.66809 13.0655C11.1097 9.69572 11.1107 5.3121 9.67088 1.94095L10.1307 1.74457C11.6241 5.24121 11.6231 9.76683 10.1278 13.2622L9.66809 13.0655Z", fill: "currentColor", fillRule: "evenodd", clipRule: "evenodd" }), e.createElement("path", { opacity: ".35", d: "M10.331 12.7456C11.5551 9.52073 11.5564 5.49103 10.3347 2.26444L10.8024 2.0874C12.0672 5.42815 12.0659 9.58394 10.7985 12.9231L10.331 12.7456Z", fill: "currentColor", fillRule: "evenodd", clipRule: "evenodd" }), e.createElement("path", { opacity: ".4", d: "M11.0155 12.2986C11.9938 9.29744 11.9948 5.71296 11.0184 2.71067L11.4939 2.55603C12.503 5.6589 12.502 9.35178 11.4909 12.4535L11.0155 12.2986Z", fill: "currentColor", fillRule: "evenodd", clipRule: "evenodd" }), e.createElement("path", { opacity: ".45", d: "M11.7214 11.668C12.4254 9.01303 12.4262 5.99691 11.7237 3.34116L12.2071 3.21329C12.9318 5.95292 12.931 9.05728 12.2047 11.7961L11.7214 11.668Z", fill: "currentColor", fillRule: "evenodd", clipRule: "evenodd" }), e.createElement("path", { opacity: ".5", d: "M12.4432 10.752C12.8524 8.63762 12.8523 6.36089 12.4429 4.2466L12.9338 4.15155C13.3553 6.32861 13.3554 8.66985 12.9341 10.847L12.4432 10.752Z", fill: "currentColor", fillRule: "evenodd", clipRule: "evenodd" }), e.createElement("path", { d: "M0.877075 7.49988C0.877075 3.84219 3.84222 0.877045 7.49991 0.877045C11.1576 0.877045 14.1227 3.84219 14.1227 7.49988C14.1227 11.1575 11.1576 14.1227 7.49991 14.1227C3.84222 14.1227 0.877075 11.1575 0.877075 7.49988ZM7.49991 1.82704C4.36689 1.82704 1.82708 4.36686 1.82708 7.49988C1.82708 10.6329 4.36689 13.1727 7.49991 13.1727C10.6329 13.1727 13.1727 10.6329 13.1727 7.49988C13.1727 4.36686 10.6329 1.82704 7.49991 1.82704Z", fill: "currentColor", fillRule: "evenodd", clipRule: "evenodd" })), e.createElement(o.Text, { size: "1", weight: "medium" }, C(t)))))), e.createElement(o.Button, { mt: "5", style: { width: "100%" }, onClick: U }, W === "copied" ? "Copied" : "Copy Theme")))));
    });
    K.displayName = "ThemePanelImpl";
    function o9() {
      const n = document.createElement("style");
      return n.appendChild(document.createTextNode("*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}")), document.head.appendChild(n), () => {
        window.getComputedStyle(document.body), setTimeout(() => {
          document.head.removeChild(n);
        }, 1);
      };
    }
    function C(n) {
      return n.charAt(0).toUpperCase() + n.slice(1);
    }
    function n9(n) {
      const l = document.documentElement, i = l.classList.contains("light-theme"), p = l.classList.contains("dark-theme"), r = l.classList.contains("light"), y = l.classList.contains("dark");
      (i || p) && (l.classList.remove("light-theme", "dark-theme"), l.style.colorScheme = n, l.classList.add(`${n}-theme`)), (r || y) && (l.classList.remove("light", "dark"), l.style.colorScheme = n, l.classList.add(n)), !i && !p && !r && !y && (l.style.colorScheme = n, l.classList.add(n));
    }
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/tooltip.props.js
var require_tooltip_props = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/tooltip.props.js"(exports, module) {
    "use strict";
    var i = Object.defineProperty;
    var d = Object.getOwnPropertyDescriptor;
    var n = Object.getOwnPropertyNames;
    var P = Object.prototype.hasOwnProperty;
    var h = (e, t) => {
      for (var p in t) i(e, p, { get: t[p], enumerable: true });
    };
    var D = (e, t, p, f) => {
      if (t && typeof t == "object" || typeof t == "function") for (let o of n(t)) !P.call(e, o) && o !== p && i(e, o, { get: () => t[o], enumerable: !(f = d(t, o)) || f.enumerable });
      return e;
    };
    var m = (e) => D(i({}, "__esModule", { value: true }), e);
    var a = {};
    h(a, { tooltipPropDefs: () => s });
    module.exports = m(a);
    var r = require_width_props();
    var s = { content: { type: "ReactNode", required: true }, width: r.widthPropDefs.width, minWidth: r.widthPropDefs.minWidth, maxWidth: { ...r.widthPropDefs.maxWidth, default: "360px" } };
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/tooltip.js
var require_tooltip = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/tooltip.js"(exports, module) {
    "use strict";
    var w = Object.create;
    var s = Object.defineProperty;
    var D = Object.getOwnPropertyDescriptor;
    var O = Object.getOwnPropertyNames;
    var W = Object.getPrototypeOf;
    var E = Object.prototype.hasOwnProperty;
    var b = (o, t) => {
      for (var e in t) s(o, e, { get: t[e], enumerable: true });
    };
    var a = (o, t, e, n) => {
      if (t && typeof t == "object" || typeof t == "function") for (let p of O(t)) !E.call(o, p) && p !== e && s(o, p, { get: () => t[p], enumerable: !(n = D(t, p)) || n.enumerable });
      return o;
    };
    var l = (o, t, e) => (e = o != null ? w(W(o)) : {}, a(t || !o || !o.__esModule ? s(e, "default", { value: o, enumerable: true }) : e, o));
    var j = (o) => a(s({}, "__esModule", { value: true }), o);
    var A = {};
    b(A, { Tooltip: () => m });
    module.exports = j(A);
    var i = l(require_react());
    var f = l(require_classnames());
    var r = l(require_dist23());
    var P = require_text();
    var T = require_theme();
    var c = require_extract_props();
    var d = require_tooltip_props();
    var m = i.forwardRef((o, t) => {
      const { children: e, className: n, open: p, defaultOpen: C, onOpenChange: y, delayDuration: h, disableHoverableContent: v, content: u, container: R, forceMount: x, ...N } = (0, c.extractProps)(o, d.tooltipPropDefs), g = { open: p, defaultOpen: C, onOpenChange: y, delayDuration: h, disableHoverableContent: v };
      return i.createElement(r.Root, { ...g }, i.createElement(r.Trigger, { asChild: true }, e), i.createElement(r.Portal, { container: R, forceMount: x }, i.createElement(T.Theme, { asChild: true }, i.createElement(r.Content, { sideOffset: 4, collisionPadding: 10, ...N, asChild: false, ref: t, className: (0, f.default)("rt-TooltipContent", n) }, i.createElement(P.Text, { as: "p", className: "rt-TooltipText", size: "1" }, u), i.createElement(r.Arrow, { className: "rt-TooltipArrow" })))));
    });
    m.displayName = "Tooltip";
  }
});

// node_modules/@radix-ui/themes/dist/cjs/components/index.js
var require_components = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/components/index.js"(exports, module) {
    "use strict";
    var l = Object.create;
    var a = Object.defineProperty;
    var d = Object.getOwnPropertyDescriptor;
    var C = Object.getOwnPropertyNames;
    var i = Object.getPrototypeOf;
    var n = Object.prototype.hasOwnProperty;
    var b = (t, p) => {
      for (var x in p) a(t, x, { get: p[x], enumerable: true });
    };
    var f = (t, p, x, s) => {
      if (p && typeof p == "object" || typeof p == "function") for (let m of C(p)) !n.call(t, m) && m !== x && a(t, m, { get: () => p[m], enumerable: !(s = d(p, m)) || s.enumerable });
      return t;
    };
    var r = (t, p, x) => (f(t, p, "default"), x && f(x, p, "default"));
    var e = (t, p, x) => (x = t != null ? l(i(t)) : {}, f(p || !t || !t.__esModule ? a(x, "default", { value: t, enumerable: true }) : x, t));
    var u = (t) => f(a({}, "__esModule", { value: true }), t);
    var o = {};
    b(o, { AlertDialog: () => D, Callout: () => T, CheckboxCards: () => c, CheckboxGroup: () => g, ContextMenu: () => v, DataList: () => h, Dialog: () => k, DropdownMenu: () => G, HoverCard: () => M, Popover: () => R, RadioCards: () => S, RadioGroup: () => w, SegmentedControl: () => A, Select: () => F, TabNav: () => H, Table: () => L, Tabs: () => N, TextField: () => P });
    module.exports = u(o);
    r(o, require_accessible_icon(), module.exports);
    var D = e(require_alert_dialog());
    r(o, require_aspect_ratio(), module.exports);
    r(o, require_avatar(), module.exports);
    r(o, require_badge(), module.exports);
    r(o, require_blockquote(), module.exports);
    r(o, require_box(), module.exports);
    r(o, require_button(), module.exports);
    var T = e(require_callout());
    r(o, require_card(), module.exports);
    var c = e(require_checkbox_cards());
    var g = e(require_checkbox_group());
    r(o, require_checkbox(), module.exports);
    r(o, require_code(), module.exports);
    r(o, require_container(), module.exports);
    var v = e(require_context_menu());
    var h = e(require_data_list());
    var k = e(require_dialog());
    var G = e(require_dropdown_menu());
    r(o, require_em(), module.exports);
    r(o, require_flex(), module.exports);
    r(o, require_grid(), module.exports);
    r(o, require_heading(), module.exports);
    var M = e(require_hover_card());
    r(o, require_icon_button(), module.exports);
    r(o, require_icons(), module.exports);
    r(o, require_inset(), module.exports);
    r(o, require_kbd(), module.exports);
    r(o, require_link(), module.exports);
    var R = e(require_popover());
    r(o, require_portal(), module.exports);
    r(o, require_progress(), module.exports);
    r(o, require_quote(), module.exports);
    var S = e(require_radio_cards());
    var w = e(require_radio_group());
    r(o, require_radio(), module.exports);
    r(o, require_reset(), module.exports);
    r(o, require_scroll_area(), module.exports);
    var A = e(require_segmented_control());
    r(o, require_section(), module.exports);
    var F = e(require_select());
    r(o, require_separator(), module.exports);
    r(o, require_skeleton(), module.exports);
    r(o, require_slider(), module.exports);
    r(o, require_slot(), module.exports);
    r(o, require_spinner(), module.exports);
    r(o, require_strong(), module.exports);
    r(o, require_switch(), module.exports);
    var H = e(require_tab_nav());
    var L = e(require_table());
    var N = e(require_tabs());
    r(o, require_text_area(), module.exports);
    var P = e(require_text_field());
    r(o, require_text(), module.exports);
    r(o, require_theme_panel(), module.exports);
    r(o, require_theme(), module.exports);
    r(o, require_tooltip(), module.exports);
    r(o, require_visually_hidden(), module.exports);
  }
});

// node_modules/@radix-ui/themes/dist/cjs/index.js
var require_cjs = __commonJS({
  "node_modules/@radix-ui/themes/dist/cjs/index.js"(exports, module) {
    var a = Object.defineProperty;
    var b = Object.getOwnPropertyDescriptor;
    var c = Object.getOwnPropertyNames;
    var d = Object.prototype.hasOwnProperty;
    var p = (r, o, f, x) => {
      if (o && typeof o == "object" || typeof o == "function") for (let e of c(o)) !d.call(r, e) && e !== f && a(r, e, { get: () => o[e], enumerable: !(x = b(o, e)) || x.enumerable });
      return r;
    };
    var t = (r, o, f) => (p(r, o, "default"), f && p(f, o, "default"));
    var g = (r) => p(a({}, "__esModule", { value: true }), r);
    var m = {};
    module.exports = g(m);
    t(m, require_components(), module.exports);
  }
});
export default require_cjs();
//# sourceMappingURL=@radix-ui_themes_dist_cjs_index__js.js.map
