{
  "version": 3,
  "sources": ["../../@radix-ui/react-compose-refs/src/index.ts", "../../@radix-ui/react-compose-refs/src/composeRefs.tsx", "../../@radix-ui/react-slot/src/index.ts", "../../@radix-ui/react-slot/src/Slot.tsx", "../../@radix-ui/react-primitive/src/index.ts", "../../@radix-ui/react-primitive/src/Primitive.tsx", "../../@radix-ui/react-visually-hidden/src/index.ts", "../../@radix-ui/react-visually-hidden/src/VisuallyHidden.tsx", "../../@radix-ui/react-accessible-icon/src/index.ts", "../../@radix-ui/react-accessible-icon/src/AccessibleIcon.tsx", "../../@radix-ui/themes/src/components/accessible-icon.tsx", "../../@radix-ui/react-context/src/index.ts", "../../@radix-ui/react-context/src/createContext.tsx", "../../@radix-ui/primitive/src/index.ts", "../../@radix-ui/primitive/src/primitive.tsx", "../../@radix-ui/react-use-layout-effect/src/index.ts", "../../@radix-ui/react-use-layout-effect/src/useLayoutEffect.tsx", "../../@radix-ui/react-id/src/index.ts", "../../@radix-ui/react-id/src/id.tsx", "../../@radix-ui/react-use-callback-ref/src/index.ts", "../../@radix-ui/react-use-callback-ref/src/useCallbackRef.tsx", "../../@radix-ui/react-use-controllable-state/src/index.ts", "../../@radix-ui/react-use-controllable-state/src/useControllableState.tsx", "../../@radix-ui/react-use-escape-keydown/src/index.ts", "../../@radix-ui/react-use-escape-keydown/src/useEscapeKeydown.tsx", "../../@radix-ui/react-dismissable-layer/src/index.ts", "../../@radix-ui/react-dismissable-layer/src/DismissableLayer.tsx", "../../@radix-ui/react-focus-scope/src/index.ts", "../../@radix-ui/react-focus-scope/src/FocusScope.tsx", "../../@radix-ui/react-portal/src/index.ts", "../../@radix-ui/react-portal/src/Portal.tsx", "../../@radix-ui/react-presence/src/index.ts", "../../@radix-ui/react-presence/src/Presence.tsx", "../../@radix-ui/react-presence/src/useStateMachine.tsx", "../../@radix-ui/react-focus-guards/src/index.ts", "../../@radix-ui/react-focus-guards/src/FocusGuards.tsx", "../../@radix-ui/react-dialog/src/index.ts", "../../@radix-ui/react-dialog/src/Dialog.tsx", "../../@radix-ui/react-alert-dialog/src/index.ts", "../../@radix-ui/react-alert-dialog/src/AlertDialog.tsx", "../../@radix-ui/themes/src/props/as-child.prop.ts", "../../@radix-ui/themes/src/props/width.props.ts", "../../@radix-ui/themes/src/props/height.props.ts", "../../@radix-ui/themes/src/components/dialog.props.ts", "../../@radix-ui/themes/src/components/alert-dialog.props.ts", "../../@radix-ui/themes/src/props/color.prop.ts", "../../@radix-ui/themes/src/props/high-contrast.prop.ts", "../../@radix-ui/themes/src/props/leading-trim.prop.ts", "../../@radix-ui/themes/src/props/text-align.prop.ts", "../../@radix-ui/themes/src/props/text-wrap.prop.ts", "../../@radix-ui/themes/src/props/truncate.prop.ts", "../../@radix-ui/themes/src/props/weight.prop.ts", "../../@radix-ui/themes/src/components/heading.props.ts", "../../@radix-ui/themes/src/props/prop-def.ts", "../../@radix-ui/themes/src/helpers/has-own-property.ts", "../../@radix-ui/themes/src/helpers/is-responsive-object.ts", "../../@radix-ui/themes/src/helpers/get-responsive-styles.ts", "../../@radix-ui/themes/src/helpers/merge-styles.ts", "../../@radix-ui/themes/src/helpers/extract-props.ts", "../../@radix-ui/themes/src/props/margin.props.ts", "../../@radix-ui/themes/src/components/heading.tsx", "../../@radix-ui/themes/src/components/text.props.ts", "../../@radix-ui/themes/src/components/text.tsx", "../../@floating-ui/react-dom/dist/floating-ui.react-dom.esm.js", "../../@radix-ui/react-arrow/src/index.ts", "../../@radix-ui/react-arrow/src/Arrow.tsx", "../../@radix-ui/react-use-size/src/index.ts", "../../@radix-ui/react-use-size/src/useSize.tsx", "../../@radix-ui/react-popper/src/index.ts", "../../@radix-ui/react-popper/src/Popper.tsx", "../../@radix-ui/react-tooltip/src/index.ts", "../../@radix-ui/react-tooltip/src/Tooltip.tsx", "../../@radix-ui/react-direction/src/index.ts", "../../@radix-ui/react-direction/src/Direction.tsx", "../../@radix-ui/themes/src/helpers/get-matching-gray-color.ts", "../../@radix-ui/themes/src/props/radius.prop.ts", "../../@radix-ui/themes/src/components/theme.props.ts", "../../@radix-ui/themes/src/components/theme.tsx", "../../@radix-ui/themes/src/helpers/require-react-element.ts", "../../@radix-ui/themes/src/components/alert-dialog.tsx", "../../@radix-ui/react-aspect-ratio/src/index.ts", "../../@radix-ui/react-aspect-ratio/src/AspectRatio.tsx", "../../@radix-ui/themes/src/components/aspect-ratio.tsx", "../../@radix-ui/react-avatar/src/index.ts", "../../@radix-ui/react-avatar/src/Avatar.tsx", "../../@radix-ui/themes/src/components/avatar.props.ts", "../../@radix-ui/themes/src/helpers/get-subtree.ts", "../../@radix-ui/themes/src/components/avatar.tsx", "../../@radix-ui/themes/src/components/badge.props.ts", "../../@radix-ui/themes/src/components/badge.tsx", "../../@radix-ui/themes/src/components/blockquote.props.ts", "../../@radix-ui/themes/src/components/blockquote.tsx", "../../@radix-ui/themes/src/components/slot.tsx", "../../@radix-ui/themes/src/components/box.props.ts", "../../@radix-ui/themes/src/props/padding.props.ts", "../../@radix-ui/themes/src/props/layout.props.ts", "../../@radix-ui/themes/src/components/box.tsx", "../../@radix-ui/themes/src/components/base-button.props.ts", "../../@radix-ui/themes/src/props/gap.props.ts", "../../@radix-ui/themes/src/components/flex.props.ts", "../../@radix-ui/themes/src/components/flex.tsx", "../../@radix-ui/themes/src/components/spinner.props.ts", "../../@radix-ui/themes/src/helpers/inert.ts", "../../@radix-ui/themes/src/components/spinner.tsx", "../../@radix-ui/themes/src/components/visually-hidden.tsx", "../../@radix-ui/themes/src/components/callout.props.ts", "../../@radix-ui/themes/src/helpers/map-prop-values.ts", "../../@radix-ui/themes/src/components/base-button.tsx", "../../@radix-ui/themes/src/components/button.tsx", "../../@radix-ui/themes/src/components/callout.tsx", "../../@radix-ui/themes/src/components/card.props.ts", "../../@radix-ui/themes/src/components/card.tsx", "../../@radix-ui/react-use-previous/src/index.ts", "../../@radix-ui/react-use-previous/src/usePrevious.tsx", "../../@radix-ui/react-checkbox/src/index.ts", "../../@radix-ui/react-checkbox/src/Checkbox.tsx", "../../@radix-ui/react-collection/src/index.ts", "../../@radix-ui/react-collection/src/Collection.tsx", "../../@radix-ui/react-roving-focus/src/index.ts", "../../@radix-ui/react-roving-focus/src/RovingFocusGroup.tsx", "../../@radix-ui/themes/src/components/checkbox-group.primitive.tsx", "../../@radix-ui/themes/src/components/grid.props.ts", "../../@radix-ui/themes/src/components/checkbox-cards.props.ts", "../../@radix-ui/themes/src/components/base-checkbox.props.ts", "../../@radix-ui/themes/src/components/grid.tsx", "../../@radix-ui/themes/src/components/icons.tsx", "../../@radix-ui/themes/src/components/checkbox-cards.tsx", "../../@radix-ui/themes/src/components/checkbox-group.props.ts", "../../@radix-ui/themes/src/components/checkbox-group.tsx", "../../@radix-ui/themes/src/components/checkbox.props.ts", "../../@radix-ui/themes/src/components/checkbox.tsx", "../../@radix-ui/themes/src/components/code.props.ts", "../../@radix-ui/themes/src/components/code.tsx", "../../@radix-ui/themes/src/components/container.props.ts", "../../@radix-ui/themes/src/components/container.tsx", "../../@radix-ui/react-menu/src/index.ts", "../../@radix-ui/react-menu/src/Menu.tsx", "../../@radix-ui/react-context-menu/src/index.ts", "../../@radix-ui/react-context-menu/src/ContextMenu.tsx", "../../@radix-ui/number/src/index.ts", "../../@radix-ui/number/src/number.ts", "../../@radix-ui/react-scroll-area/src/index.ts", "../../@radix-ui/react-scroll-area/src/ScrollArea.tsx", "../../@radix-ui/react-scroll-area/src/useStateMachine.ts", "../../@radix-ui/themes/src/components/scroll-area.props.ts", "../../@radix-ui/themes/src/helpers/extract-margin-props.ts", "../../@radix-ui/themes/src/helpers/get-margin-styles.ts", "../../@radix-ui/themes/src/components/scroll-area.tsx", "../../@radix-ui/themes/src/components/base-menu.props.ts", "../../@radix-ui/themes/src/components/context-menu.props.ts", "../../@radix-ui/themes/src/components/context-menu.tsx", "../../@radix-ui/themes/src/components/data-list.props.ts", "../../@radix-ui/themes/src/components/data-list.tsx", "../../@radix-ui/themes/src/components/dialog.tsx", "../../@radix-ui/react-dropdown-menu/src/index.ts", "../../@radix-ui/react-dropdown-menu/src/DropdownMenu.tsx", "../../@radix-ui/themes/src/components/dropdown-menu.props.ts", "../../@radix-ui/themes/src/components/dropdown-menu.tsx", "../../@radix-ui/themes/src/components/em.props.ts", "../../@radix-ui/themes/src/components/em.tsx", "../../@radix-ui/react-hover-card/src/index.ts", "../../@radix-ui/react-hover-card/src/HoverCard.tsx", "../../@radix-ui/themes/src/components/hover-card.props.ts", "../../@radix-ui/themes/src/components/hover-card.tsx", "../../@radix-ui/themes/src/components/icon-button.tsx", "../../@radix-ui/themes/src/components/inset.props.ts", "../../@radix-ui/themes/src/components/inset.tsx", "../../@radix-ui/themes/src/components/kbd.props.ts", "../../@radix-ui/themes/src/components/kbd.tsx", "../../@radix-ui/themes/src/components/link.props.ts", "../../@radix-ui/themes/src/components/link.tsx", "../../@radix-ui/react-popover/src/index.ts", "../../@radix-ui/react-popover/src/Popover.tsx", "../../@radix-ui/themes/src/components/popover.props.ts", "../../@radix-ui/themes/src/components/popover.tsx", "../../@radix-ui/themes/src/components/portal.tsx", "../../@radix-ui/react-progress/src/index.ts", "../../@radix-ui/react-progress/src/Progress.tsx", "../../@radix-ui/themes/src/components/progress.props.ts", "../../@radix-ui/themes/src/components/progress.tsx", "../../@radix-ui/themes/src/components/quote.props.ts", "../../@radix-ui/themes/src/components/quote.tsx", "../../@radix-ui/react-radio-group/src/index.ts", "../../@radix-ui/react-radio-group/src/RadioGroup.tsx", "../../@radix-ui/react-radio-group/src/Radio.tsx", "../../@radix-ui/themes/src/components/radio-cards.props.ts", "../../@radix-ui/themes/src/components/radio-cards.tsx", "../../@radix-ui/themes/src/components/radio-group.props.ts", "../../@radix-ui/themes/src/components/radio-group.tsx", "../../@radix-ui/themes/src/components/base-radio.props.ts", "../../@radix-ui/themes/src/components/radio.props.ts", "../../@radix-ui/themes/src/components/radio.tsx", "../../@radix-ui/themes/src/components/reset.tsx", "../../@radix-ui/react-toggle/src/index.ts", "../../@radix-ui/react-toggle/src/Toggle.tsx", "../../@radix-ui/react-toggle-group/src/index.ts", "../../@radix-ui/react-toggle-group/src/ToggleGroup.tsx", "../../@radix-ui/themes/src/components/segmented-control.props.ts", "../../@radix-ui/themes/src/components/segmented-control.tsx", "../../@radix-ui/themes/src/components/section.props.ts", "../../@radix-ui/themes/src/components/section.tsx", "../../@radix-ui/react-select/src/index.ts", "../../@radix-ui/react-select/src/Select.tsx", "../../@radix-ui/themes/src/components/select.props.ts", "../../@radix-ui/themes/src/components/select.tsx", "../../@radix-ui/themes/src/components/separator.props.ts", "../../@radix-ui/themes/src/components/separator.tsx", "../../@radix-ui/themes/src/components/skeleton.props.ts", "../../@radix-ui/themes/src/components/skeleton.tsx", "../../@radix-ui/react-slider/src/index.ts", "../../@radix-ui/react-slider/src/Slider.tsx", "../../@radix-ui/themes/src/components/slider.props.ts", "../../@radix-ui/themes/src/components/slider.tsx", "../../@radix-ui/themes/src/components/strong.props.ts", "../../@radix-ui/themes/src/components/strong.tsx", "../../@radix-ui/react-switch/src/index.ts", "../../@radix-ui/react-switch/src/Switch.tsx", "../../@radix-ui/themes/src/components/switch.props.ts", "../../@radix-ui/themes/src/components/switch.tsx", "../../@radix-ui/react-navigation-menu/src/index.ts", "../../@radix-ui/react-navigation-menu/src/NavigationMenu.tsx", "../../@radix-ui/themes/src/components/base-tab-list.props.ts", "../../@radix-ui/themes/src/components/tab-nav.props.ts", "../../@radix-ui/themes/src/components/tab-nav.tsx", "../../@radix-ui/themes/src/components/table.props.ts", "../../@radix-ui/themes/src/components/table.tsx", "../../@radix-ui/react-tabs/src/index.ts", "../../@radix-ui/react-tabs/src/Tabs.tsx", "../../@radix-ui/themes/src/components/tabs.props.ts", "../../@radix-ui/themes/src/components/tabs.tsx", "../../@radix-ui/themes/src/components/text-area.props.ts", "../../@radix-ui/themes/src/components/text-area.tsx", "../../@radix-ui/themes/src/components/text-field.props.ts", "../../@radix-ui/themes/src/components/text-field.tsx", "../../@radix-ui/themes/src/components/theme-panel.tsx", "../../@radix-ui/themes/src/components/tooltip.props.ts", "../../@radix-ui/themes/src/components/tooltip.tsx", "../../@radix-ui/themes/src/components/index.ts", "../../@radix-ui/themes/src/index.ts"],
  "sourcesContent": ["export { composeRefs, useComposedRefs } from './composeRefs';\n", "import * as React from 'react';\n\ntype PossibleRef<T> = React.Ref<T> | undefined;\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref !== null && ref !== undefined) {\n    (ref as React.MutableRefObject<T>).current = value;\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs<T>(...refs: PossibleRef<T>[]) {\n  return (node: T) => refs.forEach((ref) => setRef(ref, node));\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs<T>(...refs: PossibleRef<T>[]) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { composeRefs, useComposedRefs };\n", "export {\n  Slot,\n  Slottable,\n  //\n  Root,\n} from './Slot';\nexport type { SlotProps } from './Slot';\n", "import * as React from 'react';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotProps extends React.HTMLAttributes<HTMLElement> {\n  children?: React.ReactNode;\n}\n\nconst Slot = React.forwardRef<HTMLElement, SlotProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  const childrenArray = React.Children.toArray(children);\n  const slottable = childrenArray.find(isSlottable);\n\n  if (slottable) {\n    // the new element to render is the one passed as a child of `Slottable`\n    const newElement = slottable.props.children as React.ReactNode;\n\n    const newChildren = childrenArray.map((child) => {\n      if (child === slottable) {\n        // because the new element will be the one rendered, we are only interested\n        // in grabbing its children (`newElement.props.children`)\n        if (React.Children.count(newElement) > 1) return React.Children.only(null);\n        return React.isValidElement(newElement)\n          ? (newElement.props.children as React.ReactNode)\n          : null;\n      } else {\n        return child;\n      }\n    });\n\n    return (\n      <SlotClone {...slotProps} ref={forwardedRef}>\n        {React.isValidElement(newElement)\n          ? React.cloneElement(newElement, undefined, newChildren)\n          : null}\n      </SlotClone>\n    );\n  }\n\n  return (\n    <SlotClone {...slotProps} ref={forwardedRef}>\n      {children}\n    </SlotClone>\n  );\n});\n\nSlot.displayName = 'Slot';\n\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotCloneProps {\n  children: React.ReactNode;\n}\n\nconst SlotClone = React.forwardRef<any, SlotCloneProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n\n  if (React.isValidElement(children)) {\n    const childrenRef = getElementRef(children);\n    return React.cloneElement(children, {\n      ...mergeProps(slotProps, children.props),\n      // @ts-ignore\n      ref: forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef,\n    });\n  }\n\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\n\nSlotClone.displayName = 'SlotClone';\n\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/\n\nconst Slottable = ({ children }: { children: React.ReactNode }) => {\n  return <>{children}</>;\n};\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype AnyProps = Record<string, any>;\n\nfunction isSlottable(child: React.ReactNode): child is React.ReactElement {\n  return React.isValidElement(child) && child.type === Slottable;\n}\n\nfunction mergeProps(slotProps: AnyProps, childProps: AnyProps) {\n  // all child props should override\n  const overrideProps = { ...childProps };\n\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      // if the handler exists on both, we compose them\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args: unknown[]) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      }\n      // but if it exists only on the slot, we use only this one\n      else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    }\n    // if it's `style`, we merge them\n    else if (propName === 'style') {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === 'className') {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ');\n    }\n  }\n\n  return { ...slotProps, ...overrideProps };\n}\n\n// Before React 19 accessing `element.props.ref` will throw a warning and suggest using `element.ref`\n// After React 19 accessing `element.ref` does the opposite.\n// https://github.com/facebook/react/pull/28348\n//\n// Access the ref using the method that doesn't yield a warning.\nfunction getElementRef(element: React.ReactElement) {\n  // React <=18 in DEV\n  let getter = Object.getOwnPropertyDescriptor(element.props, 'ref')?.get;\n  let mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return (element as any).ref;\n  }\n\n  // React 19 in DEV\n  getter = Object.getOwnPropertyDescriptor(element, 'ref')?.get;\n  mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n\n  // Not DEV\n  return element.props.ref || (element as any).ref;\n}\n\nconst Root = Slot;\n\nexport {\n  Slot,\n  Slottable,\n  //\n  Root,\n};\nexport type { SlotProps };\n", "export {\n  Primitive,\n  //\n  Root,\n  //\n  dispatchDiscreteCustomEvent,\n} from './Primitive';\nexport type { PrimitivePropsWithRef } from './Primitive';\n", "import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Slot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'form',\n  'h2',\n  'h3',\n  'img',\n  'input',\n  'label',\n  'li',\n  'nav',\n  'ol',\n  'p',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\ntype Primitives = { [E in (typeof NODES)[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce((primitive, node) => {\n  const Node = React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp: any = asChild ? Slot : node;\n\n    if (typeof window !== 'undefined') {\n      (window as any)[Symbol.for('radix-ui')] = true;\n    }\n\n    return <Comp {...primitiveProps} ref={forwardedRef} />;\n  });\n\n  Node.displayName = `Primitive.${node}`;\n\n  return { ...primitive, [node]: Node };\n}, {} as Primitives);\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Flush custom event dispatch\n * https://github.com/radix-ui/primitives/pull/1378\n *\n * React batches *all* event handlers since version 18, this introduces certain considerations when using custom event types.\n *\n * Internally, React prioritises events in the following order:\n *  - discrete\n *  - continuous\n *  - default\n *\n * https://github.com/facebook/react/blob/a8a4742f1c54493df00da648a3f9d26e3db9c8b5/packages/react-dom/src/events/ReactDOMEventListener.js#L294-L350\n *\n * `discrete` is an  important distinction as updates within these events are applied immediately.\n * React however, is not able to infer the priority of custom event types due to how they are detected internally.\n * Because of this, it's possible for updates from custom events to be unexpectedly batched when\n * dispatched by another `discrete` event.\n *\n * In order to ensure that updates from custom events are applied predictably, we need to manually flush the batch.\n * This utility should be used when dispatching a custom event from within another `discrete` event, this utility\n * is not nessesary when dispatching known event types, or if dispatching a custom type inside a non-discrete event.\n * For example:\n *\n * dispatching a known click \uD83D\uDC4E\n * target.dispatchEvent(new Event(\u2018click\u2019))\n *\n * dispatching a custom type within a non-discrete event \uD83D\uDC4E\n * onScroll={(event) => event.target.dispatchEvent(new CustomEvent(\u2018customType\u2019))}\n *\n * dispatching a custom type within a `discrete` event \uD83D\uDC4D\n * onPointerDown={(event) => dispatchDiscreteCustomEvent(event.target, new CustomEvent(\u2018customType\u2019))}\n *\n * Note: though React classifies `focus`, `focusin` and `focusout` events as `discrete`, it's  not recommended to use\n * this utility with them. This is because it's possible for those handlers to be called implicitly during render\n * e.g. when focus is within a component as it is unmounted, or when managing focus on mount.\n */\n\nfunction dispatchDiscreteCustomEvent<E extends CustomEvent>(target: E['target'], event: E) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n  //\n  dispatchDiscreteCustomEvent,\n};\nexport type { PrimitivePropsWithRef };\n", "export {\n  VisuallyHidden,\n  //\n  Root,\n} from './VisuallyHidden';\nexport type { VisuallyHiddenProps } from './VisuallyHidden';\n", "import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * VisuallyHidden\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'VisuallyHidden';\n\ntype VisuallyHiddenElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface VisuallyHiddenProps extends PrimitiveSpanProps {}\n\nconst VisuallyHidden = React.forwardRef<VisuallyHiddenElement, VisuallyHiddenProps>(\n  (props, forwardedRef) => {\n    return (\n      <Primitive.span\n        {...props}\n        ref={forwardedRef}\n        style={{\n          // See: https://github.com/twbs/bootstrap/blob/master/scss/mixins/_screen-reader.scss\n          position: 'absolute',\n          border: 0,\n          width: 1,\n          height: 1,\n          padding: 0,\n          margin: -1,\n          overflow: 'hidden',\n          clip: 'rect(0, 0, 0, 0)',\n          whiteSpace: 'nowrap',\n          wordWrap: 'normal',\n          ...props.style,\n        }}\n      />\n    );\n  }\n);\n\nVisuallyHidden.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = VisuallyHidden;\n\nexport {\n  VisuallyHidden,\n  //\n  Root,\n};\nexport type { VisuallyHiddenProps };\n", "export {\n  AccessibleIcon,\n  //\n  Root,\n} from './AccessibleIcon';\nexport type { AccessibleIconProps } from './AccessibleIcon';\n", "import * as React from 'react';\nimport * as VisuallyHiddenPrimitive from '@radix-ui/react-visually-hidden';\n\nconst NAME = 'AccessibleIcon';\n\ninterface AccessibleIconProps {\n  children?: React.ReactNode;\n  /**\n   * The accessible label for the icon. This label will be visually hidden but announced to screen\n   * reader users, similar to `alt` text for `img` tags.\n   */\n  label: string;\n}\n\nconst AccessibleIcon: React.FC<AccessibleIconProps> = ({ children, label }) => {\n  const child = React.Children.only(children);\n  return (\n    <>\n      {React.cloneElement(child as React.ReactElement, {\n        // accessibility\n        'aria-hidden': 'true',\n        focusable: 'false', // See: https://allyjs.io/tutorials/focusing-in-svg.html#making-svg-elements-focusable\n      })}\n      <VisuallyHiddenPrimitive.Root>{label}</VisuallyHiddenPrimitive.Root>\n    </>\n  );\n};\n\nAccessibleIcon.displayName = NAME;\n\nconst Root = AccessibleIcon;\n\nexport {\n  AccessibleIcon,\n  //\n  Root,\n};\nexport type { AccessibleIconProps };\n", "export { AccessibleIcon } from '@radix-ui/react-accessible-icon';\n", "export { createContext, createContextScope } from './createContext';\nexport type { CreateScope, Scope } from './createContext';\n", "import * as React from 'react';\n\nfunction createContext<ContextValueType extends object | null>(\n  rootComponentName: string,\n  defaultContext?: ContextValueType\n) {\n  const Context = React.createContext<ContextValueType | undefined>(defaultContext);\n\n  function Provider(props: ContextValueType & { children: React.ReactNode }) {\n    const { children, ...context } = props;\n    // Only re-memoize when prop values change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== undefined) return defaultContext;\n    // if a defaultContext wasn't specified, it's a required context.\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * createContextScope\n * -----------------------------------------------------------------------------------------------*/\n\ntype Scope<C = any> = { [scopeName: string]: React.Context<C>[] } | undefined;\ntype ScopeHook = (scope: Scope) => { [__scopeProp: string]: Scope };\ninterface CreateScope {\n  scopeName: string;\n  (): ScopeHook;\n}\n\nfunction createContextScope(scopeName: string, createContextScopeDeps: CreateScope[] = []) {\n  let defaultContexts: any[] = [];\n\n  /* -----------------------------------------------------------------------------------------------\n   * createContext\n   * ---------------------------------------------------------------------------------------------*/\n\n  function createContext<ContextValueType extends object | null>(\n    rootComponentName: string,\n    defaultContext?: ContextValueType\n  ) {\n    const BaseContext = React.createContext<ContextValueType | undefined>(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n\n    function Provider(\n      props: ContextValueType & { scope: Scope<ContextValueType>; children: React.ReactNode }\n    ) {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName][index] || BaseContext;\n      // Only re-memoize when prop values change\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n      return <Context.Provider value={value}>{children}</Context.Provider>;\n    }\n\n    function useContext(consumerName: string, scope: Scope<ContextValueType | undefined>) {\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== undefined) return defaultContext;\n      // if a defaultContext wasn't specified, it's a required context.\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n\n    Provider.displayName = rootComponentName + 'Provider';\n    return [Provider, useContext] as const;\n  }\n\n  /* -----------------------------------------------------------------------------------------------\n   * createScope\n   * ---------------------------------------------------------------------------------------------*/\n\n  const createScope: CreateScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope: Scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n\n  createScope.scopeName = scopeName;\n  return [createContext, composeContextScopes(createScope, ...createContextScopeDeps)] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * composeContextScopes\n * -----------------------------------------------------------------------------------------------*/\n\nfunction composeContextScopes(...scopes: CreateScope[]) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n\n  const createScope: CreateScope = () => {\n    const scopeHooks = scopes.map((createScope) => ({\n      useScope: createScope(),\n      scopeName: createScope.scopeName,\n    }));\n\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {\n        // We are calling a hook inside a callback which React warns against to avoid inconsistent\n        // renders, however, scoping doesn't have render side effects so we ignore the rule.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes, ...currentScope };\n      }, {});\n\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport { createContext, createContextScope };\nexport type { CreateScope, Scope };\n", "export { composeEventHandlers } from './primitive';\n", "function composeEventHandlers<E>(\n  originalEventHandler?: (event: E) => void,\n  ourEventHandler?: (event: E) => void,\n  { checkForDefaultPrevented = true } = {}\n) {\n  return function handleEvent(event: E) {\n    originalEventHandler?.(event);\n\n    if (checkForDefaultPrevented === false || !((event as unknown) as Event).defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\n\nexport { composeEventHandlers };\n", "export { useLayoutEffect } from './useLayoutEffect';\n", "import * as React from 'react';\n\n/**\n * On the server, React emits a warning when calling `useLayoutEffect`.\n * This is because neither `useLayoutEffect` nor `useEffect` run on the server.\n * We use this safe version which suppresses the warning by replacing it with a noop on the server.\n *\n * See: https://reactjs.org/docs/hooks-reference.html#uselayouteffect\n */\nconst useLayoutEffect = Boolean(globalThis?.document) ? React.useLayoutEffect : () => {};\n\nexport { useLayoutEffect };\n", "export { useId } from './id';\n", "import * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n// We `toString()` to prevent bundlers from trying to `import { useId } from 'react';`\nconst useReactId = (React as any)['useId'.toString()] || (() => undefined);\nlet count = 0;\n\nfunction useId(deterministicId?: string): string {\n  const [id, setId] = React.useState<string | undefined>(useReactId());\n  // React versions older than 18 will have client-side ids only.\n  useLayoutEffect(() => {\n    if (!deterministicId) setId((reactId) => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : '');\n}\n\nexport { useId };\n", "export { useCallbackRef } from './useCallbackRef';\n", "import * as React from 'react';\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nfunction useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  // https://github.com/facebook/react/issues/19240\n  return React.useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, []);\n}\n\nexport { useCallbackRef };\n", "export { useControllableState } from './useControllableState';\n", "import * as React from 'react';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\ntype UseControllableStateParams<T> = {\n  prop?: T | undefined;\n  defaultProp?: T | undefined;\n  onChange?: (state: T) => void;\n};\n\ntype SetStateFn<T> = (prevState?: T) => T;\n\nfunction useControllableState<T>({\n  prop,\n  defaultProp,\n  onChange = () => {},\n}: UseControllableStateParams<T>) {\n  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({ defaultProp, onChange });\n  const isControlled = prop !== undefined;\n  const value = isControlled ? prop : uncontrolledProp;\n  const handleChange = useCallbackRef(onChange);\n\n  const setValue: React.Dispatch<React.SetStateAction<T | undefined>> = React.useCallback(\n    (nextValue) => {\n      if (isControlled) {\n        const setter = nextValue as SetStateFn<T>;\n        const value = typeof nextValue === 'function' ? setter(prop) : nextValue;\n        if (value !== prop) handleChange(value as T);\n      } else {\n        setUncontrolledProp(nextValue);\n      }\n    },\n    [isControlled, prop, setUncontrolledProp, handleChange]\n  );\n\n  return [value, setValue] as const;\n}\n\nfunction useUncontrolledState<T>({\n  defaultProp,\n  onChange,\n}: Omit<UseControllableStateParams<T>, 'prop'>) {\n  const uncontrolledState = React.useState<T | undefined>(defaultProp);\n  const [value] = uncontrolledState;\n  const prevValueRef = React.useRef(value);\n  const handleChange = useCallbackRef(onChange);\n\n  React.useEffect(() => {\n    if (prevValueRef.current !== value) {\n      handleChange(value as T);\n      prevValueRef.current = value;\n    }\n  }, [value, prevValueRef, handleChange]);\n\n  return uncontrolledState;\n}\n\nexport { useControllableState };\n", "export { useEscapeKeydown } from './useEscapeKeydown';\n", "import * as React from 'react';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\n/**\n * Listens for when the escape key is down\n */\nfunction useEscapeKeydown(\n  onEscapeKeyDownProp?: (event: KeyboardEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const onEscapeKeyDown = useCallbackRef(onEscapeKeyDownProp);\n\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        onEscapeKeyDown(event);\n      }\n    };\n    ownerDocument.addEventListener('keydown', handleKeyDown, { capture: true });\n    return () => ownerDocument.removeEventListener('keydown', handleKeyDown, { capture: true });\n  }, [onEscapeKeyDown, ownerDocument]);\n}\n\nexport { useEscapeKeydown };\n", "'use client';\nexport {\n  DismissableLayer,\n  DismissableLayerBranch,\n  //\n  Root,\n  Branch,\n} from './DismissableLayer';\nexport type { DismissableLayerProps } from './DismissableLayer';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useEscapeKeydown } from '@radix-ui/react-use-escape-keydown';\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayer\n * -----------------------------------------------------------------------------------------------*/\n\nconst DISMISSABLE_LAYER_NAME = 'DismissableLayer';\nconst CONTEXT_UPDATE = 'dismissableLayer.update';\nconst POINTER_DOWN_OUTSIDE = 'dismissableLayer.pointerDownOutside';\nconst FOCUS_OUTSIDE = 'dismissableLayer.focusOutside';\n\nlet originalBodyPointerEvents: string;\n\nconst DismissableLayerContext = React.createContext({\n  layers: new Set<DismissableLayerElement>(),\n  layersWithOutsidePointerEventsDisabled: new Set<DismissableLayerElement>(),\n  branches: new Set<DismissableLayerBranchElement>(),\n});\n\ntype DismissableLayerElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DismissableLayerProps extends PrimitiveDivProps {\n  /**\n   * When `true`, hover/focus/click interactions will be disabled on elements outside\n   * the `DismissableLayer`. Users will need to click twice on outside elements to\n   * interact with them: once to close the `DismissableLayer`, and again to trigger the element.\n   */\n  disableOutsidePointerEvents?: boolean;\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: (event: KeyboardEvent) => void;\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void;\n  /**\n   * Event handler called when the focus moves outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onFocusOutside?: (event: FocusOutsideEvent) => void;\n  /**\n   * Event handler called when an interaction happens outside the `DismissableLayer`.\n   * Specifically, when a `pointerdown` event happens outside or focus moves outside of it.\n   * Can be prevented.\n   */\n  onInteractOutside?: (event: PointerDownOutsideEvent | FocusOutsideEvent) => void;\n  /**\n   * Handler called when the `DismissableLayer` should be dismissed\n   */\n  onDismiss?: () => void;\n}\n\nconst DismissableLayer = React.forwardRef<DismissableLayerElement, DismissableLayerProps>(\n  (props, forwardedRef) => {\n    const {\n      disableOutsidePointerEvents = false,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      onDismiss,\n      ...layerProps\n    } = props;\n    const context = React.useContext(DismissableLayerContext);\n    const [node, setNode] = React.useState<DismissableLayerElement | null>(null);\n    const ownerDocument = node?.ownerDocument ?? globalThis?.document;\n    const [, force] = React.useState({});\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setNode(node));\n    const layers = Array.from(context.layers);\n    const [highestLayerWithOutsidePointerEventsDisabled] = [...context.layersWithOutsidePointerEventsDisabled].slice(-1); // prettier-ignore\n    const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled); // prettier-ignore\n    const index = node ? layers.indexOf(node) : -1;\n    const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;\n    const isPointerEventsEnabled = index >= highestLayerWithOutsidePointerEventsDisabledIndex;\n\n    const pointerDownOutside = usePointerDownOutside((event) => {\n      const target = event.target as HTMLElement;\n      const isPointerDownOnBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (!isPointerEventsEnabled || isPointerDownOnBranch) return;\n      onPointerDownOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    }, ownerDocument);\n\n    const focusOutside = useFocusOutside((event) => {\n      const target = event.target as HTMLElement;\n      const isFocusInBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (isFocusInBranch) return;\n      onFocusOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    }, ownerDocument);\n\n    useEscapeKeydown((event) => {\n      const isHighestLayer = index === context.layers.size - 1;\n      if (!isHighestLayer) return;\n      onEscapeKeyDown?.(event);\n      if (!event.defaultPrevented && onDismiss) {\n        event.preventDefault();\n        onDismiss();\n      }\n    }, ownerDocument);\n\n    React.useEffect(() => {\n      if (!node) return;\n      if (disableOutsidePointerEvents) {\n        if (context.layersWithOutsidePointerEventsDisabled.size === 0) {\n          originalBodyPointerEvents = ownerDocument.body.style.pointerEvents;\n          ownerDocument.body.style.pointerEvents = 'none';\n        }\n        context.layersWithOutsidePointerEventsDisabled.add(node);\n      }\n      context.layers.add(node);\n      dispatchUpdate();\n      return () => {\n        if (\n          disableOutsidePointerEvents &&\n          context.layersWithOutsidePointerEventsDisabled.size === 1\n        ) {\n          ownerDocument.body.style.pointerEvents = originalBodyPointerEvents;\n        }\n      };\n    }, [node, ownerDocument, disableOutsidePointerEvents, context]);\n\n    /**\n     * We purposefully prevent combining this effect with the `disableOutsidePointerEvents` effect\n     * because a change to `disableOutsidePointerEvents` would remove this layer from the stack\n     * and add it to the end again so the layering order wouldn't be _creation order_.\n     * We only want them to be removed from context stacks when unmounted.\n     */\n    React.useEffect(() => {\n      return () => {\n        if (!node) return;\n        context.layers.delete(node);\n        context.layersWithOutsidePointerEventsDisabled.delete(node);\n        dispatchUpdate();\n      };\n    }, [node, context]);\n\n    React.useEffect(() => {\n      const handleUpdate = () => force({});\n      document.addEventListener(CONTEXT_UPDATE, handleUpdate);\n      return () => document.removeEventListener(CONTEXT_UPDATE, handleUpdate);\n    }, []);\n\n    return (\n      <Primitive.div\n        {...layerProps}\n        ref={composedRefs}\n        style={{\n          pointerEvents: isBodyPointerEventsDisabled\n            ? isPointerEventsEnabled\n              ? 'auto'\n              : 'none'\n            : undefined,\n          ...props.style,\n        }}\n        onFocusCapture={composeEventHandlers(props.onFocusCapture, focusOutside.onFocusCapture)}\n        onBlurCapture={composeEventHandlers(props.onBlurCapture, focusOutside.onBlurCapture)}\n        onPointerDownCapture={composeEventHandlers(\n          props.onPointerDownCapture,\n          pointerDownOutside.onPointerDownCapture\n        )}\n      />\n    );\n  }\n);\n\nDismissableLayer.displayName = DISMISSABLE_LAYER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayerBranch\n * -----------------------------------------------------------------------------------------------*/\n\nconst BRANCH_NAME = 'DismissableLayerBranch';\n\ntype DismissableLayerBranchElement = React.ElementRef<typeof Primitive.div>;\ninterface DismissableLayerBranchProps extends PrimitiveDivProps {}\n\nconst DismissableLayerBranch = React.forwardRef<\n  DismissableLayerBranchElement,\n  DismissableLayerBranchProps\n>((props, forwardedRef) => {\n  const context = React.useContext(DismissableLayerContext);\n  const ref = React.useRef<DismissableLayerBranchElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      context.branches.add(node);\n      return () => {\n        context.branches.delete(node);\n      };\n    }\n  }, [context.branches]);\n\n  return <Primitive.div {...props} ref={composedRefs} />;\n});\n\nDismissableLayerBranch.displayName = BRANCH_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PointerDownOutsideEvent = CustomEvent<{ originalEvent: PointerEvent }>;\ntype FocusOutsideEvent = CustomEvent<{ originalEvent: FocusEvent }>;\n\n/**\n * Listens for `pointerdown` outside a react subtree. We use `pointerdown` rather than `pointerup`\n * to mimic layer dismissing behaviour present in OS.\n * Returns props to pass to the node we want to check for outside events.\n */\nfunction usePointerDownOutside(\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const handlePointerDownOutside = useCallbackRef(onPointerDownOutside) as EventListener;\n  const isPointerInsideReactTreeRef = React.useRef(false);\n  const handleClickRef = React.useRef(() => {});\n\n  React.useEffect(() => {\n    const handlePointerDown = (event: PointerEvent) => {\n      if (event.target && !isPointerInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event };\n\n        function handleAndDispatchPointerDownOutsideEvent() {\n          handleAndDispatchCustomEvent(\n            POINTER_DOWN_OUTSIDE,\n            handlePointerDownOutside,\n            eventDetail,\n            { discrete: true }\n          );\n        }\n\n        /**\n         * On touch devices, we need to wait for a click event because browsers implement\n         * a ~350ms delay between the time the user stops touching the display and when the\n         * browser executres events. We need to ensure we don't reactivate pointer-events within\n         * this timeframe otherwise the browser may execute events that should have been prevented.\n         *\n         * Additionally, this also lets us deal automatically with cancellations when a click event\n         * isn't raised because the page was considered scrolled/drag-scrolled, long-pressed, etc.\n         *\n         * This is why we also continuously remove the previous listener, because we cannot be\n         * certain that it was raised, and therefore cleaned-up.\n         */\n        if (event.pointerType === 'touch') {\n          ownerDocument.removeEventListener('click', handleClickRef.current);\n          handleClickRef.current = handleAndDispatchPointerDownOutsideEvent;\n          ownerDocument.addEventListener('click', handleClickRef.current, { once: true });\n        } else {\n          handleAndDispatchPointerDownOutsideEvent();\n        }\n      } else {\n        // We need to remove the event listener in case the outside click has been canceled.\n        // See: https://github.com/radix-ui/primitives/issues/2171\n        ownerDocument.removeEventListener('click', handleClickRef.current);\n      }\n      isPointerInsideReactTreeRef.current = false;\n    };\n    /**\n     * if this hook executes in a component that mounts via a `pointerdown` event, the event\n     * would bubble up to the document and trigger a `pointerDownOutside` event. We avoid\n     * this by delaying the event listener registration on the document.\n     * This is not React specific, but rather how the DOM works, ie:\n     * ```\n     * button.addEventListener('pointerdown', () => {\n     *   console.log('I will log');\n     *   document.addEventListener('pointerdown', () => {\n     *     console.log('I will also log');\n     *   })\n     * });\n     */\n    const timerId = window.setTimeout(() => {\n      ownerDocument.addEventListener('pointerdown', handlePointerDown);\n    }, 0);\n    return () => {\n      window.clearTimeout(timerId);\n      ownerDocument.removeEventListener('pointerdown', handlePointerDown);\n      ownerDocument.removeEventListener('click', handleClickRef.current);\n    };\n  }, [ownerDocument, handlePointerDownOutside]);\n\n  return {\n    // ensures we check React component tree (not just DOM tree)\n    onPointerDownCapture: () => (isPointerInsideReactTreeRef.current = true),\n  };\n}\n\n/**\n * Listens for when focus happens outside a react subtree.\n * Returns props to pass to the root (node) of the subtree we want to check.\n */\nfunction useFocusOutside(\n  onFocusOutside?: (event: FocusOutsideEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const handleFocusOutside = useCallbackRef(onFocusOutside) as EventListener;\n  const isFocusInsideReactTreeRef = React.useRef(false);\n\n  React.useEffect(() => {\n    const handleFocus = (event: FocusEvent) => {\n      if (event.target && !isFocusInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event };\n        handleAndDispatchCustomEvent(FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {\n          discrete: false,\n        });\n      }\n    };\n    ownerDocument.addEventListener('focusin', handleFocus);\n    return () => ownerDocument.removeEventListener('focusin', handleFocus);\n  }, [ownerDocument, handleFocusOutside]);\n\n  return {\n    onFocusCapture: () => (isFocusInsideReactTreeRef.current = true),\n    onBlurCapture: () => (isFocusInsideReactTreeRef.current = false),\n  };\n}\n\nfunction dispatchUpdate() {\n  const event = new CustomEvent(CONTEXT_UPDATE);\n  document.dispatchEvent(event);\n}\n\nfunction handleAndDispatchCustomEvent<E extends CustomEvent, OriginalEvent extends Event>(\n  name: string,\n  handler: ((event: E) => void) | undefined,\n  detail: { originalEvent: OriginalEvent } & (E extends CustomEvent<infer D> ? D : never),\n  { discrete }: { discrete: boolean }\n) {\n  const target = detail.originalEvent.target;\n  const event = new CustomEvent(name, { bubbles: false, cancelable: true, detail });\n  if (handler) target.addEventListener(name, handler as EventListener, { once: true });\n\n  if (discrete) {\n    dispatchDiscreteCustomEvent(target, event);\n  } else {\n    target.dispatchEvent(event);\n  }\n}\n\nconst Root = DismissableLayer;\nconst Branch = DismissableLayerBranch;\n\nexport {\n  DismissableLayer,\n  DismissableLayerBranch,\n  //\n  Root,\n  Branch,\n};\nexport type { DismissableLayerProps };\n", "'use client';\nexport {\n  FocusScope,\n  //\n  Root,\n} from './FocusScope';\nexport type { FocusScopeProps } from './FocusScope';\n", "import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\nconst AUTOFOCUS_ON_MOUNT = 'focusScope.autoFocusOnMount';\nconst AUTOFOCUS_ON_UNMOUNT = 'focusScope.autoFocusOnUnmount';\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true };\n\ntype FocusableTarget = HTMLElement | { focus(): void };\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope\n * -----------------------------------------------------------------------------------------------*/\n\nconst FOCUS_SCOPE_NAME = 'FocusScope';\n\ntype FocusScopeElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface FocusScopeProps extends PrimitiveDivProps {\n  /**\n   * When `true`, tabbing from last item will focus first tabbable\n   * and shift+tab from first item will focus last tababble.\n   * @defaultValue false\n   */\n  loop?: boolean;\n\n  /**\n   * When `true`, focus cannot escape the focus scope via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapped?: boolean;\n\n  /**\n   * Event handler called when auto-focusing on mount.\n   * Can be prevented.\n   */\n  onMountAutoFocus?: (event: Event) => void;\n\n  /**\n   * Event handler called when auto-focusing on unmount.\n   * Can be prevented.\n   */\n  onUnmountAutoFocus?: (event: Event) => void;\n}\n\nconst FocusScope = React.forwardRef<FocusScopeElement, FocusScopeProps>((props, forwardedRef) => {\n  const {\n    loop = false,\n    trapped = false,\n    onMountAutoFocus: onMountAutoFocusProp,\n    onUnmountAutoFocus: onUnmountAutoFocusProp,\n    ...scopeProps\n  } = props;\n  const [container, setContainer] = React.useState<HTMLElement | null>(null);\n  const onMountAutoFocus = useCallbackRef(onMountAutoFocusProp);\n  const onUnmountAutoFocus = useCallbackRef(onUnmountAutoFocusProp);\n  const lastFocusedElementRef = React.useRef<HTMLElement | null>(null);\n  const composedRefs = useComposedRefs(forwardedRef, (node) => setContainer(node));\n\n  const focusScope = React.useRef({\n    paused: false,\n    pause() {\n      this.paused = true;\n    },\n    resume() {\n      this.paused = false;\n    },\n  }).current;\n\n  // Takes care of trapping focus if focus is moved outside programmatically for example\n  React.useEffect(() => {\n    if (trapped) {\n      function handleFocusIn(event: FocusEvent) {\n        if (focusScope.paused || !container) return;\n        const target = event.target as HTMLElement | null;\n        if (container.contains(target)) {\n          lastFocusedElementRef.current = target;\n        } else {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }\n\n      function handleFocusOut(event: FocusEvent) {\n        if (focusScope.paused || !container) return;\n        const relatedTarget = event.relatedTarget as HTMLElement | null;\n\n        // A `focusout` event with a `null` `relatedTarget` will happen in at least two cases:\n        //\n        // 1. When the user switches app/tabs/windows/the browser itself loses focus.\n        // 2. In Google Chrome, when the focused element is removed from the DOM.\n        //\n        // We let the browser do its thing here because:\n        //\n        // 1. The browser already keeps a memory of what's focused for when the page gets refocused.\n        // 2. In Google Chrome, if we try to focus the deleted focused element (as per below), it\n        //    throws the CPU to 100%, so we avoid doing anything for this reason here too.\n        if (relatedTarget === null) return;\n\n        // If the focus has moved to an actual legitimate element (`relatedTarget !== null`)\n        // that is outside the container, we move focus to the last valid focused element inside.\n        if (!container.contains(relatedTarget)) {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }\n\n      // When the focused element gets removed from the DOM, browsers move focus\n      // back to the document.body. In this case, we move focus to the container\n      // to keep focus trapped correctly.\n      function handleMutations(mutations: MutationRecord[]) {\n        const focusedElement = document.activeElement as HTMLElement | null;\n        if (focusedElement !== document.body) return;\n        for (const mutation of mutations) {\n          if (mutation.removedNodes.length > 0) focus(container);\n        }\n      }\n\n      document.addEventListener('focusin', handleFocusIn);\n      document.addEventListener('focusout', handleFocusOut);\n      const mutationObserver = new MutationObserver(handleMutations);\n      if (container) mutationObserver.observe(container, { childList: true, subtree: true });\n\n      return () => {\n        document.removeEventListener('focusin', handleFocusIn);\n        document.removeEventListener('focusout', handleFocusOut);\n        mutationObserver.disconnect();\n      };\n    }\n  }, [trapped, container, focusScope.paused]);\n\n  React.useEffect(() => {\n    if (container) {\n      focusScopesStack.add(focusScope);\n      const previouslyFocusedElement = document.activeElement as HTMLElement | null;\n      const hasFocusedCandidate = container.contains(previouslyFocusedElement);\n\n      if (!hasFocusedCandidate) {\n        const mountEvent = new CustomEvent(AUTOFOCUS_ON_MOUNT, EVENT_OPTIONS);\n        container.addEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n        container.dispatchEvent(mountEvent);\n        if (!mountEvent.defaultPrevented) {\n          focusFirst(removeLinks(getTabbableCandidates(container)), { select: true });\n          if (document.activeElement === previouslyFocusedElement) {\n            focus(container);\n          }\n        }\n      }\n\n      return () => {\n        container.removeEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n\n        // We hit a react bug (fixed in v17) with focusing in unmount.\n        // We need to delay the focus a little to get around it for now.\n        // See: https://github.com/facebook/react/issues/17894\n        setTimeout(() => {\n          const unmountEvent = new CustomEvent(AUTOFOCUS_ON_UNMOUNT, EVENT_OPTIONS);\n          container.addEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n          container.dispatchEvent(unmountEvent);\n          if (!unmountEvent.defaultPrevented) {\n            focus(previouslyFocusedElement ?? document.body, { select: true });\n          }\n          // we need to remove the listener after we `dispatchEvent`\n          container.removeEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n\n          focusScopesStack.remove(focusScope);\n        }, 0);\n      };\n    }\n  }, [container, onMountAutoFocus, onUnmountAutoFocus, focusScope]);\n\n  // Takes care of looping focus (when tabbing whilst at the edges)\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (!loop && !trapped) return;\n      if (focusScope.paused) return;\n\n      const isTabKey = event.key === 'Tab' && !event.altKey && !event.ctrlKey && !event.metaKey;\n      const focusedElement = document.activeElement as HTMLElement | null;\n\n      if (isTabKey && focusedElement) {\n        const container = event.currentTarget as HTMLElement;\n        const [first, last] = getTabbableEdges(container);\n        const hasTabbableElementsInside = first && last;\n\n        // we can only wrap focus if we have tabbable edges\n        if (!hasTabbableElementsInside) {\n          if (focusedElement === container) event.preventDefault();\n        } else {\n          if (!event.shiftKey && focusedElement === last) {\n            event.preventDefault();\n            if (loop) focus(first, { select: true });\n          } else if (event.shiftKey && focusedElement === first) {\n            event.preventDefault();\n            if (loop) focus(last, { select: true });\n          }\n        }\n      }\n    },\n    [loop, trapped, focusScope.paused]\n  );\n\n  return (\n    <Primitive.div tabIndex={-1} {...scopeProps} ref={composedRefs} onKeyDown={handleKeyDown} />\n  );\n});\n\nFocusScope.displayName = FOCUS_SCOPE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Attempts focusing the first element in a list of candidates.\n * Stops when focus has actually moved.\n */\nfunction focusFirst(candidates: HTMLElement[], { select = false } = {}) {\n  const previouslyFocusedElement = document.activeElement;\n  for (const candidate of candidates) {\n    focus(candidate, { select });\n    if (document.activeElement !== previouslyFocusedElement) return;\n  }\n}\n\n/**\n * Returns the first and last tabbable elements inside a container.\n */\nfunction getTabbableEdges(container: HTMLElement) {\n  const candidates = getTabbableCandidates(container);\n  const first = findVisible(candidates, container);\n  const last = findVisible(candidates.reverse(), container);\n  return [first, last] as const;\n}\n\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */\nfunction getTabbableCandidates(container: HTMLElement) {\n  const nodes: HTMLElement[] = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    },\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement);\n  // we do not take into account the order of nodes with positive `tabIndex` as it\n  // hinders accessibility to have tab order different from visual order.\n  return nodes;\n}\n\n/**\n * Returns the first visible element in a list.\n * NOTE: Only checks visibility up to the `container`.\n */\nfunction findVisible(elements: HTMLElement[], container: HTMLElement) {\n  for (const element of elements) {\n    // we stop checking if it's hidden at the `container` level (excluding)\n    if (!isHidden(element, { upTo: container })) return element;\n  }\n}\n\nfunction isHidden(node: HTMLElement, { upTo }: { upTo?: HTMLElement }) {\n  if (getComputedStyle(node).visibility === 'hidden') return true;\n  while (node) {\n    // we stop at `upTo` (excluding it)\n    if (upTo !== undefined && node === upTo) return false;\n    if (getComputedStyle(node).display === 'none') return true;\n    node = node.parentElement as HTMLElement;\n  }\n  return false;\n}\n\nfunction isSelectableInput(element: any): element is FocusableTarget & { select: () => void } {\n  return element instanceof HTMLInputElement && 'select' in element;\n}\n\nfunction focus(element?: FocusableTarget | null, { select = false } = {}) {\n  // only focus if that element is focusable\n  if (element && element.focus) {\n    const previouslyFocusedElement = document.activeElement;\n    // NOTE: we prevent scrolling on focus, to minimize jarring transitions for users\n    element.focus({ preventScroll: true });\n    // only select if its not the same element, it supports selection and we need to select\n    if (element !== previouslyFocusedElement && isSelectableInput(element) && select)\n      element.select();\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope stack\n * -----------------------------------------------------------------------------------------------*/\n\ntype FocusScopeAPI = { paused: boolean; pause(): void; resume(): void };\nconst focusScopesStack = createFocusScopesStack();\n\nfunction createFocusScopesStack() {\n  /** A stack of focus scopes, with the active one at the top */\n  let stack: FocusScopeAPI[] = [];\n\n  return {\n    add(focusScope: FocusScopeAPI) {\n      // pause the currently active focus scope (at the top of the stack)\n      const activeFocusScope = stack[0];\n      if (focusScope !== activeFocusScope) {\n        activeFocusScope?.pause();\n      }\n      // remove in case it already exists (because we'll re-add it at the top of the stack)\n      stack = arrayRemove(stack, focusScope);\n      stack.unshift(focusScope);\n    },\n\n    remove(focusScope: FocusScopeAPI) {\n      stack = arrayRemove(stack, focusScope);\n      stack[0]?.resume();\n    },\n  };\n}\n\nfunction arrayRemove<T>(array: T[], item: T) {\n  const updatedArray = [...array];\n  const index = updatedArray.indexOf(item);\n  if (index !== -1) {\n    updatedArray.splice(index, 1);\n  }\n  return updatedArray;\n}\n\nfunction removeLinks(items: HTMLElement[]) {\n  return items.filter((item) => item.tagName !== 'A');\n}\n\nconst Root = FocusScope;\n\nexport {\n  FocusScope,\n  //\n  Root,\n};\nexport type { FocusScopeProps };\n", "'use client';\nexport {\n  Portal,\n  //\n  Root,\n} from './Portal';\nexport type { PortalProps } from './Portal';\n", "import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n/* -------------------------------------------------------------------------------------------------\n * Portal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'Portal';\n\ntype PortalElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PortalProps extends PrimitiveDivProps {\n  /**\n   * An optional container where the portaled content should be appended.\n   */\n  container?: Element | null;\n}\n\nconst Portal = React.forwardRef<PortalElement, PortalProps>((props, forwardedRef) => {\n  const { container: containerProp, ...portalProps } = props;\n  const [mounted, setMounted] = React.useState(false);\n  useLayoutEffect(() => setMounted(true), []);\n  const container = containerProp || (mounted && globalThis?.document?.body);\n  return container\n    ? ReactDOM.createPortal(<Primitive.div {...portalProps} ref={forwardedRef} />, container)\n    : null;\n});\n\nPortal.displayName = PORTAL_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Portal;\n\nexport {\n  Portal,\n  //\n  Root,\n};\nexport type { PortalProps };\n", "'use client';\nexport { Presence } from './Presence';\nexport type { PresenceProps } from './Presence';\n", "import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useStateMachine } from './useStateMachine';\n\ninterface PresenceProps {\n  children: React.ReactElement | ((props: { present: boolean }) => React.ReactElement);\n  present: boolean;\n}\n\nconst Presence: React.FC<PresenceProps> = (props) => {\n  const { present, children } = props;\n  const presence = usePresence(present);\n\n  const child = (\n    typeof children === 'function'\n      ? children({ present: presence.isPresent })\n      : React.Children.only(children)\n  ) as React.ReactElement;\n\n  const ref = useComposedRefs(presence.ref, getElementRef(child));\n  const forceMount = typeof children === 'function';\n  return forceMount || presence.isPresent ? React.cloneElement(child, { ref }) : null;\n};\n\nPresence.displayName = 'Presence';\n\n/* -------------------------------------------------------------------------------------------------\n * usePresence\n * -----------------------------------------------------------------------------------------------*/\n\nfunction usePresence(present: boolean) {\n  const [node, setNode] = React.useState<HTMLElement>();\n  const stylesRef = React.useRef<CSSStyleDeclaration>({} as any);\n  const prevPresentRef = React.useRef(present);\n  const prevAnimationNameRef = React.useRef<string>('none');\n  const initialState = present ? 'mounted' : 'unmounted';\n  const [state, send] = useStateMachine(initialState, {\n    mounted: {\n      UNMOUNT: 'unmounted',\n      ANIMATION_OUT: 'unmountSuspended',\n    },\n    unmountSuspended: {\n      MOUNT: 'mounted',\n      ANIMATION_END: 'unmounted',\n    },\n    unmounted: {\n      MOUNT: 'mounted',\n    },\n  });\n\n  React.useEffect(() => {\n    const currentAnimationName = getAnimationName(stylesRef.current);\n    prevAnimationNameRef.current = state === 'mounted' ? currentAnimationName : 'none';\n  }, [state]);\n\n  useLayoutEffect(() => {\n    const styles = stylesRef.current;\n    const wasPresent = prevPresentRef.current;\n    const hasPresentChanged = wasPresent !== present;\n\n    if (hasPresentChanged) {\n      const prevAnimationName = prevAnimationNameRef.current;\n      const currentAnimationName = getAnimationName(styles);\n\n      if (present) {\n        send('MOUNT');\n      } else if (currentAnimationName === 'none' || styles?.display === 'none') {\n        // If there is no exit animation or the element is hidden, animations won't run\n        // so we unmount instantly\n        send('UNMOUNT');\n      } else {\n        /**\n         * When `present` changes to `false`, we check changes to animation-name to\n         * determine whether an animation has started. We chose this approach (reading\n         * computed styles) because there is no `animationrun` event and `animationstart`\n         * fires after `animation-delay` has expired which would be too late.\n         */\n        const isAnimating = prevAnimationName !== currentAnimationName;\n\n        if (wasPresent && isAnimating) {\n          send('ANIMATION_OUT');\n        } else {\n          send('UNMOUNT');\n        }\n      }\n\n      prevPresentRef.current = present;\n    }\n  }, [present, send]);\n\n  useLayoutEffect(() => {\n    if (node) {\n      /**\n       * Triggering an ANIMATION_OUT during an ANIMATION_IN will fire an `animationcancel`\n       * event for ANIMATION_IN after we have entered `unmountSuspended` state. So, we\n       * make sure we only trigger ANIMATION_END for the currently active animation.\n       */\n      const handleAnimationEnd = (event: AnimationEvent) => {\n        const currentAnimationName = getAnimationName(stylesRef.current);\n        const isCurrentAnimation = currentAnimationName.includes(event.animationName);\n        if (event.target === node && isCurrentAnimation) {\n          // With React 18 concurrency this update is applied\n          // a frame after the animation ends, creating a flash of visible content.\n          // By manually flushing we ensure they sync within a frame, removing the flash.\n          ReactDOM.flushSync(() => send('ANIMATION_END'));\n        }\n      };\n      const handleAnimationStart = (event: AnimationEvent) => {\n        if (event.target === node) {\n          // if animation occurred, store its name as the previous animation.\n          prevAnimationNameRef.current = getAnimationName(stylesRef.current);\n        }\n      };\n      node.addEventListener('animationstart', handleAnimationStart);\n      node.addEventListener('animationcancel', handleAnimationEnd);\n      node.addEventListener('animationend', handleAnimationEnd);\n      return () => {\n        node.removeEventListener('animationstart', handleAnimationStart);\n        node.removeEventListener('animationcancel', handleAnimationEnd);\n        node.removeEventListener('animationend', handleAnimationEnd);\n      };\n    } else {\n      // Transition to the unmounted state if the node is removed prematurely.\n      // We avoid doing so during cleanup as the node may change but still exist.\n      send('ANIMATION_END');\n    }\n  }, [node, send]);\n\n  return {\n    isPresent: ['mounted', 'unmountSuspended'].includes(state),\n    ref: React.useCallback((node: HTMLElement) => {\n      if (node) stylesRef.current = getComputedStyle(node);\n      setNode(node);\n    }, []),\n  };\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getAnimationName(styles?: CSSStyleDeclaration) {\n  return styles?.animationName || 'none';\n}\n\n// Before React 19 accessing `element.props.ref` will throw a warning and suggest using `element.ref`\n// After React 19 accessing `element.ref` does the opposite.\n// https://github.com/facebook/react/pull/28348\n//\n// Access the ref using the method that doesn't yield a warning.\nfunction getElementRef(element: React.ReactElement) {\n  // React <=18 in DEV\n  let getter = Object.getOwnPropertyDescriptor(element.props, 'ref')?.get;\n  let mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return (element as any).ref;\n  }\n\n  // React 19 in DEV\n  getter = Object.getOwnPropertyDescriptor(element, 'ref')?.get;\n  mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n\n  // Not DEV\n  return element.props.ref || (element as any).ref;\n}\n\nexport { Presence };\nexport type { PresenceProps };\n", "import * as React from 'react';\n\ntype Machine<S> = { [k: string]: { [k: string]: S } };\ntype MachineState<T> = keyof T;\ntype MachineEvent<T> = keyof UnionToIntersection<T[keyof T]>;\n\n// \uD83E\uDD2F https://fettblog.eu/typescript-union-to-intersection/\ntype UnionToIntersection<T> = (T extends any ? (x: T) => any : never) extends (x: infer R) => any\n  ? R\n  : never;\n\nexport function useStateMachine<M>(\n  initialState: MachineState<M>,\n  machine: M & Machine<MachineState<M>>\n) {\n  return React.useReducer((state: MachineState<M>, event: MachineEvent<M>): MachineState<M> => {\n    const nextState = (machine[state] as any)[event];\n    return nextState ?? state;\n  }, initialState);\n}\n", "'use client';\nexport {\n  FocusGuards,\n  //\n  Root,\n  //\n  useFocusGuards,\n} from './FocusGuards';\n", "import * as React from 'react';\n\n/** Number of components which have requested interest to have focus guards */\nlet count = 0;\n\nfunction FocusGuards(props: any) {\n  useFocusGuards();\n  return props.children;\n}\n\n/**\n * Injects a pair of focus guards at the edges of the whole DOM tree\n * to ensure `focusin` & `focusout` events can be caught consistently.\n */\nfunction useFocusGuards() {\n  React.useEffect(() => {\n    const edgeGuards = document.querySelectorAll('[data-radix-focus-guard]');\n    document.body.insertAdjacentElement('afterbegin', edgeGuards[0] ?? createFocusGuard());\n    document.body.insertAdjacentElement('beforeend', edgeGuards[1] ?? createFocusGuard());\n    count++;\n\n    return () => {\n      if (count === 1) {\n        document.querySelectorAll('[data-radix-focus-guard]').forEach((node) => node.remove());\n      }\n      count--;\n    };\n  }, []);\n}\n\nfunction createFocusGuard() {\n  const element = document.createElement('span');\n  element.setAttribute('data-radix-focus-guard', '');\n  element.tabIndex = 0;\n  element.style.cssText = 'outline: none; opacity: 0; position: fixed; pointer-events: none';\n  return element;\n}\n\nconst Root = FocusGuards;\n\nexport {\n  FocusGuards,\n  //\n  Root,\n  //\n  useFocusGuards,\n};\n", "'use client';\nexport {\n  createDialogScope,\n  //\n  Dialog,\n  DialogTrigger,\n  DialogPortal,\n  DialogOverlay,\n  DialogContent,\n  DialogTitle,\n  DialogDescription,\n  DialogClose,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Overlay,\n  Content,\n  Title,\n  Description,\n  Close,\n  //\n  WarningProvider,\n} from './Dialog';\nexport type {\n  DialogProps,\n  DialogTriggerProps,\n  DialogPortalProps,\n  DialogOverlayProps,\n  DialogContentProps,\n  DialogTitleProps,\n  DialogDescriptionProps,\n  DialogCloseProps,\n} from './Dialog';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContext, createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport { hideOthers } from 'aria-hidden';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog\n * -----------------------------------------------------------------------------------------------*/\n\nconst DIALOG_NAME = 'Dialog';\n\ntype ScopedProps<P> = P & { __scopeDialog?: Scope };\nconst [createDialogContext, createDialogScope] = createContextScope(DIALOG_NAME);\n\ntype DialogContextValue = {\n  triggerRef: React.RefObject<HTMLButtonElement>;\n  contentRef: React.RefObject<DialogContentElement>;\n  contentId: string;\n  titleId: string;\n  descriptionId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  modal: boolean;\n};\n\nconst [DialogProvider, useDialogContext] = createDialogContext<DialogContextValue>(DIALOG_NAME);\n\ninterface DialogProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  modal?: boolean;\n}\n\nconst Dialog: React.FC<DialogProps> = (props: ScopedProps<DialogProps>) => {\n  const {\n    __scopeDialog,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = true,\n  } = props;\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const contentRef = React.useRef<DialogContentElement>(null);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <DialogProvider\n      scope={__scopeDialog}\n      triggerRef={triggerRef}\n      contentRef={contentRef}\n      contentId={useId()}\n      titleId={useId()}\n      descriptionId={useId()}\n      open={open}\n      onOpenChange={setOpen}\n      onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      modal={modal}\n    >\n      {children}\n    </DialogProvider>\n  );\n};\n\nDialog.displayName = DIALOG_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'DialogTrigger';\n\ntype DialogTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface DialogTriggerProps extends PrimitiveButtonProps {}\n\nconst DialogTrigger = React.forwardRef<DialogTriggerElement, DialogTriggerProps>(\n  (props: ScopedProps<DialogTriggerProps>, forwardedRef) => {\n    const { __scopeDialog, ...triggerProps } = props;\n    const context = useDialogContext(TRIGGER_NAME, __scopeDialog);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n    return (\n      <Primitive.button\n        type=\"button\"\n        aria-haspopup=\"dialog\"\n        aria-expanded={context.open}\n        aria-controls={context.contentId}\n        data-state={getState(context.open)}\n        {...triggerProps}\n        ref={composedTriggerRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n  }\n);\n\nDialogTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'DialogPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createDialogContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface DialogPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogPortal: React.FC<DialogPortalProps> = (props: ScopedProps<DialogPortalProps>) => {\n  const { __scopeDialog, forceMount, children, container } = props;\n  const context = useDialogContext(PORTAL_NAME, __scopeDialog);\n  return (\n    <PortalProvider scope={__scopeDialog} forceMount={forceMount}>\n      {React.Children.map(children, (child) => (\n        <Presence present={forceMount || context.open}>\n          <PortalPrimitive asChild container={container}>\n            {child}\n          </PortalPrimitive>\n        </Presence>\n      ))}\n    </PortalProvider>\n  );\n};\n\nDialogPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogOverlay\n * -----------------------------------------------------------------------------------------------*/\n\nconst OVERLAY_NAME = 'DialogOverlay';\n\ntype DialogOverlayElement = DialogOverlayImplElement;\ninterface DialogOverlayProps extends DialogOverlayImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogOverlay = React.forwardRef<DialogOverlayElement, DialogOverlayProps>(\n  (props: ScopedProps<DialogOverlayProps>, forwardedRef) => {\n    const portalContext = usePortalContext(OVERLAY_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, props.__scopeDialog);\n    return context.modal ? (\n      <Presence present={forceMount || context.open}>\n        <DialogOverlayImpl {...overlayProps} ref={forwardedRef} />\n      </Presence>\n    ) : null;\n  }\n);\n\nDialogOverlay.displayName = OVERLAY_NAME;\n\ntype DialogOverlayImplElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DialogOverlayImplProps extends PrimitiveDivProps {}\n\nconst DialogOverlayImpl = React.forwardRef<DialogOverlayImplElement, DialogOverlayImplProps>(\n  (props: ScopedProps<DialogOverlayImplProps>, forwardedRef) => {\n    const { __scopeDialog, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, __scopeDialog);\n    return (\n      // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`\n      // ie. when `Overlay` and `Content` are siblings\n      <RemoveScroll as={Slot} allowPinchZoom shards={[context.contentRef]}>\n        <Primitive.div\n          data-state={getState(context.open)}\n          {...overlayProps}\n          ref={forwardedRef}\n          // We re-enable pointer-events prevented by `Dialog.Content` to allow scrolling the overlay.\n          style={{ pointerEvents: 'auto', ...overlayProps.style }}\n        />\n      </RemoveScroll>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'DialogContent';\n\ntype DialogContentElement = DialogContentTypeElement;\ninterface DialogContentProps extends DialogContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogContent = React.forwardRef<DialogContentElement, DialogContentProps>(\n  (props: ScopedProps<DialogContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    return (\n      <Presence present={forceMount || context.open}>\n        {context.modal ? (\n          <DialogContentModal {...contentProps} ref={forwardedRef} />\n        ) : (\n          <DialogContentNonModal {...contentProps} ref={forwardedRef} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nDialogContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentTypeElement = DialogContentImplElement;\ninterface DialogContentTypeProps\n  extends Omit<DialogContentImplProps, 'trapFocus' | 'disableOutsidePointerEvents'> {}\n\nconst DialogContentModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, context.contentRef, contentRef);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      const content = contentRef.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={composedRefs}\n        // we make sure focus isn't trapped once `DialogContent` has been closed\n        // (closed !== unmounted when animating out)\n        trapFocus={context.open}\n        disableOutsidePointerEvents\n        onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n          event.preventDefault();\n          context.triggerRef.current?.focus();\n        })}\n        onPointerDownOutside={composeEventHandlers(props.onPointerDownOutside, (event) => {\n          const originalEvent = event.detail.originalEvent;\n          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n\n          // If the event is a right-click, we shouldn't close because\n          // it is effectively as if we right-clicked the `Overlay`.\n          if (isRightClick) event.preventDefault();\n        })}\n        // When focus is trapped, a `focusout` event may still happen.\n        // We make sure we don't trigger our `onDismiss` in such case.\n        onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) =>\n          event.preventDefault()\n        )}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst DialogContentNonModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const hasInteractedOutsideRef = React.useRef(false);\n    const hasPointerDownOutsideRef = React.useRef(false);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={forwardedRef}\n        trapFocus={false}\n        disableOutsidePointerEvents={false}\n        onCloseAutoFocus={(event) => {\n          props.onCloseAutoFocus?.(event);\n\n          if (!event.defaultPrevented) {\n            if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n            // Always prevent auto focus because we either focus manually or want user agent focus\n            event.preventDefault();\n          }\n\n          hasInteractedOutsideRef.current = false;\n          hasPointerDownOutsideRef.current = false;\n        }}\n        onInteractOutside={(event) => {\n          props.onInteractOutside?.(event);\n\n          if (!event.defaultPrevented) {\n            hasInteractedOutsideRef.current = true;\n            if (event.detail.originalEvent.type === 'pointerdown') {\n              hasPointerDownOutsideRef.current = true;\n            }\n          }\n\n          // Prevent dismissing when clicking the trigger.\n          // As the trigger is already setup to close, without doing so would\n          // cause it to close and immediately open.\n          const target = event.target as HTMLElement;\n          const targetIsTrigger = context.triggerRef.current?.contains(target);\n          if (targetIsTrigger) event.preventDefault();\n\n          // On Safari if the trigger is inside a container with tabIndex={0}, when clicked\n          // we will get the pointer down outside event on the trigger, but then a subsequent\n          // focus outside event on the container, we ignore any focus outside event when we've\n          // already had a pointer down outside event.\n          if (event.detail.originalEvent.type === 'focusin' && hasPointerDownOutsideRef.current) {\n            event.preventDefault();\n          }\n        }}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentImplElement = React.ElementRef<typeof DismissableLayer>;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype FocusScopeProps = React.ComponentPropsWithoutRef<typeof FocusScope>;\ninterface DialogContentImplProps extends Omit<DismissableLayerProps, 'onDismiss'> {\n  /**\n   * When `true`, focus cannot escape the `Content` via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n}\n\nconst DialogContentImpl = React.forwardRef<DialogContentImplElement, DialogContentImplProps>(\n  (props: ScopedProps<DialogContentImplProps>, forwardedRef) => {\n    const { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, __scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n\n    // Make sure the whole tree has focus guards as our `Dialog` will be\n    // the last element in the DOM (beacuse of the `Portal`)\n    useFocusGuards();\n\n    return (\n      <>\n        <FocusScope\n          asChild\n          loop\n          trapped={trapFocus}\n          onMountAutoFocus={onOpenAutoFocus}\n          onUnmountAutoFocus={onCloseAutoFocus}\n        >\n          <DismissableLayer\n            role=\"dialog\"\n            id={context.contentId}\n            aria-describedby={context.descriptionId}\n            aria-labelledby={context.titleId}\n            data-state={getState(context.open)}\n            {...contentProps}\n            ref={composedRefs}\n            onDismiss={() => context.onOpenChange(false)}\n          />\n        </FocusScope>\n        {process.env.NODE_ENV !== 'production' && (\n          <>\n            <TitleWarning titleId={context.titleId} />\n            <DescriptionWarning contentRef={contentRef} descriptionId={context.descriptionId} />\n          </>\n        )}\n      </>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTitle\n * -----------------------------------------------------------------------------------------------*/\n\nconst TITLE_NAME = 'DialogTitle';\n\ntype DialogTitleElement = React.ElementRef<typeof Primitive.h2>;\ntype PrimitiveHeading2Props = React.ComponentPropsWithoutRef<typeof Primitive.h2>;\ninterface DialogTitleProps extends PrimitiveHeading2Props {}\n\nconst DialogTitle = React.forwardRef<DialogTitleElement, DialogTitleProps>(\n  (props: ScopedProps<DialogTitleProps>, forwardedRef) => {\n    const { __scopeDialog, ...titleProps } = props;\n    const context = useDialogContext(TITLE_NAME, __scopeDialog);\n    return <Primitive.h2 id={context.titleId} {...titleProps} ref={forwardedRef} />;\n  }\n);\n\nDialogTitle.displayName = TITLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogDescription\n * -----------------------------------------------------------------------------------------------*/\n\nconst DESCRIPTION_NAME = 'DialogDescription';\n\ntype DialogDescriptionElement = React.ElementRef<typeof Primitive.p>;\ntype PrimitiveParagraphProps = React.ComponentPropsWithoutRef<typeof Primitive.p>;\ninterface DialogDescriptionProps extends PrimitiveParagraphProps {}\n\nconst DialogDescription = React.forwardRef<DialogDescriptionElement, DialogDescriptionProps>(\n  (props: ScopedProps<DialogDescriptionProps>, forwardedRef) => {\n    const { __scopeDialog, ...descriptionProps } = props;\n    const context = useDialogContext(DESCRIPTION_NAME, __scopeDialog);\n    return <Primitive.p id={context.descriptionId} {...descriptionProps} ref={forwardedRef} />;\n  }\n);\n\nDialogDescription.displayName = DESCRIPTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst CLOSE_NAME = 'DialogClose';\n\ntype DialogCloseElement = React.ElementRef<typeof Primitive.button>;\ninterface DialogCloseProps extends PrimitiveButtonProps {}\n\nconst DialogClose = React.forwardRef<DialogCloseElement, DialogCloseProps>(\n  (props: ScopedProps<DialogCloseProps>, forwardedRef) => {\n    const { __scopeDialog, ...closeProps } = props;\n    const context = useDialogContext(CLOSE_NAME, __scopeDialog);\n    return (\n      <Primitive.button\n        type=\"button\"\n        {...closeProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, () => context.onOpenChange(false))}\n      />\n    );\n  }\n);\n\nDialogClose.displayName = CLOSE_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst TITLE_WARNING_NAME = 'DialogTitleWarning';\n\nconst [WarningProvider, useWarningContext] = createContext(TITLE_WARNING_NAME, {\n  contentName: CONTENT_NAME,\n  titleName: TITLE_NAME,\n  docsSlug: 'dialog',\n});\n\ntype TitleWarningProps = { titleId?: string };\n\nconst TitleWarning: React.FC<TitleWarningProps> = ({ titleId }) => {\n  const titleWarningContext = useWarningContext(TITLE_WARNING_NAME);\n\n  const MESSAGE = `\\`${titleWarningContext.contentName}\\` requires a \\`${titleWarningContext.titleName}\\` for the component to be accessible for screen reader users.\n\nIf you want to hide the \\`${titleWarningContext.titleName}\\`, you can wrap it with our VisuallyHidden component.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/${titleWarningContext.docsSlug}`;\n\n  React.useEffect(() => {\n    if (titleId) {\n      const hasTitle = document.getElementById(titleId);\n      if (!hasTitle) console.error(MESSAGE);\n    }\n  }, [MESSAGE, titleId]);\n\n  return null;\n};\n\nconst DESCRIPTION_WARNING_NAME = 'DialogDescriptionWarning';\n\ntype DescriptionWarningProps = {\n  contentRef: React.RefObject<DialogContentElement>;\n  descriptionId?: string;\n};\n\nconst DescriptionWarning: React.FC<DescriptionWarningProps> = ({ contentRef, descriptionId }) => {\n  const descriptionWarningContext = useWarningContext(DESCRIPTION_WARNING_NAME);\n  const MESSAGE = `Warning: Missing \\`Description\\` or \\`aria-describedby={undefined}\\` for {${descriptionWarningContext.contentName}}.`;\n\n  React.useEffect(() => {\n    const describedById = contentRef.current?.getAttribute('aria-describedby');\n    // if we have an id and the user hasn't set aria-describedby={undefined}\n    if (descriptionId && describedById) {\n      const hasDescription = document.getElementById(descriptionId);\n      if (!hasDescription) console.warn(MESSAGE);\n    }\n  }, [MESSAGE, contentRef, descriptionId]);\n\n  return null;\n};\n\nconst Root = Dialog;\nconst Trigger = DialogTrigger;\nconst Portal = DialogPortal;\nconst Overlay = DialogOverlay;\nconst Content = DialogContent;\nconst Title = DialogTitle;\nconst Description = DialogDescription;\nconst Close = DialogClose;\n\nexport {\n  createDialogScope,\n  //\n  Dialog,\n  DialogTrigger,\n  DialogPortal,\n  DialogOverlay,\n  DialogContent,\n  DialogTitle,\n  DialogDescription,\n  DialogClose,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Overlay,\n  Content,\n  Title,\n  Description,\n  Close,\n  //\n  WarningProvider,\n};\nexport type {\n  DialogProps,\n  DialogTriggerProps,\n  DialogPortalProps,\n  DialogOverlayProps,\n  DialogContentProps,\n  DialogTitleProps,\n  DialogDescriptionProps,\n  DialogCloseProps,\n};\n", "'use client';\nexport {\n  createAlertDialogScope,\n  //\n  AlertDialog,\n  AlertDialogTrigger,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogContent,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Overlay,\n  Content,\n  Action,\n  Cancel,\n  Title,\n  Description,\n} from './AlertDialog';\nexport type {\n  AlertDialogProps,\n  AlertDialogTriggerProps,\n  AlertDialogPortalProps,\n  AlertDialogOverlayProps,\n  AlertDialogContentProps,\n  AlertDialogActionProps,\n  AlertDialogCancelProps,\n  AlertDialogTitleProps,\n  AlertDialogDescriptionProps,\n} from './AlertDialog';\n", "import * as React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\nimport { createDialogScope } from '@radix-ui/react-dialog';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { Slottable } from '@radix-ui/react-slot';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialog\n * -----------------------------------------------------------------------------------------------*/\n\nconst ROOT_NAME = 'AlertDialog';\n\ntype ScopedProps<P> = P & { __scopeAlertDialog?: Scope };\nconst [createAlertDialogContext, createAlertDialogScope] = createContextScope(ROOT_NAME, [\n  createDialogScope,\n]);\nconst useDialogScope = createDialogScope();\n\ntype DialogProps = React.ComponentPropsWithoutRef<typeof DialogPrimitive.Root>;\ninterface AlertDialogProps extends Omit<DialogProps, 'modal'> {}\n\nconst AlertDialog: React.FC<AlertDialogProps> = (props: ScopedProps<AlertDialogProps>) => {\n  const { __scopeAlertDialog, ...alertDialogProps } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  return <DialogPrimitive.Root {...dialogScope} {...alertDialogProps} modal={true} />;\n};\n\nAlertDialog.displayName = ROOT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogTrigger\n * -----------------------------------------------------------------------------------------------*/\nconst TRIGGER_NAME = 'AlertDialogTrigger';\n\ntype AlertDialogTriggerElement = React.ElementRef<typeof DialogPrimitive.Trigger>;\ntype DialogTriggerProps = React.ComponentPropsWithoutRef<typeof DialogPrimitive.Trigger>;\ninterface AlertDialogTriggerProps extends DialogTriggerProps {}\n\nconst AlertDialogTrigger = React.forwardRef<AlertDialogTriggerElement, AlertDialogTriggerProps>(\n  (props: ScopedProps<AlertDialogTriggerProps>, forwardedRef) => {\n    const { __scopeAlertDialog, ...triggerProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    return <DialogPrimitive.Trigger {...dialogScope} {...triggerProps} ref={forwardedRef} />;\n  }\n);\n\nAlertDialogTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'AlertDialogPortal';\n\ntype DialogPortalProps = React.ComponentPropsWithoutRef<typeof DialogPrimitive.Portal>;\ninterface AlertDialogPortalProps extends DialogPortalProps {}\n\nconst AlertDialogPortal: React.FC<AlertDialogPortalProps> = (\n  props: ScopedProps<AlertDialogPortalProps>\n) => {\n  const { __scopeAlertDialog, ...portalProps } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  return <DialogPrimitive.Portal {...dialogScope} {...portalProps} />;\n};\n\nAlertDialogPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogOverlay\n * -----------------------------------------------------------------------------------------------*/\n\nconst OVERLAY_NAME = 'AlertDialogOverlay';\n\ntype AlertDialogOverlayElement = React.ElementRef<typeof DialogPrimitive.Overlay>;\ntype DialogOverlayProps = React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>;\ninterface AlertDialogOverlayProps extends DialogOverlayProps {}\n\nconst AlertDialogOverlay = React.forwardRef<AlertDialogOverlayElement, AlertDialogOverlayProps>(\n  (props: ScopedProps<AlertDialogOverlayProps>, forwardedRef) => {\n    const { __scopeAlertDialog, ...overlayProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    return <DialogPrimitive.Overlay {...dialogScope} {...overlayProps} ref={forwardedRef} />;\n  }\n);\n\nAlertDialogOverlay.displayName = OVERLAY_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'AlertDialogContent';\n\ntype AlertDialogContentContextValue = {\n  cancelRef: React.MutableRefObject<AlertDialogCancelElement | null>;\n};\n\nconst [AlertDialogContentProvider, useAlertDialogContentContext] =\n  createAlertDialogContext<AlertDialogContentContextValue>(CONTENT_NAME);\n\ntype AlertDialogContentElement = React.ElementRef<typeof DialogPrimitive.Content>;\ntype DialogContentProps = React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>;\ninterface AlertDialogContentProps\n  extends Omit<DialogContentProps, 'onPointerDownOutside' | 'onInteractOutside'> {}\n\nconst AlertDialogContent = React.forwardRef<AlertDialogContentElement, AlertDialogContentProps>(\n  (props: ScopedProps<AlertDialogContentProps>, forwardedRef) => {\n    const { __scopeAlertDialog, children, ...contentProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    const contentRef = React.useRef<AlertDialogContentElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n    const cancelRef = React.useRef<AlertDialogCancelElement | null>(null);\n\n    return (\n      <DialogPrimitive.WarningProvider\n        contentName={CONTENT_NAME}\n        titleName={TITLE_NAME}\n        docsSlug=\"alert-dialog\"\n      >\n        <AlertDialogContentProvider scope={__scopeAlertDialog} cancelRef={cancelRef}>\n          <DialogPrimitive.Content\n            role=\"alertdialog\"\n            {...dialogScope}\n            {...contentProps}\n            ref={composedRefs}\n            onOpenAutoFocus={composeEventHandlers(contentProps.onOpenAutoFocus, (event) => {\n              event.preventDefault();\n              cancelRef.current?.focus({ preventScroll: true });\n            })}\n            onPointerDownOutside={(event) => event.preventDefault()}\n            onInteractOutside={(event) => event.preventDefault()}\n          >\n            {/**\n             * We have to use `Slottable` here as we cannot wrap the `AlertDialogContentProvider`\n             * around everything, otherwise the `DescriptionWarning` would be rendered straight away.\n             * This is because we want the accessibility checks to run only once the content is actually\n             * open and that behaviour is already encapsulated in `DialogContent`.\n             */}\n            <Slottable>{children}</Slottable>\n            {process.env.NODE_ENV === 'development' && (\n              <DescriptionWarning contentRef={contentRef} />\n            )}\n          </DialogPrimitive.Content>\n        </AlertDialogContentProvider>\n      </DialogPrimitive.WarningProvider>\n    );\n  }\n);\n\nAlertDialogContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogTitle\n * -----------------------------------------------------------------------------------------------*/\n\nconst TITLE_NAME = 'AlertDialogTitle';\n\ntype AlertDialogTitleElement = React.ElementRef<typeof DialogPrimitive.Title>;\ntype DialogTitleProps = React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>;\ninterface AlertDialogTitleProps extends DialogTitleProps {}\n\nconst AlertDialogTitle = React.forwardRef<AlertDialogTitleElement, AlertDialogTitleProps>(\n  (props: ScopedProps<AlertDialogTitleProps>, forwardedRef) => {\n    const { __scopeAlertDialog, ...titleProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    return <DialogPrimitive.Title {...dialogScope} {...titleProps} ref={forwardedRef} />;\n  }\n);\n\nAlertDialogTitle.displayName = TITLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogDescription\n * -----------------------------------------------------------------------------------------------*/\n\nconst DESCRIPTION_NAME = 'AlertDialogDescription';\n\ntype AlertDialogDescriptionElement = React.ElementRef<typeof DialogPrimitive.Description>;\ntype DialogDescriptionProps = React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>;\ninterface AlertDialogDescriptionProps extends DialogDescriptionProps {}\n\nconst AlertDialogDescription = React.forwardRef<\n  AlertDialogDescriptionElement,\n  AlertDialogDescriptionProps\n>((props: ScopedProps<AlertDialogDescriptionProps>, forwardedRef) => {\n  const { __scopeAlertDialog, ...descriptionProps } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  return <DialogPrimitive.Description {...dialogScope} {...descriptionProps} ref={forwardedRef} />;\n});\n\nAlertDialogDescription.displayName = DESCRIPTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogAction\n * -----------------------------------------------------------------------------------------------*/\n\nconst ACTION_NAME = 'AlertDialogAction';\n\ntype AlertDialogActionElement = React.ElementRef<typeof DialogPrimitive.Close>;\ntype DialogCloseProps = React.ComponentPropsWithoutRef<typeof DialogPrimitive.Close>;\ninterface AlertDialogActionProps extends DialogCloseProps {}\n\nconst AlertDialogAction = React.forwardRef<AlertDialogActionElement, AlertDialogActionProps>(\n  (props: ScopedProps<AlertDialogActionProps>, forwardedRef) => {\n    const { __scopeAlertDialog, ...actionProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    return <DialogPrimitive.Close {...dialogScope} {...actionProps} ref={forwardedRef} />;\n  }\n);\n\nAlertDialogAction.displayName = ACTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogCancel\n * -----------------------------------------------------------------------------------------------*/\n\nconst CANCEL_NAME = 'AlertDialogCancel';\n\ntype AlertDialogCancelElement = React.ElementRef<typeof DialogPrimitive.Close>;\ninterface AlertDialogCancelProps extends DialogCloseProps {}\n\nconst AlertDialogCancel = React.forwardRef<AlertDialogCancelElement, AlertDialogCancelProps>(\n  (props: ScopedProps<AlertDialogCancelProps>, forwardedRef) => {\n    const { __scopeAlertDialog, ...cancelProps } = props;\n    const { cancelRef } = useAlertDialogContentContext(CANCEL_NAME, __scopeAlertDialog);\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    const ref = useComposedRefs(forwardedRef, cancelRef);\n    return <DialogPrimitive.Close {...dialogScope} {...cancelProps} ref={ref} />;\n  }\n);\n\nAlertDialogCancel.displayName = CANCEL_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype DescriptionWarningProps = {\n  contentRef: React.RefObject<AlertDialogContentElement>;\n};\n\nconst DescriptionWarning: React.FC<DescriptionWarningProps> = ({ contentRef }) => {\n  const MESSAGE = `\\`${CONTENT_NAME}\\` requires a description for the component to be accessible for screen reader users.\n\nYou can add a description to the \\`${CONTENT_NAME}\\` by passing a \\`${DESCRIPTION_NAME}\\` component as a child, which also benefits sighted users by adding visible context to the dialog.\n\nAlternatively, you can use your own component as a description by assigning it an \\`id\\` and passing the same value to the \\`aria-describedby\\` prop in \\`${CONTENT_NAME}\\`. If the description is confusing or duplicative for sighted users, you can use the \\`@radix-ui/react-visually-hidden\\` primitive as a wrapper around your description component.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;\n\n  React.useEffect(() => {\n    const hasDescription = document.getElementById(\n      contentRef.current?.getAttribute('aria-describedby')!\n    );\n    if (!hasDescription) console.warn(MESSAGE);\n  }, [MESSAGE, contentRef]);\n\n  return null;\n};\n\nconst Root = AlertDialog;\nconst Trigger = AlertDialogTrigger;\nconst Portal = AlertDialogPortal;\nconst Overlay = AlertDialogOverlay;\nconst Content = AlertDialogContent;\nconst Action = AlertDialogAction;\nconst Cancel = AlertDialogCancel;\nconst Title = AlertDialogTitle;\nconst Description = AlertDialogDescription;\n\nexport {\n  createAlertDialogScope,\n  //\n  AlertDialog,\n  AlertDialogTrigger,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogContent,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Overlay,\n  Content,\n  Action,\n  Cancel,\n  Title,\n  Description,\n};\nexport type {\n  AlertDialogProps,\n  AlertDialogTriggerProps,\n  AlertDialogPortalProps,\n  AlertDialogOverlayProps,\n  AlertDialogContentProps,\n  AlertDialogActionProps,\n  AlertDialogCancelProps,\n  AlertDialogTitleProps,\n  AlertDialogDescriptionProps,\n};\n", "import type { PropDef } from './prop-def.js';\n\nconst asChildPropDef = {\n  /**\n   * Composes the component into its immediate child instead of rendering its own HTML element.\n   * You\u2019ll have to provide a single React Element child.\n   */\n  asChild: {\n    type: 'boolean',\n  },\n} satisfies {\n  asChild: PropDef<boolean>;\n};\n\nexport { asChildPropDef };\n", "import type { GetPropDefTypes, PropDef } from './prop-def.js';\n\nconst widthPropDefs = {\n  /**\n   * Sets the CSS **width** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * width=\"100px\"\n   * width={{ md: '100vw', xl: '1400px' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/width\n   */\n  width: {\n    type: 'string',\n    className: 'rt-r-w',\n    customProperties: ['--width'],\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **min-width** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * minWidth=\"100px\"\n   * minWidth={{ md: '100vw', xl: '1400px' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/min-width\n   */\n  minWidth: {\n    type: 'string',\n    className: 'rt-r-min-w',\n    customProperties: ['--min-width'],\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **max-width** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * maxWidth=\"100px\"\n   * maxWidth={{ md: '100vw', xl: '1400px' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/max-width\n   */\n  maxWidth: {\n    type: 'string',\n    className: 'rt-r-max-w',\n    customProperties: ['--max-width'],\n    responsive: true,\n  },\n} satisfies {\n  width: PropDef<string>;\n  minWidth: PropDef<string>;\n  maxWidth: PropDef<string>;\n};\n\ntype WidthProps = GetPropDefTypes<typeof widthPropDefs>;\n\nexport { widthPropDefs };\nexport type { WidthProps };\n", "import type { PropDef, GetPropDefTypes } from './prop-def.js';\n\nconst heightPropDefs = {\n  /**\n   * Sets the CSS **height** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * height=\"100px\"\n   * height={{ md: '100vh', xl: '600px' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/height\n   */\n  height: {\n    type: 'string',\n    className: 'rt-r-h',\n    customProperties: ['--height'],\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **min-height** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * minHeight=\"100px\"\n   * minHeight={{ md: '100vh', xl: '600px' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/min-height\n   */\n  minHeight: {\n    type: 'string',\n    className: 'rt-r-min-h',\n    customProperties: ['--min-height'],\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **max-height** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * maxHeight=\"100px\"\n   * maxHeight={{ md: '100vh', xl: '600px' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/max-height\n   */\n  maxHeight: {\n    type: 'string',\n    className: 'rt-r-max-h',\n    customProperties: ['--max-height'],\n    responsive: true,\n  },\n} satisfies {\n  height: PropDef<string>;\n  minHeight: PropDef<string>;\n  maxHeight: PropDef<string>;\n};\n\ntype HeightProps = GetPropDefTypes<typeof heightPropDefs>;\n\nexport { heightPropDefs };\nexport type { HeightProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { widthPropDefs } from '../props/width.props.js';\nimport { heightPropDefs } from '../props/height.props.js';\n\nimport type { PropDef, GetPropDefTypes } from '../props/prop-def.js';\n\nconst alignValues = ['start', 'center'] as const;\nconst contentSizes = ['1', '2', '3', '4'] as const;\n\nconst dialogContentPropDefs = {\n  ...asChildPropDef,\n  align: {\n    type: 'enum',\n    className: 'rt-r-align',\n    values: ['start', 'center'],\n    default: 'center',\n  },\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: contentSizes,\n    default: '3',\n    responsive: true,\n  },\n  width: widthPropDefs.width,\n  minWidth: widthPropDefs.minWidth,\n  maxWidth: { ...widthPropDefs.maxWidth, default: '600px' },\n  ...heightPropDefs,\n} satisfies {\n  align: PropDef<(typeof alignValues)[number]>;\n  size: PropDef<(typeof contentSizes)[number]>;\n  width: PropDef<string>;\n  minWidth: PropDef<string>;\n  maxWidth: PropDef<string>;\n};\n\ntype DialogContentOwnProps = GetPropDefTypes<\n  typeof dialogContentPropDefs & typeof asChildPropDef & typeof widthPropDefs\n>;\n\nexport { dialogContentPropDefs };\nexport type { DialogContentOwnProps };\n", "export { dialogContentPropDefs as alertDialogContentPropDefs } from './dialog.props.js';\nexport type { DialogContentOwnProps as AlertDialogContentOwnProps } from './dialog.props.js';\n", "import type { PropDef } from './prop-def.js';\n\n// prettier-ignore\nconst accentColors = ['gray', 'gold', 'bronze', 'brown', 'yellow', 'amber', 'orange', 'tomato', 'red', 'ruby', 'crimson', 'pink', 'plum', 'purple', 'violet', 'iris', 'indigo', 'blue', 'cyan', 'teal', 'jade', 'green', 'grass', 'lime', 'mint', 'sky'] as const;\n\nconst grayColors = ['auto', 'gray', 'mauve', 'slate', 'sage', 'olive', 'sand'] as const;\n\nconst colorPropDef = {\n  color: {\n    type: 'enum',\n    values: accentColors,\n    default: undefined as (typeof accentColors)[number] | undefined,\n  },\n} satisfies {\n  color: PropDef<(typeof accentColors)[number]>;\n};\n\n// 1. When used on components that compose Text, sets the color of the text to the current accent.\n// 2. Defines accent color for descendant text components\u00A0with `highContrast={true}`.\nconst accentColorPropDef = {\n  color: {\n    type: 'enum',\n    values: accentColors,\n    default: '' as (typeof accentColors)[number],\n  },\n} satisfies {\n  color: PropDef<(typeof accentColors)[number]>;\n};\n\nexport {\n  accentColorPropDef,\n  colorPropDef,\n  //\n  accentColors,\n  grayColors,\n};\n", "import type { PropDef } from './prop-def.js';\n\nconst highContrastPropDef = {\n  highContrast: {\n    type: 'boolean',\n    className: 'rt-high-contrast',\n    default: undefined,\n  },\n} satisfies {\n  highContrast: PropDef<boolean>;\n};\n\nexport { highContrastPropDef };\n", "import type { PropDef } from './prop-def.js';\n\nconst leadingTrimValues = ['normal', 'start', 'end', 'both'] as const;\n\nconst leadingTrimPropDef = {\n  trim: {\n    type: 'enum',\n    className: 'rt-r-lt',\n    values: leadingTrimValues,\n    responsive: true,\n  },\n} satisfies {\n  trim: PropDef<(typeof leadingTrimValues)[number]>;\n};\n\nexport { leadingTrimPropDef };\n", "import type { PropDef } from './prop-def.js';\n\nconst textAlignValues = ['left', 'center', 'right'] as const;\n\nconst textAlignPropDef = {\n  align: {\n    type: 'enum',\n    className: 'rt-r-ta',\n    values: textAlignValues,\n    responsive: true,\n  },\n} satisfies {\n  align: PropDef<(typeof textAlignValues)[number]>;\n};\n\nexport { textAlignPropDef };\n", "import type { PropDef } from './prop-def.js';\n\nconst textWrapValues = ['wrap', 'nowrap', 'pretty', 'balance'] as const;\n\nconst textWrapPropDef = {\n  wrap: {\n    type: 'enum',\n    className: 'rt-r-tw',\n    values: textWrapValues,\n    responsive: true,\n  },\n} satisfies {\n  wrap: PropDef<(typeof textWrapValues)[number]>;\n};\n\nexport { textWrapPropDef };\n", "import type { PropDef } from './prop-def.js';\n\nconst truncatePropDef = {\n  truncate: {\n    type: 'boolean',\n    className: 'rt-truncate',\n  },\n} satisfies {\n  truncate: PropDef<boolean>;\n};\n\nexport { truncatePropDef };\n", "import type { PropDef } from './prop-def.js';\n\nconst weights = ['light', 'regular', 'medium', 'bold'] as const;\n\nconst weightPropDef = {\n  weight: {\n    type: 'enum',\n    className: 'rt-r-weight',\n    values: weights,\n    responsive: true,\n  },\n} satisfies {\n  weight: PropDef<(typeof weights)[number]>;\n};\n\nexport { weightPropDef };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { colorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { leadingTrimPropDef } from '../props/leading-trim.prop.js';\nimport { textAlignPropDef } from '../props/text-align.prop.js';\nimport { textWrapPropDef } from '../props/text-wrap.prop.js';\nimport { truncatePropDef } from '../props/truncate.prop.js';\nimport { weightPropDef } from '../props/weight.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst as = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] as const;\nconst sizes = ['1', '2', '3', '4', '5', '6', '7', '8', '9'] as const;\n\nconst headingPropDefs = {\n  as: { type: 'enum', values: as, default: 'h1' },\n  ...asChildPropDef,\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: sizes,\n    default: '6',\n    responsive: true,\n  },\n  ...weightPropDef,\n  ...textAlignPropDef,\n  ...leadingTrimPropDef,\n  ...truncatePropDef,\n  ...textWrapPropDef,\n  ...colorPropDef,\n  ...highContrastPropDef,\n} satisfies {\n  as: PropDef<(typeof as)[number]>;\n  size: PropDef<(typeof sizes)[number]>;\n};\n\nexport { headingPropDefs };\n", "import type React from 'react';\n\n// Creates a union type of string literals with strings, but retains intellisense for the literals.\n// Union<string, 'foo' | 'bar'> => string | Omit<string, 'foo' | 'bar'>\ntype Union<S = string, T extends string | number = string> = T | Omit<S, T>;\n\nconst breakpoints = ['initial', 'xs', 'sm', 'md', 'lg', 'xl'] as const;\ntype Breakpoint = (typeof breakpoints)[number];\ntype Responsive<T> = T | Partial<Record<Breakpoint, T>>;\n\ntype BooleanPropDef = {\n  type: 'boolean';\n  default?: boolean;\n  required?: boolean;\n  className?: string;\n};\ntype StringPropDef = {\n  type: 'string';\n  default?: string;\n  required?: boolean;\n};\ntype ReactNodePropDef = {\n  type: 'ReactNode';\n  default?: React.ReactNode;\n  required?: boolean;\n};\ntype EnumPropDef<T> = {\n  type: 'enum';\n  values: readonly T[];\n  default?: T;\n  required?: boolean;\n};\ntype EnumOrStringPropDef<T> = {\n  type: 'enum | string';\n  values: readonly T[];\n  default?: T | string;\n  required?: boolean;\n};\n\ntype NonStylingPropDef = {\n  className?: never;\n  customProperties?: never;\n  parseValue?: never;\n};\n\ntype StylingPropDef = {\n  className: string;\n  parseValue?: (value: string) => string | undefined;\n};\n\ntype ArbitraryStylingPropDef = {\n  className: string;\n  customProperties: `--${string}`[];\n  parseValue?: (value: string) => string | undefined;\n};\n\ntype RegularPropDef<T> =\n  | ReactNodePropDef\n  | BooleanPropDef\n  | (StringPropDef & ArbitraryStylingPropDef)\n  | (StringPropDef & NonStylingPropDef)\n  | (EnumPropDef<T> & StylingPropDef)\n  | (EnumPropDef<T> & NonStylingPropDef)\n  | (EnumOrStringPropDef<T> & ArbitraryStylingPropDef)\n  | (EnumOrStringPropDef<T> & NonStylingPropDef);\ntype ResponsivePropDef<T = any> = RegularPropDef<T> & { responsive: true };\ntype PropDef<T = any> = RegularPropDef<T> | ResponsivePropDef<T>;\n\n// prettier-ignore\ntype GetPropDefType<Def> =\n    Def extends BooleanPropDef ? (Def extends ResponsivePropDef ? Responsive<boolean> : boolean)\n  : Def extends StringPropDef ? (Def extends ResponsivePropDef ? Responsive<string> : string)\n  : Def extends ReactNodePropDef ? (Def extends ResponsivePropDef ? Responsive<React.ReactNode> : React.ReactNode)\n  : Def extends EnumOrStringPropDef<infer Type> ?\n    Def extends ResponsivePropDef<infer Type extends string> ? Responsive<Union<string, Type>> : Type\n  : Def extends EnumPropDef<infer Type> ? (Def extends ResponsivePropDef<infer Type> ? Responsive<Type> : Type)\n  : never;\n\ntype GetPropDefTypes<P> = {\n  [K in keyof P]?: GetPropDefType<P[K]>;\n};\n\nexport { breakpoints };\nexport type {\n  PropDef,\n  GetPropDefTypes,\n  ResponsivePropDef,\n  //\n  Breakpoint,\n  Responsive,\n  Union,\n};\n", "/** A util to check whether the object has a key, while inferring the correct key type */\nfunction hasOwnProperty<K extends string | number | symbol>(\n  obj: Record<K, unknown>,\n  key: string | number | symbol\n): key is K {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport { hasOwnProperty };\n", "import { breakpoints } from '../props/prop-def.js';\n\nimport type { Responsive, Breakpoint } from '../props/prop-def.js';\n\nexport function isResponsiveObject<Value extends string>(\n  obj: Responsive<Value | Omit<string, Value>> | undefined\n): obj is Record<Breakpoint, string> {\n  return (\n    typeof obj === 'object' &&\n    Object.keys(obj).some((key) => (breakpoints as readonly string[]).includes(key))\n  );\n}\n", "import { breakpoints } from '../props/prop-def.js';\nimport { hasOwnProperty } from './has-own-property.js';\nimport { isResponsiveObject } from './is-responsive-object.js';\n\nimport type { Responsive, Union } from '../props/prop-def.js';\n\ninterface GetResponsiveStylesOptions {\n  className: string;\n  customProperties: `--${string}`[];\n  value: Responsive<Union> | Responsive<string> | undefined;\n  propValues: string[] | readonly string[];\n  parseValue?: (value: string) => string | undefined;\n}\n\nfunction getResponsiveStyles({ className, customProperties, ...args }: GetResponsiveStylesOptions) {\n  const responsiveClassNames = getResponsiveClassNames({\n    allowArbitraryValues: true,\n    className,\n    ...args,\n  });\n\n  const responsiveCustomProperties = getResponsiveCustomProperties({ customProperties, ...args });\n  return [responsiveClassNames, responsiveCustomProperties] as const;\n}\n\ninterface GetResponsiveClassNamesOptions {\n  allowArbitraryValues?: boolean;\n  className: string;\n  value: Responsive<Union> | Responsive<string> | undefined;\n  propValues: string[] | readonly string[];\n  parseValue?: (value: string) => string | undefined;\n}\n\nfunction getResponsiveClassNames({\n  allowArbitraryValues,\n  value,\n  className,\n  propValues,\n  parseValue = (value) => value,\n}: GetResponsiveClassNamesOptions): string | undefined {\n  const classNames: string[] = [];\n\n  if (!value) {\n    return undefined;\n  }\n\n  if (typeof value === 'string' && propValues.includes(value)) {\n    return getBaseClassName(className, value, parseValue);\n  }\n\n  if (isResponsiveObject(value)) {\n    const object = value;\n\n    for (const bp in object) {\n      // Make sure we are not iterating over keys that aren't breakpoints\n      if (!hasOwnProperty(object, bp) || !breakpoints.includes(bp)) {\n        continue;\n      }\n\n      const value = object[bp];\n\n      if (value !== undefined) {\n        if (propValues.includes(value)) {\n          const baseClassName = getBaseClassName(className, value, parseValue);\n          const bpClassName = bp === 'initial' ? baseClassName : `${bp}:${baseClassName}`;\n          classNames.push(bpClassName);\n        } else if (allowArbitraryValues) {\n          const bpClassName = bp === 'initial' ? className : `${bp}:${className}`;\n          classNames.push(bpClassName);\n        }\n      }\n    }\n\n    return classNames.join(' ');\n  }\n\n  if (allowArbitraryValues) {\n    return className;\n  }\n}\n\nfunction getBaseClassName(\n  className: string,\n  value: string,\n  parseValue: (value: string) => string | undefined\n): string {\n  const delimiter = className ? '-' : '';\n  const matchedValue = parseValue(value);\n  const isNegative = matchedValue?.startsWith('-');\n  const minus = isNegative ? '-' : '';\n  const absoluteValue = isNegative ? matchedValue?.substring(1) : matchedValue;\n  return `${minus}${className}${delimiter}${absoluteValue}`;\n}\n\ninterface GetResponsiveCustomPropertiesOptions {\n  customProperties: `--${string}`[];\n  value: Responsive<Union> | Responsive<string> | undefined;\n  propValues: string[] | readonly string[];\n  parseValue?: (value: string) => string | undefined;\n}\n\nfunction getResponsiveCustomProperties({\n  customProperties,\n  value,\n  propValues,\n  parseValue = (value) => value,\n}: GetResponsiveCustomPropertiesOptions) {\n  let styles: Record<string, string | undefined> = {};\n\n  // Don't generate custom properties if the value is not arbitrary\n  if (!value || (typeof value === 'string' && propValues.includes(value))) {\n    return undefined;\n  }\n\n  if (typeof value === 'string') {\n    styles = Object.fromEntries(customProperties.map((prop) => [prop, value]));\n  }\n\n  if (isResponsiveObject(value)) {\n    const object = value;\n\n    for (const bp in object) {\n      // Make sure we are not iterating over keys that aren't breakpoints\n      if (!hasOwnProperty(object, bp) || !breakpoints.includes(bp)) {\n        continue;\n      }\n\n      const value = object[bp];\n\n      // Don't generate a custom property if the value is not arbitrary\n      if (propValues.includes(value)) {\n        continue;\n      }\n\n      for (const customProperty of customProperties) {\n        const bpProperty = bp === 'initial' ? customProperty : `${customProperty}-${bp}`;\n\n        styles = {\n          [bpProperty]: value,\n          ...styles,\n        };\n      }\n    }\n  }\n\n  for (const key in styles) {\n    const value = styles[key];\n    if (value !== undefined) {\n      styles[key] = parseValue(value);\n    }\n  }\n\n  return styles;\n}\n\nexport { getResponsiveStyles, getResponsiveCustomProperties, getResponsiveClassNames };\n", "type InlineStyle =\n  | React.CSSProperties\n  | Record<string, string | number | null | undefined>\n  | undefined;\n\n// Merges CSS styles like `classNames` merges CSS classes\nexport function mergeStyles(...styles: Array<InlineStyle>): InlineStyle {\n  let result: InlineStyle = {};\n\n  for (const style of styles) {\n    if (style) {\n      result = { ...result, ...style };\n    }\n  }\n\n  return Object.keys(result).length ? result : undefined;\n}\n", "import classNames from 'classnames';\n\nimport { getResponsiveClassNames, getResponsiveStyles } from './get-responsive-styles.js';\nimport { isResponsiveObject } from './is-responsive-object.js';\nimport { mergeStyles } from './merge-styles.js';\n\nimport type * as React from 'react';\nimport type { PropDef } from '../props/prop-def.js';\n\ntype PropDefsWithClassName<T> = T extends Record<string, PropDef>\n  ? { [K in keyof T]: T[K] extends { className: string } ? K : never }[keyof T]\n  : never;\n\nfunction mergePropDefs<T extends Record<string, PropDef>[]>(...args: T): Record<string, PropDef> {\n  return Object.assign({}, ...args);\n}\n\n/**\n * Takes props, checks them against prop defs that have a `className` on them,\n * adds necessary CSS classes and inline styles, and returns the props without\n * the corresponding prop defs that were used to formulate the new `className`\n * and `style` values. Also applies prop def defaults to every prop.\n */\nfunction extractProps<\n  P extends { className?: string; style?: React.CSSProperties; [key: string]: any },\n  T extends Record<string, PropDef>[]\n>(\n  props: P,\n  ...propDefs: T\n): Omit<P & { className?: string; style?: React.CSSProperties }, PropDefsWithClassName<T[number]>> {\n  let className: string | undefined;\n  let style: ReturnType<typeof mergeStyles>;\n  const extractedProps = { ...props };\n  const allPropDefs = mergePropDefs(...propDefs);\n\n  for (const key in allPropDefs) {\n    let value = extractedProps[key];\n    const propDef = allPropDefs[key];\n\n    // Apply prop def defaults\n    if (propDef.default !== undefined && value === undefined) {\n      value = propDef.default;\n    }\n\n    // Apply the default value if the value is not a valid enum value\n    if (propDef.type === 'enum') {\n      const values = [propDef.default, ...propDef.values];\n\n      if (!values.includes(value) && !isResponsiveObject(value)) {\n        value = propDef.default;\n      }\n    }\n\n    // Apply the value with defaults\n    (extractedProps as Record<string, any>)[key] = value;\n\n    if ('className' in propDef && propDef.className) {\n      delete extractedProps[key];\n\n      const isResponsivePropDef = 'responsive' in propDef;\n      // Make sure we are not threading through responsive values for non-responsive prop defs\n      if (!value || (isResponsiveObject(value) && !isResponsivePropDef)) {\n        continue;\n      }\n\n      if (isResponsiveObject(value)) {\n        // Apply prop def defaults to the `initial` breakpoint\n        if (propDef.default !== undefined && value.initial === undefined) {\n          value.initial = propDef.default;\n        }\n\n        // Apply the default value to the `initial` breakpoint when it is not a valid enum value\n        if (propDef.type === 'enum') {\n          const values = [propDef.default, ...propDef.values];\n\n          if (!values.includes(value.initial)) {\n            value.initial = propDef.default;\n          }\n        }\n      }\n\n      if (propDef.type === 'enum') {\n        const propClassName = getResponsiveClassNames({\n          allowArbitraryValues: false,\n          value,\n          className: propDef.className,\n          propValues: propDef.values,\n          parseValue: propDef.parseValue,\n        });\n\n        className = classNames(className, propClassName);\n        continue;\n      }\n\n      if (propDef.type === 'string' || propDef.type === 'enum | string') {\n        const propDefValues = propDef.type === 'string' ? [] : propDef.values;\n\n        const [propClassNames, propCustomProperties] = getResponsiveStyles({\n          className: propDef.className,\n          customProperties: propDef.customProperties,\n          propValues: propDefValues,\n          parseValue: propDef.parseValue,\n          value,\n        });\n\n        style = mergeStyles(style, propCustomProperties);\n        className = classNames(className, propClassNames);\n        continue;\n      }\n\n      if (propDef.type === 'boolean' && value) {\n        // TODO handle responsive boolean props\n        className = classNames(className, propDef.className);\n        continue;\n      }\n    }\n  }\n\n  extractedProps.className = classNames(className, props.className);\n  extractedProps.style = mergeStyles(style, props.style);\n  return extractedProps;\n}\n\nexport { extractProps };\n", "import type { PropDef, GetPropDefTypes } from './prop-def.js';\n\n// prettier-ignore\nconst marginValues = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-1', '-2', '-3', '-4', '-5', '-6', '-7', '-8', '-9'] as const;\n\nconst marginPropDefs = {\n  /**\n   * Sets the CSS **margin** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * m=\"4\"\n   * m=\"100px\"\n   * m={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/margin\n   */\n  m: {\n    type: 'enum | string',\n    values: marginValues,\n    responsive: true,\n    className: 'rt-r-m',\n    customProperties: ['--m'],\n  },\n  /**\n   * Sets the CSS **margin-left** and **margin-right** properties.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * mx=\"4\"\n   * mx=\"100px\"\n   * mx={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/margin-left\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/margin-right\n   */\n  mx: {\n    type: 'enum | string',\n    values: marginValues,\n    responsive: true,\n    className: 'rt-r-mx',\n    customProperties: ['--ml', '--mr'],\n  },\n  /**\n   * Sets the CSS **margin-top** and **margin-bottom** properties.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * my=\"4\"\n   * my=\"100px\"\n   * my={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/margin-top\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/margin-bottom\n   */\n  my: {\n    type: 'enum | string',\n    values: marginValues,\n    responsive: true,\n    className: 'rt-r-my',\n    customProperties: ['--mt', '--mb'],\n  },\n  /**\n   * Sets the CSS **margin-top** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * mt=\"4\"\n   * mt=\"100px\"\n   * mt={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/margin-top\n   */\n  mt: {\n    type: 'enum | string',\n    values: marginValues,\n    responsive: true,\n    className: 'rt-r-mt',\n    customProperties: ['--mt'],\n  },\n  /**\n   * Sets the CSS **margin-right** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * mr=\"4\"\n   * mr=\"100px\"\n   * mr={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/margin-right\n   */\n  mr: {\n    type: 'enum | string',\n    values: marginValues,\n    responsive: true,\n    className: 'rt-r-mr',\n    customProperties: ['--mr'],\n  },\n  /**\n   * Sets the CSS **margin-bottom** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * mb=\"4\"\n   * mb=\"100px\"\n   * mb={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/margin-bottom\n   */\n  mb: {\n    type: 'enum | string',\n    values: marginValues,\n    responsive: true,\n    className: 'rt-r-mb',\n    customProperties: ['--mb'],\n  },\n  /**\n   * Sets the CSS **margin-left** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * ml=\"4\"\n   * ml=\"100px\"\n   * ml={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/margin-left\n   */\n  ml: {\n    type: 'enum | string',\n    values: marginValues,\n    responsive: true,\n    className: 'rt-r-ml',\n    customProperties: ['--ml'],\n  },\n} satisfies {\n  m: PropDef<(typeof marginValues)[number]>;\n  mx: PropDef<(typeof marginValues)[number]>;\n  my: PropDef<(typeof marginValues)[number]>;\n  mt: PropDef<(typeof marginValues)[number]>;\n  mr: PropDef<(typeof marginValues)[number]>;\n  mb: PropDef<(typeof marginValues)[number]>;\n  ml: PropDef<(typeof marginValues)[number]>;\n};\n\ntype MarginProps = GetPropDefTypes<typeof marginPropDefs>;\n\nexport { marginPropDefs };\nexport type { MarginProps };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { headingPropDefs } from './heading.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype HeadingElement = React.ElementRef<'h1'>;\ntype HeadingOwnProps = GetPropDefTypes<typeof headingPropDefs>;\ninterface HeadingProps\n  extends ComponentPropsWithout<'h1', RemovedProps>,\n    MarginProps,\n    HeadingOwnProps {}\n\nconst Heading = React.forwardRef<HeadingElement, HeadingProps>((props, forwardedRef) => {\n  const {\n    children,\n    className,\n    asChild,\n    as: Tag = 'h1',\n    color,\n    ...headingProps\n  } = extractProps(props, headingPropDefs, marginPropDefs);\n  return (\n    <Slot\n      data-accent-color={color}\n      {...headingProps}\n      ref={forwardedRef}\n      className={classNames('rt-Heading', className)}\n    >\n      {asChild ? children : <Tag>{children}</Tag>}\n    </Slot>\n  );\n});\nHeading.displayName = 'Heading';\n\nexport { Heading };\nexport type { HeadingProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { colorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { leadingTrimPropDef } from '../props/leading-trim.prop.js';\nimport { textAlignPropDef } from '../props/text-align.prop.js';\nimport { textWrapPropDef } from '../props/text-wrap.prop.js';\nimport { truncatePropDef } from '../props/truncate.prop.js';\nimport { weightPropDef } from '../props/weight.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst as = ['span', 'div', 'label', 'p'] as const;\nconst sizes = ['1', '2', '3', '4', '5', '6', '7', '8', '9'] as const;\n\nconst textPropDefs = {\n  as: { type: 'enum', values: as, default: 'span' },\n  ...asChildPropDef,\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: sizes,\n    responsive: true,\n  },\n  ...weightPropDef,\n  ...textAlignPropDef,\n  ...leadingTrimPropDef,\n  ...truncatePropDef,\n  ...textWrapPropDef,\n  ...colorPropDef,\n  ...highContrastPropDef,\n} satisfies {\n  as: PropDef<(typeof as)[number]>;\n  size: PropDef<(typeof sizes)[number]>;\n};\n\nexport { textPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\nimport { textPropDefs } from './text.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ntype TextElement = React.ElementRef<'span'>;\ntype TextOwnProps = GetPropDefTypes<typeof textPropDefs>;\ninterface CommonTextProps extends MarginProps, TextOwnProps {}\ntype TextSpanProps = { as?: 'span' } & ComponentPropsWithout<'span', RemovedProps>;\ntype TextDivProps = { as: 'div' } & ComponentPropsWithout<'div', RemovedProps>;\ntype TextLabelProps = { as: 'label' } & ComponentPropsWithout<'label', RemovedProps>;\ntype TextPProps = { as: 'p' } & ComponentPropsWithout<'p', RemovedProps>;\ntype TextProps = CommonTextProps & (TextSpanProps | TextDivProps | TextLabelProps | TextPProps);\n\nconst Text = React.forwardRef<TextElement, TextProps>((props, forwardedRef) => {\n  const {\n    children,\n    className,\n    asChild,\n    as: Tag = 'span',\n    color,\n    ...textProps\n  } = extractProps(props, textPropDefs, marginPropDefs);\n  return (\n    <Slot\n      data-accent-color={color}\n      {...textProps}\n      ref={forwardedRef}\n      className={classNames('rt-Text', className)}\n    >\n      {asChild ? children : <Tag>{children}</Tag>}\n    </Slot>\n  );\n});\nText.displayName = 'Text';\n\nexport { Text };\nexport type { TextProps };\n", "import { computePosition, arrow as arrow$2, offset as offset$1, shift as shift$1, limitShift as limitShift$1, flip as flip$1, size as size$1, autoPlacement as autoPlacement$1, hide as hide$1, inline as inline$1 } from '@floating-ui/dom';\nexport { autoUpdate, computePosition, detectOverflow, getOverflowAncestors, platform } from '@floating-ui/dom';\nimport * as React from 'react';\nimport { useLayoutEffect, useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\n// Fork of `fast-deep-equal` that only does the comparisons we need and compares\n// functions\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (typeof a === 'function' && a.toString() === b.toString()) {\n    return true;\n  }\n  let length;\n  let i;\n  let keys;\n  if (a && b && typeof a === 'object') {\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length !== b.length) return false;\n      for (i = length; i-- !== 0;) {\n        if (!deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (i = length; i-- !== 0;) {\n      if (!{}.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        continue;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\nfunction getDPR(element) {\n  if (typeof window === 'undefined') {\n    return 1;\n  }\n  const win = element.ownerDocument.defaultView || window;\n  return win.devicePixelRatio || 1;\n}\n\nfunction roundByDPR(element, value) {\n  const dpr = getDPR(element);\n  return Math.round(value * dpr) / dpr;\n}\n\nfunction useLatestRef(value) {\n  const ref = React.useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\n/**\n * Provides data to position a floating element.\n * @see https://floating-ui.com/docs/useFloating\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform,\n    elements: {\n      reference: externalReference,\n      floating: externalFloating\n    } = {},\n    transform = true,\n    whileElementsMounted,\n    open\n  } = options;\n  const [data, setData] = React.useState({\n    x: 0,\n    y: 0,\n    strategy,\n    placement,\n    middlewareData: {},\n    isPositioned: false\n  });\n  const [latestMiddleware, setLatestMiddleware] = React.useState(middleware);\n  if (!deepEqual(latestMiddleware, middleware)) {\n    setLatestMiddleware(middleware);\n  }\n  const [_reference, _setReference] = React.useState(null);\n  const [_floating, _setFloating] = React.useState(null);\n  const setReference = React.useCallback(node => {\n    if (node !== referenceRef.current) {\n      referenceRef.current = node;\n      _setReference(node);\n    }\n  }, []);\n  const setFloating = React.useCallback(node => {\n    if (node !== floatingRef.current) {\n      floatingRef.current = node;\n      _setFloating(node);\n    }\n  }, []);\n  const referenceEl = externalReference || _reference;\n  const floatingEl = externalFloating || _floating;\n  const referenceRef = React.useRef(null);\n  const floatingRef = React.useRef(null);\n  const dataRef = React.useRef(data);\n  const hasWhileElementsMounted = whileElementsMounted != null;\n  const whileElementsMountedRef = useLatestRef(whileElementsMounted);\n  const platformRef = useLatestRef(platform);\n  const openRef = useLatestRef(open);\n  const update = React.useCallback(() => {\n    if (!referenceRef.current || !floatingRef.current) {\n      return;\n    }\n    const config = {\n      placement,\n      strategy,\n      middleware: latestMiddleware\n    };\n    if (platformRef.current) {\n      config.platform = platformRef.current;\n    }\n    computePosition(referenceRef.current, floatingRef.current, config).then(data => {\n      const fullData = {\n        ...data,\n        // The floating element's position may be recomputed while it's closed\n        // but still mounted (such as when transitioning out). To ensure\n        // `isPositioned` will be `false` initially on the next open, avoid\n        // setting it to `true` when `open === false` (must be specified).\n        isPositioned: openRef.current !== false\n      };\n      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {\n        dataRef.current = fullData;\n        ReactDOM.flushSync(() => {\n          setData(fullData);\n        });\n      }\n    });\n  }, [latestMiddleware, placement, strategy, platformRef, openRef]);\n  index(() => {\n    if (open === false && dataRef.current.isPositioned) {\n      dataRef.current.isPositioned = false;\n      setData(data => ({\n        ...data,\n        isPositioned: false\n      }));\n    }\n  }, [open]);\n  const isMountedRef = React.useRef(false);\n  index(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  index(() => {\n    if (referenceEl) referenceRef.current = referenceEl;\n    if (floatingEl) floatingRef.current = floatingEl;\n    if (referenceEl && floatingEl) {\n      if (whileElementsMountedRef.current) {\n        return whileElementsMountedRef.current(referenceEl, floatingEl, update);\n      }\n      update();\n    }\n  }, [referenceEl, floatingEl, update, whileElementsMountedRef, hasWhileElementsMounted]);\n  const refs = React.useMemo(() => ({\n    reference: referenceRef,\n    floating: floatingRef,\n    setReference,\n    setFloating\n  }), [setReference, setFloating]);\n  const elements = React.useMemo(() => ({\n    reference: referenceEl,\n    floating: floatingEl\n  }), [referenceEl, floatingEl]);\n  const floatingStyles = React.useMemo(() => {\n    const initialStyles = {\n      position: strategy,\n      left: 0,\n      top: 0\n    };\n    if (!elements.floating) {\n      return initialStyles;\n    }\n    const x = roundByDPR(elements.floating, data.x);\n    const y = roundByDPR(elements.floating, data.y);\n    if (transform) {\n      return {\n        ...initialStyles,\n        transform: \"translate(\" + x + \"px, \" + y + \"px)\",\n        ...(getDPR(elements.floating) >= 1.5 && {\n          willChange: 'transform'\n        })\n      };\n    }\n    return {\n      position: strategy,\n      left: x,\n      top: y\n    };\n  }, [strategy, transform, elements.floating, data.x, data.y]);\n  return React.useMemo(() => ({\n    ...data,\n    update,\n    refs,\n    elements,\n    floatingStyles\n  }), [data, update, refs, elements, floatingStyles]);\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow$1 = options => {\n  function isRef(value) {\n    return {}.hasOwnProperty.call(value, 'current');\n  }\n  return {\n    name: 'arrow',\n    options,\n    fn(state) {\n      const {\n        element,\n        padding\n      } = typeof options === 'function' ? options(state) : options;\n      if (element && isRef(element)) {\n        if (element.current != null) {\n          return arrow$2({\n            element: element.current,\n            padding\n          }).fn(state);\n        }\n        return {};\n      }\n      if (element) {\n        return arrow$2({\n          element,\n          padding\n        }).fn(state);\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = (options, deps) => ({\n  ...offset$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = (options, deps) => ({\n  ...shift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = (options, deps) => ({\n  ...limitShift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = (options, deps) => ({\n  ...flip$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = (options, deps) => ({\n  ...size$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = (options, deps) => ({\n  ...autoPlacement$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = (options, deps) => ({\n  ...hide$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = (options, deps) => ({\n  ...inline$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = (options, deps) => ({\n  ...arrow$1(options),\n  options: [options, deps]\n});\n\nexport { arrow, autoPlacement, flip, hide, inline, limitShift, offset, shift, size, useFloating };\n", "export {\n  Arrow,\n  //\n  Root,\n} from './Arrow';\nexport type { ArrowProps } from './Arrow';\n", "import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Arrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Arrow';\n\ntype ArrowElement = React.ElementRef<typeof Primitive.svg>;\ntype PrimitiveSvgProps = React.ComponentPropsWithoutRef<typeof Primitive.svg>;\ninterface ArrowProps extends PrimitiveSvgProps {}\n\nconst Arrow = React.forwardRef<ArrowElement, ArrowProps>((props, forwardedRef) => {\n  const { children, width = 10, height = 5, ...arrowProps } = props;\n  return (\n    <Primitive.svg\n      {...arrowProps}\n      ref={forwardedRef}\n      width={width}\n      height={height}\n      viewBox=\"0 0 30 10\"\n      preserveAspectRatio=\"none\"\n    >\n      {/* We use their children if they're slotting to replace the whole svg */}\n      {props.asChild ? children : <polygon points=\"0,0 30,0 15,10\" />}\n    </Primitive.svg>\n  );\n});\n\nArrow.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Arrow;\n\nexport {\n  Arrow,\n  //\n  Root,\n};\nexport type { ArrowProps };\n", "export { useSize } from './useSize';\n", "/// <reference types=\"resize-observer-browser\" />\n\nimport * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\nfunction useSize(element: HTMLElement | null) {\n  const [size, setSize] = React.useState<{ width: number; height: number } | undefined>(undefined);\n\n  useLayoutEffect(() => {\n    if (element) {\n      // provide size as early as possible\n      setSize({ width: element.offsetWidth, height: element.offsetHeight });\n\n      const resizeObserver = new ResizeObserver((entries) => {\n        if (!Array.isArray(entries)) {\n          return;\n        }\n\n        // Since we only observe the one element, we don't need to loop over the\n        // array\n        if (!entries.length) {\n          return;\n        }\n\n        const entry = entries[0];\n        let width: number;\n        let height: number;\n\n        if ('borderBoxSize' in entry) {\n          const borderSizeEntry = entry['borderBoxSize'];\n          // iron out differences between browsers\n          const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;\n          width = borderSize['inlineSize'];\n          height = borderSize['blockSize'];\n        } else {\n          // for browsers that don't support `borderBoxSize`\n          // we calculate it ourselves to get the correct border box.\n          width = element.offsetWidth;\n          height = element.offsetHeight;\n        }\n\n        setSize({ width, height });\n      });\n\n      resizeObserver.observe(element, { box: 'border-box' });\n\n      return () => resizeObserver.unobserve(element);\n    } else {\n      // We only want to reset to `undefined` when the element becomes `null`,\n      // not if it changes to another element.\n      setSize(undefined);\n    }\n  }, [element]);\n\n  return size;\n}\n\nexport { useSize };\n", "'use client';\nexport {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n  //\n  SIDE_OPTIONS,\n  ALIGN_OPTIONS,\n} from './Popper';\nexport type {\n  PopperProps,\n  PopperAnchorProps,\n  PopperContentProps,\n  PopperArrowProps,\n} from './Popper';\n", "import * as React from 'react';\nimport {\n  useFloating,\n  autoUpdate,\n  offset,\n  shift,\n  limitShift,\n  hide,\n  arrow as floatingUIarrow,\n  flip,\n  size,\n} from '@floating-ui/react-dom';\nimport * as ArrowPrimitive from '@radix-ui/react-arrow';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useSize } from '@radix-ui/react-use-size';\n\nimport type { Placement, Middleware } from '@floating-ui/react-dom';\nimport type { Scope } from '@radix-ui/react-context';\nimport type { Measurable } from '@radix-ui/rect';\n\nconst SIDE_OPTIONS = ['top', 'right', 'bottom', 'left'] as const;\nconst ALIGN_OPTIONS = ['start', 'center', 'end'] as const;\n\ntype Side = (typeof SIDE_OPTIONS)[number];\ntype Align = (typeof ALIGN_OPTIONS)[number];\n\n/* -------------------------------------------------------------------------------------------------\n * Popper\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_NAME = 'Popper';\n\ntype ScopedProps<P> = P & { __scopePopper?: Scope };\nconst [createPopperContext, createPopperScope] = createContextScope(POPPER_NAME);\n\ntype PopperContextValue = {\n  anchor: Measurable | null;\n  onAnchorChange(anchor: Measurable | null): void;\n};\nconst [PopperProvider, usePopperContext] = createPopperContext<PopperContextValue>(POPPER_NAME);\n\ninterface PopperProps {\n  children?: React.ReactNode;\n}\nconst Popper: React.FC<PopperProps> = (props: ScopedProps<PopperProps>) => {\n  const { __scopePopper, children } = props;\n  const [anchor, setAnchor] = React.useState<Measurable | null>(null);\n  return (\n    <PopperProvider scope={__scopePopper} anchor={anchor} onAnchorChange={setAnchor}>\n      {children}\n    </PopperProvider>\n  );\n};\n\nPopper.displayName = POPPER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopperAnchor';\n\ntype PopperAnchorElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PopperAnchorProps extends PrimitiveDivProps {\n  virtualRef?: React.RefObject<Measurable>;\n}\n\nconst PopperAnchor = React.forwardRef<PopperAnchorElement, PopperAnchorProps>(\n  (props: ScopedProps<PopperAnchorProps>, forwardedRef) => {\n    const { __scopePopper, virtualRef, ...anchorProps } = props;\n    const context = usePopperContext(ANCHOR_NAME, __scopePopper);\n    const ref = React.useRef<PopperAnchorElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    React.useEffect(() => {\n      // Consumer can anchor the popper to something that isn't\n      // a DOM node e.g. pointer position, so we override the\n      // `anchorRef` with their virtual ref in this case.\n      context.onAnchorChange(virtualRef?.current || ref.current);\n    });\n\n    return virtualRef ? null : <Primitive.div {...anchorProps} ref={composedRefs} />;\n  }\n);\n\nPopperAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopperContent';\n\ntype PopperContentContextValue = {\n  placedSide: Side;\n  onArrowChange(arrow: HTMLSpanElement | null): void;\n  arrowX?: number;\n  arrowY?: number;\n  shouldHideArrow: boolean;\n};\n\nconst [PopperContentProvider, useContentContext] =\n  createPopperContext<PopperContentContextValue>(CONTENT_NAME);\n\ntype Boundary = Element | null;\n\ntype PopperContentElement = React.ElementRef<typeof Primitive.div>;\ninterface PopperContentProps extends PrimitiveDivProps {\n  side?: Side;\n  sideOffset?: number;\n  align?: Align;\n  alignOffset?: number;\n  arrowPadding?: number;\n  avoidCollisions?: boolean;\n  collisionBoundary?: Boundary | Boundary[];\n  collisionPadding?: number | Partial<Record<Side, number>>;\n  sticky?: 'partial' | 'always';\n  hideWhenDetached?: boolean;\n  updatePositionStrategy?: 'optimized' | 'always';\n  onPlaced?: () => void;\n}\n\nconst PopperContent = React.forwardRef<PopperContentElement, PopperContentProps>(\n  (props: ScopedProps<PopperContentProps>, forwardedRef) => {\n    const {\n      __scopePopper,\n      side = 'bottom',\n      sideOffset = 0,\n      align = 'center',\n      alignOffset = 0,\n      arrowPadding = 0,\n      avoidCollisions = true,\n      collisionBoundary = [],\n      collisionPadding: collisionPaddingProp = 0,\n      sticky = 'partial',\n      hideWhenDetached = false,\n      updatePositionStrategy = 'optimized',\n      onPlaced,\n      ...contentProps\n    } = props;\n\n    const context = usePopperContext(CONTENT_NAME, __scopePopper);\n\n    const [content, setContent] = React.useState<HTMLDivElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n\n    const [arrow, setArrow] = React.useState<HTMLSpanElement | null>(null);\n    const arrowSize = useSize(arrow);\n    const arrowWidth = arrowSize?.width ?? 0;\n    const arrowHeight = arrowSize?.height ?? 0;\n\n    const desiredPlacement = (side + (align !== 'center' ? '-' + align : '')) as Placement;\n\n    const collisionPadding =\n      typeof collisionPaddingProp === 'number'\n        ? collisionPaddingProp\n        : { top: 0, right: 0, bottom: 0, left: 0, ...collisionPaddingProp };\n\n    const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [collisionBoundary];\n    const hasExplicitBoundaries = boundary.length > 0;\n\n    const detectOverflowOptions = {\n      padding: collisionPadding,\n      boundary: boundary.filter(isNotNull),\n      // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries\n      altBoundary: hasExplicitBoundaries,\n    };\n\n    const { refs, floatingStyles, placement, isPositioned, middlewareData } = useFloating({\n      // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues\n      strategy: 'fixed',\n      placement: desiredPlacement,\n      whileElementsMounted: (...args) => {\n        const cleanup = autoUpdate(...args, {\n          animationFrame: updatePositionStrategy === 'always',\n        });\n        return cleanup;\n      },\n      elements: {\n        reference: context.anchor,\n      },\n      middleware: [\n        offset({ mainAxis: sideOffset + arrowHeight, alignmentAxis: alignOffset }),\n        avoidCollisions &&\n          shift({\n            mainAxis: true,\n            crossAxis: false,\n            limiter: sticky === 'partial' ? limitShift() : undefined,\n            ...detectOverflowOptions,\n          }),\n        avoidCollisions && flip({ ...detectOverflowOptions }),\n        size({\n          ...detectOverflowOptions,\n          apply: ({ elements, rects, availableWidth, availableHeight }) => {\n            const { width: anchorWidth, height: anchorHeight } = rects.reference;\n            const contentStyle = elements.floating.style;\n            contentStyle.setProperty('--radix-popper-available-width', `${availableWidth}px`);\n            contentStyle.setProperty('--radix-popper-available-height', `${availableHeight}px`);\n            contentStyle.setProperty('--radix-popper-anchor-width', `${anchorWidth}px`);\n            contentStyle.setProperty('--radix-popper-anchor-height', `${anchorHeight}px`);\n          },\n        }),\n        arrow && floatingUIarrow({ element: arrow, padding: arrowPadding }),\n        transformOrigin({ arrowWidth, arrowHeight }),\n        hideWhenDetached && hide({ strategy: 'referenceHidden', ...detectOverflowOptions }),\n      ],\n    });\n\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n\n    const handlePlaced = useCallbackRef(onPlaced);\n    useLayoutEffect(() => {\n      if (isPositioned) {\n        handlePlaced?.();\n      }\n    }, [isPositioned, handlePlaced]);\n\n    const arrowX = middlewareData.arrow?.x;\n    const arrowY = middlewareData.arrow?.y;\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n\n    const [contentZIndex, setContentZIndex] = React.useState<string>();\n    useLayoutEffect(() => {\n      if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n    }, [content]);\n\n    return (\n      <div\n        ref={refs.setFloating}\n        data-radix-popper-content-wrapper=\"\"\n        style={{\n          ...floatingStyles,\n          transform: isPositioned ? floatingStyles.transform : 'translate(0, -200%)', // keep off the page when measuring\n          minWidth: 'max-content',\n          zIndex: contentZIndex,\n          ['--radix-popper-transform-origin' as any]: [\n            middlewareData.transformOrigin?.x,\n            middlewareData.transformOrigin?.y,\n          ].join(' '),\n\n          // hide the content if using the hide middleware and should be hidden\n          // set visibility to hidden and disable pointer events so the UI behaves\n          // as if the PopperContent isn't there at all\n          ...(middlewareData.hide?.referenceHidden && {\n            visibility: 'hidden',\n            pointerEvents: 'none',\n          }),\n        }}\n        // Floating UI interally calculates logical alignment based the `dir` attribute on\n        // the reference/floating node, we must add this attribute here to ensure\n        // this is calculated when portalled as well as inline.\n        dir={props.dir}\n      >\n        <PopperContentProvider\n          scope={__scopePopper}\n          placedSide={placedSide}\n          onArrowChange={setArrow}\n          arrowX={arrowX}\n          arrowY={arrowY}\n          shouldHideArrow={cannotCenterArrow}\n        >\n          <Primitive.div\n            data-side={placedSide}\n            data-align={placedAlign}\n            {...contentProps}\n            ref={composedRefs}\n            style={{\n              ...contentProps.style,\n              // if the PopperContent hasn't been placed yet (not all measurements done)\n              // we prevent animations so that users's animation don't kick in too early referring wrong sides\n              animation: !isPositioned ? 'none' : undefined,\n            }}\n          />\n        </PopperContentProvider>\n      </div>\n    );\n  }\n);\n\nPopperContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopperArrow';\n\nconst OPPOSITE_SIDE: Record<Side, Side> = {\n  top: 'bottom',\n  right: 'left',\n  bottom: 'top',\n  left: 'right',\n};\n\ntype PopperArrowElement = React.ElementRef<typeof ArrowPrimitive.Root>;\ntype ArrowProps = React.ComponentPropsWithoutRef<typeof ArrowPrimitive.Root>;\ninterface PopperArrowProps extends ArrowProps {}\n\nconst PopperArrow = React.forwardRef<PopperArrowElement, PopperArrowProps>(function PopperArrow(\n  props: ScopedProps<PopperArrowProps>,\n  forwardedRef\n) {\n  const { __scopePopper, ...arrowProps } = props;\n  const contentContext = useContentContext(ARROW_NAME, __scopePopper);\n  const baseSide = OPPOSITE_SIDE[contentContext.placedSide];\n\n  return (\n    // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n    // doesn't report size as we'd expect on SVG elements.\n    // it reports their bounding box which is effectively the largest path inside the SVG.\n    <span\n      ref={contentContext.onArrowChange}\n      style={{\n        position: 'absolute',\n        left: contentContext.arrowX,\n        top: contentContext.arrowY,\n        [baseSide]: 0,\n        transformOrigin: {\n          top: '',\n          right: '0 0',\n          bottom: 'center 0',\n          left: '100% 0',\n        }[contentContext.placedSide],\n        transform: {\n          top: 'translateY(100%)',\n          right: 'translateY(50%) rotate(90deg) translateX(-50%)',\n          bottom: `rotate(180deg)`,\n          left: 'translateY(50%) rotate(-90deg) translateX(50%)',\n        }[contentContext.placedSide],\n        visibility: contentContext.shouldHideArrow ? 'hidden' : undefined,\n      }}\n    >\n      <ArrowPrimitive.Root\n        {...arrowProps}\n        ref={forwardedRef}\n        style={{\n          ...arrowProps.style,\n          // ensures the element can be measured correctly (mostly for if SVG)\n          display: 'block',\n        }}\n      />\n    </span>\n  );\n});\n\nPopperArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction isNotNull<T>(value: T | null): value is T {\n  return value !== null;\n}\n\nconst transformOrigin = (options: { arrowWidth: number; arrowHeight: number }): Middleware => ({\n  name: 'transformOrigin',\n  options,\n  fn(data) {\n    const { placement, rects, middlewareData } = data;\n\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n    const isArrowHidden = cannotCenterArrow;\n    const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;\n    const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;\n\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n    const noArrowAlign = { start: '0%', center: '50%', end: '100%' }[placedAlign];\n\n    const arrowXCenter = (middlewareData.arrow?.x ?? 0) + arrowWidth / 2;\n    const arrowYCenter = (middlewareData.arrow?.y ?? 0) + arrowHeight / 2;\n\n    let x = '';\n    let y = '';\n\n    if (placedSide === 'bottom') {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${-arrowHeight}px`;\n    } else if (placedSide === 'top') {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${rects.floating.height + arrowHeight}px`;\n    } else if (placedSide === 'right') {\n      x = `${-arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    } else if (placedSide === 'left') {\n      x = `${rects.floating.width + arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    }\n    return { data: { x, y } };\n  },\n});\n\nfunction getSideAndAlignFromPlacement(placement: Placement) {\n  const [side, align = 'center'] = placement.split('-');\n  return [side as Side, align as Align] as const;\n}\n\nconst Root = Popper;\nconst Anchor = PopperAnchor;\nconst Content = PopperContent;\nconst Arrow = PopperArrow;\n\nexport {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n  //\n  SIDE_OPTIONS,\n  ALIGN_OPTIONS,\n};\nexport type { PopperProps, PopperAnchorProps, PopperContentProps, PopperArrowProps };\n", "'use client';\nexport {\n  createTooltipScope,\n  //\n  TooltipProvider,\n  Tooltip,\n  TooltipTrigger,\n  TooltipPortal,\n  TooltipContent,\n  TooltipArrow,\n  //\n  Provider,\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Arrow,\n} from './Tooltip';\nexport type {\n  TooltipProps,\n  TooltipTriggerProps,\n  TooltipPortalProps,\n  TooltipContentProps,\n  TooltipArrowProps,\n} from './Tooltip';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { Slottable } from '@radix-ui/react-slot';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport * as VisuallyHiddenPrimitive from '@radix-ui/react-visually-hidden';\n\nimport type { Scope } from '@radix-ui/react-context';\n\ntype ScopedProps<P = {}> = P & { __scopeTooltip?: Scope };\nconst [createTooltipContext, createTooltipScope] = createContextScope('Tooltip', [\n  createPopperScope,\n]);\nconst usePopperScope = createPopperScope();\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipProvider\n * -----------------------------------------------------------------------------------------------*/\n\nconst PROVIDER_NAME = 'TooltipProvider';\nconst DEFAULT_DELAY_DURATION = 700;\nconst TOOLTIP_OPEN = 'tooltip.open';\n\ntype TooltipProviderContextValue = {\n  isOpenDelayed: boolean;\n  delayDuration: number;\n  onOpen(): void;\n  onClose(): void;\n  onPointerInTransitChange(inTransit: boolean): void;\n  isPointerInTransitRef: React.MutableRefObject<boolean>;\n  disableHoverableContent: boolean;\n};\n\nconst [TooltipProviderContextProvider, useTooltipProviderContext] =\n  createTooltipContext<TooltipProviderContextValue>(PROVIDER_NAME);\n\ninterface TooltipProviderProps {\n  children: React.ReactNode;\n  /**\n   * The duration from when the pointer enters the trigger until the tooltip gets opened.\n   * @defaultValue 700\n   */\n  delayDuration?: number;\n  /**\n   * How much time a user has to enter another trigger without incurring a delay again.\n   * @defaultValue 300\n   */\n  skipDelayDuration?: number;\n  /**\n   * When `true`, trying to hover the content will result in the tooltip closing as the pointer leaves the trigger.\n   * @defaultValue false\n   */\n  disableHoverableContent?: boolean;\n}\n\nconst TooltipProvider: React.FC<TooltipProviderProps> = (\n  props: ScopedProps<TooltipProviderProps>\n) => {\n  const {\n    __scopeTooltip,\n    delayDuration = DEFAULT_DELAY_DURATION,\n    skipDelayDuration = 300,\n    disableHoverableContent = false,\n    children,\n  } = props;\n  const [isOpenDelayed, setIsOpenDelayed] = React.useState(true);\n  const isPointerInTransitRef = React.useRef(false);\n  const skipDelayTimerRef = React.useRef(0);\n\n  React.useEffect(() => {\n    const skipDelayTimer = skipDelayTimerRef.current;\n    return () => window.clearTimeout(skipDelayTimer);\n  }, []);\n\n  return (\n    <TooltipProviderContextProvider\n      scope={__scopeTooltip}\n      isOpenDelayed={isOpenDelayed}\n      delayDuration={delayDuration}\n      onOpen={React.useCallback(() => {\n        window.clearTimeout(skipDelayTimerRef.current);\n        setIsOpenDelayed(false);\n      }, [])}\n      onClose={React.useCallback(() => {\n        window.clearTimeout(skipDelayTimerRef.current);\n        skipDelayTimerRef.current = window.setTimeout(\n          () => setIsOpenDelayed(true),\n          skipDelayDuration\n        );\n      }, [skipDelayDuration])}\n      isPointerInTransitRef={isPointerInTransitRef}\n      onPointerInTransitChange={React.useCallback((inTransit: boolean) => {\n        isPointerInTransitRef.current = inTransit;\n      }, [])}\n      disableHoverableContent={disableHoverableContent}\n    >\n      {children}\n    </TooltipProviderContextProvider>\n  );\n};\n\nTooltipProvider.displayName = PROVIDER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * Tooltip\n * -----------------------------------------------------------------------------------------------*/\n\nconst TOOLTIP_NAME = 'Tooltip';\n\ntype TooltipContextValue = {\n  contentId: string;\n  open: boolean;\n  stateAttribute: 'closed' | 'delayed-open' | 'instant-open';\n  trigger: TooltipTriggerElement | null;\n  onTriggerChange(trigger: TooltipTriggerElement | null): void;\n  onTriggerEnter(): void;\n  onTriggerLeave(): void;\n  onOpen(): void;\n  onClose(): void;\n  disableHoverableContent: boolean;\n};\n\nconst [TooltipContextProvider, useTooltipContext] =\n  createTooltipContext<TooltipContextValue>(TOOLTIP_NAME);\n\ninterface TooltipProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?: (open: boolean) => void;\n  /**\n   * The duration from when the pointer enters the trigger until the tooltip gets opened. This will\n   * override the prop with the same name passed to Provider.\n   * @defaultValue 700\n   */\n  delayDuration?: number;\n  /**\n   * When `true`, trying to hover the content will result in the tooltip closing as the pointer leaves the trigger.\n   * @defaultValue false\n   */\n  disableHoverableContent?: boolean;\n}\n\nconst Tooltip: React.FC<TooltipProps> = (props: ScopedProps<TooltipProps>) => {\n  const {\n    __scopeTooltip,\n    children,\n    open: openProp,\n    defaultOpen = false,\n    onOpenChange,\n    disableHoverableContent: disableHoverableContentProp,\n    delayDuration: delayDurationProp,\n  } = props;\n  const providerContext = useTooltipProviderContext(TOOLTIP_NAME, props.__scopeTooltip);\n  const popperScope = usePopperScope(__scopeTooltip);\n  const [trigger, setTrigger] = React.useState<HTMLButtonElement | null>(null);\n  const contentId = useId();\n  const openTimerRef = React.useRef(0);\n  const disableHoverableContent =\n    disableHoverableContentProp ?? providerContext.disableHoverableContent;\n  const delayDuration = delayDurationProp ?? providerContext.delayDuration;\n  const wasOpenDelayedRef = React.useRef(false);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: (open) => {\n      if (open) {\n        providerContext.onOpen();\n\n        // as `onChange` is called within a lifecycle method we\n        // avoid dispatching via `dispatchDiscreteCustomEvent`.\n        document.dispatchEvent(new CustomEvent(TOOLTIP_OPEN));\n      } else {\n        providerContext.onClose();\n      }\n      onOpenChange?.(open);\n    },\n  });\n  const stateAttribute = React.useMemo(() => {\n    return open ? (wasOpenDelayedRef.current ? 'delayed-open' : 'instant-open') : 'closed';\n  }, [open]);\n\n  const handleOpen = React.useCallback(() => {\n    window.clearTimeout(openTimerRef.current);\n    wasOpenDelayedRef.current = false;\n    setOpen(true);\n  }, [setOpen]);\n\n  const handleClose = React.useCallback(() => {\n    window.clearTimeout(openTimerRef.current);\n    setOpen(false);\n  }, [setOpen]);\n\n  const handleDelayedOpen = React.useCallback(() => {\n    window.clearTimeout(openTimerRef.current);\n    openTimerRef.current = window.setTimeout(() => {\n      wasOpenDelayedRef.current = true;\n      setOpen(true);\n    }, delayDuration);\n  }, [delayDuration, setOpen]);\n\n  React.useEffect(() => {\n    return () => window.clearTimeout(openTimerRef.current);\n  }, []);\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <TooltipContextProvider\n        scope={__scopeTooltip}\n        contentId={contentId}\n        open={open}\n        stateAttribute={stateAttribute}\n        trigger={trigger}\n        onTriggerChange={setTrigger}\n        onTriggerEnter={React.useCallback(() => {\n          if (providerContext.isOpenDelayed) handleDelayedOpen();\n          else handleOpen();\n        }, [providerContext.isOpenDelayed, handleDelayedOpen, handleOpen])}\n        onTriggerLeave={React.useCallback(() => {\n          if (disableHoverableContent) {\n            handleClose();\n          } else {\n            // Clear the timer in case the pointer leaves the trigger before the tooltip is opened.\n            window.clearTimeout(openTimerRef.current);\n          }\n        }, [handleClose, disableHoverableContent])}\n        onOpen={handleOpen}\n        onClose={handleClose}\n        disableHoverableContent={disableHoverableContent}\n      >\n        {children}\n      </TooltipContextProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nTooltip.displayName = TOOLTIP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'TooltipTrigger';\n\ntype TooltipTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface TooltipTriggerProps extends PrimitiveButtonProps {}\n\nconst TooltipTrigger = React.forwardRef<TooltipTriggerElement, TooltipTriggerProps>(\n  (props: ScopedProps<TooltipTriggerProps>, forwardedRef) => {\n    const { __scopeTooltip, ...triggerProps } = props;\n    const context = useTooltipContext(TRIGGER_NAME, __scopeTooltip);\n    const providerContext = useTooltipProviderContext(TRIGGER_NAME, __scopeTooltip);\n    const popperScope = usePopperScope(__scopeTooltip);\n    const ref = React.useRef<TooltipTriggerElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref, context.onTriggerChange);\n    const isPointerDownRef = React.useRef(false);\n    const hasPointerMoveOpenedRef = React.useRef(false);\n    const handlePointerUp = React.useCallback(() => (isPointerDownRef.current = false), []);\n\n    React.useEffect(() => {\n      return () => document.removeEventListener('pointerup', handlePointerUp);\n    }, [handlePointerUp]);\n\n    return (\n      <PopperPrimitive.Anchor asChild {...popperScope}>\n        <Primitive.button\n          // We purposefully avoid adding `type=button` here because tooltip triggers are also\n          // commonly anchors and the anchor `type` attribute signifies MIME type.\n          aria-describedby={context.open ? context.contentId : undefined}\n          data-state={context.stateAttribute}\n          {...triggerProps}\n          ref={composedRefs}\n          onPointerMove={composeEventHandlers(props.onPointerMove, (event) => {\n            if (event.pointerType === 'touch') return;\n            if (\n              !hasPointerMoveOpenedRef.current &&\n              !providerContext.isPointerInTransitRef.current\n            ) {\n              context.onTriggerEnter();\n              hasPointerMoveOpenedRef.current = true;\n            }\n          })}\n          onPointerLeave={composeEventHandlers(props.onPointerLeave, () => {\n            context.onTriggerLeave();\n            hasPointerMoveOpenedRef.current = false;\n          })}\n          onPointerDown={composeEventHandlers(props.onPointerDown, () => {\n            isPointerDownRef.current = true;\n            document.addEventListener('pointerup', handlePointerUp, { once: true });\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => {\n            if (!isPointerDownRef.current) context.onOpen();\n          })}\n          onBlur={composeEventHandlers(props.onBlur, context.onClose)}\n          onClick={composeEventHandlers(props.onClick, context.onClose)}\n        />\n      </PopperPrimitive.Anchor>\n    );\n  }\n);\n\nTooltipTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'TooltipPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createTooltipContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface TooltipPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst TooltipPortal: React.FC<TooltipPortalProps> = (props: ScopedProps<TooltipPortalProps>) => {\n  const { __scopeTooltip, forceMount, children, container } = props;\n  const context = useTooltipContext(PORTAL_NAME, __scopeTooltip);\n  return (\n    <PortalProvider scope={__scopeTooltip} forceMount={forceMount}>\n      <Presence present={forceMount || context.open}>\n        <PortalPrimitive asChild container={container}>\n          {children}\n        </PortalPrimitive>\n      </Presence>\n    </PortalProvider>\n  );\n};\n\nTooltipPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'TooltipContent';\n\ntype TooltipContentElement = TooltipContentImplElement;\ninterface TooltipContentProps extends TooltipContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst TooltipContent = React.forwardRef<TooltipContentElement, TooltipContentProps>(\n  (props: ScopedProps<TooltipContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeTooltip);\n    const { forceMount = portalContext.forceMount, side = 'top', ...contentProps } = props;\n    const context = useTooltipContext(CONTENT_NAME, props.__scopeTooltip);\n\n    return (\n      <Presence present={forceMount || context.open}>\n        {context.disableHoverableContent ? (\n          <TooltipContentImpl side={side} {...contentProps} ref={forwardedRef} />\n        ) : (\n          <TooltipContentHoverable side={side} {...contentProps} ref={forwardedRef} />\n        )}\n      </Presence>\n    );\n  }\n);\n\ntype Point = { x: number; y: number };\ntype Polygon = Point[];\n\ntype TooltipContentHoverableElement = TooltipContentImplElement;\ninterface TooltipContentHoverableProps extends TooltipContentImplProps {}\n\nconst TooltipContentHoverable = React.forwardRef<\n  TooltipContentHoverableElement,\n  TooltipContentHoverableProps\n>((props: ScopedProps<TooltipContentHoverableProps>, forwardedRef) => {\n  const context = useTooltipContext(CONTENT_NAME, props.__scopeTooltip);\n  const providerContext = useTooltipProviderContext(CONTENT_NAME, props.__scopeTooltip);\n  const ref = React.useRef<TooltipContentHoverableElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const [pointerGraceArea, setPointerGraceArea] = React.useState<Polygon | null>(null);\n\n  const { trigger, onClose } = context;\n  const content = ref.current;\n\n  const { onPointerInTransitChange } = providerContext;\n\n  const handleRemoveGraceArea = React.useCallback(() => {\n    setPointerGraceArea(null);\n    onPointerInTransitChange(false);\n  }, [onPointerInTransitChange]);\n\n  const handleCreateGraceArea = React.useCallback(\n    (event: PointerEvent, hoverTarget: HTMLElement) => {\n      const currentTarget = event.currentTarget as HTMLElement;\n      const exitPoint = { x: event.clientX, y: event.clientY };\n      const exitSide = getExitSideFromRect(exitPoint, currentTarget.getBoundingClientRect());\n      const paddedExitPoints = getPaddedExitPoints(exitPoint, exitSide);\n      const hoverTargetPoints = getPointsFromRect(hoverTarget.getBoundingClientRect());\n      const graceArea = getHull([...paddedExitPoints, ...hoverTargetPoints]);\n      setPointerGraceArea(graceArea);\n      onPointerInTransitChange(true);\n    },\n    [onPointerInTransitChange]\n  );\n\n  React.useEffect(() => {\n    return () => handleRemoveGraceArea();\n  }, [handleRemoveGraceArea]);\n\n  React.useEffect(() => {\n    if (trigger && content) {\n      const handleTriggerLeave = (event: PointerEvent) => handleCreateGraceArea(event, content);\n      const handleContentLeave = (event: PointerEvent) => handleCreateGraceArea(event, trigger);\n\n      trigger.addEventListener('pointerleave', handleTriggerLeave);\n      content.addEventListener('pointerleave', handleContentLeave);\n      return () => {\n        trigger.removeEventListener('pointerleave', handleTriggerLeave);\n        content.removeEventListener('pointerleave', handleContentLeave);\n      };\n    }\n  }, [trigger, content, handleCreateGraceArea, handleRemoveGraceArea]);\n\n  React.useEffect(() => {\n    if (pointerGraceArea) {\n      const handleTrackPointerGrace = (event: PointerEvent) => {\n        const target = event.target as HTMLElement;\n        const pointerPosition = { x: event.clientX, y: event.clientY };\n        const hasEnteredTarget = trigger?.contains(target) || content?.contains(target);\n        const isPointerOutsideGraceArea = !isPointInPolygon(pointerPosition, pointerGraceArea);\n\n        if (hasEnteredTarget) {\n          handleRemoveGraceArea();\n        } else if (isPointerOutsideGraceArea) {\n          handleRemoveGraceArea();\n          onClose();\n        }\n      };\n      document.addEventListener('pointermove', handleTrackPointerGrace);\n      return () => document.removeEventListener('pointermove', handleTrackPointerGrace);\n    }\n  }, [trigger, content, pointerGraceArea, onClose, handleRemoveGraceArea]);\n\n  return <TooltipContentImpl {...props} ref={composedRefs} />;\n});\n\nconst [VisuallyHiddenContentContextProvider, useVisuallyHiddenContentContext] =\n  createTooltipContext(TOOLTIP_NAME, { isInside: false });\n\ntype TooltipContentImplElement = React.ElementRef<typeof PopperPrimitive.Content>;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype PopperContentProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ninterface TooltipContentImplProps extends Omit<PopperContentProps, 'onPlaced'> {\n  /**\n   * A more descriptive label for accessibility purpose\n   */\n  'aria-label'?: string;\n\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: DismissableLayerProps['onEscapeKeyDown'];\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `Tooltip`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: DismissableLayerProps['onPointerDownOutside'];\n}\n\nconst TooltipContentImpl = React.forwardRef<TooltipContentImplElement, TooltipContentImplProps>(\n  (props: ScopedProps<TooltipContentImplProps>, forwardedRef) => {\n    const {\n      __scopeTooltip,\n      children,\n      'aria-label': ariaLabel,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      ...contentProps\n    } = props;\n    const context = useTooltipContext(CONTENT_NAME, __scopeTooltip);\n    const popperScope = usePopperScope(__scopeTooltip);\n    const { onClose } = context;\n\n    // Close this tooltip if another one opens\n    React.useEffect(() => {\n      document.addEventListener(TOOLTIP_OPEN, onClose);\n      return () => document.removeEventListener(TOOLTIP_OPEN, onClose);\n    }, [onClose]);\n\n    // Close the tooltip if the trigger is scrolled\n    React.useEffect(() => {\n      if (context.trigger) {\n        const handleScroll = (event: Event) => {\n          const target = event.target as HTMLElement;\n          if (target?.contains(context.trigger)) onClose();\n        };\n        window.addEventListener('scroll', handleScroll, { capture: true });\n        return () => window.removeEventListener('scroll', handleScroll, { capture: true });\n      }\n    }, [context.trigger, onClose]);\n\n    return (\n      <DismissableLayer\n        asChild\n        disableOutsidePointerEvents={false}\n        onEscapeKeyDown={onEscapeKeyDown}\n        onPointerDownOutside={onPointerDownOutside}\n        onFocusOutside={(event) => event.preventDefault()}\n        onDismiss={onClose}\n      >\n        <PopperPrimitive.Content\n          data-state={context.stateAttribute}\n          {...popperScope}\n          {...contentProps}\n          ref={forwardedRef}\n          style={{\n            ...contentProps.style,\n            // re-namespace exposed content custom properties\n            ...{\n              '--radix-tooltip-content-transform-origin': 'var(--radix-popper-transform-origin)',\n              '--radix-tooltip-content-available-width': 'var(--radix-popper-available-width)',\n              '--radix-tooltip-content-available-height': 'var(--radix-popper-available-height)',\n              '--radix-tooltip-trigger-width': 'var(--radix-popper-anchor-width)',\n              '--radix-tooltip-trigger-height': 'var(--radix-popper-anchor-height)',\n            },\n          }}\n        >\n          <Slottable>{children}</Slottable>\n          <VisuallyHiddenContentContextProvider scope={__scopeTooltip} isInside={true}>\n            <VisuallyHiddenPrimitive.Root id={context.contentId} role=\"tooltip\">\n              {ariaLabel || children}\n            </VisuallyHiddenPrimitive.Root>\n          </VisuallyHiddenContentContextProvider>\n        </PopperPrimitive.Content>\n      </DismissableLayer>\n    );\n  }\n);\n\nTooltipContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'TooltipArrow';\n\ntype TooltipArrowElement = React.ElementRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface TooltipArrowProps extends PopperArrowProps {}\n\nconst TooltipArrow = React.forwardRef<TooltipArrowElement, TooltipArrowProps>(\n  (props: ScopedProps<TooltipArrowProps>, forwardedRef) => {\n    const { __scopeTooltip, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeTooltip);\n    const visuallyHiddenContentContext = useVisuallyHiddenContentContext(\n      ARROW_NAME,\n      __scopeTooltip\n    );\n    // if the arrow is inside the `VisuallyHidden`, we don't want to render it all to\n    // prevent issues in positioning the arrow due to the duplicate\n    return visuallyHiddenContentContext.isInside ? null : (\n      <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />\n    );\n  }\n);\n\nTooltipArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype Side = NonNullable<TooltipContentProps['side']>;\n\nfunction getExitSideFromRect(point: Point, rect: DOMRect): Side {\n  const top = Math.abs(rect.top - point.y);\n  const bottom = Math.abs(rect.bottom - point.y);\n  const right = Math.abs(rect.right - point.x);\n  const left = Math.abs(rect.left - point.x);\n\n  switch (Math.min(top, bottom, right, left)) {\n    case left:\n      return 'left';\n    case right:\n      return 'right';\n    case top:\n      return 'top';\n    case bottom:\n      return 'bottom';\n    default:\n      throw new Error('unreachable');\n  }\n}\n\nfunction getPaddedExitPoints(exitPoint: Point, exitSide: Side, padding = 5) {\n  const paddedExitPoints: Point[] = [];\n  switch (exitSide) {\n    case 'top':\n      paddedExitPoints.push(\n        { x: exitPoint.x - padding, y: exitPoint.y + padding },\n        { x: exitPoint.x + padding, y: exitPoint.y + padding }\n      );\n      break;\n    case 'bottom':\n      paddedExitPoints.push(\n        { x: exitPoint.x - padding, y: exitPoint.y - padding },\n        { x: exitPoint.x + padding, y: exitPoint.y - padding }\n      );\n      break;\n    case 'left':\n      paddedExitPoints.push(\n        { x: exitPoint.x + padding, y: exitPoint.y - padding },\n        { x: exitPoint.x + padding, y: exitPoint.y + padding }\n      );\n      break;\n    case 'right':\n      paddedExitPoints.push(\n        { x: exitPoint.x - padding, y: exitPoint.y - padding },\n        { x: exitPoint.x - padding, y: exitPoint.y + padding }\n      );\n      break;\n  }\n  return paddedExitPoints;\n}\n\nfunction getPointsFromRect(rect: DOMRect) {\n  const { top, right, bottom, left } = rect;\n  return [\n    { x: left, y: top },\n    { x: right, y: top },\n    { x: right, y: bottom },\n    { x: left, y: bottom },\n  ];\n}\n\n// Determine if a point is inside of a polygon.\n// Based on https://github.com/substack/point-in-polygon\nfunction isPointInPolygon(point: Point, polygon: Polygon) {\n  const { x, y } = point;\n  let inside = false;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].x;\n    const yi = polygon[i].y;\n    const xj = polygon[j].x;\n    const yj = polygon[j].y;\n\n    // prettier-ignore\n    const intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n    if (intersect) inside = !inside;\n  }\n\n  return inside;\n}\n\n// Returns a new array of points representing the convex hull of the given set of points.\n// https://www.nayuki.io/page/convex-hull-algorithm\nfunction getHull<P extends Point>(points: Readonly<Array<P>>): Array<P> {\n  const newPoints: Array<P> = points.slice();\n  newPoints.sort((a: Point, b: Point) => {\n    if (a.x < b.x) return -1;\n    else if (a.x > b.x) return +1;\n    else if (a.y < b.y) return -1;\n    else if (a.y > b.y) return +1;\n    else return 0;\n  });\n  return getHullPresorted(newPoints);\n}\n\n// Returns the convex hull, assuming that each points[i] <= points[i + 1]. Runs in O(n) time.\nfunction getHullPresorted<P extends Point>(points: Readonly<Array<P>>): Array<P> {\n  if (points.length <= 1) return points.slice();\n\n  const upperHull: Array<P> = [];\n  for (let i = 0; i < points.length; i++) {\n    const p = points[i];\n    while (upperHull.length >= 2) {\n      const q = upperHull[upperHull.length - 1];\n      const r = upperHull[upperHull.length - 2];\n      if ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x)) upperHull.pop();\n      else break;\n    }\n    upperHull.push(p);\n  }\n  upperHull.pop();\n\n  const lowerHull: Array<P> = [];\n  for (let i = points.length - 1; i >= 0; i--) {\n    const p = points[i];\n    while (lowerHull.length >= 2) {\n      const q = lowerHull[lowerHull.length - 1];\n      const r = lowerHull[lowerHull.length - 2];\n      if ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x)) lowerHull.pop();\n      else break;\n    }\n    lowerHull.push(p);\n  }\n  lowerHull.pop();\n\n  if (\n    upperHull.length === 1 &&\n    lowerHull.length === 1 &&\n    upperHull[0].x === lowerHull[0].x &&\n    upperHull[0].y === lowerHull[0].y\n  ) {\n    return upperHull;\n  } else {\n    return upperHull.concat(lowerHull);\n  }\n}\n\nconst Provider = TooltipProvider;\nconst Root = Tooltip;\nconst Trigger = TooltipTrigger;\nconst Portal = TooltipPortal;\nconst Content = TooltipContent;\nconst Arrow = TooltipArrow;\n\nexport {\n  createTooltipScope,\n  //\n  TooltipProvider,\n  Tooltip,\n  TooltipTrigger,\n  TooltipPortal,\n  TooltipContent,\n  TooltipArrow,\n  //\n  Provider,\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Arrow,\n};\nexport type {\n  TooltipProps,\n  TooltipTriggerProps,\n  TooltipPortalProps,\n  TooltipContentProps,\n  TooltipArrowProps,\n};\n", "export {\n  useDirection,\n  //\n  Provider,\n  //\n  DirectionProvider,\n} from './Direction';\n", "import * as React from 'react';\n\ntype Direction = 'ltr' | 'rtl';\nconst DirectionContext = React.createContext<Direction | undefined>(undefined);\n\n/* -------------------------------------------------------------------------------------------------\n * Direction\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DirectionProviderProps {\n  children?: React.ReactNode;\n  dir: Direction;\n}\nconst DirectionProvider: React.FC<DirectionProviderProps> = (props) => {\n  const { dir, children } = props;\n  return <DirectionContext.Provider value={dir}>{children}</DirectionContext.Provider>;\n};\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction useDirection(localDir?: Direction) {\n  const globalDir = React.useContext(DirectionContext);\n  return localDir || globalDir || 'ltr';\n}\n\nconst Provider = DirectionProvider;\n\nexport {\n  useDirection,\n  //\n  Provider,\n  //\n  DirectionProvider,\n};\n", "import type { accentColors } from '../props/color.prop.js';\n\ntype ThemeAccentColor = (typeof accentColors)[number];\n\nexport function getMatchingGrayColor(accentColor: ThemeAccentColor) {\n  switch (accentColor) {\n    case 'tomato':\n    case 'red':\n    case 'ruby':\n    case 'crimson':\n    case 'pink':\n    case 'plum':\n    case 'purple':\n    case 'violet':\n      return 'mauve';\n    case 'iris':\n    case 'indigo':\n    case 'blue':\n    case 'sky':\n    case 'cyan':\n      return 'slate';\n    case 'teal':\n    case 'jade':\n    case 'mint':\n    case 'green':\n      return 'sage';\n    case 'grass':\n    case 'lime':\n      return 'olive';\n    case 'yellow':\n    case 'amber':\n    case 'orange':\n    case 'brown':\n    case 'gold':\n    case 'bronze':\n      return 'sand';\n    case 'gray':\n      return 'gray';\n  }\n}\n", "import type { PropDef } from './prop-def.js';\n\nconst radii = ['none', 'small', 'medium', 'large', 'full'] as const;\n\nconst radiusPropDef = {\n  radius: {\n    type: 'enum',\n    values: radii,\n    default: undefined,\n  },\n} satisfies {\n  radius: PropDef<(typeof radii)[number]>;\n};\n\nexport { radiusPropDef, radii };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { accentColors, grayColors } from '../props/color.prop.js';\nimport { radii } from '../props/radius.prop.js';\n\nimport type { GetPropDefTypes, PropDef } from '../props/prop-def.js';\n\nconst appearances = ['inherit', 'light', 'dark'] as const;\nconst panelBackgrounds = ['solid', 'translucent'] as const;\nconst scalings = ['90%', '95%', '100%', '105%', '110%'] as const;\n\nconst themePropDefs = {\n  ...asChildPropDef,\n  /**\n   * Whether to apply background color to the Theme element.\n   *\n   * Defaults to true for the root Theme and for Theme elements that\n   * have an explicit light or dark appearance prop.\n   */\n  hasBackground: { type: 'boolean', default: true },\n  /**\n   * Sets the color scheme of the theme, typcially referred to as light and dark mode.\n   *\n   * @link\n   * https://www.radix-ui.com/themes/docs/theme/dark-mode\n   */\n  appearance: { type: 'enum', values: appearances, default: 'inherit' },\n  /**\n   * Selects one of the accent color options to use in the Theme.\n   *\n   * @link\n   * https://www.radix-ui.com/themes/docs/theme/color\n   */\n  accentColor: { type: 'enum', values: accentColors, default: 'indigo' },\n  /**\n   * Selects one of the gray color options to use in the Theme.\n   *\n   * @link\n   * https://www.radix-ui.com/themes/docs/theme/color\n   */\n  grayColor: { type: 'enum', values: grayColors, default: 'auto' },\n  /**\n   * Controls whether to use a solid or translucent background color on panelled\n   * elements such as Card or Table is solid or translucent.\n   *\n   * @link\n   * https://www.radix-ui.com/themes/docs/theme/visual-style\n   */\n  panelBackground: { type: 'enum', values: panelBackgrounds, default: 'translucent' },\n  /**\n   * Sets the default radius of the components.\n   *\n   * @link\n   * https://www.radix-ui.com/themes/docs/theme/visual-style\n   */\n  radius: { type: 'enum', values: radii, default: 'medium' },\n  /**\n   * Sets a scaling multiplier for values like spacing, font sizes, line heights, etc. are scaled.\n   *\n   * @link\n   * https://www.radix-ui.com/themes/docs/theme/layout\n   */\n  scaling: { type: 'enum', values: scalings, default: '100%' },\n} satisfies {\n  hasBackground: PropDef<boolean>;\n  appearance: PropDef<(typeof appearances)[number]>;\n  accentColor: PropDef<(typeof accentColors)[number]>;\n  grayColor: PropDef<(typeof grayColors)[number]>;\n  panelBackground: PropDef<(typeof panelBackgrounds)[number]>;\n  radius: PropDef<(typeof radii)[number]>;\n  scaling: PropDef<(typeof scalings)[number]>;\n};\n\ntype ThemeOwnProps = GetPropDefTypes<typeof themePropDefs & typeof asChildPropDef>;\n\nexport { themePropDefs };\nexport type { ThemeOwnProps };\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport * as TooltipPrimitive from '@radix-ui/react-tooltip';\nimport { DirectionProvider } from '@radix-ui/react-direction';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { getMatchingGrayColor } from '../helpers/get-matching-gray-color.js';\nimport { themePropDefs } from './theme.props.js';\n\nimport type { ThemeOwnProps } from './theme.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\nconst noop = () => {};\n\ntype ThemeAppearance = (typeof themePropDefs.appearance.values)[number];\ntype ThemeAccentColor = (typeof themePropDefs.accentColor.values)[number];\ntype ThemeGrayColor = (typeof themePropDefs.grayColor.values)[number];\ntype ThemePanelBackground = (typeof themePropDefs.panelBackground.values)[number];\ntype ThemeRadius = (typeof themePropDefs.radius.values)[number];\ntype ThemeScaling = (typeof themePropDefs.scaling.values)[number];\n\ninterface ThemeChangeHandlers {\n  onAppearanceChange: (appearance: ThemeAppearance) => void;\n  onAccentColorChange: (accentColor: ThemeAccentColor) => void;\n  onGrayColorChange: (grayColor: ThemeGrayColor) => void;\n  onPanelBackgroundChange: (panelBackground: ThemePanelBackground) => void;\n  onRadiusChange: (radius: ThemeRadius) => void;\n  onScalingChange: (scaling: ThemeScaling) => void;\n}\n\ninterface ThemeContextValue extends ThemeChangeHandlers {\n  appearance: ThemeAppearance;\n  accentColor: ThemeAccentColor;\n  grayColor: ThemeGrayColor;\n  resolvedGrayColor: ThemeGrayColor;\n  panelBackground: ThemePanelBackground;\n  radius: ThemeRadius;\n  scaling: ThemeScaling;\n}\nconst ThemeContext = React.createContext<ThemeContextValue | undefined>(undefined);\n\nfunction useThemeContext() {\n  const context = React.useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('`useThemeContext` must be used within a `Theme`');\n  }\n  return context;\n}\n\ninterface ThemeProps extends ThemeImplPublicProps {}\nconst Theme = React.forwardRef<ThemeImplElement, ThemeProps>((props, forwardedRef) => {\n  const context = React.useContext(ThemeContext);\n  const isRoot = context === undefined;\n  if (isRoot) {\n    return (\n      <TooltipPrimitive.Provider delayDuration={200}>\n        <DirectionProvider dir=\"ltr\">\n          <ThemeRoot {...props} ref={forwardedRef} />\n        </DirectionProvider>\n      </TooltipPrimitive.Provider>\n    );\n  }\n  return <ThemeImpl {...props} ref={forwardedRef} />;\n});\nTheme.displayName = 'Theme';\n\nconst ThemeRoot = React.forwardRef<ThemeImplElement, ThemeImplPublicProps>(\n  (props, forwardedRef) => {\n    const {\n      appearance: appearanceProp = themePropDefs.appearance.default,\n      accentColor: accentColorProp = themePropDefs.accentColor.default,\n      grayColor: grayColorProp = themePropDefs.grayColor.default,\n      panelBackground: panelBackgroundProp = themePropDefs.panelBackground.default,\n      radius: radiusProp = themePropDefs.radius.default,\n      scaling: scalingProp = themePropDefs.scaling.default,\n      hasBackground = themePropDefs.hasBackground.default,\n      ...rootProps\n    } = props;\n    const [appearance, setAppearance] = React.useState(appearanceProp);\n    React.useEffect(() => setAppearance(appearanceProp), [appearanceProp]);\n\n    const [accentColor, setAccentColor] = React.useState(accentColorProp);\n    React.useEffect(() => setAccentColor(accentColorProp), [accentColorProp]);\n\n    const [grayColor, setGrayColor] = React.useState(grayColorProp);\n    React.useEffect(() => setGrayColor(grayColorProp), [grayColorProp]);\n\n    const [panelBackground, setPanelBackground] = React.useState(panelBackgroundProp);\n    React.useEffect(() => setPanelBackground(panelBackgroundProp), [panelBackgroundProp]);\n\n    const [radius, setRadius] = React.useState(radiusProp);\n    React.useEffect(() => setRadius(radiusProp), [radiusProp]);\n\n    const [scaling, setScaling] = React.useState(scalingProp);\n    React.useEffect(() => setScaling(scalingProp), [scalingProp]);\n\n    return (\n      <ThemeImpl\n        {...rootProps}\n        ref={forwardedRef}\n        isRoot\n        hasBackground={hasBackground}\n        //\n        appearance={appearance}\n        accentColor={accentColor}\n        grayColor={grayColor}\n        panelBackground={panelBackground}\n        radius={radius}\n        scaling={scaling}\n        //\n        onAppearanceChange={setAppearance}\n        onAccentColorChange={setAccentColor}\n        onGrayColorChange={setGrayColor}\n        onPanelBackgroundChange={setPanelBackground}\n        onRadiusChange={setRadius}\n        onScalingChange={setScaling}\n      />\n    );\n  }\n);\nThemeRoot.displayName = 'ThemeRoot';\n\ntype ThemeImplElement = React.ElementRef<'div'>;\ninterface ThemeImplProps extends ThemeImplPublicProps, ThemeImplPrivateProps {}\ninterface ThemeImplPublicProps\n  extends ComponentPropsWithout<'div', RemovedProps | 'dir'>,\n    ThemeOwnProps {}\ninterface ThemeImplPrivateProps extends Partial<ThemeChangeHandlers> {\n  isRoot?: boolean;\n}\nconst ThemeImpl = React.forwardRef<ThemeImplElement, ThemeImplProps>((props, forwardedRef) => {\n  const context = React.useContext(ThemeContext);\n  const {\n    asChild,\n    isRoot,\n    hasBackground: hasBackgroundProp,\n    //\n    appearance = context?.appearance ?? themePropDefs.appearance.default,\n    accentColor = context?.accentColor ?? themePropDefs.accentColor.default,\n    grayColor = context?.resolvedGrayColor ?? themePropDefs.grayColor.default,\n    panelBackground = context?.panelBackground ?? themePropDefs.panelBackground.default,\n    radius = context?.radius ?? themePropDefs.radius.default,\n    scaling = context?.scaling ?? themePropDefs.scaling.default,\n    //\n    onAppearanceChange = noop,\n    onAccentColorChange = noop,\n    onGrayColorChange = noop,\n    onPanelBackgroundChange = noop,\n    onRadiusChange = noop,\n    onScalingChange = noop,\n    //\n    ...themeProps\n  } = props;\n  const Comp = asChild ? Slot : 'div';\n  const resolvedGrayColor = grayColor === 'auto' ? getMatchingGrayColor(accentColor) : grayColor;\n  const isExplicitAppearance = props.appearance === 'light' || props.appearance === 'dark';\n  const hasBackground =\n    hasBackgroundProp === undefined ? isRoot || isExplicitAppearance : hasBackgroundProp;\n  return (\n    <ThemeContext.Provider\n      value={React.useMemo(\n        () => ({\n          appearance,\n          accentColor,\n          grayColor,\n          resolvedGrayColor,\n          panelBackground,\n          radius,\n          scaling,\n          //\n          onAppearanceChange,\n          onAccentColorChange,\n          onGrayColorChange,\n          onPanelBackgroundChange,\n          onRadiusChange,\n          onScalingChange,\n        }),\n        [\n          appearance,\n          accentColor,\n          grayColor,\n          resolvedGrayColor,\n          panelBackground,\n          radius,\n          scaling,\n          //\n          onAppearanceChange,\n          onAccentColorChange,\n          onGrayColorChange,\n          onPanelBackgroundChange,\n          onRadiusChange,\n          onScalingChange,\n        ]\n      )}\n    >\n      <Comp\n        data-is-root-theme={isRoot ? 'true' : 'false'}\n        data-accent-color={accentColor}\n        data-gray-color={resolvedGrayColor}\n        // for nested `Theme` background\n        data-has-background={hasBackground ? 'true' : 'false'}\n        data-panel-background={panelBackground}\n        data-radius={radius}\n        data-scaling={scaling}\n        ref={forwardedRef}\n        {...themeProps}\n        className={classNames(\n          'radix-themes',\n          {\n            light: appearance === 'light',\n            dark: appearance === 'dark',\n          },\n          themeProps.className\n        )}\n      />\n    </ThemeContext.Provider>\n  );\n});\nThemeImpl.displayName = 'ThemeImpl';\n\nexport { Theme, ThemeContext, useThemeContext };\nexport type { ThemeProps };\n", "import * as React from 'react';\n\n/** A function that throws an error when a value isn't a valid React Element, otherwise returns the value */\nexport const requireReactElement = <T extends React.ReactNode>(children: T): T => {\n  const isReactElement = React.isValidElement(children);\n\n  if (!isReactElement) {\n    throw Error(\n      `Expected a single React Element child, but got: ${React.Children.toArray(children)\n        .map((child) =>\n          typeof child === 'object' && 'type' in child && typeof child.type === 'string'\n            ? child.type\n            : typeof child\n        )\n        .join(', ')}`\n    );\n  }\n\n  return children;\n};\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport * as AlertDialogPrimitive from '@radix-ui/react-alert-dialog';\n\nimport { alertDialogContentPropDefs } from './alert-dialog.props.js';\nimport { Heading } from './heading.js';\nimport { Text } from './text.js';\nimport { Theme } from './theme.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { requireReactElement } from '../helpers/require-react-element.js';\n\nimport type { AlertDialogContentOwnProps } from './alert-dialog.props.js';\nimport type {\n  ComponentPropsWithout,\n  RemovedProps,\n  ComponentPropsAs,\n} from '../helpers/component-props.js';\n\ninterface AlertDialogRootProps\n  extends React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Root> {}\nconst AlertDialogRoot: React.FC<AlertDialogRootProps> = (props) => (\n  <AlertDialogPrimitive.Root {...props} />\n);\nAlertDialogRoot.displayName = 'AlertDialog.Root';\n\ntype AlertDialogTriggerElement = React.ElementRef<typeof AlertDialogPrimitive.Trigger>;\ninterface AlertDialogTriggerProps\n  extends ComponentPropsWithout<typeof AlertDialogPrimitive.Trigger, RemovedProps> {}\nconst AlertDialogTrigger = React.forwardRef<AlertDialogTriggerElement, AlertDialogTriggerProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <AlertDialogPrimitive.Trigger {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </AlertDialogPrimitive.Trigger>\n  )\n);\nAlertDialogTrigger.displayName = 'AlertDialog.Trigger';\n\ntype AlertDialogContentElement = React.ElementRef<typeof AlertDialogPrimitive.Content>;\ninterface AlertDialogContentProps\n  extends ComponentPropsWithout<typeof AlertDialogPrimitive.Content, RemovedProps>,\n    AlertDialogContentOwnProps {\n  container?: React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Portal>['container'];\n}\nconst AlertDialogContent = React.forwardRef<AlertDialogContentElement, AlertDialogContentProps>(\n  ({ align, ...props }, forwardedRef) => {\n    const { align: alignPropDef, ...propDefs } = alertDialogContentPropDefs;\n    const { className: alignClassName } = extractProps({ align }, { align: alignPropDef });\n    const { className, forceMount, container, ...contentProps } = extractProps(props, propDefs);\n    return (\n      <AlertDialogPrimitive.Portal container={container} forceMount={forceMount}>\n        <Theme asChild>\n          <AlertDialogPrimitive.Overlay className=\"rt-BaseDialogOverlay rt-AlertDialogOverlay\">\n            <div className=\"rt-BaseDialogScroll rt-AlertDialogScroll\">\n              <div\n                className={`rt-BaseDialogScrollPadding rt-AlertDialogScrollPadding ${alignClassName}`}\n              >\n                <AlertDialogPrimitive.Content\n                  {...contentProps}\n                  ref={forwardedRef}\n                  className={classNames('rt-BaseDialogContent', 'rt-AlertDialogContent', className)}\n                />\n              </div>\n            </div>\n          </AlertDialogPrimitive.Overlay>\n        </Theme>\n      </AlertDialogPrimitive.Portal>\n    );\n  }\n);\nAlertDialogContent.displayName = 'AlertDialog.Content';\n\ntype AlertDialogTitleElement = React.ElementRef<typeof Heading>;\ntype AlertDialogTitleProps = ComponentPropsWithout<typeof Heading, 'asChild'>;\nconst AlertDialogTitle = React.forwardRef<AlertDialogTitleElement, AlertDialogTitleProps>(\n  (props, forwardedRef) => (\n    <AlertDialogPrimitive.Title asChild>\n      <Heading size=\"5\" mb=\"3\" trim=\"start\" {...props} asChild={false} ref={forwardedRef} />\n    </AlertDialogPrimitive.Title>\n  )\n);\nAlertDialogTitle.displayName = 'AlertDialog.Title';\n\ntype AlertDialogDescriptionElement = HTMLParagraphElement;\ntype AlertDialogDescriptionProps = ComponentPropsAs<typeof Text, 'p'>;\nconst AlertDialogDescription = React.forwardRef<\n  AlertDialogDescriptionElement,\n  AlertDialogDescriptionProps\n>((props, forwardedRef) => (\n  <AlertDialogPrimitive.Description asChild>\n    <Text as=\"p\" size=\"3\" {...props} asChild={false} ref={forwardedRef} />\n  </AlertDialogPrimitive.Description>\n));\nAlertDialogDescription.displayName = 'AlertDialog.Description';\n\ntype AlertDialogActionElement = React.ElementRef<typeof AlertDialogPrimitive.Action>;\ninterface AlertDialogActionProps\n  extends ComponentPropsWithout<typeof AlertDialogPrimitive.Action, RemovedProps> {}\nconst AlertDialogAction = React.forwardRef<AlertDialogActionElement, AlertDialogActionProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <AlertDialogPrimitive.Action {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </AlertDialogPrimitive.Action>\n  )\n);\nAlertDialogAction.displayName = 'AlertDialog.Action';\n\ntype AlertDialogCancelElement = React.ElementRef<typeof AlertDialogPrimitive.Cancel>;\ninterface AlertDialogCancelProps\n  extends ComponentPropsWithout<typeof AlertDialogPrimitive.Cancel, RemovedProps> {}\nconst AlertDialogCancel = React.forwardRef<AlertDialogCancelElement, AlertDialogCancelProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <AlertDialogPrimitive.Cancel {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </AlertDialogPrimitive.Cancel>\n  )\n);\nAlertDialogCancel.displayName = 'AlertDialog.Cancel';\n\nexport {\n  AlertDialogRoot as Root,\n  AlertDialogTrigger as Trigger,\n  AlertDialogContent as Content,\n  AlertDialogTitle as Title,\n  AlertDialogDescription as Description,\n  AlertDialogAction as Action,\n  AlertDialogCancel as Cancel,\n};\n\nexport type {\n  AlertDialogRootProps as RootProps,\n  AlertDialogTriggerProps as TriggerProps,\n  AlertDialogContentProps as ContentProps,\n  AlertDialogTitleProps as TitleProps,\n  AlertDialogDescriptionProps as DescriptionProps,\n  AlertDialogActionProps as ActionProps,\n  AlertDialogCancelProps as CancelProps,\n};\n", "export {\n  AspectRatio,\n  //\n  Root,\n} from './AspectRatio';\nexport type { AspectRatioProps } from './AspectRatio';\n", "import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * AspectRatio\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'AspectRatio';\n\ntype AspectRatioElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface AspectRatioProps extends PrimitiveDivProps {\n  ratio?: number;\n}\n\nconst AspectRatio = React.forwardRef<AspectRatioElement, AspectRatioProps>(\n  (props, forwardedRef) => {\n    const { ratio = 1 / 1, style, ...aspectRatioProps } = props;\n    return (\n      <div\n        style={{\n          // ensures inner element is contained\n          position: 'relative',\n          // ensures padding bottom trick maths works\n          width: '100%',\n          paddingBottom: `${100 / ratio}%`,\n        }}\n        data-radix-aspect-ratio-wrapper=\"\"\n      >\n        <Primitive.div\n          {...aspectRatioProps}\n          ref={forwardedRef}\n          style={{\n            ...style,\n            // ensures children expand in ratio\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n          }}\n        />\n      </div>\n    );\n  }\n);\n\nAspectRatio.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = AspectRatio;\n\nexport {\n  AspectRatio,\n  //\n  Root,\n};\nexport type { AspectRatioProps };\n", "export { AspectRatio } from '@radix-ui/react-aspect-ratio';\n", "'use client';\nexport {\n  createAvatarScope,\n  //\n  Avatar,\n  AvatarImage,\n  AvatarFallback,\n  //\n  Root,\n  Image,\n  Fallback,\n} from './Avatar';\nexport type { AvatarProps, AvatarImageProps, AvatarFallbackProps } from './Avatar';\n", "import * as React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Avatar\n * -----------------------------------------------------------------------------------------------*/\n\nconst AVATAR_NAME = 'Avatar';\n\ntype ScopedProps<P> = P & { __scopeAvatar?: Scope };\nconst [createAvatarContext, createAvatarScope] = createContextScope(AVATAR_NAME);\n\ntype ImageLoadingStatus = 'idle' | 'loading' | 'loaded' | 'error';\n\ntype AvatarContextValue = {\n  imageLoadingStatus: ImageLoadingStatus;\n  onImageLoadingStatusChange(status: ImageLoadingStatus): void;\n};\n\nconst [AvatarProvider, useAvatarContext] = createAvatarContext<AvatarContextValue>(AVATAR_NAME);\n\ntype AvatarElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface AvatarProps extends PrimitiveSpanProps {}\n\nconst Avatar = React.forwardRef<AvatarElement, AvatarProps>(\n  (props: ScopedProps<AvatarProps>, forwardedRef) => {\n    const { __scopeAvatar, ...avatarProps } = props;\n    const [imageLoadingStatus, setImageLoadingStatus] = React.useState<ImageLoadingStatus>('idle');\n    return (\n      <AvatarProvider\n        scope={__scopeAvatar}\n        imageLoadingStatus={imageLoadingStatus}\n        onImageLoadingStatusChange={setImageLoadingStatus}\n      >\n        <Primitive.span {...avatarProps} ref={forwardedRef} />\n      </AvatarProvider>\n    );\n  }\n);\n\nAvatar.displayName = AVATAR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AvatarImage\n * -----------------------------------------------------------------------------------------------*/\n\nconst IMAGE_NAME = 'AvatarImage';\n\ntype AvatarImageElement = React.ElementRef<typeof Primitive.img>;\ntype PrimitiveImageProps = React.ComponentPropsWithoutRef<typeof Primitive.img>;\ninterface AvatarImageProps extends PrimitiveImageProps {\n  onLoadingStatusChange?: (status: ImageLoadingStatus) => void;\n}\n\nconst AvatarImage = React.forwardRef<AvatarImageElement, AvatarImageProps>(\n  (props: ScopedProps<AvatarImageProps>, forwardedRef) => {\n    const { __scopeAvatar, src, onLoadingStatusChange = () => {}, ...imageProps } = props;\n    const context = useAvatarContext(IMAGE_NAME, __scopeAvatar);\n    const imageLoadingStatus = useImageLoadingStatus(src);\n    const handleLoadingStatusChange = useCallbackRef((status: ImageLoadingStatus) => {\n      onLoadingStatusChange(status);\n      context.onImageLoadingStatusChange(status);\n    });\n\n    useLayoutEffect(() => {\n      if (imageLoadingStatus !== 'idle') {\n        handleLoadingStatusChange(imageLoadingStatus);\n      }\n    }, [imageLoadingStatus, handleLoadingStatusChange]);\n\n    return imageLoadingStatus === 'loaded' ? (\n      <Primitive.img {...imageProps} ref={forwardedRef} src={src} />\n    ) : null;\n  }\n);\n\nAvatarImage.displayName = IMAGE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AvatarFallback\n * -----------------------------------------------------------------------------------------------*/\n\nconst FALLBACK_NAME = 'AvatarFallback';\n\ntype AvatarFallbackElement = React.ElementRef<typeof Primitive.span>;\ninterface AvatarFallbackProps extends PrimitiveSpanProps {\n  delayMs?: number;\n}\n\nconst AvatarFallback = React.forwardRef<AvatarFallbackElement, AvatarFallbackProps>(\n  (props: ScopedProps<AvatarFallbackProps>, forwardedRef) => {\n    const { __scopeAvatar, delayMs, ...fallbackProps } = props;\n    const context = useAvatarContext(FALLBACK_NAME, __scopeAvatar);\n    const [canRender, setCanRender] = React.useState(delayMs === undefined);\n\n    React.useEffect(() => {\n      if (delayMs !== undefined) {\n        const timerId = window.setTimeout(() => setCanRender(true), delayMs);\n        return () => window.clearTimeout(timerId);\n      }\n    }, [delayMs]);\n\n    return canRender && context.imageLoadingStatus !== 'loaded' ? (\n      <Primitive.span {...fallbackProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nAvatarFallback.displayName = FALLBACK_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction useImageLoadingStatus(src?: string) {\n  const [loadingStatus, setLoadingStatus] = React.useState<ImageLoadingStatus>('idle');\n\n  useLayoutEffect(() => {\n    if (!src) {\n      setLoadingStatus('error');\n      return;\n    }\n\n    let isMounted = true;\n    const image = new window.Image();\n\n    const updateStatus = (status: ImageLoadingStatus) => () => {\n      if (!isMounted) return;\n      setLoadingStatus(status);\n    };\n\n    setLoadingStatus('loading');\n    image.onload = updateStatus('loaded');\n    image.onerror = updateStatus('error');\n    image.src = src;\n\n    return () => {\n      isMounted = false;\n    };\n  }, [src]);\n\n  return loadingStatus;\n}\nconst Root = Avatar;\nconst Image = AvatarImage;\nconst Fallback = AvatarFallback;\n\nexport {\n  createAvatarScope,\n  //\n  Avatar,\n  AvatarImage,\n  AvatarFallback,\n  //\n  Root,\n  Image,\n  Fallback,\n};\nexport type { AvatarProps, AvatarImageProps, AvatarFallbackProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { accentColorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { radiusPropDef } from '../props/radius.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3', '4', '5', '6', '7', '8', '9'] as const;\nconst variants = ['solid', 'soft'] as const;\n\nconst avatarPropDefs = {\n  ...asChildPropDef,\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '3', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'soft' },\n  ...accentColorPropDef,\n  ...highContrastPropDef,\n  ...radiusPropDef,\n  fallback: { type: 'ReactNode', required: true },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n  fallback: PropDef<React.ReactNode>;\n};\n\nexport { avatarPropDefs };\n", "import * as React from 'react';\n\n/**\n * This is a helper function that is used when a component supports `asChild`\n * using the `Slot` component but its implementation contains nested DOM elements.\n *\n * Using it ensures if a consumer uses the `asChild` prop, the elements are in\n * correct order in the DOM, adopting the intended consumer `children`.\n */\nexport function getSubtree(\n  options: { asChild: boolean | undefined; children: React.ReactNode },\n  content: React.ReactNode | ((children: React.ReactNode) => React.ReactNode)\n) {\n  const { asChild, children } = options;\n  if (!asChild) return typeof content === 'function' ? content(children) : content;\n\n  const firstChild = React.Children.only(children) as React.ReactElement;\n  return React.cloneElement(firstChild, {\n    children: typeof content === 'function' ? content(firstChild.props.children) : content,\n  });\n}\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport * as AvatarPrimitive from '@radix-ui/react-avatar';\n\nimport { avatarPropDefs } from './avatar.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { getSubtree } from '../helpers/get-subtree.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ninterface AvatarProps extends MarginProps, AvatarImplProps {}\nconst Avatar = React.forwardRef<AvatarImplElement, AvatarProps>((props, forwardedRef) => {\n  const { asChild, children, className, style, color, radius, ...imageProps } = extractProps(\n    props,\n    avatarPropDefs,\n    marginPropDefs\n  );\n\n  return (\n    // TODO as a rule, should we rather spread the props on root?\n    <AvatarPrimitive.Root\n      data-accent-color={color}\n      data-radius={radius}\n      className={classNames('rt-reset', 'rt-AvatarRoot', className)}\n      style={style}\n      asChild={asChild}\n    >\n      {getSubtree({ asChild, children }, <AvatarImpl ref={forwardedRef} {...imageProps} />)}\n    </AvatarPrimitive.Root>\n  );\n});\nAvatar.displayName = 'Avatar';\n\ntype AvatarImplElement = React.ElementRef<typeof AvatarPrimitive.Image>;\ntype AvatarOwnProps = GetPropDefTypes<typeof avatarPropDefs>;\n\ninterface AvatarImplProps\n  extends ComponentPropsWithout<typeof AvatarPrimitive.Image, RemovedProps>,\n    AvatarOwnProps {\n  // TODO: See if we can automate making prop defs with `required: true` non nullable\n  fallback: NonNullable<AvatarOwnProps['fallback']>;\n}\n\nconst AvatarImpl = React.forwardRef<AvatarImplElement, AvatarImplProps>(\n  ({ fallback, ...imageProps }, forwardedRef) => {\n    const [status, setStatus] = React.useState<'idle' | 'loading' | 'loaded' | 'error'>('idle');\n    return (\n      <>\n        {status === 'idle' || status === 'loading' ? <span className=\"rt-AvatarFallback\" /> : null}\n\n        {status === 'error' ? (\n          <AvatarPrimitive.Fallback\n            className={classNames('rt-AvatarFallback', {\n              'rt-one-letter': typeof fallback === 'string' && fallback.length === 1,\n              'rt-two-letters': typeof fallback === 'string' && fallback.length === 2,\n            })}\n            delayMs={0}\n          >\n            {fallback}\n          </AvatarPrimitive.Fallback>\n        ) : null}\n\n        <AvatarPrimitive.Image\n          ref={forwardedRef}\n          className=\"rt-AvatarImage\"\n          {...imageProps}\n          onLoadingStatusChange={(status) => {\n            imageProps.onLoadingStatusChange?.(status);\n            setStatus(status);\n          }}\n        />\n      </>\n    );\n  }\n);\n\nAvatarImpl.displayName = 'AvatarImpl';\n\nexport { Avatar };\nexport type { AvatarProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { accentColorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { radiusPropDef } from '../props/radius.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['solid', 'soft', 'surface', 'outline'] as const;\n\nconst badgePropDefs = {\n  ...asChildPropDef,\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '1', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'soft' },\n  ...accentColorPropDef,\n  ...highContrastPropDef,\n  ...radiusPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n};\n\nexport { badgePropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { badgePropDefs } from './badge.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype BadgeElement = React.ElementRef<'span'>;\ntype BadgeOwnProps = GetPropDefTypes<typeof badgePropDefs>;\ninterface BadgeProps\n  extends ComponentPropsWithout<'span', RemovedProps>,\n    MarginProps,\n    BadgeOwnProps {}\nconst Badge = React.forwardRef<BadgeElement, BadgeProps>((props, forwardedRef) => {\n  const { asChild, className, color, radius, ...badgeProps } = extractProps(\n    props,\n    badgePropDefs,\n    marginPropDefs\n  );\n  const Comp = asChild ? Slot : 'span';\n  return (\n    <Comp\n      data-accent-color={color}\n      data-radius={radius}\n      {...badgeProps}\n      ref={forwardedRef}\n      className={classNames('rt-reset', 'rt-Badge', className)}\n    />\n  );\n});\nBadge.displayName = 'Badge';\n\nexport { Badge };\nexport type { BadgeProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { colorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { textWrapPropDef } from '../props/text-wrap.prop.js';\nimport { truncatePropDef } from '../props/truncate.prop.js';\nimport { weightPropDef } from '../props/weight.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3', '4', '5', '6', '7', '8', '9'] as const;\n\nconst blockquotePropDefs = {\n  ...asChildPropDef,\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: sizes,\n    responsive: true,\n  },\n  ...weightPropDef,\n  ...colorPropDef,\n  ...highContrastPropDef,\n  ...truncatePropDef,\n  ...textWrapPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n};\n\nexport { blockquotePropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { Text } from './text.js';\nimport { blockquotePropDefs } from './blockquote.props.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype BlockquoteElement = React.ElementRef<'blockquote'>;\ntype BlockQuoteOwnProps = GetPropDefTypes<typeof blockquotePropDefs>;\ninterface BlockquoteProps\n  extends ComponentPropsWithout<'blockquote', RemovedProps>,\n    MarginProps,\n    BlockQuoteOwnProps {}\nconst Blockquote = React.forwardRef<BlockquoteElement, BlockquoteProps>((props, forwardedRef) => {\n  const { asChild, children, className, ...blockquoteProps } = props;\n  const Comp = asChild ? Slot : 'blockquote';\n  return (\n    <Text\n      asChild\n      {...blockquoteProps}\n      ref={forwardedRef}\n      className={classNames('rt-Blockquote', className)}\n    >\n      <Comp>{children}</Comp>\n    </Text>\n  );\n});\nBlockquote.displayName = 'Blockquote';\n\nexport { Blockquote };\nexport type { BlockquoteProps };\n", "export { Slot, Slottable } from '@radix-ui/react-slot';\n", "import { asChildPropDef } from '../props/as-child.prop.js';\n\nimport type { PropDef, GetPropDefTypes } from '../props/prop-def.js';\n\nconst as = ['div', 'span'] as const;\nconst displayValues = ['none', 'inline', 'inline-block', 'block'] as const;\n\nconst boxPropDefs = {\n  /**\n   * Controls whether to render **div** or **span**\n   *\n   * @example\n   * as=\"div\"\n   * as=\"span\"\n   */\n  as: { type: 'enum', values: as, default: 'div' },\n  ...asChildPropDef,\n  /**\n   * Sets the CSS **display** property.\n   * Supports a subset of the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * display=\"inline-block\"\n   * display={{ sm: 'none', lg: 'block' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/display\n   */\n  display: {\n    type: 'enum',\n    className: 'rt-r-display',\n    values: displayValues,\n    responsive: true,\n  },\n} satisfies {\n  as: PropDef<(typeof as)[number]>;\n  display: PropDef<(typeof displayValues)[number]>;\n};\n\n// Use all of the imported prop defs to ensure that JSDoc works\ntype BoxOwnProps = GetPropDefTypes<typeof boxPropDefs & typeof asChildPropDef>;\n\nexport { boxPropDefs };\nexport type { BoxOwnProps };\n", "import type { GetPropDefTypes, PropDef } from './prop-def.js';\n\nconst paddingValues = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] as const;\n\nconst paddingPropDefs = {\n  /**\n   * Sets the CSS **padding** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * p=\"4\"\n   * p=\"100px\"\n   * p={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/padding\n   */\n  p: {\n    type: 'enum | string',\n    className: 'rt-r-p',\n    customProperties: ['--p'],\n    values: paddingValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **padding-left** and **padding-right** properties.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * px=\"4\"\n   * px=\"100px\"\n   * px={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/padding-left\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/padding-right\n   */\n  px: {\n    type: 'enum | string',\n    className: 'rt-r-px',\n    customProperties: ['--pl', '--pr'],\n    values: paddingValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **padding-top** and **padding-bottom** properties.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * py=\"4\"\n   * py=\"100px\"\n   * py={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/padding-top\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/padding-bottom\n   */\n  py: {\n    type: 'enum | string',\n    className: 'rt-r-py',\n    customProperties: ['--pt', '--pb'],\n    values: paddingValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **padding-top** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * pt=\"4\"\n   * pt=\"100px\"\n   * pt={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/padding-top\n   */\n  pt: {\n    type: 'enum | string',\n    className: 'rt-r-pt',\n    customProperties: ['--pt'],\n    values: paddingValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **padding-right** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * pr=\"4\"\n   * pr=\"100px\"\n   * pr={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/padding-right\n   */\n  pr: {\n    type: 'enum | string',\n    className: 'rt-r-pr',\n    customProperties: ['--pr'],\n    values: paddingValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **padding-bottom** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * pb=\"4\"\n   * pb=\"100px\"\n   * pb={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/padding-bottom\n   */\n  pb: {\n    type: 'enum | string',\n    className: 'rt-r-pb',\n    customProperties: ['--pb'],\n    values: paddingValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **padding-left** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * pl=\"4\"\n   * pl=\"100px\"\n   * pl={{ sm: '6', lg: '9' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/padding-left\n   */\n  pl: {\n    type: 'enum | string',\n    className: 'rt-r-pl',\n    customProperties: ['--pl'],\n    values: paddingValues,\n    responsive: true,\n  },\n} satisfies {\n  p: PropDef<(typeof paddingValues)[number]>;\n  px: PropDef<(typeof paddingValues)[number]>;\n  py: PropDef<(typeof paddingValues)[number]>;\n  pt: PropDef<(typeof paddingValues)[number]>;\n  pr: PropDef<(typeof paddingValues)[number]>;\n  pb: PropDef<(typeof paddingValues)[number]>;\n  pl: PropDef<(typeof paddingValues)[number]>;\n};\n\ntype PaddingProps = GetPropDefTypes<typeof paddingPropDefs>;\n\nexport { paddingPropDefs };\nexport type { PaddingProps };\n", "import { paddingPropDefs } from './padding.props.js';\nimport { heightPropDefs } from './height.props.js';\nimport { widthPropDefs } from './width.props.js';\n\nimport type { PropDef, GetPropDefTypes } from './prop-def.js';\n\nconst overflowValues = ['visible', 'hidden', 'clip', 'scroll', 'auto'] as const;\nconst positionValues = ['static', 'relative', 'absolute', 'fixed', 'sticky'] as const;\n// prettier-ignore\nconst positionEdgeValues = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-1', '-2', '-3', '-4', '-5', '-6', '-7', '-8', '-9'] as const;\nconst flexShrinkValues = ['0', '1'] as const;\nconst flexGrowValues = ['0', '1'] as const;\n\nconst layoutPropDefs = {\n  ...paddingPropDefs,\n  ...widthPropDefs,\n  ...heightPropDefs,\n  /**\n   * Sets the CSS **position** property.\n   * Supports the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * position=\"absolute\"\n   * position={{ sm: 'absolute', lg: 'sticky' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/position\n   */\n  position: {\n    type: 'enum',\n    className: 'rt-r-position',\n    values: positionValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **inset** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * inset=\"4\"\n   * inset=\"100px\"\n   * inset={{ sm: '0', lg: '50%' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/inset\n   */\n  inset: {\n    type: 'enum | string',\n    className: 'rt-r-inset',\n    customProperties: ['--inset'],\n    values: positionEdgeValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **top** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * top=\"4\"\n   * top=\"100px\"\n   * top={{ sm: '0', lg: '50%' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/top\n   */\n  top: {\n    type: 'enum | string',\n    className: 'rt-r-top',\n    customProperties: ['--top'],\n    values: positionEdgeValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **right** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * right=\"4\"\n   * right=\"100px\"\n   * right={{ sm: '0', lg: '50%' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/right\n   */\n  right: {\n    type: 'enum | string',\n    className: 'rt-r-right',\n    customProperties: ['--right'],\n    values: positionEdgeValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **bottom** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * bottom=\"4\"\n   * bottom=\"100px\"\n   * bottom={{ sm: '0', lg: '50%' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/bottom\n   */\n  bottom: {\n    type: 'enum | string',\n    className: 'rt-r-bottom',\n    customProperties: ['--bottom'],\n    values: positionEdgeValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **left** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * left=\"4\"\n   * left=\"100px\"\n   * left={{ sm: '0', lg: '50%' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/left\n   */\n  left: {\n    type: 'enum | string',\n    className: 'rt-r-left',\n    customProperties: ['--left'],\n    values: positionEdgeValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **overflow** property.\n   * Supports the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * overflow=\"hidden\"\n   * overflow={{ sm: 'hidden', lg: 'visible' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/overflow\n   */\n  overflow: {\n    type: 'enum',\n    className: 'rt-r-overflow',\n    values: overflowValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **overflow-x** property.\n   * Supports the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * overflowX=\"hidden\"\n   * overflowX={{ sm: 'hidden', md: 'visible' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/overflow\n   */\n  overflowX: {\n    type: 'enum',\n    className: 'rt-r-ox',\n    values: overflowValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **overflow-y** property.\n   * Supports the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * overflowY=\"hidden\"\n   * overflowY={{ sm: 'hidden', md: 'visible' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/overflow\n   */\n  overflowY: {\n    type: 'enum',\n    className: 'rt-r-oy',\n    values: overflowValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **flex-basis** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * flexBasis=\"0\"\n   * flexBasis=\"100%\"\n   * flexBasis={{ sm: '200px', lg: 'auto' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/flex-basis\n   */\n  flexBasis: {\n    type: 'string',\n    className: 'rt-r-fb',\n    customProperties: ['--flex-basis'],\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **flex-shrink** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * flexShrink=\"0\"\n   * flexShrink=\"1\"\n   * flexShrink={{ sm: '0', lg: '1' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/flex-shrink\n   */\n  flexShrink: {\n    type: 'enum | string',\n    className: 'rt-r-fs',\n    customProperties: ['--flex-shrink'],\n    values: flexShrinkValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **flex-grow** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * flexGrow=\"0\"\n   * flexGrow=\"1\"\n   * flexGrow={{ sm: '0', lg: '1' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/flex-grow\n   */\n  flexGrow: {\n    type: 'enum | string',\n    className: 'rt-r-fg',\n    customProperties: ['--flex-grow'],\n    values: flexGrowValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **grid-area** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * gridArea=\"header\"\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/grid-area\n   */\n  gridArea: {\n    type: 'string',\n    className: 'rt-r-ga',\n    customProperties: ['--grid-area'],\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **grid-column** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * gridColumn=\"1\"\n   * gridColumn=\"1 / -1\"\n   * gridColumn={{ sm: '1 / 3', lg: 'span 3' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column\n   */\n  gridColumn: {\n    type: 'string',\n    className: 'rt-r-gc',\n    customProperties: ['--grid-column'],\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **grid-column-start** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * gridColumnStart=\"1\"\n   * gridColumnStart=\"auto\"\n   * gridColumnStart={{ sm: '2', lg: 'span 3' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column-start\n   */\n  gridColumnStart: {\n    type: 'string',\n    className: 'rt-r-gcs',\n    customProperties: ['--grid-column-start'],\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **grid-column-end** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * gridColumnEnd=\"1\"\n   * gridColumnEnd=\"auto\"\n   * gridColumnEnd={{ sm: '2', lg: 'span 3' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column-end\n   */\n  gridColumnEnd: {\n    type: 'string',\n    className: 'rt-r-gce',\n    customProperties: ['--grid-column-end'],\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **grid-row** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * gridRow=\"1\"\n   * gridRow=\"auto\"\n   * gridRow={{ sm: '2', lg: 'span 3' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/grid-row\n   */\n  gridRow: {\n    type: 'string',\n    className: 'rt-r-gr',\n    customProperties: ['--grid-row'],\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **grid-row-start** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * gridRowStart=\"1\"\n   * gridRowStart=\"auto\"\n   * gridRowStart={{ sm: '2', lg: 'span 3' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/grid-row-start\n   */\n  gridRowStart: {\n    type: 'string',\n    className: 'rt-r-grs',\n    customProperties: ['--grid-row-start'],\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **grid-row-end** property.\n   * Supports CSS strings and responsive objects.\n   *\n   * @example\n   * gridRowEnd=\"1\"\n   * gridRowEnd=\"auto\"\n   * gridRowEnd={{ sm: '2', lg: 'span 3' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/grid-row-end\n   */\n  gridRowEnd: {\n    type: 'string',\n    className: 'rt-r-gre',\n    customProperties: ['--grid-row-end'],\n    responsive: true,\n  },\n} satisfies {\n  position: PropDef<(typeof positionValues)[number]>;\n  inset: PropDef<(typeof positionEdgeValues)[number]>;\n  top: PropDef<(typeof positionEdgeValues)[number]>;\n  right: PropDef<(typeof positionEdgeValues)[number]>;\n  bottom: PropDef<(typeof positionEdgeValues)[number]>;\n  left: PropDef<(typeof positionEdgeValues)[number]>;\n  overflow: PropDef<(typeof overflowValues)[number]>;\n  overflowX: PropDef<(typeof overflowValues)[number]>;\n  overflowY: PropDef<(typeof overflowValues)[number]>;\n  flexBasis: PropDef<string>;\n  flexShrink: PropDef<(typeof flexShrinkValues)[number]>;\n  flexGrow: PropDef<(typeof flexGrowValues)[number]>;\n  gridColumn: PropDef<string>;\n  gridColumnStart: PropDef<string>;\n  gridColumnEnd: PropDef<string>;\n  gridRow: PropDef<string>;\n  gridRowStart: PropDef<string>;\n  gridRowEnd: PropDef<string>;\n  gridArea: PropDef<string>;\n};\n\n// Use all of the imported prop defs to ensure that JSDoc works\ntype LayoutProps = GetPropDefTypes<\n  typeof paddingPropDefs & typeof widthPropDefs & typeof heightPropDefs & typeof layoutPropDefs\n>;\n\nexport { layoutPropDefs };\nexport type { LayoutProps };\n", "import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { Slot } from './slot.js';\nimport { boxPropDefs } from './box.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { layoutPropDefs } from '../props/layout.props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { LayoutProps } from '../props/layout.props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { BoxOwnProps } from './box.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ntype BoxElement = React.ElementRef<'div'>;\ninterface CommonBoxProps extends MarginProps, LayoutProps, BoxOwnProps {}\ntype BoxDivProps = { as?: 'div' } & ComponentPropsWithout<'div', RemovedProps>;\ntype BoxSpanProps = { as: 'span' } & ComponentPropsWithout<'span', RemovedProps>;\ntype BoxProps = CommonBoxProps & (BoxSpanProps | BoxDivProps);\n\nconst Box = React.forwardRef<BoxElement, BoxProps>((props, forwardedRef) => {\n  const {\n    className,\n    asChild,\n    as: Tag = 'div',\n    ...boxProps\n  } = extractProps(props, boxPropDefs, layoutPropDefs, marginPropDefs);\n  const Comp = asChild ? Slot : Tag;\n  return <Comp {...boxProps} ref={forwardedRef} className={classNames('rt-Box', className)} />;\n});\nBox.displayName = 'Box';\n\nexport { Box };\nexport type { BoxProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { accentColorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { radiusPropDef } from '../props/radius.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3', '4'] as const;\nconst variants = ['classic', 'solid', 'soft', 'surface', 'outline', 'ghost'] as const;\n\nconst baseButtonPropDefs = {\n  ...asChildPropDef,\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'solid' },\n  ...accentColorPropDef,\n  ...highContrastPropDef,\n  ...radiusPropDef,\n  loading: { type: 'boolean', className: 'rt-loading', default: false },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n  loading: PropDef<boolean>;\n};\n\nexport { baseButtonPropDefs };\n", "import type { PropDef } from './prop-def.js';\n\nconst gapValues = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] as const;\n\nconst gapPropDefs = {\n  /**\n   * Sets the CSS **gap** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * gap=\"4\"\n   * gap=\"20px\"\n   * gap={{ sm: '2', lg: '3em' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/gap\n   */\n  gap: {\n    type: 'enum | string',\n    className: 'rt-r-gap',\n    customProperties: ['--gap'],\n    values: gapValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **row-gap** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * gapX=\"4\"\n   * gapX=\"20px\"\n   * gapX={{ sm: '2', lg: '3em' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/row-gap\n   */\n  gapX: {\n    type: 'enum | string',\n    className: 'rt-r-cg',\n    customProperties: ['--column-gap'],\n    values: gapValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **column-gap** property.\n   * Supports space scale values, CSS strings, and responsive objects.\n   *\n   * @example\n   * gapY=\"4\"\n   * gapY=\"20px\"\n   * gapY={{ sm: '2', lg: '3em' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/column-gap\n   */\n  gapY: {\n    type: 'enum | string',\n    className: 'rt-r-rg',\n    customProperties: ['--row-gap'],\n    values: gapValues,\n    responsive: true,\n  },\n} satisfies {\n  gap: PropDef<(typeof gapValues)[number]>;\n  gapX: PropDef<(typeof gapValues)[number]>;\n  gapY: PropDef<(typeof gapValues)[number]>;\n};\n\nexport { gapPropDefs };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { gapPropDefs } from '../props/gap.props.js';\n\nimport type { PropDef, GetPropDefTypes } from '../props/prop-def.js';\n\nconst as = ['div', 'span'] as const;\nconst displayValues = ['none', 'inline-flex', 'flex'] as const;\nconst directionValues = ['row', 'column', 'row-reverse', 'column-reverse'] as const;\nconst alignValues = ['start', 'center', 'end', 'baseline', 'stretch'] as const;\nconst justifyValues = ['start', 'center', 'end', 'between'] as const;\nconst wrapValues = ['nowrap', 'wrap', 'wrap-reverse'] as const;\n\nconst flexPropDefs = {\n  /**\n   * Controls whether to render **div** or **span**\n   *\n   * @example\n   * as=\"div\"\n   * as=\"span\"\n   */\n  as: { type: 'enum', values: as, default: 'div' },\n  ...asChildPropDef,\n  /**\n   * Sets the CSS **display** property.\n   * Supports a subset of the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * display=\"inline-flex\"\n   * display={{ sm: 'none', lg: 'flex' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/display\n   */\n  display: {\n    type: 'enum',\n    className: 'rt-r-display',\n    values: displayValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **flex-direction** property.\n   * Supports the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * direction=\"column\"\n   * direction={{ sm: 'column', lg: 'row' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction\n   */\n  direction: {\n    type: 'enum',\n    className: 'rt-r-fd',\n    values: directionValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **align-items** property.\n   * Supports the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * align=\"center\"\n   * align={{ sm: 'baseline', lg: 'center' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/align-items\n   */\n  align: {\n    type: 'enum',\n    className: 'rt-r-ai',\n    values: alignValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **justify-content** property.\n   * Supports a subset of the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * justify=\"between\"\n   * justify={{ sm: 'start', lg: 'center' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content\n   */\n  justify: {\n    type: 'enum',\n    className: 'rt-r-jc',\n    values: justifyValues,\n    parseValue: parseJustifyValue,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **flex-wrap** property.\n   * Supports the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * wrap=\"wrap\"\n   * wrap={{ sm: 'wrap', lg: 'nowrap' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/flex-wrap\n   */\n  wrap: {\n    type: 'enum',\n    className: 'rt-r-fw',\n    values: wrapValues,\n    responsive: true,\n  },\n  ...gapPropDefs,\n} satisfies {\n  as: PropDef<(typeof as)[number]>;\n  display: PropDef<(typeof displayValues)[number]>;\n  direction: PropDef<(typeof directionValues)[number]>;\n  align: PropDef<(typeof alignValues)[number]>;\n  justify: PropDef<(typeof justifyValues)[number]>;\n  wrap: PropDef<(typeof wrapValues)[number]>;\n};\n\nfunction parseJustifyValue(value: string) {\n  return value === 'between' ? 'space-between' : value;\n}\n\n// Use all of the imported prop defs to ensure that JSDoc works\ntype FlexOwnProps = GetPropDefTypes<\n  typeof flexPropDefs & typeof gapPropDefs & typeof asChildPropDef\n>;\n\nexport { flexPropDefs };\nexport type { FlexOwnProps };\n", "import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { extractProps } from '../helpers/extract-props.js';\nimport { layoutPropDefs } from '../props/layout.props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\nimport { Slot } from './slot.js';\nimport { flexPropDefs } from './flex.props.js';\n\nimport type { FlexOwnProps } from './flex.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { LayoutProps } from '../props/layout.props.js';\nimport type { MarginProps } from '../props/margin.props.js';\n\ntype FlexElement = React.ElementRef<'div'>;\ninterface CommonFlexProps extends MarginProps, LayoutProps, FlexOwnProps {}\ntype FlexDivProps = { as?: 'div' } & ComponentPropsWithout<'div', RemovedProps>;\ntype FlexSpanProps = { as: 'span' } & ComponentPropsWithout<'span', RemovedProps>;\ntype FlexProps = CommonFlexProps & (FlexSpanProps | FlexDivProps);\n\nconst Flex = React.forwardRef<FlexElement, FlexProps>((props, forwardedRef) => {\n  const {\n    className,\n    asChild,\n    as: Tag = 'div',\n    ...flexProps\n  } = extractProps(props, flexPropDefs, layoutPropDefs, marginPropDefs);\n  const Comp = asChild ? Slot : Tag;\n  return <Comp {...flexProps} ref={forwardedRef} className={classNames('rt-Flex', className)} />;\n});\nFlex.displayName = 'Flex';\n\nexport { Flex };\nexport type { FlexProps };\n", "import type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\n\nconst spinnerPropDefs = {\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  loading: { type: 'boolean', default: true },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  loading: PropDef<boolean>;\n};\n\nexport { spinnerPropDefs };\n", "import * as React from 'react';\n\n// \"inert\" works differently between React versions\n// https://github.com/facebook/react/pull/24730\nexport const inert = parseFloat(React.version) >= 19 || '';\n", "import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { Flex } from './flex.js';\nimport { spinnerPropDefs } from './spinner.props.js';\nimport { inert } from '../helpers/inert.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype SpinnerElement = React.ElementRef<'span'>;\ntype SpinnerOwnProps = GetPropDefTypes<typeof spinnerPropDefs>;\ninterface SpinnerProps\n  extends ComponentPropsWithout<'span', RemovedProps>,\n    MarginProps,\n    SpinnerOwnProps {}\nconst Spinner = React.forwardRef<SpinnerElement, SpinnerProps>((props, forwardedRef) => {\n  const { className, children, loading, ...spinnerProps } = extractProps(\n    props,\n    spinnerPropDefs,\n    marginPropDefs\n  );\n\n  if (!loading) return children;\n\n  const spinner = (\n    <span {...spinnerProps} ref={forwardedRef} className={classNames('rt-Spinner', className)}>\n      <span className=\"rt-SpinnerLeaf\" />\n      <span className=\"rt-SpinnerLeaf\" />\n      <span className=\"rt-SpinnerLeaf\" />\n      <span className=\"rt-SpinnerLeaf\" />\n      <span className=\"rt-SpinnerLeaf\" />\n      <span className=\"rt-SpinnerLeaf\" />\n      <span className=\"rt-SpinnerLeaf\" />\n      <span className=\"rt-SpinnerLeaf\" />\n    </span>\n  );\n\n  if (children === undefined) return spinner;\n\n  return (\n    <Flex asChild position=\"relative\" align=\"center\" justify=\"center\">\n      <span>\n        {/**\n         * `display: contents` removes the content from the accessibility tree in some browsers,\n         * so we force remove it with `aria-hidden`\n         */}\n        <span\n          aria-hidden\n          style={{ display: 'contents', visibility: 'hidden' }}\n          // @ts-ignore\n          inert={undefined}\n        >\n          {children}\n        </span>\n\n        <Flex asChild align=\"center\" justify=\"center\" position=\"absolute\" inset=\"0\">\n          <span>{spinner}</span>\n        </Flex>\n      </span>\n    </Flex>\n  );\n});\nSpinner.displayName = 'Spinner';\n\nexport { Spinner };\nexport type { SpinnerProps };\n", "export { VisuallyHidden } from '@radix-ui/react-visually-hidden';\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { accentColorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['soft', 'surface', 'outline'] as const;\n\nconst calloutRootPropDefs = {\n  ...asChildPropDef,\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'soft' },\n  ...accentColorPropDef,\n  ...highContrastPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n};\n\nexport { calloutRootPropDefs };\n", "import { baseButtonPropDefs } from '../components/base-button.props.js';\nimport { calloutRootPropDefs } from '../components/callout.props.js';\nimport { spinnerPropDefs } from '../components/spinner.props.js';\nimport { textPropDefs } from '../components/text.props.js';\n\nimport type { Responsive } from '../props/prop-def.js';\n\nfunction mapResponsiveProp<Input extends string, Output>(\n  propValue: Responsive<Input> | undefined,\n  mapValue: (value: Input) => Output\n): Responsive<Output> | undefined {\n  if (propValue === undefined) return undefined;\n  if (typeof propValue === 'string') {\n    return mapValue(propValue);\n  }\n  return Object.fromEntries(\n    Object.entries(propValue).map(([key, value]) => [key, mapValue(value)])\n  );\n}\n\nfunction mapCalloutSizeToTextSize(\n  size: (typeof calloutRootPropDefs.size.values)[number]\n): (typeof textPropDefs.size.values)[number] {\n  return size === '3' ? '3' : '2';\n}\n\nfunction mapButtonSizeToSpinnerSize(\n  size: (typeof baseButtonPropDefs.size.values)[number]\n): (typeof spinnerPropDefs.size.values)[number] {\n  switch (size) {\n    case '1':\n      return '1';\n    case '2':\n    case '3':\n      return '2';\n    case '4':\n      return '3';\n  }\n}\n\nexport { mapResponsiveProp, mapCalloutSizeToTextSize, mapButtonSizeToSpinnerSize };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { baseButtonPropDefs } from './base-button.props.js';\nimport { Flex } from './flex.js';\nimport { Spinner } from './spinner.js';\nimport { VisuallyHidden } from './visually-hidden.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { mapResponsiveProp, mapButtonSizeToSpinnerSize } from '../helpers/map-prop-values.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype BaseButtonElement = React.ElementRef<'button'>;\ntype BaseButtonOwnProps = GetPropDefTypes<typeof baseButtonPropDefs>;\ninterface BaseButtonProps\n  extends ComponentPropsWithout<'button', RemovedProps>,\n    MarginProps,\n    BaseButtonOwnProps {}\nconst BaseButton = React.forwardRef<BaseButtonElement, BaseButtonProps>((props, forwardedRef) => {\n  const { size = baseButtonPropDefs.size.default } = props;\n  const {\n    className,\n    children,\n    asChild,\n    color,\n    radius,\n    disabled = props.loading,\n    ...baseButtonProps\n  } = extractProps(props, baseButtonPropDefs, marginPropDefs);\n  const Comp = asChild ? Slot : 'button';\n  return (\n    <Comp\n      // The `data-disabled` attribute\u00A0enables correct styles when doing `<Button asChild disabled>`\n      data-disabled={disabled || undefined}\n      data-accent-color={color}\n      data-radius={radius}\n      {...baseButtonProps}\n      ref={forwardedRef}\n      className={classNames('rt-reset', 'rt-BaseButton', className)}\n      disabled={disabled}\n    >\n      {props.loading ? (\n        <>\n          {/**\n           * We need a wrapper to set `visibility: hidden` to hide the button content whilst we show the `Spinner`.\n           * The button is a flex container with a `gap`, so we use `display: contents` to ensure the correct flex layout.\n           *\n           * However, `display: contents` removes the content from the accessibility tree in some browsers,\n           * so we force remove it with `aria-hidden` and re-add it in the tree with `VisuallyHidden`\n           */}\n          <span style={{ display: 'contents', visibility: 'hidden' }} aria-hidden>\n            {children}\n          </span>\n          <VisuallyHidden>{children}</VisuallyHidden>\n\n          <Flex asChild align=\"center\" justify=\"center\" position=\"absolute\" inset=\"0\">\n            <span>\n              <Spinner size={mapResponsiveProp(size, mapButtonSizeToSpinnerSize)} />\n            </span>\n          </Flex>\n        </>\n      ) : (\n        children\n      )}\n    </Comp>\n  );\n});\nBaseButton.displayName = 'BaseButton';\n\nexport { BaseButton };\nexport type { BaseButtonProps };\n", "import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { BaseButton } from './base-button.js';\n\ntype ButtonElement = React.ElementRef<typeof BaseButton>;\ninterface ButtonProps extends React.ComponentPropsWithoutRef<typeof BaseButton> {}\nconst Button = React.forwardRef<ButtonElement, ButtonProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <BaseButton {...props} ref={forwardedRef} className={classNames('rt-Button', className)} />\n  )\n);\nButton.displayName = 'Button';\n\nexport { Button };\nexport type { ButtonProps };\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { Text } from './text.js';\nimport { calloutRootPropDefs } from './callout.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { mapResponsiveProp, mapCalloutSizeToTextSize } from '../helpers/map-prop-values.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type {\n  ComponentPropsWithout,\n  RemovedProps,\n  ComponentPropsAs,\n} from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype CalloutRootOwnProps = GetPropDefTypes<typeof calloutRootPropDefs>;\n\ntype CalloutContextValue = { size?: CalloutRootOwnProps['size'] };\nconst CalloutContext = React.createContext<CalloutContextValue>({});\n\ntype CalloutRootElement = React.ElementRef<'div'>;\ninterface CalloutRootProps\n  extends ComponentPropsWithout<'div', RemovedProps>,\n    MarginProps,\n    CalloutRootOwnProps {}\nconst CalloutRoot = React.forwardRef<CalloutRootElement, CalloutRootProps>(\n  (props, forwardedRef) => {\n    const { size = calloutRootPropDefs.size.default } = props;\n    const { asChild, children, className, color, ...rootProps } = extractProps(\n      props,\n      calloutRootPropDefs,\n      marginPropDefs\n    );\n    const Comp = asChild ? Slot : 'div';\n    return (\n      <Comp\n        data-accent-color={color}\n        {...rootProps}\n        className={classNames('rt-CalloutRoot', className)}\n        ref={forwardedRef}\n      >\n        <CalloutContext.Provider value={React.useMemo(() => ({ size }), [size])}>\n          {children}\n        </CalloutContext.Provider>\n      </Comp>\n    );\n  }\n);\nCalloutRoot.displayName = 'Callout.Root';\n\ntype CalloutIconElement = React.ElementRef<'div'>;\ninterface CalloutIconProps extends ComponentPropsWithout<'div', RemovedProps> {}\nconst CalloutIcon = React.forwardRef<CalloutIconElement, CalloutIconProps>(\n  ({ className, ...props }, forwardedRef) => {\n    return (\n      <div {...props} className={classNames('rt-CalloutIcon', className)} ref={forwardedRef} />\n    );\n  }\n);\nCalloutIcon.displayName = 'Callout.Icon';\n\ntype CalloutTextElement = React.ElementRef<'p'>;\ntype CalloutTextProps = ComponentPropsAs<typeof Text, 'p'>;\nconst CalloutText = React.forwardRef<CalloutTextElement, CalloutTextProps>(\n  ({ className, ...props }, forwardedRef) => {\n    const { size } = React.useContext(CalloutContext);\n    return (\n      <Text\n        as=\"p\"\n        size={mapResponsiveProp(size, mapCalloutSizeToTextSize)}\n        {...props}\n        asChild={false}\n        ref={forwardedRef}\n        className={classNames('rt-CalloutText', className)}\n      />\n    );\n  }\n);\nCalloutText.displayName = 'Callout.Text';\n\nexport { CalloutRoot as Root, CalloutIcon as Icon, CalloutText as Text };\nexport type {\n  CalloutRootProps as RootProps,\n  CalloutIconProps as IconProps,\n  CalloutTextProps as TextProps,\n};\n", "import { asChildPropDef } from '../props/as-child.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3', '4', '5'] as const;\nconst variants = ['surface', 'classic', 'ghost'] as const;\n\nconst cardPropDefs = {\n  ...asChildPropDef,\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '1', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'surface' },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n};\n\nexport { cardPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { cardPropDefs } from './card.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype CardElement = React.ElementRef<'div'>;\ntype CardOwnProps = GetPropDefTypes<typeof cardPropDefs>;\ninterface CardProps extends ComponentPropsWithout<'div', RemovedProps>, MarginProps, CardOwnProps {}\nconst Card = React.forwardRef<CardElement, CardProps>((props, forwardedRef) => {\n  const { asChild, className, ...cardProps } = extractProps(props, cardPropDefs, marginPropDefs);\n  const Comp = asChild ? Slot : 'div';\n  return (\n    <Comp\n      ref={forwardedRef}\n      {...cardProps}\n      className={classNames('rt-reset', 'rt-BaseCard', 'rt-Card', className)}\n    />\n  );\n});\nCard.displayName = 'Card';\n\nexport { Card };\nexport type { CardProps };\n", "export { usePrevious } from './usePrevious';\n", "import * as React from 'react';\n\nfunction usePrevious<T>(value: T) {\n  const ref = React.useRef({ value, previous: value });\n\n  // We compare values before making an update to ensure that\n  // a change has been made. This ensures the previous value is\n  // persisted correctly between renders.\n  return React.useMemo(() => {\n    if (ref.current.value !== value) {\n      ref.current.previous = ref.current.value;\n      ref.current.value = value;\n    }\n    return ref.current.previous;\n  }, [value]);\n}\n\nexport { usePrevious };\n", "'use client';\nexport {\n  createCheckboxScope,\n  //\n  Checkbox,\n  CheckboxIndicator,\n  //\n  Root,\n  Indicator,\n} from './Checkbox';\nexport type { CheckboxProps, CheckboxIndicatorProps } from './Checkbox';\n", "import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { useSize } from '@radix-ui/react-use-size';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Checkbox\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_NAME = 'Checkbox';\n\ntype ScopedProps<P> = P & { __scopeCheckbox?: Scope };\nconst [createCheckboxContext, createCheckboxScope] = createContextScope(CHECKBOX_NAME);\n\ntype CheckedState = boolean | 'indeterminate';\n\ntype CheckboxContextValue = {\n  state: CheckedState;\n  disabled?: boolean;\n};\n\nconst [CheckboxProvider, useCheckboxContext] =\n  createCheckboxContext<CheckboxContextValue>(CHECKBOX_NAME);\n\ntype CheckboxElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface CheckboxProps extends Omit<PrimitiveButtonProps, 'checked' | 'defaultChecked'> {\n  checked?: CheckedState;\n  defaultChecked?: CheckedState;\n  required?: boolean;\n  onCheckedChange?(checked: CheckedState): void;\n}\n\nconst Checkbox = React.forwardRef<CheckboxElement, CheckboxProps>(\n  (props: ScopedProps<CheckboxProps>, forwardedRef) => {\n    const {\n      __scopeCheckbox,\n      name,\n      checked: checkedProp,\n      defaultChecked,\n      required,\n      disabled,\n      value = 'on',\n      onCheckedChange,\n      ...checkboxProps\n    } = props;\n    const [button, setButton] = React.useState<HTMLButtonElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));\n    const hasConsumerStoppedPropagationRef = React.useRef(false);\n    // We set this to true by default so that events bubble to forms without JS (SSR)\n    const isFormControl = button ? Boolean(button.closest('form')) : true;\n    const [checked = false, setChecked] = useControllableState({\n      prop: checkedProp,\n      defaultProp: defaultChecked,\n      onChange: onCheckedChange,\n    });\n    const initialCheckedStateRef = React.useRef(checked);\n    React.useEffect(() => {\n      const form = button?.form;\n      if (form) {\n        const reset = () => setChecked(initialCheckedStateRef.current);\n        form.addEventListener('reset', reset);\n        return () => form.removeEventListener('reset', reset);\n      }\n    }, [button, setChecked]);\n\n    return (\n      <CheckboxProvider scope={__scopeCheckbox} state={checked} disabled={disabled}>\n        <Primitive.button\n          type=\"button\"\n          role=\"checkbox\"\n          aria-checked={isIndeterminate(checked) ? 'mixed' : checked}\n          aria-required={required}\n          data-state={getState(checked)}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          value={value}\n          {...checkboxProps}\n          ref={composedRefs}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            // According to WAI ARIA, Checkboxes don't activate on enter keypress\n            if (event.key === 'Enter') event.preventDefault();\n          })}\n          onClick={composeEventHandlers(props.onClick, (event) => {\n            setChecked((prevChecked) => (isIndeterminate(prevChecked) ? true : !prevChecked));\n            if (isFormControl) {\n              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n              // if checkbox is in a form, stop propagation from the button so that we only propagate\n              // one click event (from the input). We propagate changes from an input so that native\n              // form validation works and form events reflect checkbox updates.\n              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n            }\n          })}\n        />\n        {isFormControl && (\n          <BubbleInput\n            control={button}\n            bubbles={!hasConsumerStoppedPropagationRef.current}\n            name={name}\n            value={value}\n            checked={checked}\n            required={required}\n            disabled={disabled}\n            // We transform because the input is absolutely positioned but we have\n            // rendered it **after** the button. This pulls it back to sit on top\n            // of the button.\n            style={{ transform: 'translateX(-100%)' }}\n          />\n        )}\n      </CheckboxProvider>\n    );\n  }\n);\n\nCheckbox.displayName = CHECKBOX_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * CheckboxIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'CheckboxIndicator';\n\ntype CheckboxIndicatorElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface CheckboxIndicatorProps extends PrimitiveSpanProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst CheckboxIndicator = React.forwardRef<CheckboxIndicatorElement, CheckboxIndicatorProps>(\n  (props: ScopedProps<CheckboxIndicatorProps>, forwardedRef) => {\n    const { __scopeCheckbox, forceMount, ...indicatorProps } = props;\n    const context = useCheckboxContext(INDICATOR_NAME, __scopeCheckbox);\n    return (\n      <Presence present={forceMount || isIndeterminate(context.state) || context.state === true}>\n        <Primitive.span\n          data-state={getState(context.state)}\n          data-disabled={context.disabled ? '' : undefined}\n          {...indicatorProps}\n          ref={forwardedRef}\n          style={{ pointerEvents: 'none', ...props.style }}\n        />\n      </Presence>\n    );\n  }\n);\n\nCheckboxIndicator.displayName = INDICATOR_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype InputProps = React.ComponentPropsWithoutRef<'input'>;\ninterface BubbleInputProps extends Omit<InputProps, 'checked'> {\n  checked: CheckedState;\n  control: HTMLElement | null;\n  bubbles: boolean;\n}\n\nconst BubbleInput = (props: BubbleInputProps) => {\n  const { control, checked, bubbles = true, ...inputProps } = props;\n  const ref = React.useRef<HTMLInputElement>(null);\n  const prevChecked = usePrevious(checked);\n  const controlSize = useSize(control);\n\n  // Bubble checked change to parents (e.g form change event)\n  React.useEffect(() => {\n    const input = ref.current!;\n    const inputProto = window.HTMLInputElement.prototype;\n    const descriptor = Object.getOwnPropertyDescriptor(inputProto, 'checked') as PropertyDescriptor;\n    const setChecked = descriptor.set;\n\n    if (prevChecked !== checked && setChecked) {\n      const event = new Event('click', { bubbles });\n      input.indeterminate = isIndeterminate(checked);\n      setChecked.call(input, isIndeterminate(checked) ? false : checked);\n      input.dispatchEvent(event);\n    }\n  }, [prevChecked, checked, bubbles]);\n\n  return (\n    <input\n      type=\"checkbox\"\n      aria-hidden\n      defaultChecked={isIndeterminate(checked) ? false : checked}\n      {...inputProps}\n      tabIndex={-1}\n      ref={ref}\n      style={{\n        ...props.style,\n        ...controlSize,\n        position: 'absolute',\n        pointerEvents: 'none',\n        opacity: 0,\n        margin: 0,\n      }}\n    />\n  );\n};\n\nfunction isIndeterminate(checked?: CheckedState): checked is 'indeterminate' {\n  return checked === 'indeterminate';\n}\n\nfunction getState(checked: CheckedState) {\n  return isIndeterminate(checked) ? 'indeterminate' : checked ? 'checked' : 'unchecked';\n}\n\nconst Root = Checkbox;\nconst Indicator = CheckboxIndicator;\n\nexport {\n  createCheckboxScope,\n  //\n  Checkbox,\n  CheckboxIndicator,\n  //\n  Root,\n  Indicator,\n};\nexport type { CheckboxProps, CheckboxIndicatorProps };\n", "'use client';\nexport { createCollection } from './Collection';\nexport type { CollectionProps } from './Collection';\n", "import React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Slot } from '@radix-ui/react-slot';\n\ntype SlotProps = React.ComponentPropsWithoutRef<typeof Slot>;\ntype CollectionElement = HTMLElement;\ninterface CollectionProps extends SlotProps {\n  scope: any;\n}\n\n// We have resorted to returning slots directly rather than exposing primitives that can then\n// be slotted like `<CollectionItem as={Slot}>\u2026</CollectionItem>`.\n// This is because we encountered issues with generic types that cannot be statically analysed\n// due to creating them dynamically via createCollection.\n\nfunction createCollection<ItemElement extends HTMLElement, ItemData = {}>(name: string) {\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionProvider\n   * ---------------------------------------------------------------------------------------------*/\n\n  const PROVIDER_NAME = name + 'CollectionProvider';\n  const [createCollectionContext, createCollectionScope] = createContextScope(PROVIDER_NAME);\n\n  type ContextValue = {\n    collectionRef: React.RefObject<CollectionElement>;\n    itemMap: Map<React.RefObject<ItemElement>, { ref: React.RefObject<ItemElement> } & ItemData>;\n  };\n\n  const [CollectionProviderImpl, useCollectionContext] = createCollectionContext<ContextValue>(\n    PROVIDER_NAME,\n    { collectionRef: { current: null }, itemMap: new Map() }\n  );\n\n  const CollectionProvider: React.FC<{ children?: React.ReactNode; scope: any }> = (props) => {\n    const { scope, children } = props;\n    const ref = React.useRef<CollectionElement>(null);\n    const itemMap = React.useRef<ContextValue['itemMap']>(new Map()).current;\n    return (\n      <CollectionProviderImpl scope={scope} itemMap={itemMap} collectionRef={ref}>\n        {children}\n      </CollectionProviderImpl>\n    );\n  };\n\n  CollectionProvider.displayName = PROVIDER_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionSlot\n   * ---------------------------------------------------------------------------------------------*/\n\n  const COLLECTION_SLOT_NAME = name + 'CollectionSlot';\n\n  const CollectionSlot = React.forwardRef<CollectionElement, CollectionProps>(\n    (props, forwardedRef) => {\n      const { scope, children } = props;\n      const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n      const composedRefs = useComposedRefs(forwardedRef, context.collectionRef);\n      return <Slot ref={composedRefs}>{children}</Slot>;\n    }\n  );\n\n  CollectionSlot.displayName = COLLECTION_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionItem\n   * ---------------------------------------------------------------------------------------------*/\n\n  const ITEM_SLOT_NAME = name + 'CollectionItemSlot';\n  const ITEM_DATA_ATTR = 'data-radix-collection-item';\n\n  type CollectionItemSlotProps = ItemData & {\n    children: React.ReactNode;\n    scope: any;\n  };\n\n  const CollectionItemSlot = React.forwardRef<ItemElement, CollectionItemSlotProps>(\n    (props, forwardedRef) => {\n      const { scope, children, ...itemData } = props;\n      const ref = React.useRef<ItemElement>(null);\n      const composedRefs = useComposedRefs(forwardedRef, ref);\n      const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n\n      React.useEffect(() => {\n        context.itemMap.set(ref, { ref, ...(itemData as unknown as ItemData) });\n        return () => void context.itemMap.delete(ref);\n      });\n\n      return (\n        <Slot {...{ [ITEM_DATA_ATTR]: '' }} ref={composedRefs}>\n          {children}\n        </Slot>\n      );\n    }\n  );\n\n  CollectionItemSlot.displayName = ITEM_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * useCollection\n   * ---------------------------------------------------------------------------------------------*/\n\n  function useCollection(scope: any) {\n    const context = useCollectionContext(name + 'CollectionConsumer', scope);\n\n    const getItems = React.useCallback(() => {\n      const collectionNode = context.collectionRef.current;\n      if (!collectionNode) return [];\n      const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));\n      const items = Array.from(context.itemMap.values());\n      const orderedItems = items.sort(\n        (a, b) => orderedNodes.indexOf(a.ref.current!) - orderedNodes.indexOf(b.ref.current!)\n      );\n      return orderedItems;\n    }, [context.collectionRef, context.itemMap]);\n\n    return getItems;\n  }\n\n  return [\n    { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },\n    useCollection,\n    createCollectionScope,\n  ] as const;\n}\n\nexport { createCollection };\nexport type { CollectionProps };\n", "'use client';\nexport {\n  createRovingFocusGroupScope,\n  //\n  RovingFocusGroup,\n  RovingFocusGroupItem,\n  //\n  Root,\n  Item,\n} from './RovingFocusGroup';\nexport type { RovingFocusGroupProps, RovingFocusItemProps } from './RovingFocusGroup';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useDirection } from '@radix-ui/react-direction';\n\nimport type { Scope } from '@radix-ui/react-context';\n\nconst ENTRY_FOCUS = 'rovingFocusGroup.onEntryFocus';\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true };\n\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'RovingFocusGroup';\n\ntype ItemData = { id: string; focusable: boolean; active: boolean };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  HTMLSpanElement,\n  ItemData\n>(GROUP_NAME);\n\ntype ScopedProps<P> = P & { __scopeRovingFocusGroup?: Scope };\nconst [createRovingFocusGroupContext, createRovingFocusGroupScope] = createContextScope(\n  GROUP_NAME,\n  [createCollectionScope]\n);\n\ntype Orientation = React.AriaAttributes['aria-orientation'];\ntype Direction = 'ltr' | 'rtl';\n\ninterface RovingFocusGroupOptions {\n  /**\n   * The orientation of the group.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   */\n  orientation?: Orientation;\n  /**\n   * The direction of navigation between items.\n   */\n  dir?: Direction;\n  /**\n   * Whether keyboard navigation should loop around\n   * @defaultValue false\n   */\n  loop?: boolean;\n}\n\ntype RovingContextValue = RovingFocusGroupOptions & {\n  currentTabStopId: string | null;\n  onItemFocus(tabStopId: string): void;\n  onItemShiftTab(): void;\n  onFocusableItemAdd(): void;\n  onFocusableItemRemove(): void;\n};\n\nconst [RovingFocusProvider, useRovingFocusContext] =\n  createRovingFocusGroupContext<RovingContextValue>(GROUP_NAME);\n\ntype RovingFocusGroupElement = RovingFocusGroupImplElement;\ninterface RovingFocusGroupProps extends RovingFocusGroupImplProps {}\n\nconst RovingFocusGroup = React.forwardRef<RovingFocusGroupElement, RovingFocusGroupProps>(\n  (props: ScopedProps<RovingFocusGroupProps>, forwardedRef) => {\n    return (\n      <Collection.Provider scope={props.__scopeRovingFocusGroup}>\n        <Collection.Slot scope={props.__scopeRovingFocusGroup}>\n          <RovingFocusGroupImpl {...props} ref={forwardedRef} />\n        </Collection.Slot>\n      </Collection.Provider>\n    );\n  }\n);\n\nRovingFocusGroup.displayName = GROUP_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype RovingFocusGroupImplElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface RovingFocusGroupImplProps\n  extends Omit<PrimitiveDivProps, 'dir'>,\n    RovingFocusGroupOptions {\n  currentTabStopId?: string | null;\n  defaultCurrentTabStopId?: string;\n  onCurrentTabStopIdChange?: (tabStopId: string | null) => void;\n  onEntryFocus?: (event: Event) => void;\n  preventScrollOnEntryFocus?: boolean;\n}\n\nconst RovingFocusGroupImpl = React.forwardRef<\n  RovingFocusGroupImplElement,\n  RovingFocusGroupImplProps\n>((props: ScopedProps<RovingFocusGroupImplProps>, forwardedRef) => {\n  const {\n    __scopeRovingFocusGroup,\n    orientation,\n    loop = false,\n    dir,\n    currentTabStopId: currentTabStopIdProp,\n    defaultCurrentTabStopId,\n    onCurrentTabStopIdChange,\n    onEntryFocus,\n    preventScrollOnEntryFocus = false,\n    ...groupProps\n  } = props;\n  const ref = React.useRef<RovingFocusGroupImplElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const direction = useDirection(dir);\n  const [currentTabStopId = null, setCurrentTabStopId] = useControllableState({\n    prop: currentTabStopIdProp,\n    defaultProp: defaultCurrentTabStopId,\n    onChange: onCurrentTabStopIdChange,\n  });\n  const [isTabbingBackOut, setIsTabbingBackOut] = React.useState(false);\n  const handleEntryFocus = useCallbackRef(onEntryFocus);\n  const getItems = useCollection(__scopeRovingFocusGroup);\n  const isClickFocusRef = React.useRef(false);\n  const [focusableItemsCount, setFocusableItemsCount] = React.useState(0);\n\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      node.addEventListener(ENTRY_FOCUS, handleEntryFocus);\n      return () => node.removeEventListener(ENTRY_FOCUS, handleEntryFocus);\n    }\n  }, [handleEntryFocus]);\n\n  return (\n    <RovingFocusProvider\n      scope={__scopeRovingFocusGroup}\n      orientation={orientation}\n      dir={direction}\n      loop={loop}\n      currentTabStopId={currentTabStopId}\n      onItemFocus={React.useCallback(\n        (tabStopId) => setCurrentTabStopId(tabStopId),\n        [setCurrentTabStopId]\n      )}\n      onItemShiftTab={React.useCallback(() => setIsTabbingBackOut(true), [])}\n      onFocusableItemAdd={React.useCallback(\n        () => setFocusableItemsCount((prevCount) => prevCount + 1),\n        []\n      )}\n      onFocusableItemRemove={React.useCallback(\n        () => setFocusableItemsCount((prevCount) => prevCount - 1),\n        []\n      )}\n    >\n      <Primitive.div\n        tabIndex={isTabbingBackOut || focusableItemsCount === 0 ? -1 : 0}\n        data-orientation={orientation}\n        {...groupProps}\n        ref={composedRefs}\n        style={{ outline: 'none', ...props.style }}\n        onMouseDown={composeEventHandlers(props.onMouseDown, () => {\n          isClickFocusRef.current = true;\n        })}\n        onFocus={composeEventHandlers(props.onFocus, (event) => {\n          // We normally wouldn't need this check, because we already check\n          // that the focus is on the current target and not bubbling to it.\n          // We do this because Safari doesn't focus buttons when clicked, and\n          // instead, the wrapper will get focused and not through a bubbling event.\n          const isKeyboardFocus = !isClickFocusRef.current;\n\n          if (event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut) {\n            const entryFocusEvent = new CustomEvent(ENTRY_FOCUS, EVENT_OPTIONS);\n            event.currentTarget.dispatchEvent(entryFocusEvent);\n\n            if (!entryFocusEvent.defaultPrevented) {\n              const items = getItems().filter((item) => item.focusable);\n              const activeItem = items.find((item) => item.active);\n              const currentItem = items.find((item) => item.id === currentTabStopId);\n              const candidateItems = [activeItem, currentItem, ...items].filter(\n                Boolean\n              ) as typeof items;\n              const candidateNodes = candidateItems.map((item) => item.ref.current!);\n              focusFirst(candidateNodes, preventScrollOnEntryFocus);\n            }\n          }\n\n          isClickFocusRef.current = false;\n        })}\n        onBlur={composeEventHandlers(props.onBlur, () => setIsTabbingBackOut(false))}\n      />\n    </RovingFocusProvider>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroupItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'RovingFocusGroupItem';\n\ntype RovingFocusItemElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface RovingFocusItemProps extends PrimitiveSpanProps {\n  tabStopId?: string;\n  focusable?: boolean;\n  active?: boolean;\n}\n\nconst RovingFocusGroupItem = React.forwardRef<RovingFocusItemElement, RovingFocusItemProps>(\n  (props: ScopedProps<RovingFocusItemProps>, forwardedRef) => {\n    const {\n      __scopeRovingFocusGroup,\n      focusable = true,\n      active = false,\n      tabStopId,\n      ...itemProps\n    } = props;\n    const autoId = useId();\n    const id = tabStopId || autoId;\n    const context = useRovingFocusContext(ITEM_NAME, __scopeRovingFocusGroup);\n    const isCurrentTabStop = context.currentTabStopId === id;\n    const getItems = useCollection(__scopeRovingFocusGroup);\n\n    const { onFocusableItemAdd, onFocusableItemRemove } = context;\n\n    React.useEffect(() => {\n      if (focusable) {\n        onFocusableItemAdd();\n        return () => onFocusableItemRemove();\n      }\n    }, [focusable, onFocusableItemAdd, onFocusableItemRemove]);\n\n    return (\n      <Collection.ItemSlot\n        scope={__scopeRovingFocusGroup}\n        id={id}\n        focusable={focusable}\n        active={active}\n      >\n        <Primitive.span\n          tabIndex={isCurrentTabStop ? 0 : -1}\n          data-orientation={context.orientation}\n          {...itemProps}\n          ref={forwardedRef}\n          onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n            // We prevent focusing non-focusable items on `mousedown`.\n            // Even though the item has tabIndex={-1}, that only means take it out of the tab order.\n            if (!focusable) event.preventDefault();\n            // Safari doesn't focus a button when clicked so we run our logic on mousedown also\n            else context.onItemFocus(id);\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => context.onItemFocus(id))}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if (event.key === 'Tab' && event.shiftKey) {\n              context.onItemShiftTab();\n              return;\n            }\n\n            if (event.target !== event.currentTarget) return;\n\n            const focusIntent = getFocusIntent(event, context.orientation, context.dir);\n\n            if (focusIntent !== undefined) {\n              if (event.metaKey || event.ctrlKey || event.altKey || event.shiftKey) return;\n              event.preventDefault();\n              const items = getItems().filter((item) => item.focusable);\n              let candidateNodes = items.map((item) => item.ref.current!);\n\n              if (focusIntent === 'last') candidateNodes.reverse();\n              else if (focusIntent === 'prev' || focusIntent === 'next') {\n                if (focusIntent === 'prev') candidateNodes.reverse();\n                const currentIndex = candidateNodes.indexOf(event.currentTarget);\n                candidateNodes = context.loop\n                  ? wrapArray(candidateNodes, currentIndex + 1)\n                  : candidateNodes.slice(currentIndex + 1);\n              }\n\n              /**\n               * Imperative focus during keydown is risky so we prevent React's batching updates\n               * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n               */\n              setTimeout(() => focusFirst(candidateNodes));\n            }\n          })}\n        />\n      </Collection.ItemSlot>\n    );\n  }\n);\n\nRovingFocusGroupItem.displayName = ITEM_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\n// prettier-ignore\nconst MAP_KEY_TO_FOCUS_INTENT: Record<string, FocusIntent> = {\n  ArrowLeft: 'prev', ArrowUp: 'prev',\n  ArrowRight: 'next', ArrowDown: 'next',\n  PageUp: 'first', Home: 'first',\n  PageDown: 'last', End: 'last',\n};\n\nfunction getDirectionAwareKey(key: string, dir?: Direction) {\n  if (dir !== 'rtl') return key;\n  return key === 'ArrowLeft' ? 'ArrowRight' : key === 'ArrowRight' ? 'ArrowLeft' : key;\n}\n\ntype FocusIntent = 'first' | 'last' | 'prev' | 'next';\n\nfunction getFocusIntent(event: React.KeyboardEvent, orientation?: Orientation, dir?: Direction) {\n  const key = getDirectionAwareKey(event.key, dir);\n  if (orientation === 'vertical' && ['ArrowLeft', 'ArrowRight'].includes(key)) return undefined;\n  if (orientation === 'horizontal' && ['ArrowUp', 'ArrowDown'].includes(key)) return undefined;\n  return MAP_KEY_TO_FOCUS_INTENT[key];\n}\n\nfunction focusFirst(candidates: HTMLElement[], preventScroll = false) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n  for (const candidate of candidates) {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n    candidate.focus({ preventScroll });\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n  }\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n\nconst Root = RovingFocusGroup;\nconst Item = RovingFocusGroupItem;\n\nexport {\n  createRovingFocusGroupScope,\n  //\n  RovingFocusGroup,\n  RovingFocusGroupItem,\n  //\n  Root,\n  Item,\n};\nexport type { RovingFocusGroupProps, RovingFocusItemProps };\n", "'use client';\n\nimport * as React from 'react';\nimport * as CheckboxPrimitive from '@radix-ui/react-checkbox';\nimport { createCheckboxScope } from '@radix-ui/react-checkbox';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useDirection } from '@radix-ui/react-direction';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * CheckboxGroup\n * -----------------------------------------------------------------------------------------------*/\nconst CHECKBOX_GROUP_NAME = 'CheckboxGroup';\n\ntype ScopedProps<P> = P & { __scopeCheckboxGroup?: Scope };\nconst [createCheckboxGroupContext, createCheckboxGroupScope] = createContextScope(\n  CHECKBOX_GROUP_NAME,\n  [createRovingFocusGroupScope, createCheckboxScope]\n);\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\nconst useCheckboxScope = createCheckboxScope();\n\ntype CheckboxGroupContextValue = {\n  name?: string;\n  required: boolean;\n  disabled: boolean;\n  value?: string[];\n  onItemCheck(value: string): void;\n  onItemUncheck(value: string): void;\n};\n\nconst [CheckboxGroupProvider, useCheckboxGroupContext] =\n  createCheckboxGroupContext<CheckboxGroupContextValue>(CHECKBOX_GROUP_NAME);\n\ntype CheckboxGroupElement = React.ElementRef<typeof Primitive.div>;\ntype RovingFocusGroupProps = React.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface CheckboxGroupProps extends PrimitiveDivProps {\n  name?: CheckboxGroupContextValue['name'];\n  required?: React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>['required'];\n  disabled?: React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>['disabled'];\n  dir?: RovingFocusGroupProps['dir'];\n  orientation?: RovingFocusGroupProps['orientation'];\n  loop?: RovingFocusGroupProps['loop'];\n  defaultValue?: string[];\n  value?: CheckboxGroupContextValue['value'];\n  onValueChange?: (value: string[]) => void;\n}\n\nconst CheckboxGroup = React.forwardRef<CheckboxGroupElement, CheckboxGroupProps>(\n  (props: ScopedProps<CheckboxGroupProps>, forwardedRef) => {\n    const {\n      __scopeCheckboxGroup,\n      name,\n      defaultValue,\n      value: valueProp,\n      required = false,\n      disabled = false,\n      orientation,\n      dir,\n      loop = true,\n      onValueChange,\n      ...groupProps\n    } = props;\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeCheckboxGroup);\n    const direction = useDirection(dir);\n    const [value = [], setValue] = useControllableState({\n      prop: valueProp,\n      defaultProp: defaultValue,\n      onChange: onValueChange,\n    });\n\n    const handleItemCheck = React.useCallback(\n      (itemValue: string) => setValue((prevValue = []) => [...prevValue, itemValue]),\n      [setValue]\n    );\n\n    const handleItemUncheck = React.useCallback(\n      (itemValue: string) =>\n        setValue((prevValue = []) => prevValue.filter((value) => value !== itemValue)),\n      [setValue]\n    );\n\n    return (\n      <CheckboxGroupProvider\n        scope={__scopeCheckboxGroup}\n        name={name}\n        required={required}\n        disabled={disabled}\n        value={value}\n        onItemCheck={handleItemCheck}\n        onItemUncheck={handleItemUncheck}\n      >\n        <RovingFocusGroup.Root\n          asChild\n          {...rovingFocusGroupScope}\n          orientation={orientation}\n          dir={direction}\n          loop={loop}\n        >\n          <Primitive.div\n            role=\"group\"\n            data-disabled={disabled ? '' : undefined}\n            dir={direction}\n            {...groupProps}\n            ref={forwardedRef}\n          />\n        </RovingFocusGroup.Root>\n      </CheckboxGroupProvider>\n    );\n  }\n);\n\nCheckboxGroup.displayName = CHECKBOX_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * CheckboxGroupItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'CheckboxGroupItem';\n\ntype CheckboxGroupItemElement = React.ElementRef<typeof CheckboxPrimitive.Root>;\ntype CheckboxProps = React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>;\ninterface CheckboxGroupItemProps\n  extends Omit<CheckboxProps, 'checked' | 'defaultChecked' | 'onCheckedChange' | 'name'> {\n  value: string;\n}\n\nconst CheckboxGroupItem = React.forwardRef<CheckboxGroupItemElement, CheckboxGroupItemProps>(\n  (props: ScopedProps<CheckboxGroupItemProps>, forwardedRef) => {\n    const { __scopeCheckboxGroup, disabled, ...itemProps } = props;\n    const context = useCheckboxGroupContext(ITEM_NAME, __scopeCheckboxGroup);\n    const isDisabled = context.disabled || disabled;\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeCheckboxGroup);\n    const checkboxScope = useCheckboxScope(__scopeCheckboxGroup);\n    const ref = React.useRef<React.ElementRef<typeof CheckboxPrimitive.Root>>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const checked = context.value?.includes(itemProps.value);\n\n    return (\n      <RovingFocusGroup.Item\n        asChild\n        {...rovingFocusGroupScope}\n        focusable={!isDisabled}\n        active={checked}\n      >\n        <CheckboxPrimitive.Root\n          name={context.name}\n          disabled={isDisabled}\n          required={context.required}\n          checked={checked}\n          {...checkboxScope}\n          {...itemProps}\n          ref={composedRefs}\n          onCheckedChange={(checked) => {\n            if (checked) {\n              context.onItemCheck(props.value);\n            } else {\n              context.onItemUncheck(props.value);\n            }\n          }}\n        />\n      </RovingFocusGroup.Item>\n    );\n  }\n);\n\nCheckboxGroupItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * CheckboxGroupIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'CheckboxGroupIndicator';\n\ntype CheckboxGroupIndicatorElement = React.ElementRef<typeof CheckboxPrimitive.Indicator>;\ntype CheckboxIndicatorProps = React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Indicator>;\ninterface CheckboxGroupIndicatorProps extends CheckboxIndicatorProps {}\n\nconst CheckboxGroupIndicator = React.forwardRef<\n  CheckboxGroupIndicatorElement,\n  CheckboxGroupIndicatorProps\n>((props: ScopedProps<CheckboxGroupIndicatorProps>, forwardedRef) => {\n  const { __scopeCheckboxGroup, ...indicatorProps } = props;\n  const checkboxScope = useCheckboxScope(__scopeCheckboxGroup);\n  return <CheckboxPrimitive.Indicator {...checkboxScope} {...indicatorProps} ref={forwardedRef} />;\n});\n\nCheckboxGroupIndicator.displayName = INDICATOR_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nconst Root = CheckboxGroup;\nconst Item = CheckboxGroupItem;\nconst Indicator = CheckboxGroupIndicator;\n\nexport {\n  createCheckboxGroupScope,\n  //\n  CheckboxGroup,\n  CheckboxGroupItem,\n  CheckboxGroupIndicator,\n  //\n  Root,\n  Item,\n  Indicator,\n};\nexport type { CheckboxGroupProps, CheckboxGroupItemProps, CheckboxGroupIndicatorProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { gapPropDefs } from '../props/gap.props.js';\n\nimport type { PropDef, GetPropDefTypes } from '../props/prop-def.js';\n\nconst as = ['div', 'span'] as const;\nconst displayValues = ['none', 'inline-grid', 'grid'] as const;\nconst columnsValues = ['1', '2', '3', '4', '5', '6', '7', '8', '9'] as const;\nconst rowsValues = ['1', '2', '3', '4', '5', '6', '7', '8', '9'] as const;\nconst flowValues = ['row', 'column', 'dense', 'row-dense', 'column-dense'] as const;\nconst alignValues = ['start', 'center', 'end', 'baseline', 'stretch'] as const;\nconst justifyValues = ['start', 'center', 'end', 'between'] as const;\n\nconst gridPropDefs = {\n  /**\n   * Controls whether to render **div** or **span**\n   *\n   * @example\n   * as=\"div\"\n   * as=\"span\"\n   */\n  as: { type: 'enum', values: as, default: 'div' },\n  ...asChildPropDef,\n  /**\n   * Sets the CSS **display** property.\n   * Supports a subset of the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * display=\"inline-grid\"\n   * display={{ sm: 'none', lg: 'grid' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/display\n   */\n  display: {\n    type: 'enum',\n    className: 'rt-r-display',\n    values: displayValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **grid-template** property.\n   * Supports a subset of the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * template='\"header header\" \"sidebar content\"'\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-areas\n   */\n  areas: {\n    type: 'string',\n    className: 'rt-r-gta',\n    customProperties: ['--grid-template-areas'],\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **grid-template-columns** property.\n   * Supports numeric string values, CSS strings and responsive objects.\n   *\n   * Use numeric string values to create grid columns of even size.\n   *\n   * @example\n   * columns=\"3\"\n   * columns=\"100px 1fr\"\n   * columns={{ xs: '1', md: 'auto 1fr' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-columns\n   */\n  columns: {\n    type: 'enum | string',\n    className: 'rt-r-gtc',\n    customProperties: ['--grid-template-columns'],\n    values: columnsValues,\n    parseValue: parseGridValue,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **grid-template-rows** property.\n   * Supports numeric string values, CSS strings and responsive objects.\n   *\n   * Use numeric string values to create grid rows of even size.\n   *\n   * @example\n   * rows=\"3\"\n   * rows=\"100px 1fr\"\n   * rows={{ xs: '1', md: 'auto 1fr' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-rows\n   */\n  rows: {\n    type: 'enum | string',\n    className: 'rt-r-gtr',\n    customProperties: ['--grid-template-rows'],\n    values: rowsValues,\n    parseValue: parseGridValue,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **grid-auto-flow** property.\n   * Supports the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * flow=\"column\"\n   * flow={{ sm: 'column', lg: 'row' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/grid-auto-flow\n   */\n  flow: {\n    type: 'enum',\n    className: 'rt-r-gaf',\n    values: flowValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **align-items** property.\n   * Supports the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * align=\"center\"\n   * align={{ sm: 'baseline', lg: 'center' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/align-items\n   */\n  align: {\n    type: 'enum',\n    className: 'rt-r-ai',\n    values: alignValues,\n    responsive: true,\n  },\n  /**\n   * Sets the CSS **justify-content** property.\n   * Supports a subset of the corresponding CSS values and responsive objects.\n   *\n   * @example\n   * justify=\"between\"\n   * justify={{ sm: 'start', lg: 'center' }}\n   *\n   * @link\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content\n   */\n  justify: {\n    type: 'enum',\n    className: 'rt-r-jc',\n    values: justifyValues,\n    parseValue: parseJustifyValue,\n    responsive: true,\n  },\n  ...gapPropDefs,\n} satisfies {\n  as: PropDef<(typeof as)[number]>;\n  display: PropDef<(typeof displayValues)[number]>;\n  areas: PropDef<string>;\n  columns: PropDef<(typeof columnsValues)[number]>;\n  rows: PropDef<(typeof rowsValues)[number]>;\n  flow: PropDef<(typeof flowValues)[number]>;\n  align: PropDef<(typeof alignValues)[number]>;\n  justify: PropDef<(typeof justifyValues)[number]>;\n};\n\nfunction parseGridValue(value: string): string {\n  if ((gridPropDefs.columns.values as readonly string[]).includes(value)) {\n    return value;\n  }\n\n  return value?.match(/^\\d+$/) ? `repeat(${value}, minmax(0, 1fr))` : value;\n}\n\nfunction parseJustifyValue(value: string) {\n  return value === 'between' ? 'space-between' : value;\n}\n\n// Use all of the imported prop defs to ensure that JSDoc works\ntype GridOwnProps = GetPropDefTypes<typeof gridPropDefs & typeof asChildPropDef>;\n\nexport { gridPropDefs };\nexport type { GridOwnProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { colorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { gridPropDefs } from './grid.props.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['surface', 'classic'] as const;\n\nconst checkboxCardsRootPropDefs = {\n  ...asChildPropDef,\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'surface' },\n  ...colorPropDef,\n  ...highContrastPropDef,\n  columns: { ...gridPropDefs.columns, default: 'repeat(auto-fit, minmax(200px, 1fr))' },\n  gap: { ...gridPropDefs.gap, default: '4' },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n  columns: PropDef<(typeof gridPropDefs.columns.values)[number]>;\n  gap: PropDef<(typeof gridPropDefs.gap.values)[number]>;\n};\n\nexport { checkboxCardsRootPropDefs };\n", "import { colorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['classic', 'surface', 'soft'] as const;\n\nconst baseCheckboxPropDefs = {\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'surface' },\n  ...colorPropDef,\n  ...highContrastPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n};\n\nexport { baseCheckboxPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { Slot } from './slot.js';\nimport { gridPropDefs } from './grid.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { layoutPropDefs } from '../props/layout.props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { LayoutProps } from '../props/layout.props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GridOwnProps } from './grid.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ntype GridElement = React.ElementRef<'div'>;\ninterface CommonGridProps extends MarginProps, LayoutProps, GridOwnProps {}\ntype GridDivProps = { as?: 'div' } & ComponentPropsWithout<'div', RemovedProps>;\ntype GridSpanProps = { as: 'span' } & ComponentPropsWithout<'span', RemovedProps>;\ntype GridProps = CommonGridProps & (GridSpanProps | GridDivProps);\n\nconst Grid = React.forwardRef<GridElement, GridProps>((props, forwardedRef) => {\n  const {\n    className,\n    asChild,\n    as: Tag = 'div',\n    ...gridProps\n  } = extractProps(props, gridPropDefs, layoutPropDefs, marginPropDefs);\n  const Comp = asChild ? Slot : Tag;\n  return <Comp {...gridProps} ref={forwardedRef} className={classNames('rt-Grid', className)} />;\n});\nGrid.displayName = 'Grid';\n\nexport { Grid };\nexport type { GridProps };\n", "import React from 'react';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ntype IconElement = React.ElementRef<'svg'>;\ninterface IconProps extends ComponentPropsWithout<'svg', RemovedProps | 'children'> {}\n\nconst ThickDividerHorizontalIcon = React.forwardRef<IconElement, IconProps>((props, forwardedRef) => {\n    return (\n      <svg\n      width=\"9\"\n      height=\"9\"\n      viewBox=\"0 0 9 9\"\n      fill=\"currentcolor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n      ref={forwardedRef}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M0.75 4.5C0.75 4.08579 1.08579 3.75 1.5 3.75H7.5C7.91421 3.75 8.25 4.08579 8.25 4.5C8.25 4.91421 7.91421 5.25 7.5 5.25H1.5C1.08579 5.25 0.75 4.91421 0.75 4.5Z\"\n        />\n      </svg>\n    );\n  }\n);\n\nThickDividerHorizontalIcon.displayName = 'ThickDividerHorizontalIcon';\n\nconst ThickCheckIcon = React.forwardRef<IconElement, IconProps>((props, forwardedRef) => {\n  return (\n    <svg\n      width=\"9\"\n      height=\"9\"\n      viewBox=\"0 0 9 9\"\n      fill=\"currentcolor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n      ref={forwardedRef}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M8.53547 0.62293C8.88226 0.849446 8.97976 1.3142 8.75325 1.66099L4.5083 8.1599C4.38833 8.34356 4.19397 8.4655 3.9764 8.49358C3.75883 8.52167 3.53987 8.45309 3.3772 8.30591L0.616113 5.80777C0.308959 5.52987 0.285246 5.05559 0.563148 4.74844C0.84105 4.44128 1.31533 4.41757 1.62249 4.69547L3.73256 6.60459L7.49741 0.840706C7.72393 0.493916 8.18868 0.396414 8.53547 0.62293Z\"\n      />\n    </svg>\n  );\n});\nThickCheckIcon.displayName = 'ThickCheckIcon';\n\nconst ChevronDownIcon = React.forwardRef<IconElement, IconProps>((props, forwardedRef) => {\n  return (\n    <svg\n      width=\"9\"\n      height=\"9\"\n      viewBox=\"0 0 9 9\"\n      fill=\"currentcolor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n      ref={forwardedRef}\n    >\n      <path d=\"M0.135232 3.15803C0.324102 2.95657 0.640521 2.94637 0.841971 3.13523L4.5 6.56464L8.158 3.13523C8.3595 2.94637 8.6759 2.95657 8.8648 3.15803C9.0536 3.35949 9.0434 3.67591 8.842 3.86477L4.84197 7.6148C4.64964 7.7951 4.35036 7.7951 4.15803 7.6148L0.158031 3.86477C-0.0434285 3.67591 -0.0536285 3.35949 0.135232 3.15803Z\" />\n    </svg>\n  );\n});\nChevronDownIcon.displayName = 'ChevronDownIcon';\n\nconst ThickChevronRightIcon = React.forwardRef<IconElement, IconProps>((props, forwardedRef) => {\n  return (\n    <svg\n      width=\"9\"\n      height=\"9\"\n      viewBox=\"0 0 9 9\"\n      fill=\"currentcolor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n      ref={forwardedRef}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M3.23826 0.201711C3.54108 -0.0809141 4.01567 -0.0645489 4.29829 0.238264L7.79829 3.98826C8.06724 4.27642 8.06724 4.72359 7.79829 5.01174L4.29829 8.76174C4.01567 9.06455 3.54108 9.08092 3.23826 8.79829C2.93545 8.51567 2.91909 8.04108 3.20171 7.73826L6.22409 4.5L3.20171 1.26174C2.91909 0.958928 2.93545 0.484337 3.23826 0.201711Z\"\n      />\n    </svg>\n  );\n});\nThickChevronRightIcon.displayName = 'ThickChevronRightIcon';\n\nexport { ChevronDownIcon, ThickCheckIcon, ThickChevronRightIcon, ThickDividerHorizontalIcon };\nexport type { IconProps };\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { createContextScope } from '@radix-ui/react-context';\n\nimport * as CheckboxGroupPrimitive from './checkbox-group.primitive.js';\nimport { createCheckboxGroupScope } from './checkbox-group.primitive.js';\nimport { checkboxCardsRootPropDefs } from './checkbox-cards.props.js';\nimport { baseCheckboxPropDefs } from './base-checkbox.props.js';\nimport { Grid } from './grid.js';\nimport { ThickCheckIcon } from './icons.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { Scope } from '@radix-ui/react-context';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { Responsive, GetPropDefTypes } from '../props/prop-def.js';\n\nconst CHECKBOX_CARD_GROUP_NAME = 'CheckboxCards';\n\ntype ScopedProps<P> = P & { __scopeCheckboxCards?: Scope };\nconst [createCheckboxCardsContext] = createContextScope(CHECKBOX_CARD_GROUP_NAME, [\n  createCheckboxGroupScope,\n]);\nconst useCheckboxGroupScope = createCheckboxGroupScope();\n\ntype CheckboxCardsContextValue = {\n  size?: Responsive<(typeof checkboxCardsRootPropDefs.size.values)[number]>;\n  highContrast?: boolean;\n};\n\nconst [CheckboxCardsProvider, useCheckboxCardsContext] =\n  createCheckboxCardsContext<CheckboxCardsContextValue>(CHECKBOX_CARD_GROUP_NAME);\n\ntype CheckboxCardsRootElement = React.ElementRef<typeof CheckboxGroupPrimitive.Root>;\ntype CheckboxCardsRootOwnProps = GetPropDefTypes<typeof checkboxCardsRootPropDefs>;\ninterface CheckboxCardsRootProps\n  extends ComponentPropsWithout<\n      typeof CheckboxGroupPrimitive.Root,\n      'asChild' | 'color' | 'defaultChecked'\n    >,\n    MarginProps,\n    CheckboxCardsRootOwnProps {}\nconst CheckboxCardsRoot = React.forwardRef<CheckboxCardsRootElement, CheckboxCardsRootProps>(\n  (props: ScopedProps<CheckboxCardsRootProps>, forwardedRef) => {\n    const { __scopeCheckboxCards, className, color, ...rootProps } = extractProps(\n      props,\n      checkboxCardsRootPropDefs,\n      marginPropDefs\n    );\n    const checkboxGroupScope = useCheckboxGroupScope(__scopeCheckboxCards);\n    return (\n      <CheckboxCardsProvider\n        scope={__scopeCheckboxCards}\n        size={props.size}\n        highContrast={props.highContrast}\n      >\n        <Grid asChild>\n          <CheckboxGroupPrimitive.Root\n            {...checkboxGroupScope}\n            data-accent-color={color}\n            {...rootProps}\n            ref={forwardedRef}\n            className={classNames('rt-CheckboxCardsRoot', className)}\n          />\n        </Grid>\n      </CheckboxCardsProvider>\n    );\n  }\n);\nCheckboxCardsRoot.displayName = 'CheckboxCards.Root';\n\ntype CheckboxCardsItemElement = React.ElementRef<typeof CheckboxGroupPrimitive.Item>;\ninterface CheckboxCardsItemProps\n  extends ComponentPropsWithout<typeof CheckboxGroupPrimitive.Item, RemovedProps>,\n    MarginProps {}\nconst CheckboxCardsItem = React.forwardRef<\n  CheckboxCardsItemElement,\n  ScopedProps<CheckboxCardsItemProps>\n>(({ __scopeCheckboxCards, children, className, style, ...props }, forwardedRef) => {\n  const context = useCheckboxCardsContext('CheckboxCardsItem', __scopeCheckboxCards);\n  const checkboxGroupScope = useCheckboxGroupScope(__scopeCheckboxCards);\n  const { className: checkboxClassName } = extractProps(\n    // Pass size / highContrast values from the context and static variant to generate styles\n    { size: context?.size, variant: 'surface', highContrast: context?.highContrast },\n    // Pass size & variant prop defs to allow it to be extracted\n    baseCheckboxPropDefs\n  );\n  return (\n    <label className={classNames('rt-BaseCard', 'rt-CheckboxCardsItem', className)} style={style}>\n      {children}\n      <CheckboxGroupPrimitive.Item\n        {...checkboxGroupScope}\n        {...props}\n        ref={forwardedRef}\n        className={classNames(\n          'rt-reset',\n          'rt-BaseCheckboxRoot',\n          'rt-CheckboxCardCheckbox',\n          checkboxClassName\n        )}\n      >\n        <CheckboxGroupPrimitive.Indicator\n          {...checkboxGroupScope}\n          asChild\n          className=\"rt-BaseCheckboxIndicator\"\n        >\n          <ThickCheckIcon />\n        </CheckboxGroupPrimitive.Indicator>\n      </CheckboxGroupPrimitive.Item>\n    </label>\n  );\n});\nCheckboxCardsItem.displayName = 'CheckboxCards.Item';\n\nexport { CheckboxCardsRoot as Root, CheckboxCardsItem as Item };\nexport type { CheckboxCardsRootProps as RootProps, CheckboxCardsItemProps as ItemProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { baseCheckboxPropDefs } from './base-checkbox.props.js';\n\nconst checkboxGroupRootPropDefs = {\n  ...asChildPropDef,\n  ...baseCheckboxPropDefs,\n};\n\nexport { checkboxGroupRootPropDefs };\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { createContextScope } from '@radix-ui/react-context';\n\nimport * as CheckboxGroupPrimitive from './checkbox-group.primitive.js';\nimport { createCheckboxGroupScope } from './checkbox-group.primitive.js';\nimport { checkboxGroupRootPropDefs } from './checkbox-group.props.js';\nimport { ThickCheckIcon } from './icons.js';\nimport { Text } from './text.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { Scope } from '@radix-ui/react-context';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\nconst CHECKBOX_GROUP_NAME = 'CheckboxGroup';\n\ntype ScopedProps<P> = P & { __scopeCheckboxGroup?: Scope };\nconst [createCheckboxGroupContext] = createContextScope(CHECKBOX_GROUP_NAME, [\n  createCheckboxGroupScope,\n]);\nconst useCheckboxGroupScope = createCheckboxGroupScope();\n\ntype CheckboxGroupRootOwnProps = GetPropDefTypes<typeof checkboxGroupRootPropDefs>;\ntype CheckboxGroupContextValue = CheckboxGroupRootOwnProps;\n\nconst [CheckboxGroupProvider, useCheckboxGroupContext] =\n  createCheckboxGroupContext<CheckboxGroupContextValue>(CHECKBOX_GROUP_NAME);\n\ntype CheckboxGroupRootElement = React.ElementRef<typeof CheckboxGroupPrimitive.Root>;\ninterface CheckboxGroupRootProps\n  extends ComponentPropsWithout<\n      typeof CheckboxGroupPrimitive.Root,\n      'asChild' | 'color' | 'defaultChecked'\n    >,\n    MarginProps,\n    CheckboxGroupRootOwnProps {}\nconst CheckboxGroupRoot = React.forwardRef<CheckboxGroupRootElement, CheckboxGroupRootProps>(\n  (\n    {\n      color = checkboxGroupRootPropDefs.color.default,\n      highContrast = checkboxGroupRootPropDefs.highContrast.default,\n      size = checkboxGroupRootPropDefs.size.default,\n      variant = checkboxGroupRootPropDefs.variant.default,\n      ...props\n    }: ScopedProps<CheckboxGroupRootProps>,\n    forwardedRef\n  ) => {\n    const { __scopeCheckboxGroup, className, ...rootProps } = extractProps(props, marginPropDefs);\n    const checkboxGroupScope = useCheckboxGroupScope(__scopeCheckboxGroup);\n    return (\n      <CheckboxGroupProvider\n        scope={__scopeCheckboxGroup}\n        color={color}\n        size={size}\n        highContrast={highContrast}\n        variant={variant}\n      >\n        <CheckboxGroupPrimitive.Root\n          {...checkboxGroupScope}\n          {...rootProps}\n          ref={forwardedRef}\n          className={classNames('rt-CheckboxGroupRoot', className)}\n        />\n      </CheckboxGroupProvider>\n    );\n  }\n);\nCheckboxGroupRoot.displayName = 'CheckboxGroup.Root';\n\ntype CheckboxGroupItemElement = React.ElementRef<typeof CheckboxGroupPrimitive.Item>;\ninterface CheckboxGroupItemProps\n  extends ComponentPropsWithout<typeof CheckboxGroupPrimitive.Item, RemovedProps>,\n    MarginProps {}\nconst CheckboxGroupItem = React.forwardRef<CheckboxGroupItemElement, CheckboxGroupItemProps>(\n  (_props: ScopedProps<CheckboxGroupItemProps>, forwardedRef) => {\n    const { __scopeCheckboxGroup, children, className, style, ...props } = _props;\n    const { size } = useCheckboxGroupContext('CheckboxGroupItem', __scopeCheckboxGroup);\n\n    // Render `<Text as=\"label\">` if children\u00A0are provided, otherwise render\n    // the solo checkbox to allow building out your custom layouts with it.\n    if (children) {\n      return (\n        <Text\n          as=\"label\"\n          size={size}\n          className={classNames('rt-CheckboxGroupItem', className)}\n          style={style}\n        >\n          <CheckboxGroupItemCheckbox\n            __scopeCheckboxGroup={__scopeCheckboxGroup}\n            {...props}\n            ref={forwardedRef}\n          />\n          {children && <span className=\"rt-CheckboxGroupItemInner\">{children}</span>}\n        </Text>\n      );\n    }\n\n    return (\n      <CheckboxGroupItemCheckbox\n        __scopeCheckboxGroup={__scopeCheckboxGroup}\n        {...props}\n        ref={forwardedRef}\n        className={className}\n        style={style}\n      />\n    );\n  }\n);\nCheckboxGroupItem.displayName = 'CheckboxGroup.Item';\n\ntype CheckboxGroupItemCheckboxElement = React.ElementRef<typeof CheckboxGroupPrimitive.Item>;\ninterface CheckboxGroupItemCheckboxProps\n  extends ComponentPropsWithout<typeof CheckboxGroupPrimitive.Item, RemovedProps> {}\nconst CheckboxGroupItemCheckbox = React.forwardRef<\n  CheckboxGroupItemCheckboxElement,\n  ScopedProps<CheckboxGroupItemCheckboxProps>\n>(({ __scopeCheckboxGroup, ...props }, forwardedRef) => {\n  const context = useCheckboxGroupContext('CheckboxGroupItemCheckbox', __scopeCheckboxGroup);\n  const checkboxGroupScope = useCheckboxGroupScope(__scopeCheckboxGroup);\n  const { color, className } = extractProps(\n    { ...props, ...context },\n    checkboxGroupRootPropDefs,\n    marginPropDefs\n  );\n  return (\n    <CheckboxGroupPrimitive.Item\n      {...checkboxGroupScope}\n      data-accent-color={color}\n      {...props}\n      ref={forwardedRef}\n      className={classNames(\n        'rt-reset',\n        'rt-BaseCheckboxRoot',\n        'rt-CheckboxGroupItemCheckbox',\n        className\n      )}\n    >\n      <CheckboxGroupPrimitive.Indicator\n        {...checkboxGroupScope}\n        asChild\n        className=\"rt-BaseCheckboxIndicator\"\n      >\n        <ThickCheckIcon />\n      </CheckboxGroupPrimitive.Indicator>\n    </CheckboxGroupPrimitive.Item>\n  );\n});\nCheckboxGroupItemCheckbox.displayName = 'CheckboxGroup.ItemCheckbox';\n\nexport { CheckboxGroupRoot as Root, CheckboxGroupItem as Item };\nexport type { CheckboxGroupRootProps as RootProps, CheckboxGroupItemProps as ItemProps };\n", "export { baseCheckboxPropDefs as checkboxPropDefs } from './base-checkbox.props.js';\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport * as CheckboxPrimitive from '@radix-ui/react-checkbox';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\n\nimport { checkboxPropDefs } from './checkbox.props.js';\nimport { ThickCheckIcon, ThickDividerHorizontalIcon } from './icons.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype CheckboxElement = React.ElementRef<typeof CheckboxPrimitive.Root>;\ntype CheckboxOwnProps = GetPropDefTypes<typeof checkboxPropDefs>;\ninterface CheckboxProps\n  extends ComponentPropsWithout<\n      typeof CheckboxPrimitive.Root,\n      'asChild' | 'color' | 'defaultValue' | 'children'\n    >,\n    MarginProps,\n    CheckboxOwnProps {}\nconst Checkbox = React.forwardRef<CheckboxElement, CheckboxProps>((props, forwardedRef) => {\n  const {\n    className,\n    color,\n    checked: checkedProp,\n    defaultChecked: defaultCheckedProp,\n    onCheckedChange,\n    ...checkboxProps\n  } = extractProps(props, checkboxPropDefs, marginPropDefs);\n\n  const [checked, setChecked] = useControllableState({\n    prop: checkedProp,\n    defaultProp: defaultCheckedProp,\n    onChange: onCheckedChange,\n  });\n\n  return (\n    <CheckboxPrimitive.Root\n      data-accent-color={color}\n      {...checkboxProps}\n      defaultChecked={defaultCheckedProp}\n      checked={checked}\n      onCheckedChange={setChecked}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-reset', 'rt-BaseCheckboxRoot', 'rt-CheckboxRoot', className)}\n    >\n      <CheckboxPrimitive.Indicator\n        asChild\n        className=\"rt-BaseCheckboxIndicator rt-CheckboxIndicator\"\n      >\n        {checked === 'indeterminate' ? <ThickDividerHorizontalIcon /> : <ThickCheckIcon />}\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  );\n});\nCheckbox.displayName = 'Checkbox';\n\nexport { Checkbox };\nexport type { CheckboxProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { accentColorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { textWrapPropDef } from '../props/text-wrap.prop.js';\nimport { truncatePropDef } from '../props/truncate.prop.js';\nimport { weightPropDef } from '../props/weight.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3', '4', '5', '6', '7', '8', '9'] as const;\nconst variants = ['solid', 'soft', 'outline', 'ghost'] as const;\n\nconst codePropDefs = {\n  ...asChildPropDef,\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: sizes,\n    responsive: true,\n  },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'soft' },\n  ...weightPropDef,\n  ...accentColorPropDef,\n  ...highContrastPropDef,\n  ...truncatePropDef,\n  ...textWrapPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n};\n\nexport { codePropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { codePropDefs } from './code.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype CodeElement = React.ElementRef<'code'>;\ntype CodeOwnProps = GetPropDefTypes<typeof codePropDefs>;\ninterface CodeProps\n  extends ComponentPropsWithout<'code', RemovedProps>,\n    MarginProps,\n    CodeOwnProps {}\nconst Code = React.forwardRef<CodeElement, CodeProps>((props, forwardedRef) => {\n  const { asChild, className, color, ...codeProps } = extractProps(\n    props,\n    codePropDefs,\n    marginPropDefs\n  );\n  // Code ghost color prop should work as text color by default\n  const resolvedColor = props.variant === 'ghost' ? color || undefined : color;\n  const Comp = asChild ? Slot : 'code';\n  return (\n    <Comp\n      data-accent-color={resolvedColor}\n      {...codeProps}\n      ref={forwardedRef}\n      className={classNames('rt-reset', 'rt-Code', className)}\n    />\n  );\n});\nCode.displayName = 'Code';\n\nexport { Code };\nexport type { CodeProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\n\nimport type { PropDef, GetPropDefTypes } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3', '4'] as const;\nconst displayValues = ['none', 'initial'] as const;\nconst alignValues = ['left', 'center', 'right'] as const;\n\nconst containerPropDefs = {\n  ...asChildPropDef,\n  /**\n   * Controls the **max-width** of the content within the container.\n   * Supports the predefined values and responsive objects.\n   *\n   * @values\n   * | Size     | Max. width |\n   * | :------- | ---------: |\n   * | size=\"1\" | 448px      |\n   * | size=\"2\" | 688px      |\n   * | size=\"3\" | 880px      |\n   * | size=\"4\" | 1136px     |\n   *\n   * @example\n   * size=\"4\"\n   * size={{ sm: '3', lg: '4' }}\n   *\n   * @link\n   * https://github.com/radix-ui/themes/blob/main/packages/radix-ui-themes/src/components/container.css\n   */\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: sizes,\n    default: '4',\n    responsive: true,\n  },\n  /**\n   * Controls whether the container is visible or hidden.\n   * Supports \"none\", \"initial\", and responsive object values.\n   *\n   * @example\n   * display=\"none\"\n   * display={{ sm: 'none', lg: 'initial' }}\n   */\n  display: {\n    type: 'enum',\n    className: 'rt-r-display',\n    values: displayValues,\n    parseValue: parseDisplayValue,\n    responsive: true,\n  },\n  /**\n   * Controls the alignment of the content within the container.\n   *\n   * @example\n   * align=\"center\"\n   * align={{ initial: 'left', lg: 'center' }}\n   */\n  align: {\n    type: 'enum',\n    className: 'rt-r-ai',\n    values: alignValues,\n    parseValue: parseAlignValue,\n    responsive: true,\n  },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  display: PropDef<(typeof displayValues)[number]>;\n  align: PropDef<(typeof alignValues)[number]>;\n};\n\nfunction parseDisplayValue(value: string) {\n  return value === 'initial' ? 'flex' : value;\n}\n\nfunction parseAlignValue(value: string) {\n  return value === 'left' ? 'start' : value === 'right' ? 'end' : value;\n}\n\n// Use all of the imported prop defs to ensure that JSDoc works\ntype ContainerOwnProps = GetPropDefTypes<typeof containerPropDefs & typeof asChildPropDef>;\n\nexport { containerPropDefs };\nexport type { ContainerOwnProps };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { containerPropDefs } from './container.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { getSubtree } from '../helpers/get-subtree.js';\nimport { heightPropDefs } from '../props/height.props.js';\nimport { layoutPropDefs } from '../props/layout.props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\nimport { widthPropDefs } from '../props/width.props.js';\n\nimport type { LayoutProps } from '../props/layout.props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ContainerOwnProps } from './container.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ntype ContainerElement = React.ElementRef<'div'>;\ninterface ContainerProps\n  extends ComponentPropsWithout<'div', RemovedProps>,\n    MarginProps,\n    LayoutProps,\n    ContainerOwnProps {}\nconst Container = React.forwardRef<ContainerElement, ContainerProps>(\n  ({ width, minWidth, maxWidth, height, minHeight, maxHeight, ...props }, forwardedRef) => {\n    const { asChild, children, className, ...containerProps } = extractProps(\n      props,\n      containerPropDefs,\n      layoutPropDefs,\n      marginPropDefs\n    );\n\n    const { className: innerClassName, style: innerStyle } = extractProps(\n      { width, minWidth, maxWidth, height, minHeight, maxHeight },\n      widthPropDefs,\n      heightPropDefs\n    );\n\n    const Comp = asChild ? Slot : 'div';\n\n    return (\n      <Comp\n        {...containerProps}\n        ref={forwardedRef}\n        className={classNames('rt-Container', className)}\n      >\n        {getSubtree({ asChild, children }, (children) => (\n          <div className={classNames('rt-ContainerInner', innerClassName)} style={innerStyle}>\n            {children}\n          </div>\n        ))}\n      </Comp>\n    );\n  }\n);\nContainer.displayName = 'Container';\n\nexport { Container };\nexport type { ContainerProps };\n", "'use client';\nexport {\n  createMenuScope,\n  //\n  Menu,\n  MenuAnchor,\n  MenuPortal,\n  MenuContent,\n  MenuGroup,\n  MenuLabel,\n  MenuItem,\n  MenuCheckboxItem,\n  MenuRadioGroup,\n  MenuRadioItem,\n  MenuItemIndicator,\n  MenuSeparator,\n  MenuArrow,\n  MenuSub,\n  MenuSubTrigger,\n  MenuSubContent,\n  //\n  Root,\n  Anchor,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n} from './Menu';\nexport type {\n  MenuProps,\n  MenuAnchorProps,\n  MenuPortalProps,\n  MenuContentProps,\n  MenuGroupProps,\n  MenuLabelProps,\n  MenuItemProps,\n  MenuCheckboxItemProps,\n  MenuRadioGroupProps,\n  MenuRadioItemProps,\n  MenuItemIndicatorProps,\n  MenuSeparatorProps,\n  MenuArrowProps,\n  MenuSubProps,\n  MenuSubTriggerProps,\n  MenuSubContentProps,\n} from './Menu';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs, composeRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { Slot } from '@radix-ui/react-slot';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { hideOthers } from 'aria-hidden';\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\nconst SELECTION_KEYS = ['Enter', ' '];\nconst FIRST_KEYS = ['ArrowDown', 'PageUp', 'Home'];\nconst LAST_KEYS = ['ArrowUp', 'PageDown', 'End'];\nconst FIRST_LAST_KEYS = [...FIRST_KEYS, ...LAST_KEYS];\nconst SUB_OPEN_KEYS: Record<Direction, string[]> = {\n  ltr: [...SELECTION_KEYS, 'ArrowRight'],\n  rtl: [...SELECTION_KEYS, 'ArrowLeft'],\n};\nconst SUB_CLOSE_KEYS: Record<Direction, string[]> = {\n  ltr: ['ArrowLeft'],\n  rtl: ['ArrowRight'],\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Menu\n * -----------------------------------------------------------------------------------------------*/\n\nconst MENU_NAME = 'Menu';\n\ntype ItemData = { disabled: boolean; textValue: string };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  MenuItemElement,\n  ItemData\n>(MENU_NAME);\n\ntype ScopedProps<P> = P & { __scopeMenu?: Scope };\nconst [createMenuContext, createMenuScope] = createContextScope(MENU_NAME, [\n  createCollectionScope,\n  createPopperScope,\n  createRovingFocusGroupScope,\n]);\nconst usePopperScope = createPopperScope();\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\n\ntype MenuContextValue = {\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  content: MenuContentElement | null;\n  onContentChange(content: MenuContentElement | null): void;\n};\n\nconst [MenuProvider, useMenuContext] = createMenuContext<MenuContextValue>(MENU_NAME);\n\ntype MenuRootContextValue = {\n  onClose(): void;\n  isUsingKeyboardRef: React.RefObject<boolean>;\n  dir: Direction;\n  modal: boolean;\n};\n\nconst [MenuRootProvider, useMenuRootContext] = createMenuContext<MenuRootContextValue>(MENU_NAME);\n\ninterface MenuProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  onOpenChange?(open: boolean): void;\n  dir?: Direction;\n  modal?: boolean;\n}\n\nconst Menu: React.FC<MenuProps> = (props: ScopedProps<MenuProps>) => {\n  const { __scopeMenu, open = false, children, dir, onOpenChange, modal = true } = props;\n  const popperScope = usePopperScope(__scopeMenu);\n  const [content, setContent] = React.useState<MenuContentElement | null>(null);\n  const isUsingKeyboardRef = React.useRef(false);\n  const handleOpenChange = useCallbackRef(onOpenChange);\n  const direction = useDirection(dir);\n\n  React.useEffect(() => {\n    // Capture phase ensures we set the boolean before any side effects execute\n    // in response to the key or pointer event as they might depend on this value.\n    const handleKeyDown = () => {\n      isUsingKeyboardRef.current = true;\n      document.addEventListener('pointerdown', handlePointer, { capture: true, once: true });\n      document.addEventListener('pointermove', handlePointer, { capture: true, once: true });\n    };\n    const handlePointer = () => (isUsingKeyboardRef.current = false);\n    document.addEventListener('keydown', handleKeyDown, { capture: true });\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, { capture: true });\n      document.removeEventListener('pointerdown', handlePointer, { capture: true });\n      document.removeEventListener('pointermove', handlePointer, { capture: true });\n    };\n  }, []);\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <MenuProvider\n        scope={__scopeMenu}\n        open={open}\n        onOpenChange={handleOpenChange}\n        content={content}\n        onContentChange={setContent}\n      >\n        <MenuRootProvider\n          scope={__scopeMenu}\n          onClose={React.useCallback(() => handleOpenChange(false), [handleOpenChange])}\n          isUsingKeyboardRef={isUsingKeyboardRef}\n          dir={direction}\n          modal={modal}\n        >\n          {children}\n        </MenuRootProvider>\n      </MenuProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nMenu.displayName = MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'MenuAnchor';\n\ntype MenuAnchorElement = React.ElementRef<typeof PopperPrimitive.Anchor>;\ntype PopperAnchorProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Anchor>;\ninterface MenuAnchorProps extends PopperAnchorProps {}\n\nconst MenuAnchor = React.forwardRef<MenuAnchorElement, MenuAnchorProps>(\n  (props: ScopedProps<MenuAnchorProps>, forwardedRef) => {\n    const { __scopeMenu, ...anchorProps } = props;\n    const popperScope = usePopperScope(__scopeMenu);\n    return <PopperPrimitive.Anchor {...popperScope} {...anchorProps} ref={forwardedRef} />;\n  }\n);\n\nMenuAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'MenuPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createMenuContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface MenuPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuPortal: React.FC<MenuPortalProps> = (props: ScopedProps<MenuPortalProps>) => {\n  const { __scopeMenu, forceMount, children, container } = props;\n  const context = useMenuContext(PORTAL_NAME, __scopeMenu);\n  return (\n    <PortalProvider scope={__scopeMenu} forceMount={forceMount}>\n      <Presence present={forceMount || context.open}>\n        <PortalPrimitive asChild container={container}>\n          {children}\n        </PortalPrimitive>\n      </Presence>\n    </PortalProvider>\n  );\n};\n\nMenuPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'MenuContent';\n\ntype MenuContentContextValue = {\n  onItemEnter(event: React.PointerEvent): void;\n  onItemLeave(event: React.PointerEvent): void;\n  onTriggerLeave(event: React.PointerEvent): void;\n  searchRef: React.RefObject<string>;\n  pointerGraceTimerRef: React.MutableRefObject<number>;\n  onPointerGraceIntentChange(intent: GraceIntent | null): void;\n};\nconst [MenuContentProvider, useMenuContentContext] =\n  createMenuContext<MenuContentContextValue>(CONTENT_NAME);\n\ntype MenuContentElement = MenuRootContentTypeElement;\n/**\n * We purposefully don't union MenuRootContent and MenuSubContent props here because\n * they have conflicting prop types. We agreed that we would allow MenuSubContent to\n * accept props that it would just ignore.\n */\ninterface MenuContentProps extends MenuRootContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuContent = React.forwardRef<MenuContentElement, MenuContentProps>(\n  (props: ScopedProps<MenuContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeMenu);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const rootContext = useMenuRootContext(CONTENT_NAME, props.__scopeMenu);\n\n    return (\n      <Collection.Provider scope={props.__scopeMenu}>\n        <Presence present={forceMount || context.open}>\n          <Collection.Slot scope={props.__scopeMenu}>\n            {rootContext.modal ? (\n              <MenuRootContentModal {...contentProps} ref={forwardedRef} />\n            ) : (\n              <MenuRootContentNonModal {...contentProps} ref={forwardedRef} />\n            )}\n          </Collection.Slot>\n        </Presence>\n      </Collection.Provider>\n    );\n  }\n);\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuRootContentTypeElement = MenuContentImplElement;\ninterface MenuRootContentTypeProps\n  extends Omit<MenuContentImplProps, keyof MenuContentImplPrivateProps> {}\n\nconst MenuRootContentModal = React.forwardRef<MenuRootContentTypeElement, MenuRootContentTypeProps>(\n  (props: ScopedProps<MenuRootContentTypeProps>, forwardedRef) => {\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const ref = React.useRef<MenuRootContentTypeElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    // Hide everything from ARIA except the `MenuContent`\n    React.useEffect(() => {\n      const content = ref.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <MenuContentImpl\n        {...props}\n        ref={composedRefs}\n        // we make sure we're not trapping once it's been closed\n        // (closed !== unmounted when animating out)\n        trapFocus={context.open}\n        // make sure to only disable pointer events when open\n        // this avoids blocking interactions while animating out\n        disableOutsidePointerEvents={context.open}\n        disableOutsideScroll\n        // When focus is trapped, a `focusout` event may still happen.\n        // We make sure we don't trigger our `onDismiss` in such case.\n        onFocusOutside={composeEventHandlers(\n          props.onFocusOutside,\n          (event) => event.preventDefault(),\n          { checkForDefaultPrevented: false }\n        )}\n        onDismiss={() => context.onOpenChange(false)}\n      />\n    );\n  }\n);\n\nconst MenuRootContentNonModal = React.forwardRef<\n  MenuRootContentTypeElement,\n  MenuRootContentTypeProps\n>((props: ScopedProps<MenuRootContentTypeProps>, forwardedRef) => {\n  const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n  return (\n    <MenuContentImpl\n      {...props}\n      ref={forwardedRef}\n      trapFocus={false}\n      disableOutsidePointerEvents={false}\n      disableOutsideScroll={false}\n      onDismiss={() => context.onOpenChange(false)}\n    />\n  );\n});\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuContentImplElement = React.ElementRef<typeof PopperPrimitive.Content>;\ntype FocusScopeProps = React.ComponentPropsWithoutRef<typeof FocusScope>;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype RovingFocusGroupProps = React.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PopperContentProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ntype MenuContentImplPrivateProps = {\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n  onDismiss?: DismissableLayerProps['onDismiss'];\n  disableOutsidePointerEvents?: DismissableLayerProps['disableOutsidePointerEvents'];\n\n  /**\n   * Whether scrolling outside the `MenuContent` should be prevented\n   * (default: `false`)\n   */\n  disableOutsideScroll?: boolean;\n\n  /**\n   * Whether focus should be trapped within the `MenuContent`\n   * (default: false)\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n};\ninterface MenuContentImplProps\n  extends MenuContentImplPrivateProps,\n    Omit<PopperContentProps, 'dir' | 'onPlaced'> {\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n\n  /**\n   * Whether keyboard navigation should loop around\n   * @defaultValue false\n   */\n  loop?: RovingFocusGroupProps['loop'];\n\n  onEntryFocus?: RovingFocusGroupProps['onEntryFocus'];\n  onEscapeKeyDown?: DismissableLayerProps['onEscapeKeyDown'];\n  onPointerDownOutside?: DismissableLayerProps['onPointerDownOutside'];\n  onFocusOutside?: DismissableLayerProps['onFocusOutside'];\n  onInteractOutside?: DismissableLayerProps['onInteractOutside'];\n}\n\nconst MenuContentImpl = React.forwardRef<MenuContentImplElement, MenuContentImplProps>(\n  (props: ScopedProps<MenuContentImplProps>, forwardedRef) => {\n    const {\n      __scopeMenu,\n      loop = false,\n      trapFocus,\n      onOpenAutoFocus,\n      onCloseAutoFocus,\n      disableOutsidePointerEvents,\n      onEntryFocus,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      onDismiss,\n      disableOutsideScroll,\n      ...contentProps\n    } = props;\n    const context = useMenuContext(CONTENT_NAME, __scopeMenu);\n    const rootContext = useMenuRootContext(CONTENT_NAME, __scopeMenu);\n    const popperScope = usePopperScope(__scopeMenu);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenu);\n    const getItems = useCollection(__scopeMenu);\n    const [currentItemId, setCurrentItemId] = React.useState<string | null>(null);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef, context.onContentChange);\n    const timerRef = React.useRef(0);\n    const searchRef = React.useRef('');\n    const pointerGraceTimerRef = React.useRef(0);\n    const pointerGraceIntentRef = React.useRef<GraceIntent | null>(null);\n    const pointerDirRef = React.useRef<Side>('right');\n    const lastPointerXRef = React.useRef(0);\n\n    const ScrollLockWrapper = disableOutsideScroll ? RemoveScroll : React.Fragment;\n    const scrollLockWrapperProps = disableOutsideScroll\n      ? { as: Slot, allowPinchZoom: true }\n      : undefined;\n\n    const handleTypeaheadSearch = (key: string) => {\n      const search = searchRef.current + key;\n      const items = getItems().filter((item) => !item.disabled);\n      const currentItem = document.activeElement;\n      const currentMatch = items.find((item) => item.ref.current === currentItem)?.textValue;\n      const values = items.map((item) => item.textValue);\n      const nextMatch = getNextMatch(values, search, currentMatch);\n      const newItem = items.find((item) => item.textValue === nextMatch)?.ref.current;\n\n      // Reset `searchRef` 1 second after it was last updated\n      (function updateSearch(value: string) {\n        searchRef.current = value;\n        window.clearTimeout(timerRef.current);\n        if (value !== '') timerRef.current = window.setTimeout(() => updateSearch(''), 1000);\n      })(search);\n\n      if (newItem) {\n        /**\n         * Imperative focus during keydown is risky so we prevent React's batching updates\n         * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n         */\n        setTimeout(() => (newItem as HTMLElement).focus());\n      }\n    };\n\n    React.useEffect(() => {\n      return () => window.clearTimeout(timerRef.current);\n    }, []);\n\n    // Make sure the whole tree has focus guards as our `MenuContent` may be\n    // the last element in the DOM (beacuse of the `Portal`)\n    useFocusGuards();\n\n    const isPointerMovingToSubmenu = React.useCallback((event: React.PointerEvent) => {\n      const isMovingTowards = pointerDirRef.current === pointerGraceIntentRef.current?.side;\n      return isMovingTowards && isPointerInGraceArea(event, pointerGraceIntentRef.current?.area);\n    }, []);\n\n    return (\n      <MenuContentProvider\n        scope={__scopeMenu}\n        searchRef={searchRef}\n        onItemEnter={React.useCallback(\n          (event) => {\n            if (isPointerMovingToSubmenu(event)) event.preventDefault();\n          },\n          [isPointerMovingToSubmenu]\n        )}\n        onItemLeave={React.useCallback(\n          (event) => {\n            if (isPointerMovingToSubmenu(event)) return;\n            contentRef.current?.focus();\n            setCurrentItemId(null);\n          },\n          [isPointerMovingToSubmenu]\n        )}\n        onTriggerLeave={React.useCallback(\n          (event) => {\n            if (isPointerMovingToSubmenu(event)) event.preventDefault();\n          },\n          [isPointerMovingToSubmenu]\n        )}\n        pointerGraceTimerRef={pointerGraceTimerRef}\n        onPointerGraceIntentChange={React.useCallback((intent) => {\n          pointerGraceIntentRef.current = intent;\n        }, [])}\n      >\n        <ScrollLockWrapper {...scrollLockWrapperProps}>\n          <FocusScope\n            asChild\n            trapped={trapFocus}\n            onMountAutoFocus={composeEventHandlers(onOpenAutoFocus, (event) => {\n              // when opening, explicitly focus the content area only and leave\n              // `onEntryFocus` in  control of focusing first item\n              event.preventDefault();\n              contentRef.current?.focus({ preventScroll: true });\n            })}\n            onUnmountAutoFocus={onCloseAutoFocus}\n          >\n            <DismissableLayer\n              asChild\n              disableOutsidePointerEvents={disableOutsidePointerEvents}\n              onEscapeKeyDown={onEscapeKeyDown}\n              onPointerDownOutside={onPointerDownOutside}\n              onFocusOutside={onFocusOutside}\n              onInteractOutside={onInteractOutside}\n              onDismiss={onDismiss}\n            >\n              <RovingFocusGroup.Root\n                asChild\n                {...rovingFocusGroupScope}\n                dir={rootContext.dir}\n                orientation=\"vertical\"\n                loop={loop}\n                currentTabStopId={currentItemId}\n                onCurrentTabStopIdChange={setCurrentItemId}\n                onEntryFocus={composeEventHandlers(onEntryFocus, (event) => {\n                  // only focus first item when using keyboard\n                  if (!rootContext.isUsingKeyboardRef.current) event.preventDefault();\n                })}\n                preventScrollOnEntryFocus\n              >\n                <PopperPrimitive.Content\n                  role=\"menu\"\n                  aria-orientation=\"vertical\"\n                  data-state={getOpenState(context.open)}\n                  data-radix-menu-content=\"\"\n                  dir={rootContext.dir}\n                  {...popperScope}\n                  {...contentProps}\n                  ref={composedRefs}\n                  style={{ outline: 'none', ...contentProps.style }}\n                  onKeyDown={composeEventHandlers(contentProps.onKeyDown, (event) => {\n                    // submenu key events bubble through portals. We only care about keys in this menu.\n                    const target = event.target as HTMLElement;\n                    const isKeyDownInside =\n                      target.closest('[data-radix-menu-content]') === event.currentTarget;\n                    const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n                    const isCharacterKey = event.key.length === 1;\n                    if (isKeyDownInside) {\n                      // menus should not be navigated using tab key so we prevent it\n                      if (event.key === 'Tab') event.preventDefault();\n                      if (!isModifierKey && isCharacterKey) handleTypeaheadSearch(event.key);\n                    }\n                    // focus first/last item based on key pressed\n                    const content = contentRef.current;\n                    if (event.target !== content) return;\n                    if (!FIRST_LAST_KEYS.includes(event.key)) return;\n                    event.preventDefault();\n                    const items = getItems().filter((item) => !item.disabled);\n                    const candidateNodes = items.map((item) => item.ref.current!);\n                    if (LAST_KEYS.includes(event.key)) candidateNodes.reverse();\n                    focusFirst(candidateNodes);\n                  })}\n                  onBlur={composeEventHandlers(props.onBlur, (event) => {\n                    // clear search buffer when leaving the menu\n                    if (!event.currentTarget.contains(event.target)) {\n                      window.clearTimeout(timerRef.current);\n                      searchRef.current = '';\n                    }\n                  })}\n                  onPointerMove={composeEventHandlers(\n                    props.onPointerMove,\n                    whenMouse((event) => {\n                      const target = event.target as HTMLElement;\n                      const pointerXHasChanged = lastPointerXRef.current !== event.clientX;\n\n                      // We don't use `event.movementX` for this check because Safari will\n                      // always return `0` on a pointer event.\n                      if (event.currentTarget.contains(target) && pointerXHasChanged) {\n                        const newDir = event.clientX > lastPointerXRef.current ? 'right' : 'left';\n                        pointerDirRef.current = newDir;\n                        lastPointerXRef.current = event.clientX;\n                      }\n                    })\n                  )}\n                />\n              </RovingFocusGroup.Root>\n            </DismissableLayer>\n          </FocusScope>\n        </ScrollLockWrapper>\n      </MenuContentProvider>\n    );\n  }\n);\n\nMenuContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'MenuGroup';\n\ntype MenuGroupElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface MenuGroupProps extends PrimitiveDivProps {}\n\nconst MenuGroup = React.forwardRef<MenuGroupElement, MenuGroupProps>(\n  (props: ScopedProps<MenuGroupProps>, forwardedRef) => {\n    const { __scopeMenu, ...groupProps } = props;\n    return <Primitive.div role=\"group\" {...groupProps} ref={forwardedRef} />;\n  }\n);\n\nMenuGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'MenuLabel';\n\ntype MenuLabelElement = React.ElementRef<typeof Primitive.div>;\ninterface MenuLabelProps extends PrimitiveDivProps {}\n\nconst MenuLabel = React.forwardRef<MenuLabelElement, MenuLabelProps>(\n  (props: ScopedProps<MenuLabelProps>, forwardedRef) => {\n    const { __scopeMenu, ...labelProps } = props;\n    return <Primitive.div {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nMenuLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'MenuItem';\nconst ITEM_SELECT = 'menu.itemSelect';\n\ntype MenuItemElement = MenuItemImplElement;\ninterface MenuItemProps extends Omit<MenuItemImplProps, 'onSelect'> {\n  onSelect?: (event: Event) => void;\n}\n\nconst MenuItem = React.forwardRef<MenuItemElement, MenuItemProps>(\n  (props: ScopedProps<MenuItemProps>, forwardedRef) => {\n    const { disabled = false, onSelect, ...itemProps } = props;\n    const ref = React.useRef<HTMLDivElement>(null);\n    const rootContext = useMenuRootContext(ITEM_NAME, props.__scopeMenu);\n    const contentContext = useMenuContentContext(ITEM_NAME, props.__scopeMenu);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const isPointerDownRef = React.useRef(false);\n\n    const handleSelect = () => {\n      const menuItem = ref.current;\n      if (!disabled && menuItem) {\n        const itemSelectEvent = new CustomEvent(ITEM_SELECT, { bubbles: true, cancelable: true });\n        menuItem.addEventListener(ITEM_SELECT, (event) => onSelect?.(event), { once: true });\n        dispatchDiscreteCustomEvent(menuItem, itemSelectEvent);\n        if (itemSelectEvent.defaultPrevented) {\n          isPointerDownRef.current = false;\n        } else {\n          rootContext.onClose();\n        }\n      }\n    };\n\n    return (\n      <MenuItemImpl\n        {...itemProps}\n        ref={composedRefs}\n        disabled={disabled}\n        onClick={composeEventHandlers(props.onClick, handleSelect)}\n        onPointerDown={(event) => {\n          props.onPointerDown?.(event);\n          isPointerDownRef.current = true;\n        }}\n        onPointerUp={composeEventHandlers(props.onPointerUp, (event) => {\n          // Pointer down can move to a different menu item which should activate it on pointer up.\n          // We dispatch a click for selection to allow composition with click based triggers and to\n          // prevent Firefox from getting stuck in text selection mode when the menu closes.\n          if (!isPointerDownRef.current) event.currentTarget?.click();\n        })}\n        onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n          const isTypingAhead = contentContext.searchRef.current !== '';\n          if (disabled || (isTypingAhead && event.key === ' ')) return;\n          if (SELECTION_KEYS.includes(event.key)) {\n            event.currentTarget.click();\n            /**\n             * We prevent default browser behaviour for selection keys as they should trigger\n             * a selection only:\n             * - prevents space from scrolling the page.\n             * - if keydown causes focus to move, prevents keydown from firing on the new target.\n             */\n            event.preventDefault();\n          }\n        })}\n      />\n    );\n  }\n);\n\nMenuItem.displayName = ITEM_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuItemImplElement = React.ElementRef<typeof Primitive.div>;\ninterface MenuItemImplProps extends PrimitiveDivProps {\n  disabled?: boolean;\n  textValue?: string;\n}\n\nconst MenuItemImpl = React.forwardRef<MenuItemImplElement, MenuItemImplProps>(\n  (props: ScopedProps<MenuItemImplProps>, forwardedRef) => {\n    const { __scopeMenu, disabled = false, textValue, ...itemProps } = props;\n    const contentContext = useMenuContentContext(ITEM_NAME, __scopeMenu);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenu);\n    const ref = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const [isFocused, setIsFocused] = React.useState(false);\n\n    // get the item's `.textContent` as default strategy for typeahead `textValue`\n    const [textContent, setTextContent] = React.useState('');\n    React.useEffect(() => {\n      const menuItem = ref.current;\n      if (menuItem) {\n        setTextContent((menuItem.textContent ?? '').trim());\n      }\n    }, [itemProps.children]);\n\n    return (\n      <Collection.ItemSlot\n        scope={__scopeMenu}\n        disabled={disabled}\n        textValue={textValue ?? textContent}\n      >\n        <RovingFocusGroup.Item asChild {...rovingFocusGroupScope} focusable={!disabled}>\n          <Primitive.div\n            role=\"menuitem\"\n            data-highlighted={isFocused ? '' : undefined}\n            aria-disabled={disabled || undefined}\n            data-disabled={disabled ? '' : undefined}\n            {...itemProps}\n            ref={composedRefs}\n            /**\n             * We focus items on `pointerMove` to achieve the following:\n             *\n             * - Mouse over an item (it focuses)\n             * - Leave mouse where it is and use keyboard to focus a different item\n             * - Wiggle mouse without it leaving previously focused item\n             * - Previously focused item should re-focus\n             *\n             * If we used `mouseOver`/`mouseEnter` it would not re-focus when the mouse\n             * wiggles. This is to match native menu implementation.\n             */\n            onPointerMove={composeEventHandlers(\n              props.onPointerMove,\n              whenMouse((event) => {\n                if (disabled) {\n                  contentContext.onItemLeave(event);\n                } else {\n                  contentContext.onItemEnter(event);\n                  if (!event.defaultPrevented) {\n                    const item = event.currentTarget;\n                    item.focus({ preventScroll: true });\n                  }\n                }\n              })\n            )}\n            onPointerLeave={composeEventHandlers(\n              props.onPointerLeave,\n              whenMouse((event) => contentContext.onItemLeave(event))\n            )}\n            onFocus={composeEventHandlers(props.onFocus, () => setIsFocused(true))}\n            onBlur={composeEventHandlers(props.onBlur, () => setIsFocused(false))}\n          />\n        </RovingFocusGroup.Item>\n      </Collection.ItemSlot>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * MenuCheckboxItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_ITEM_NAME = 'MenuCheckboxItem';\n\ntype MenuCheckboxItemElement = MenuItemElement;\n\ntype CheckedState = boolean | 'indeterminate';\n\ninterface MenuCheckboxItemProps extends MenuItemProps {\n  checked?: CheckedState;\n  // `onCheckedChange` can never be called with `\"indeterminate\"` from the inside\n  onCheckedChange?: (checked: boolean) => void;\n}\n\nconst MenuCheckboxItem = React.forwardRef<MenuCheckboxItemElement, MenuCheckboxItemProps>(\n  (props: ScopedProps<MenuCheckboxItemProps>, forwardedRef) => {\n    const { checked = false, onCheckedChange, ...checkboxItemProps } = props;\n    return (\n      <ItemIndicatorProvider scope={props.__scopeMenu} checked={checked}>\n        <MenuItem\n          role=\"menuitemcheckbox\"\n          aria-checked={isIndeterminate(checked) ? 'mixed' : checked}\n          {...checkboxItemProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(checked)}\n          onSelect={composeEventHandlers(\n            checkboxItemProps.onSelect,\n            () => onCheckedChange?.(isIndeterminate(checked) ? true : !checked),\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </ItemIndicatorProvider>\n    );\n  }\n);\n\nMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuRadioGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_GROUP_NAME = 'MenuRadioGroup';\n\nconst [RadioGroupProvider, useRadioGroupContext] = createMenuContext<MenuRadioGroupProps>(\n  RADIO_GROUP_NAME,\n  { value: undefined, onValueChange: () => {} }\n);\n\ntype MenuRadioGroupElement = React.ElementRef<typeof MenuGroup>;\ninterface MenuRadioGroupProps extends MenuGroupProps {\n  value?: string;\n  onValueChange?: (value: string) => void;\n}\n\nconst MenuRadioGroup = React.forwardRef<MenuRadioGroupElement, MenuRadioGroupProps>(\n  (props: ScopedProps<MenuRadioGroupProps>, forwardedRef) => {\n    const { value, onValueChange, ...groupProps } = props;\n    const handleValueChange = useCallbackRef(onValueChange);\n    return (\n      <RadioGroupProvider scope={props.__scopeMenu} value={value} onValueChange={handleValueChange}>\n        <MenuGroup {...groupProps} ref={forwardedRef} />\n      </RadioGroupProvider>\n    );\n  }\n);\n\nMenuRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuRadioItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_ITEM_NAME = 'MenuRadioItem';\n\ntype MenuRadioItemElement = React.ElementRef<typeof MenuItem>;\ninterface MenuRadioItemProps extends MenuItemProps {\n  value: string;\n}\n\nconst MenuRadioItem = React.forwardRef<MenuRadioItemElement, MenuRadioItemProps>(\n  (props: ScopedProps<MenuRadioItemProps>, forwardedRef) => {\n    const { value, ...radioItemProps } = props;\n    const context = useRadioGroupContext(RADIO_ITEM_NAME, props.__scopeMenu);\n    const checked = value === context.value;\n    return (\n      <ItemIndicatorProvider scope={props.__scopeMenu} checked={checked}>\n        <MenuItem\n          role=\"menuitemradio\"\n          aria-checked={checked}\n          {...radioItemProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(checked)}\n          onSelect={composeEventHandlers(\n            radioItemProps.onSelect,\n            () => context.onValueChange?.(value),\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </ItemIndicatorProvider>\n    );\n  }\n);\n\nMenuRadioItem.displayName = RADIO_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_INDICATOR_NAME = 'MenuItemIndicator';\n\ntype CheckboxContextValue = { checked: CheckedState };\n\nconst [ItemIndicatorProvider, useItemIndicatorContext] = createMenuContext<CheckboxContextValue>(\n  ITEM_INDICATOR_NAME,\n  { checked: false }\n);\n\ntype MenuItemIndicatorElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface MenuItemIndicatorProps extends PrimitiveSpanProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuItemIndicator = React.forwardRef<MenuItemIndicatorElement, MenuItemIndicatorProps>(\n  (props: ScopedProps<MenuItemIndicatorProps>, forwardedRef) => {\n    const { __scopeMenu, forceMount, ...itemIndicatorProps } = props;\n    const indicatorContext = useItemIndicatorContext(ITEM_INDICATOR_NAME, __scopeMenu);\n    return (\n      <Presence\n        present={\n          forceMount ||\n          isIndeterminate(indicatorContext.checked) ||\n          indicatorContext.checked === true\n        }\n      >\n        <Primitive.span\n          {...itemIndicatorProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(indicatorContext.checked)}\n        />\n      </Presence>\n    );\n  }\n);\n\nMenuItemIndicator.displayName = ITEM_INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'MenuSeparator';\n\ntype MenuSeparatorElement = React.ElementRef<typeof Primitive.div>;\ninterface MenuSeparatorProps extends PrimitiveDivProps {}\n\nconst MenuSeparator = React.forwardRef<MenuSeparatorElement, MenuSeparatorProps>(\n  (props: ScopedProps<MenuSeparatorProps>, forwardedRef) => {\n    const { __scopeMenu, ...separatorProps } = props;\n    return (\n      <Primitive.div\n        role=\"separator\"\n        aria-orientation=\"horizontal\"\n        {...separatorProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nMenuSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'MenuArrow';\n\ntype MenuArrowElement = React.ElementRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface MenuArrowProps extends PopperArrowProps {}\n\nconst MenuArrow = React.forwardRef<MenuArrowElement, MenuArrowProps>(\n  (props: ScopedProps<MenuArrowProps>, forwardedRef) => {\n    const { __scopeMenu, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeMenu);\n    return <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nMenuArrow.displayName = ARROW_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSub\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_NAME = 'MenuSub';\n\ntype MenuSubContextValue = {\n  contentId: string;\n  triggerId: string;\n  trigger: MenuSubTriggerElement | null;\n  onTriggerChange(trigger: MenuSubTriggerElement | null): void;\n};\n\nconst [MenuSubProvider, useMenuSubContext] = createMenuContext<MenuSubContextValue>(SUB_NAME);\n\ninterface MenuSubProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst MenuSub: React.FC<MenuSubProps> = (props: ScopedProps<MenuSubProps>) => {\n  const { __scopeMenu, children, open = false, onOpenChange } = props;\n  const parentMenuContext = useMenuContext(SUB_NAME, __scopeMenu);\n  const popperScope = usePopperScope(__scopeMenu);\n  const [trigger, setTrigger] = React.useState<MenuSubTriggerElement | null>(null);\n  const [content, setContent] = React.useState<MenuContentElement | null>(null);\n  const handleOpenChange = useCallbackRef(onOpenChange);\n\n  // Prevent the parent menu from reopening with open submenus.\n  React.useEffect(() => {\n    if (parentMenuContext.open === false) handleOpenChange(false);\n    return () => handleOpenChange(false);\n  }, [parentMenuContext.open, handleOpenChange]);\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <MenuProvider\n        scope={__scopeMenu}\n        open={open}\n        onOpenChange={handleOpenChange}\n        content={content}\n        onContentChange={setContent}\n      >\n        <MenuSubProvider\n          scope={__scopeMenu}\n          contentId={useId()}\n          triggerId={useId()}\n          trigger={trigger}\n          onTriggerChange={setTrigger}\n        >\n          {children}\n        </MenuSubProvider>\n      </MenuProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nMenuSub.displayName = SUB_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSubTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_TRIGGER_NAME = 'MenuSubTrigger';\n\ntype MenuSubTriggerElement = MenuItemImplElement;\ninterface MenuSubTriggerProps extends MenuItemImplProps {}\n\nconst MenuSubTrigger = React.forwardRef<MenuSubTriggerElement, MenuSubTriggerProps>(\n  (props: ScopedProps<MenuSubTriggerProps>, forwardedRef) => {\n    const context = useMenuContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const rootContext = useMenuRootContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const subContext = useMenuSubContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const contentContext = useMenuContentContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const openTimerRef = React.useRef<number | null>(null);\n    const { pointerGraceTimerRef, onPointerGraceIntentChange } = contentContext;\n    const scope = { __scopeMenu: props.__scopeMenu };\n\n    const clearOpenTimer = React.useCallback(() => {\n      if (openTimerRef.current) window.clearTimeout(openTimerRef.current);\n      openTimerRef.current = null;\n    }, []);\n\n    React.useEffect(() => clearOpenTimer, [clearOpenTimer]);\n\n    React.useEffect(() => {\n      const pointerGraceTimer = pointerGraceTimerRef.current;\n      return () => {\n        window.clearTimeout(pointerGraceTimer);\n        onPointerGraceIntentChange(null);\n      };\n    }, [pointerGraceTimerRef, onPointerGraceIntentChange]);\n\n    return (\n      <MenuAnchor asChild {...scope}>\n        <MenuItemImpl\n          id={subContext.triggerId}\n          aria-haspopup=\"menu\"\n          aria-expanded={context.open}\n          aria-controls={subContext.contentId}\n          data-state={getOpenState(context.open)}\n          {...props}\n          ref={composeRefs(forwardedRef, subContext.onTriggerChange)}\n          // This is redundant for mouse users but we cannot determine pointer type from\n          // click event and we cannot use pointerup event (see git history for reasons why)\n          onClick={(event) => {\n            props.onClick?.(event);\n            if (props.disabled || event.defaultPrevented) return;\n            /**\n             * We manually focus because iOS Safari doesn't always focus on click (e.g. buttons)\n             * and we rely heavily on `onFocusOutside` for submenus to close when switching\n             * between separate submenus.\n             */\n            event.currentTarget.focus();\n            if (!context.open) context.onOpenChange(true);\n          }}\n          onPointerMove={composeEventHandlers(\n            props.onPointerMove,\n            whenMouse((event) => {\n              contentContext.onItemEnter(event);\n              if (event.defaultPrevented) return;\n              if (!props.disabled && !context.open && !openTimerRef.current) {\n                contentContext.onPointerGraceIntentChange(null);\n                openTimerRef.current = window.setTimeout(() => {\n                  context.onOpenChange(true);\n                  clearOpenTimer();\n                }, 100);\n              }\n            })\n          )}\n          onPointerLeave={composeEventHandlers(\n            props.onPointerLeave,\n            whenMouse((event) => {\n              clearOpenTimer();\n\n              const contentRect = context.content?.getBoundingClientRect();\n              if (contentRect) {\n                // TODO: make sure to update this when we change positioning logic\n                const side = context.content?.dataset.side as Side;\n                const rightSide = side === 'right';\n                const bleed = rightSide ? -5 : +5;\n                const contentNearEdge = contentRect[rightSide ? 'left' : 'right'];\n                const contentFarEdge = contentRect[rightSide ? 'right' : 'left'];\n\n                contentContext.onPointerGraceIntentChange({\n                  area: [\n                    // Apply a bleed on clientX to ensure that our exit point is\n                    // consistently within polygon bounds\n                    { x: event.clientX + bleed, y: event.clientY },\n                    { x: contentNearEdge, y: contentRect.top },\n                    { x: contentFarEdge, y: contentRect.top },\n                    { x: contentFarEdge, y: contentRect.bottom },\n                    { x: contentNearEdge, y: contentRect.bottom },\n                  ],\n                  side,\n                });\n\n                window.clearTimeout(pointerGraceTimerRef.current);\n                pointerGraceTimerRef.current = window.setTimeout(\n                  () => contentContext.onPointerGraceIntentChange(null),\n                  300\n                );\n              } else {\n                contentContext.onTriggerLeave(event);\n                if (event.defaultPrevented) return;\n\n                // There's 100ms where the user may leave an item before the submenu was opened.\n                contentContext.onPointerGraceIntentChange(null);\n              }\n            })\n          )}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            const isTypingAhead = contentContext.searchRef.current !== '';\n            if (props.disabled || (isTypingAhead && event.key === ' ')) return;\n            if (SUB_OPEN_KEYS[rootContext.dir].includes(event.key)) {\n              context.onOpenChange(true);\n              // The trigger may hold focus if opened via pointer interaction\n              // so we ensure content is given focus again when switching to keyboard.\n              context.content?.focus();\n              // prevent window from scrolling\n              event.preventDefault();\n            }\n          })}\n        />\n      </MenuAnchor>\n    );\n  }\n);\n\nMenuSubTrigger.displayName = SUB_TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSubContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_CONTENT_NAME = 'MenuSubContent';\n\ntype MenuSubContentElement = MenuContentImplElement;\ninterface MenuSubContentProps\n  extends Omit<\n    MenuContentImplProps,\n    keyof MenuContentImplPrivateProps | 'onCloseAutoFocus' | 'onEntryFocus' | 'side' | 'align'\n  > {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuSubContent = React.forwardRef<MenuSubContentElement, MenuSubContentProps>(\n  (props: ScopedProps<MenuSubContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeMenu);\n    const { forceMount = portalContext.forceMount, ...subContentProps } = props;\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const rootContext = useMenuRootContext(CONTENT_NAME, props.__scopeMenu);\n    const subContext = useMenuSubContext(SUB_CONTENT_NAME, props.__scopeMenu);\n    const ref = React.useRef<MenuSubContentElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    return (\n      <Collection.Provider scope={props.__scopeMenu}>\n        <Presence present={forceMount || context.open}>\n          <Collection.Slot scope={props.__scopeMenu}>\n            <MenuContentImpl\n              id={subContext.contentId}\n              aria-labelledby={subContext.triggerId}\n              {...subContentProps}\n              ref={composedRefs}\n              align=\"start\"\n              side={rootContext.dir === 'rtl' ? 'left' : 'right'}\n              disableOutsidePointerEvents={false}\n              disableOutsideScroll={false}\n              trapFocus={false}\n              onOpenAutoFocus={(event) => {\n                // when opening a submenu, focus content for keyboard users only\n                if (rootContext.isUsingKeyboardRef.current) ref.current?.focus();\n                event.preventDefault();\n              }}\n              // The menu might close because of focusing another menu item in the parent menu. We\n              // don't want it to refocus the trigger in that case so we handle trigger focus ourselves.\n              onCloseAutoFocus={(event) => event.preventDefault()}\n              onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) => {\n                // We prevent closing when the trigger is focused to avoid triggering a re-open animation\n                // on pointer interaction.\n                if (event.target !== subContext.trigger) context.onOpenChange(false);\n              })}\n              onEscapeKeyDown={composeEventHandlers(props.onEscapeKeyDown, (event) => {\n                rootContext.onClose();\n                // ensure pressing escape in submenu doesn't escape full screen mode\n                event.preventDefault();\n              })}\n              onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n                // Submenu key events bubble through portals. We only care about keys in this menu.\n                const isKeyDownInside = event.currentTarget.contains(event.target as HTMLElement);\n                const isCloseKey = SUB_CLOSE_KEYS[rootContext.dir].includes(event.key);\n                if (isKeyDownInside && isCloseKey) {\n                  context.onOpenChange(false);\n                  // We focus manually because we prevented it in `onCloseAutoFocus`\n                  subContext.trigger?.focus();\n                  // prevent window from scrolling\n                  event.preventDefault();\n                }\n              })}\n            />\n          </Collection.Slot>\n        </Presence>\n      </Collection.Provider>\n    );\n  }\n);\n\nMenuSubContent.displayName = SUB_CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getOpenState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nfunction isIndeterminate(checked?: CheckedState): checked is 'indeterminate' {\n  return checked === 'indeterminate';\n}\n\nfunction getCheckedState(checked: CheckedState) {\n  return isIndeterminate(checked) ? 'indeterminate' : checked ? 'checked' : 'unchecked';\n}\n\nfunction focusFirst(candidates: HTMLElement[]) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n  for (const candidate of candidates) {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n    candidate.focus();\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n  }\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n\n/**\n * This is the \"meat\" of the typeahead matching logic. It takes in all the values,\n * the search and the current match, and returns the next match (or `undefined`).\n *\n * We normalize the search because if a user has repeatedly pressed a character,\n * we want the exact same behavior as if we only had that one character\n * (ie. cycle through options starting with that character)\n *\n * We also reorder the values by wrapping the array around the current match.\n * This is so we always look forward from the current match, and picking the first\n * match will always be the correct one.\n *\n * Finally, if the normalized search is exactly one character, we exclude the\n * current match from the values because otherwise it would be the first to match always\n * and focus would never move. This is as opposed to the regular case, where we\n * don't want focus to move if the current match still matches.\n */\nfunction getNextMatch(values: string[], search: string, currentMatch?: string) {\n  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n  const normalizedSearch = isRepeated ? search[0] : search;\n  const currentMatchIndex = currentMatch ? values.indexOf(currentMatch) : -1;\n  let wrappedValues = wrapArray(values, Math.max(currentMatchIndex, 0));\n  const excludeCurrentMatch = normalizedSearch.length === 1;\n  if (excludeCurrentMatch) wrappedValues = wrappedValues.filter((v) => v !== currentMatch);\n  const nextMatch = wrappedValues.find((value) =>\n    value.toLowerCase().startsWith(normalizedSearch.toLowerCase())\n  );\n  return nextMatch !== currentMatch ? nextMatch : undefined;\n}\n\ntype Point = { x: number; y: number };\ntype Polygon = Point[];\ntype Side = 'left' | 'right';\ntype GraceIntent = { area: Polygon; side: Side };\n\n// Determine if a point is inside of a polygon.\n// Based on https://github.com/substack/point-in-polygon\nfunction isPointInPolygon(point: Point, polygon: Polygon) {\n  const { x, y } = point;\n  let inside = false;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].x;\n    const yi = polygon[i].y;\n    const xj = polygon[j].x;\n    const yj = polygon[j].y;\n\n    // prettier-ignore\n    const intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n    if (intersect) inside = !inside;\n  }\n\n  return inside;\n}\n\nfunction isPointerInGraceArea(event: React.PointerEvent, area?: Polygon) {\n  if (!area) return false;\n  const cursorPos = { x: event.clientX, y: event.clientY };\n  return isPointInPolygon(cursorPos, area);\n}\n\nfunction whenMouse<E>(handler: React.PointerEventHandler<E>): React.PointerEventHandler<E> {\n  return (event) => (event.pointerType === 'mouse' ? handler(event) : undefined);\n}\n\nconst Root = Menu;\nconst Anchor = MenuAnchor;\nconst Portal = MenuPortal;\nconst Content = MenuContent;\nconst Group = MenuGroup;\nconst Label = MenuLabel;\nconst Item = MenuItem;\nconst CheckboxItem = MenuCheckboxItem;\nconst RadioGroup = MenuRadioGroup;\nconst RadioItem = MenuRadioItem;\nconst ItemIndicator = MenuItemIndicator;\nconst Separator = MenuSeparator;\nconst Arrow = MenuArrow;\nconst Sub = MenuSub;\nconst SubTrigger = MenuSubTrigger;\nconst SubContent = MenuSubContent;\n\nexport {\n  createMenuScope,\n  //\n  Menu,\n  MenuAnchor,\n  MenuPortal,\n  MenuContent,\n  MenuGroup,\n  MenuLabel,\n  MenuItem,\n  MenuCheckboxItem,\n  MenuRadioGroup,\n  MenuRadioItem,\n  MenuItemIndicator,\n  MenuSeparator,\n  MenuArrow,\n  MenuSub,\n  MenuSubTrigger,\n  MenuSubContent,\n  //\n  Root,\n  Anchor,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n};\nexport type {\n  MenuProps,\n  MenuAnchorProps,\n  MenuPortalProps,\n  MenuContentProps,\n  MenuGroupProps,\n  MenuLabelProps,\n  MenuItemProps,\n  MenuCheckboxItemProps,\n  MenuRadioGroupProps,\n  MenuRadioItemProps,\n  MenuItemIndicatorProps,\n  MenuSeparatorProps,\n  MenuArrowProps,\n  MenuSubProps,\n  MenuSubTriggerProps,\n  MenuSubContentProps,\n};\n", "'use client';\nexport {\n  createContextMenuScope,\n  //\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuPortal,\n  ContextMenuContent,\n  ContextMenuGroup,\n  ContextMenuLabel,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioGroup,\n  ContextMenuRadioItem,\n  ContextMenuItemIndicator,\n  ContextMenuSeparator,\n  ContextMenuArrow,\n  ContextMenuSub,\n  ContextMenuSubTrigger,\n  ContextMenuSubContent,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n} from './ContextMenu';\nexport type {\n  ContextMenuProps,\n  ContextMenuTriggerProps,\n  ContextMenuPortalProps,\n  ContextMenuContentProps,\n  ContextMenuGroupProps,\n  ContextMenuLabelProps,\n  ContextMenuItemProps,\n  ContextMenuCheckboxItemProps,\n  ContextMenuRadioGroupProps,\n  ContextMenuRadioItemProps,\n  ContextMenuItemIndicatorProps,\n  ContextMenuSeparatorProps,\n  ContextMenuArrowProps,\n  ContextMenuSubProps,\n  ContextMenuSubTriggerProps,\n  ContextMenuSubContentProps,\n} from './ContextMenu';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as MenuPrimitive from '@radix-ui/react-menu';\nimport { createMenuScope } from '@radix-ui/react-menu';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\n\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\ntype Point = { x: number; y: number };\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenu\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTEXT_MENU_NAME = 'ContextMenu';\n\ntype ScopedProps<P> = P & { __scopeContextMenu?: Scope };\nconst [createContextMenuContext, createContextMenuScope] = createContextScope(CONTEXT_MENU_NAME, [\n  createMenuScope,\n]);\nconst useMenuScope = createMenuScope();\n\ntype ContextMenuContextValue = {\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  modal: boolean;\n};\n\nconst [ContextMenuProvider, useContextMenuContext] =\n  createContextMenuContext<ContextMenuContextValue>(CONTEXT_MENU_NAME);\n\ninterface ContextMenuProps {\n  children?: React.ReactNode;\n  onOpenChange?(open: boolean): void;\n  dir?: Direction;\n  modal?: boolean;\n}\n\nconst ContextMenu: React.FC<ContextMenuProps> = (props: ScopedProps<ContextMenuProps>) => {\n  const { __scopeContextMenu, children, onOpenChange, dir, modal = true } = props;\n  const [open, setOpen] = React.useState(false);\n  const menuScope = useMenuScope(__scopeContextMenu);\n  const handleOpenChangeProp = useCallbackRef(onOpenChange);\n\n  const handleOpenChange = React.useCallback(\n    (open: boolean) => {\n      setOpen(open);\n      handleOpenChangeProp(open);\n    },\n    [handleOpenChangeProp]\n  );\n\n  return (\n    <ContextMenuProvider\n      scope={__scopeContextMenu}\n      open={open}\n      onOpenChange={handleOpenChange}\n      modal={modal}\n    >\n      <MenuPrimitive.Root\n        {...menuScope}\n        dir={dir}\n        open={open}\n        onOpenChange={handleOpenChange}\n        modal={modal}\n      >\n        {children}\n      </MenuPrimitive.Root>\n    </ContextMenuProvider>\n  );\n};\n\nContextMenu.displayName = CONTEXT_MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'ContextMenuTrigger';\n\ntype ContextMenuTriggerElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface ContextMenuTriggerProps extends PrimitiveSpanProps {\n  disabled?: boolean;\n}\n\nconst ContextMenuTrigger = React.forwardRef<ContextMenuTriggerElement, ContextMenuTriggerProps>(\n  (props: ScopedProps<ContextMenuTriggerProps>, forwardedRef) => {\n    const { __scopeContextMenu, disabled = false, ...triggerProps } = props;\n    const context = useContextMenuContext(TRIGGER_NAME, __scopeContextMenu);\n    const menuScope = useMenuScope(__scopeContextMenu);\n    const pointRef = React.useRef<Point>({ x: 0, y: 0 });\n    const virtualRef = React.useRef({\n      getBoundingClientRect: () => DOMRect.fromRect({ width: 0, height: 0, ...pointRef.current }),\n    });\n    const longPressTimerRef = React.useRef(0);\n    const clearLongPress = React.useCallback(\n      () => window.clearTimeout(longPressTimerRef.current),\n      []\n    );\n    const handleOpen = (event: React.MouseEvent | React.PointerEvent) => {\n      pointRef.current = { x: event.clientX, y: event.clientY };\n      context.onOpenChange(true);\n    };\n\n    React.useEffect(() => clearLongPress, [clearLongPress]);\n    React.useEffect(() => void (disabled && clearLongPress()), [disabled, clearLongPress]);\n\n    return (\n      <>\n        <MenuPrimitive.Anchor {...menuScope} virtualRef={virtualRef} />\n        <Primitive.span\n          data-state={context.open ? 'open' : 'closed'}\n          data-disabled={disabled ? '' : undefined}\n          {...triggerProps}\n          ref={forwardedRef}\n          // prevent iOS context menu from appearing\n          style={{ WebkitTouchCallout: 'none', ...props.style }}\n          // if trigger is disabled, enable the native Context Menu\n          onContextMenu={\n            disabled\n              ? props.onContextMenu\n              : composeEventHandlers(props.onContextMenu, (event) => {\n                  // clearing the long press here because some platforms already support\n                  // long press to trigger a `contextmenu` event\n                  clearLongPress();\n                  handleOpen(event);\n                  event.preventDefault();\n                })\n          }\n          onPointerDown={\n            disabled\n              ? props.onPointerDown\n              : composeEventHandlers(\n                  props.onPointerDown,\n                  whenTouchOrPen((event) => {\n                    // clear the long press here in case there's multiple touch points\n                    clearLongPress();\n                    longPressTimerRef.current = window.setTimeout(() => handleOpen(event), 700);\n                  })\n                )\n          }\n          onPointerMove={\n            disabled\n              ? props.onPointerMove\n              : composeEventHandlers(props.onPointerMove, whenTouchOrPen(clearLongPress))\n          }\n          onPointerCancel={\n            disabled\n              ? props.onPointerCancel\n              : composeEventHandlers(props.onPointerCancel, whenTouchOrPen(clearLongPress))\n          }\n          onPointerUp={\n            disabled\n              ? props.onPointerUp\n              : composeEventHandlers(props.onPointerUp, whenTouchOrPen(clearLongPress))\n          }\n        />\n      </>\n    );\n  }\n);\n\nContextMenuTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'ContextMenuPortal';\n\ntype MenuPortalProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Portal>;\ninterface ContextMenuPortalProps extends MenuPortalProps {}\n\nconst ContextMenuPortal: React.FC<ContextMenuPortalProps> = (\n  props: ScopedProps<ContextMenuPortalProps>\n) => {\n  const { __scopeContextMenu, ...portalProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.Portal {...menuScope} {...portalProps} />;\n};\n\nContextMenuPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'ContextMenuContent';\n\ntype ContextMenuContentElement = React.ElementRef<typeof MenuPrimitive.Content>;\ntype MenuContentProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Content>;\ninterface ContextMenuContentProps\n  extends Omit<MenuContentProps, 'onEntryFocus' | 'side' | 'sideOffset' | 'align'> {}\n\nconst ContextMenuContent = React.forwardRef<ContextMenuContentElement, ContextMenuContentProps>(\n  (props: ScopedProps<ContextMenuContentProps>, forwardedRef) => {\n    const { __scopeContextMenu, ...contentProps } = props;\n    const context = useContextMenuContext(CONTENT_NAME, __scopeContextMenu);\n    const menuScope = useMenuScope(__scopeContextMenu);\n    const hasInteractedOutsideRef = React.useRef(false);\n\n    return (\n      <MenuPrimitive.Content\n        {...menuScope}\n        {...contentProps}\n        ref={forwardedRef}\n        side=\"right\"\n        sideOffset={2}\n        align=\"start\"\n        onCloseAutoFocus={(event) => {\n          props.onCloseAutoFocus?.(event);\n\n          if (!event.defaultPrevented && hasInteractedOutsideRef.current) {\n            event.preventDefault();\n          }\n\n          hasInteractedOutsideRef.current = false;\n        }}\n        onInteractOutside={(event) => {\n          props.onInteractOutside?.(event);\n\n          if (!event.defaultPrevented && !context.modal) hasInteractedOutsideRef.current = true;\n        }}\n        style={{\n          ...props.style,\n          // re-namespace exposed content custom properties\n          ...{\n            '--radix-context-menu-content-transform-origin': 'var(--radix-popper-transform-origin)',\n            '--radix-context-menu-content-available-width': 'var(--radix-popper-available-width)',\n            '--radix-context-menu-content-available-height': 'var(--radix-popper-available-height)',\n            '--radix-context-menu-trigger-width': 'var(--radix-popper-anchor-width)',\n            '--radix-context-menu-trigger-height': 'var(--radix-popper-anchor-height)',\n          },\n        }}\n      />\n    );\n  }\n);\n\nContextMenuContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'ContextMenuGroup';\n\ntype ContextMenuGroupElement = React.ElementRef<typeof MenuPrimitive.Group>;\ntype MenuGroupProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Group>;\ninterface ContextMenuGroupProps extends MenuGroupProps {}\n\nconst ContextMenuGroup = React.forwardRef<ContextMenuGroupElement, ContextMenuGroupProps>(\n  (props: ScopedProps<ContextMenuGroupProps>, forwardedRef) => {\n    const { __scopeContextMenu, ...groupProps } = props;\n    const menuScope = useMenuScope(__scopeContextMenu);\n    return <MenuPrimitive.Group {...menuScope} {...groupProps} ref={forwardedRef} />;\n  }\n);\n\nContextMenuGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'ContextMenuLabel';\n\ntype ContextMenuLabelElement = React.ElementRef<typeof MenuPrimitive.Label>;\ntype MenuLabelProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Label>;\ninterface ContextMenuLabelProps extends MenuLabelProps {}\n\nconst ContextMenuLabel = React.forwardRef<ContextMenuLabelElement, ContextMenuLabelProps>(\n  (props: ScopedProps<ContextMenuLabelProps>, forwardedRef) => {\n    const { __scopeContextMenu, ...labelProps } = props;\n    const menuScope = useMenuScope(__scopeContextMenu);\n    return <MenuPrimitive.Label {...menuScope} {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nContextMenuLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'ContextMenuItem';\n\ntype ContextMenuItemElement = React.ElementRef<typeof MenuPrimitive.Item>;\ntype MenuItemProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Item>;\ninterface ContextMenuItemProps extends MenuItemProps {}\n\nconst ContextMenuItem = React.forwardRef<ContextMenuItemElement, ContextMenuItemProps>(\n  (props: ScopedProps<ContextMenuItemProps>, forwardedRef) => {\n    const { __scopeContextMenu, ...itemProps } = props;\n    const menuScope = useMenuScope(__scopeContextMenu);\n    return <MenuPrimitive.Item {...menuScope} {...itemProps} ref={forwardedRef} />;\n  }\n);\n\nContextMenuItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuCheckboxItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_ITEM_NAME = 'ContextMenuCheckboxItem';\n\ntype ContextMenuCheckboxItemElement = React.ElementRef<typeof MenuPrimitive.CheckboxItem>;\ntype MenuCheckboxItemProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.CheckboxItem>;\ninterface ContextMenuCheckboxItemProps extends MenuCheckboxItemProps {}\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  ContextMenuCheckboxItemElement,\n  ContextMenuCheckboxItemProps\n>((props: ScopedProps<ContextMenuCheckboxItemProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...checkboxItemProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.CheckboxItem {...menuScope} {...checkboxItemProps} ref={forwardedRef} />;\n});\n\nContextMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuRadioGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_GROUP_NAME = 'ContextMenuRadioGroup';\n\ntype ContextMenuRadioGroupElement = React.ElementRef<typeof MenuPrimitive.RadioGroup>;\ntype MenuRadioGroupProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioGroup>;\ninterface ContextMenuRadioGroupProps extends MenuRadioGroupProps {}\n\nconst ContextMenuRadioGroup = React.forwardRef<\n  ContextMenuRadioGroupElement,\n  ContextMenuRadioGroupProps\n>((props: ScopedProps<ContextMenuRadioGroupProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...radioGroupProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.RadioGroup {...menuScope} {...radioGroupProps} ref={forwardedRef} />;\n});\n\nContextMenuRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuRadioItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_ITEM_NAME = 'ContextMenuRadioItem';\n\ntype ContextMenuRadioItemElement = React.ElementRef<typeof MenuPrimitive.RadioItem>;\ntype MenuRadioItemProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioItem>;\ninterface ContextMenuRadioItemProps extends MenuRadioItemProps {}\n\nconst ContextMenuRadioItem = React.forwardRef<\n  ContextMenuRadioItemElement,\n  ContextMenuRadioItemProps\n>((props: ScopedProps<ContextMenuRadioItemProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...radioItemProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.RadioItem {...menuScope} {...radioItemProps} ref={forwardedRef} />;\n});\n\nContextMenuRadioItem.displayName = RADIO_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'ContextMenuItemIndicator';\n\ntype ContextMenuItemIndicatorElement = React.ElementRef<typeof MenuPrimitive.ItemIndicator>;\ntype MenuItemIndicatorProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.ItemIndicator>;\ninterface ContextMenuItemIndicatorProps extends MenuItemIndicatorProps {}\n\nconst ContextMenuItemIndicator = React.forwardRef<\n  ContextMenuItemIndicatorElement,\n  ContextMenuItemIndicatorProps\n>((props: ScopedProps<ContextMenuItemIndicatorProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...itemIndicatorProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.ItemIndicator {...menuScope} {...itemIndicatorProps} ref={forwardedRef} />;\n});\n\nContextMenuItemIndicator.displayName = INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'ContextMenuSeparator';\n\ntype ContextMenuSeparatorElement = React.ElementRef<typeof MenuPrimitive.Separator>;\ntype MenuSeparatorProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Separator>;\ninterface ContextMenuSeparatorProps extends MenuSeparatorProps {}\n\nconst ContextMenuSeparator = React.forwardRef<\n  ContextMenuSeparatorElement,\n  ContextMenuSeparatorProps\n>((props: ScopedProps<ContextMenuSeparatorProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...separatorProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.Separator {...menuScope} {...separatorProps} ref={forwardedRef} />;\n});\n\nContextMenuSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'ContextMenuArrow';\n\ntype ContextMenuArrowElement = React.ElementRef<typeof MenuPrimitive.Arrow>;\ntype MenuArrowProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Arrow>;\ninterface ContextMenuArrowProps extends MenuArrowProps {}\n\nconst ContextMenuArrow = React.forwardRef<ContextMenuArrowElement, ContextMenuArrowProps>(\n  (props: ScopedProps<ContextMenuArrowProps>, forwardedRef) => {\n    const { __scopeContextMenu, ...arrowProps } = props;\n    const menuScope = useMenuScope(__scopeContextMenu);\n    return <MenuPrimitive.Arrow {...menuScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nContextMenuArrow.displayName = ARROW_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuSub\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_NAME = 'ContextMenuSub';\n\ninterface ContextMenuSubProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst ContextMenuSub: React.FC<ContextMenuSubProps> = (props: ScopedProps<ContextMenuSubProps>) => {\n  const { __scopeContextMenu, children, onOpenChange, open: openProp, defaultOpen } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <MenuPrimitive.Sub {...menuScope} open={open} onOpenChange={setOpen}>\n      {children}\n    </MenuPrimitive.Sub>\n  );\n};\n\nContextMenuSub.displayName = SUB_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuSubTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_TRIGGER_NAME = 'ContextMenuSubTrigger';\n\ntype ContextMenuSubTriggerElement = React.ElementRef<typeof MenuPrimitive.SubTrigger>;\ntype MenuSubTriggerProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.SubTrigger>;\ninterface ContextMenuSubTriggerProps extends MenuSubTriggerProps {}\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  ContextMenuSubTriggerElement,\n  ContextMenuSubTriggerProps\n>((props: ScopedProps<ContextMenuSubTriggerProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...triggerItemProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.SubTrigger {...menuScope} {...triggerItemProps} ref={forwardedRef} />;\n});\n\nContextMenuSubTrigger.displayName = SUB_TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuSubContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_CONTENT_NAME = 'ContextMenuSubContent';\n\ntype ContextMenuSubContentElement = React.ElementRef<typeof MenuPrimitive.Content>;\ntype MenuSubContentProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.SubContent>;\ninterface ContextMenuSubContentProps extends MenuSubContentProps {}\n\nconst ContextMenuSubContent = React.forwardRef<\n  ContextMenuSubContentElement,\n  ContextMenuSubContentProps\n>((props: ScopedProps<ContextMenuSubContentProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...subContentProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n\n  return (\n    <MenuPrimitive.SubContent\n      {...menuScope}\n      {...subContentProps}\n      ref={forwardedRef}\n      style={{\n        ...props.style,\n        // re-namespace exposed content custom properties\n        ...{\n          '--radix-context-menu-content-transform-origin': 'var(--radix-popper-transform-origin)',\n          '--radix-context-menu-content-available-width': 'var(--radix-popper-available-width)',\n          '--radix-context-menu-content-available-height': 'var(--radix-popper-available-height)',\n          '--radix-context-menu-trigger-width': 'var(--radix-popper-anchor-width)',\n          '--radix-context-menu-trigger-height': 'var(--radix-popper-anchor-height)',\n        },\n      }}\n    />\n  );\n});\n\nContextMenuSubContent.displayName = SUB_CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction whenTouchOrPen<E>(handler: React.PointerEventHandler<E>): React.PointerEventHandler<E> {\n  return (event) => (event.pointerType !== 'mouse' ? handler(event) : undefined);\n}\n\nconst Root = ContextMenu;\nconst Trigger = ContextMenuTrigger;\nconst Portal = ContextMenuPortal;\nconst Content = ContextMenuContent;\nconst Group = ContextMenuGroup;\nconst Label = ContextMenuLabel;\nconst Item = ContextMenuItem;\nconst CheckboxItem = ContextMenuCheckboxItem;\nconst RadioGroup = ContextMenuRadioGroup;\nconst RadioItem = ContextMenuRadioItem;\nconst ItemIndicator = ContextMenuItemIndicator;\nconst Separator = ContextMenuSeparator;\nconst Arrow = ContextMenuArrow;\nconst Sub = ContextMenuSub;\nconst SubTrigger = ContextMenuSubTrigger;\nconst SubContent = ContextMenuSubContent;\n\nexport {\n  createContextMenuScope,\n  //\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuPortal,\n  ContextMenuContent,\n  ContextMenuGroup,\n  ContextMenuLabel,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioGroup,\n  ContextMenuRadioItem,\n  ContextMenuItemIndicator,\n  ContextMenuSeparator,\n  ContextMenuArrow,\n  ContextMenuSub,\n  ContextMenuSubTrigger,\n  ContextMenuSubContent,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n};\nexport type {\n  ContextMenuProps,\n  ContextMenuTriggerProps,\n  ContextMenuPortalProps,\n  ContextMenuContentProps,\n  ContextMenuGroupProps,\n  ContextMenuLabelProps,\n  ContextMenuItemProps,\n  ContextMenuCheckboxItemProps,\n  ContextMenuRadioGroupProps,\n  ContextMenuRadioItemProps,\n  ContextMenuItemIndicatorProps,\n  ContextMenuSeparatorProps,\n  ContextMenuArrowProps,\n  ContextMenuSubProps,\n  ContextMenuSubTriggerProps,\n  ContextMenuSubContentProps,\n};\n", "export { clamp } from './number';\n", "function clamp(value: number, [min, max]: [number, number]): number {\n  return Math.min(max, Math.max(min, value));\n}\n\nexport { clamp };\n", "'use client';\nexport {\n  createScrollAreaScope,\n  //\n  ScrollArea,\n  ScrollAreaViewport,\n  ScrollAreaScrollbar,\n  ScrollAreaThumb,\n  ScrollAreaCorner,\n  //\n  Root,\n  Viewport,\n  Scrollbar,\n  Thumb,\n  Corner,\n} from './ScrollArea';\nexport type {\n  ScrollAreaProps,\n  ScrollAreaViewportProps,\n  ScrollAreaScrollbarProps,\n  ScrollAreaThumbProps,\n  ScrollAreaCornerProps,\n} from './ScrollArea';\n", "/// <reference types=\"resize-observer-browser\" />\n\nimport * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { Presence } from '@radix-ui/react-presence';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { clamp } from '@radix-ui/number';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useStateMachine } from './useStateMachine';\n\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\ntype Sizes = {\n  content: number;\n  viewport: number;\n  scrollbar: {\n    size: number;\n    paddingStart: number;\n    paddingEnd: number;\n  };\n};\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollArea\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLL_AREA_NAME = 'ScrollArea';\n\ntype ScopedProps<P> = P & { __scopeScrollArea?: Scope };\nconst [createScrollAreaContext, createScrollAreaScope] = createContextScope(SCROLL_AREA_NAME);\n\ntype ScrollAreaContextValue = {\n  type: 'auto' | 'always' | 'scroll' | 'hover';\n  dir: Direction;\n  scrollHideDelay: number;\n  scrollArea: ScrollAreaElement | null;\n  viewport: ScrollAreaViewportElement | null;\n  onViewportChange(viewport: ScrollAreaViewportElement | null): void;\n  content: HTMLDivElement | null;\n  onContentChange(content: HTMLDivElement): void;\n  scrollbarX: ScrollAreaScrollbarElement | null;\n  onScrollbarXChange(scrollbar: ScrollAreaScrollbarElement | null): void;\n  scrollbarXEnabled: boolean;\n  onScrollbarXEnabledChange(rendered: boolean): void;\n  scrollbarY: ScrollAreaScrollbarElement | null;\n  onScrollbarYChange(scrollbar: ScrollAreaScrollbarElement | null): void;\n  scrollbarYEnabled: boolean;\n  onScrollbarYEnabledChange(rendered: boolean): void;\n  onCornerWidthChange(width: number): void;\n  onCornerHeightChange(height: number): void;\n};\n\nconst [ScrollAreaProvider, useScrollAreaContext] =\n  createScrollAreaContext<ScrollAreaContextValue>(SCROLL_AREA_NAME);\n\ntype ScrollAreaElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface ScrollAreaProps extends PrimitiveDivProps {\n  type?: ScrollAreaContextValue['type'];\n  dir?: ScrollAreaContextValue['dir'];\n  scrollHideDelay?: number;\n}\n\nconst ScrollArea = React.forwardRef<ScrollAreaElement, ScrollAreaProps>(\n  (props: ScopedProps<ScrollAreaProps>, forwardedRef) => {\n    const {\n      __scopeScrollArea,\n      type = 'hover',\n      dir,\n      scrollHideDelay = 600,\n      ...scrollAreaProps\n    } = props;\n    const [scrollArea, setScrollArea] = React.useState<ScrollAreaElement | null>(null);\n    const [viewport, setViewport] = React.useState<ScrollAreaViewportElement | null>(null);\n    const [content, setContent] = React.useState<HTMLDivElement | null>(null);\n    const [scrollbarX, setScrollbarX] = React.useState<ScrollAreaScrollbarElement | null>(null);\n    const [scrollbarY, setScrollbarY] = React.useState<ScrollAreaScrollbarElement | null>(null);\n    const [cornerWidth, setCornerWidth] = React.useState(0);\n    const [cornerHeight, setCornerHeight] = React.useState(0);\n    const [scrollbarXEnabled, setScrollbarXEnabled] = React.useState(false);\n    const [scrollbarYEnabled, setScrollbarYEnabled] = React.useState(false);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setScrollArea(node));\n    const direction = useDirection(dir);\n\n    return (\n      <ScrollAreaProvider\n        scope={__scopeScrollArea}\n        type={type}\n        dir={direction}\n        scrollHideDelay={scrollHideDelay}\n        scrollArea={scrollArea}\n        viewport={viewport}\n        onViewportChange={setViewport}\n        content={content}\n        onContentChange={setContent}\n        scrollbarX={scrollbarX}\n        onScrollbarXChange={setScrollbarX}\n        scrollbarXEnabled={scrollbarXEnabled}\n        onScrollbarXEnabledChange={setScrollbarXEnabled}\n        scrollbarY={scrollbarY}\n        onScrollbarYChange={setScrollbarY}\n        scrollbarYEnabled={scrollbarYEnabled}\n        onScrollbarYEnabledChange={setScrollbarYEnabled}\n        onCornerWidthChange={setCornerWidth}\n        onCornerHeightChange={setCornerHeight}\n      >\n        <Primitive.div\n          dir={direction}\n          {...scrollAreaProps}\n          ref={composedRefs}\n          style={{\n            position: 'relative',\n            // Pass corner sizes as CSS vars to reduce re-renders of context consumers\n            ['--radix-scroll-area-corner-width' as any]: cornerWidth + 'px',\n            ['--radix-scroll-area-corner-height' as any]: cornerHeight + 'px',\n            ...props.style,\n          }}\n        />\n      </ScrollAreaProvider>\n    );\n  }\n);\n\nScrollArea.displayName = SCROLL_AREA_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaViewport\n * -----------------------------------------------------------------------------------------------*/\n\nconst VIEWPORT_NAME = 'ScrollAreaViewport';\n\ntype ScrollAreaViewportElement = React.ElementRef<typeof Primitive.div>;\ninterface ScrollAreaViewportProps extends PrimitiveDivProps {\n  nonce?: string;\n}\n\nconst ScrollAreaViewport = React.forwardRef<ScrollAreaViewportElement, ScrollAreaViewportProps>(\n  (props: ScopedProps<ScrollAreaViewportProps>, forwardedRef) => {\n    const { __scopeScrollArea, children, nonce, ...viewportProps } = props;\n    const context = useScrollAreaContext(VIEWPORT_NAME, __scopeScrollArea);\n    const ref = React.useRef<ScrollAreaViewportElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref, context.onViewportChange);\n    return (\n      <>\n        {/* Hide scrollbars cross-browser and enable momentum scroll for touch devices */}\n        <style\n          dangerouslySetInnerHTML={{\n            __html: `[data-radix-scroll-area-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-scroll-area-viewport]::-webkit-scrollbar{display:none}`,\n          }}\n          nonce={nonce}\n        />\n        <Primitive.div\n          data-radix-scroll-area-viewport=\"\"\n          {...viewportProps}\n          ref={composedRefs}\n          style={{\n            /**\n             * We don't support `visible` because the intention is to have at least one scrollbar\n             * if this component is used and `visible` will behave like `auto` in that case\n             * https://developer.mozilla.org/en-US/docs/Web/CSS/overflowed#description\n             *\n             * We don't handle `auto` because the intention is for the native implementation\n             * to be hidden if using this component. We just want to ensure the node is scrollable\n             * so could have used either `scroll` or `auto` here. We picked `scroll` to prevent\n             * the browser from having to work out whether to render native scrollbars or not,\n             * we tell it to with the intention of hiding them in CSS.\n             */\n            overflowX: context.scrollbarXEnabled ? 'scroll' : 'hidden',\n            overflowY: context.scrollbarYEnabled ? 'scroll' : 'hidden',\n            ...props.style,\n          }}\n        >\n          {/**\n           * `display: table` ensures our content div will match the size of its children in both\n           * horizontal and vertical axis so we can determine if scroll width/height changed and\n           * recalculate thumb sizes. This doesn't account for children with *percentage*\n           * widths that change. We'll wait to see what use-cases consumers come up with there\n           * before trying to resolve it.\n           */}\n          <div ref={context.onContentChange} style={{ minWidth: '100%', display: 'table' }}>\n            {children}\n          </div>\n        </Primitive.div>\n      </>\n    );\n  }\n);\n\nScrollAreaViewport.displayName = VIEWPORT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaScrollbar\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLLBAR_NAME = 'ScrollAreaScrollbar';\n\ntype ScrollAreaScrollbarElement = ScrollAreaScrollbarVisibleElement;\ninterface ScrollAreaScrollbarProps extends ScrollAreaScrollbarVisibleProps {\n  forceMount?: true;\n}\n\nconst ScrollAreaScrollbar = React.forwardRef<ScrollAreaScrollbarElement, ScrollAreaScrollbarProps>(\n  (props: ScopedProps<ScrollAreaScrollbarProps>, forwardedRef) => {\n    const { forceMount, ...scrollbarProps } = props;\n    const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n    const { onScrollbarXEnabledChange, onScrollbarYEnabledChange } = context;\n    const isHorizontal = props.orientation === 'horizontal';\n\n    React.useEffect(() => {\n      isHorizontal ? onScrollbarXEnabledChange(true) : onScrollbarYEnabledChange(true);\n      return () => {\n        isHorizontal ? onScrollbarXEnabledChange(false) : onScrollbarYEnabledChange(false);\n      };\n    }, [isHorizontal, onScrollbarXEnabledChange, onScrollbarYEnabledChange]);\n\n    return context.type === 'hover' ? (\n      <ScrollAreaScrollbarHover {...scrollbarProps} ref={forwardedRef} forceMount={forceMount} />\n    ) : context.type === 'scroll' ? (\n      <ScrollAreaScrollbarScroll {...scrollbarProps} ref={forwardedRef} forceMount={forceMount} />\n    ) : context.type === 'auto' ? (\n      <ScrollAreaScrollbarAuto {...scrollbarProps} ref={forwardedRef} forceMount={forceMount} />\n    ) : context.type === 'always' ? (\n      <ScrollAreaScrollbarVisible {...scrollbarProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nScrollAreaScrollbar.displayName = SCROLLBAR_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ScrollAreaScrollbarHoverElement = ScrollAreaScrollbarAutoElement;\ninterface ScrollAreaScrollbarHoverProps extends ScrollAreaScrollbarAutoProps {\n  forceMount?: true;\n}\n\nconst ScrollAreaScrollbarHover = React.forwardRef<\n  ScrollAreaScrollbarHoverElement,\n  ScrollAreaScrollbarHoverProps\n>((props: ScopedProps<ScrollAreaScrollbarHoverProps>, forwardedRef) => {\n  const { forceMount, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [visible, setVisible] = React.useState(false);\n\n  React.useEffect(() => {\n    const scrollArea = context.scrollArea;\n    let hideTimer = 0;\n    if (scrollArea) {\n      const handlePointerEnter = () => {\n        window.clearTimeout(hideTimer);\n        setVisible(true);\n      };\n      const handlePointerLeave = () => {\n        hideTimer = window.setTimeout(() => setVisible(false), context.scrollHideDelay);\n      };\n      scrollArea.addEventListener('pointerenter', handlePointerEnter);\n      scrollArea.addEventListener('pointerleave', handlePointerLeave);\n      return () => {\n        window.clearTimeout(hideTimer);\n        scrollArea.removeEventListener('pointerenter', handlePointerEnter);\n        scrollArea.removeEventListener('pointerleave', handlePointerLeave);\n      };\n    }\n  }, [context.scrollArea, context.scrollHideDelay]);\n\n  return (\n    <Presence present={forceMount || visible}>\n      <ScrollAreaScrollbarAuto\n        data-state={visible ? 'visible' : 'hidden'}\n        {...scrollbarProps}\n        ref={forwardedRef}\n      />\n    </Presence>\n  );\n});\n\ntype ScrollAreaScrollbarScrollElement = ScrollAreaScrollbarVisibleElement;\ninterface ScrollAreaScrollbarScrollProps extends ScrollAreaScrollbarVisibleProps {\n  forceMount?: true;\n}\n\nconst ScrollAreaScrollbarScroll = React.forwardRef<\n  ScrollAreaScrollbarScrollElement,\n  ScrollAreaScrollbarScrollProps\n>((props: ScopedProps<ScrollAreaScrollbarScrollProps>, forwardedRef) => {\n  const { forceMount, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const isHorizontal = props.orientation === 'horizontal';\n  const debounceScrollEnd = useDebounceCallback(() => send('SCROLL_END'), 100);\n  const [state, send] = useStateMachine('hidden', {\n    hidden: {\n      SCROLL: 'scrolling',\n    },\n    scrolling: {\n      SCROLL_END: 'idle',\n      POINTER_ENTER: 'interacting',\n    },\n    interacting: {\n      SCROLL: 'interacting',\n      POINTER_LEAVE: 'idle',\n    },\n    idle: {\n      HIDE: 'hidden',\n      SCROLL: 'scrolling',\n      POINTER_ENTER: 'interacting',\n    },\n  });\n\n  React.useEffect(() => {\n    if (state === 'idle') {\n      const hideTimer = window.setTimeout(() => send('HIDE'), context.scrollHideDelay);\n      return () => window.clearTimeout(hideTimer);\n    }\n  }, [state, context.scrollHideDelay, send]);\n\n  React.useEffect(() => {\n    const viewport = context.viewport;\n    const scrollDirection = isHorizontal ? 'scrollLeft' : 'scrollTop';\n\n    if (viewport) {\n      let prevScrollPos = viewport[scrollDirection];\n      const handleScroll = () => {\n        const scrollPos = viewport[scrollDirection];\n        const hasScrollInDirectionChanged = prevScrollPos !== scrollPos;\n        if (hasScrollInDirectionChanged) {\n          send('SCROLL');\n          debounceScrollEnd();\n        }\n        prevScrollPos = scrollPos;\n      };\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n  }, [context.viewport, isHorizontal, send, debounceScrollEnd]);\n\n  return (\n    <Presence present={forceMount || state !== 'hidden'}>\n      <ScrollAreaScrollbarVisible\n        data-state={state === 'hidden' ? 'hidden' : 'visible'}\n        {...scrollbarProps}\n        ref={forwardedRef}\n        onPointerEnter={composeEventHandlers(props.onPointerEnter, () => send('POINTER_ENTER'))}\n        onPointerLeave={composeEventHandlers(props.onPointerLeave, () => send('POINTER_LEAVE'))}\n      />\n    </Presence>\n  );\n});\n\ntype ScrollAreaScrollbarAutoElement = ScrollAreaScrollbarVisibleElement;\ninterface ScrollAreaScrollbarAutoProps extends ScrollAreaScrollbarVisibleProps {\n  forceMount?: true;\n}\n\nconst ScrollAreaScrollbarAuto = React.forwardRef<\n  ScrollAreaScrollbarAutoElement,\n  ScrollAreaScrollbarAutoProps\n>((props: ScopedProps<ScrollAreaScrollbarAutoProps>, forwardedRef) => {\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const { forceMount, ...scrollbarProps } = props;\n  const [visible, setVisible] = React.useState(false);\n  const isHorizontal = props.orientation === 'horizontal';\n  const handleResize = useDebounceCallback(() => {\n    if (context.viewport) {\n      const isOverflowX = context.viewport.offsetWidth < context.viewport.scrollWidth;\n      const isOverflowY = context.viewport.offsetHeight < context.viewport.scrollHeight;\n      setVisible(isHorizontal ? isOverflowX : isOverflowY);\n    }\n  }, 10);\n\n  useResizeObserver(context.viewport, handleResize);\n  useResizeObserver(context.content, handleResize);\n\n  return (\n    <Presence present={forceMount || visible}>\n      <ScrollAreaScrollbarVisible\n        data-state={visible ? 'visible' : 'hidden'}\n        {...scrollbarProps}\n        ref={forwardedRef}\n      />\n    </Presence>\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ScrollAreaScrollbarVisibleElement = ScrollAreaScrollbarAxisElement;\ninterface ScrollAreaScrollbarVisibleProps\n  extends Omit<ScrollAreaScrollbarAxisProps, keyof ScrollAreaScrollbarAxisPrivateProps> {\n  orientation?: 'horizontal' | 'vertical';\n}\n\nconst ScrollAreaScrollbarVisible = React.forwardRef<\n  ScrollAreaScrollbarVisibleElement,\n  ScrollAreaScrollbarVisibleProps\n>((props: ScopedProps<ScrollAreaScrollbarVisibleProps>, forwardedRef) => {\n  const { orientation = 'vertical', ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const thumbRef = React.useRef<ScrollAreaThumbElement | null>(null);\n  const pointerOffsetRef = React.useRef(0);\n  const [sizes, setSizes] = React.useState<Sizes>({\n    content: 0,\n    viewport: 0,\n    scrollbar: { size: 0, paddingStart: 0, paddingEnd: 0 },\n  });\n  const thumbRatio = getThumbRatio(sizes.viewport, sizes.content);\n\n  type UncommonProps = 'onThumbPositionChange' | 'onDragScroll' | 'onWheelScroll';\n  const commonProps: Omit<ScrollAreaScrollbarAxisPrivateProps, UncommonProps> = {\n    ...scrollbarProps,\n    sizes,\n    onSizesChange: setSizes,\n    hasThumb: Boolean(thumbRatio > 0 && thumbRatio < 1),\n    onThumbChange: (thumb) => (thumbRef.current = thumb),\n    onThumbPointerUp: () => (pointerOffsetRef.current = 0),\n    onThumbPointerDown: (pointerPos) => (pointerOffsetRef.current = pointerPos),\n  };\n\n  function getScrollPosition(pointerPos: number, dir?: Direction) {\n    return getScrollPositionFromPointer(pointerPos, pointerOffsetRef.current, sizes, dir);\n  }\n\n  if (orientation === 'horizontal') {\n    return (\n      <ScrollAreaScrollbarX\n        {...commonProps}\n        ref={forwardedRef}\n        onThumbPositionChange={() => {\n          if (context.viewport && thumbRef.current) {\n            const scrollPos = context.viewport.scrollLeft;\n            const offset = getThumbOffsetFromScroll(scrollPos, sizes, context.dir);\n            thumbRef.current.style.transform = `translate3d(${offset}px, 0, 0)`;\n          }\n        }}\n        onWheelScroll={(scrollPos) => {\n          if (context.viewport) context.viewport.scrollLeft = scrollPos;\n        }}\n        onDragScroll={(pointerPos) => {\n          if (context.viewport) {\n            context.viewport.scrollLeft = getScrollPosition(pointerPos, context.dir);\n          }\n        }}\n      />\n    );\n  }\n\n  if (orientation === 'vertical') {\n    return (\n      <ScrollAreaScrollbarY\n        {...commonProps}\n        ref={forwardedRef}\n        onThumbPositionChange={() => {\n          if (context.viewport && thumbRef.current) {\n            const scrollPos = context.viewport.scrollTop;\n            const offset = getThumbOffsetFromScroll(scrollPos, sizes);\n            thumbRef.current.style.transform = `translate3d(0, ${offset}px, 0)`;\n          }\n        }}\n        onWheelScroll={(scrollPos) => {\n          if (context.viewport) context.viewport.scrollTop = scrollPos;\n        }}\n        onDragScroll={(pointerPos) => {\n          if (context.viewport) context.viewport.scrollTop = getScrollPosition(pointerPos);\n        }}\n      />\n    );\n  }\n\n  return null;\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ScrollAreaScrollbarAxisPrivateProps = {\n  hasThumb: boolean;\n  sizes: Sizes;\n  onSizesChange(sizes: Sizes): void;\n  onThumbChange(thumb: ScrollAreaThumbElement | null): void;\n  onThumbPointerDown(pointerPos: number): void;\n  onThumbPointerUp(): void;\n  onThumbPositionChange(): void;\n  onWheelScroll(scrollPos: number): void;\n  onDragScroll(pointerPos: number): void;\n};\n\ntype ScrollAreaScrollbarAxisElement = ScrollAreaScrollbarImplElement;\ninterface ScrollAreaScrollbarAxisProps\n  extends Omit<ScrollAreaScrollbarImplProps, keyof ScrollAreaScrollbarImplPrivateProps>,\n    ScrollAreaScrollbarAxisPrivateProps {}\n\nconst ScrollAreaScrollbarX = React.forwardRef<\n  ScrollAreaScrollbarAxisElement,\n  ScrollAreaScrollbarAxisProps\n>((props: ScopedProps<ScrollAreaScrollbarAxisProps>, forwardedRef) => {\n  const { sizes, onSizesChange, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [computedStyle, setComputedStyle] = React.useState<CSSStyleDeclaration>();\n  const ref = React.useRef<ScrollAreaScrollbarAxisElement>(null);\n  const composeRefs = useComposedRefs(forwardedRef, ref, context.onScrollbarXChange);\n\n  React.useEffect(() => {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n\n  return (\n    <ScrollAreaScrollbarImpl\n      data-orientation=\"horizontal\"\n      {...scrollbarProps}\n      ref={composeRefs}\n      sizes={sizes}\n      style={{\n        bottom: 0,\n        left: context.dir === 'rtl' ? 'var(--radix-scroll-area-corner-width)' : 0,\n        right: context.dir === 'ltr' ? 'var(--radix-scroll-area-corner-width)' : 0,\n        ['--radix-scroll-area-thumb-width' as any]: getThumbSize(sizes) + 'px',\n        ...props.style,\n      }}\n      onThumbPointerDown={(pointerPos) => props.onThumbPointerDown(pointerPos.x)}\n      onDragScroll={(pointerPos) => props.onDragScroll(pointerPos.x)}\n      onWheelScroll={(event, maxScrollPos) => {\n        if (context.viewport) {\n          const scrollPos = context.viewport.scrollLeft + event.deltaX;\n          props.onWheelScroll(scrollPos);\n          // prevent window scroll when wheeling on scrollbar\n          if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n            event.preventDefault();\n          }\n        }\n      }}\n      onResize={() => {\n        if (ref.current && context.viewport && computedStyle) {\n          onSizesChange({\n            content: context.viewport.scrollWidth,\n            viewport: context.viewport.offsetWidth,\n            scrollbar: {\n              size: ref.current.clientWidth,\n              paddingStart: toInt(computedStyle.paddingLeft),\n              paddingEnd: toInt(computedStyle.paddingRight),\n            },\n          });\n        }\n      }}\n    />\n  );\n});\n\nconst ScrollAreaScrollbarY = React.forwardRef<\n  ScrollAreaScrollbarAxisElement,\n  ScrollAreaScrollbarAxisProps\n>((props: ScopedProps<ScrollAreaScrollbarAxisProps>, forwardedRef) => {\n  const { sizes, onSizesChange, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [computedStyle, setComputedStyle] = React.useState<CSSStyleDeclaration>();\n  const ref = React.useRef<ScrollAreaScrollbarAxisElement>(null);\n  const composeRefs = useComposedRefs(forwardedRef, ref, context.onScrollbarYChange);\n\n  React.useEffect(() => {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n\n  return (\n    <ScrollAreaScrollbarImpl\n      data-orientation=\"vertical\"\n      {...scrollbarProps}\n      ref={composeRefs}\n      sizes={sizes}\n      style={{\n        top: 0,\n        right: context.dir === 'ltr' ? 0 : undefined,\n        left: context.dir === 'rtl' ? 0 : undefined,\n        bottom: 'var(--radix-scroll-area-corner-height)',\n        ['--radix-scroll-area-thumb-height' as any]: getThumbSize(sizes) + 'px',\n        ...props.style,\n      }}\n      onThumbPointerDown={(pointerPos) => props.onThumbPointerDown(pointerPos.y)}\n      onDragScroll={(pointerPos) => props.onDragScroll(pointerPos.y)}\n      onWheelScroll={(event, maxScrollPos) => {\n        if (context.viewport) {\n          const scrollPos = context.viewport.scrollTop + event.deltaY;\n          props.onWheelScroll(scrollPos);\n          // prevent window scroll when wheeling on scrollbar\n          if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n            event.preventDefault();\n          }\n        }\n      }}\n      onResize={() => {\n        if (ref.current && context.viewport && computedStyle) {\n          onSizesChange({\n            content: context.viewport.scrollHeight,\n            viewport: context.viewport.offsetHeight,\n            scrollbar: {\n              size: ref.current.clientHeight,\n              paddingStart: toInt(computedStyle.paddingTop),\n              paddingEnd: toInt(computedStyle.paddingBottom),\n            },\n          });\n        }\n      }}\n    />\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ScrollbarContext = {\n  hasThumb: boolean;\n  scrollbar: ScrollAreaScrollbarElement | null;\n  onThumbChange(thumb: ScrollAreaThumbElement | null): void;\n  onThumbPointerUp(): void;\n  onThumbPointerDown(pointerPos: { x: number; y: number }): void;\n  onThumbPositionChange(): void;\n};\n\nconst [ScrollbarProvider, useScrollbarContext] =\n  createScrollAreaContext<ScrollbarContext>(SCROLLBAR_NAME);\n\ntype ScrollAreaScrollbarImplElement = React.ElementRef<typeof Primitive.div>;\ntype ScrollAreaScrollbarImplPrivateProps = {\n  sizes: Sizes;\n  hasThumb: boolean;\n  onThumbChange: ScrollbarContext['onThumbChange'];\n  onThumbPointerUp: ScrollbarContext['onThumbPointerUp'];\n  onThumbPointerDown: ScrollbarContext['onThumbPointerDown'];\n  onThumbPositionChange: ScrollbarContext['onThumbPositionChange'];\n  onWheelScroll(event: WheelEvent, maxScrollPos: number): void;\n  onDragScroll(pointerPos: { x: number; y: number }): void;\n  onResize(): void;\n};\ninterface ScrollAreaScrollbarImplProps\n  extends Omit<PrimitiveDivProps, keyof ScrollAreaScrollbarImplPrivateProps>,\n    ScrollAreaScrollbarImplPrivateProps {}\n\nconst ScrollAreaScrollbarImpl = React.forwardRef<\n  ScrollAreaScrollbarImplElement,\n  ScrollAreaScrollbarImplProps\n>((props: ScopedProps<ScrollAreaScrollbarImplProps>, forwardedRef) => {\n  const {\n    __scopeScrollArea,\n    sizes,\n    hasThumb,\n    onThumbChange,\n    onThumbPointerUp,\n    onThumbPointerDown,\n    onThumbPositionChange,\n    onDragScroll,\n    onWheelScroll,\n    onResize,\n    ...scrollbarProps\n  } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, __scopeScrollArea);\n  const [scrollbar, setScrollbar] = React.useState<ScrollAreaScrollbarElement | null>(null);\n  const composeRefs = useComposedRefs(forwardedRef, (node) => setScrollbar(node));\n  const rectRef = React.useRef<ClientRect | null>(null);\n  const prevWebkitUserSelectRef = React.useRef<string>('');\n  const viewport = context.viewport;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const handleWheelScroll = useCallbackRef(onWheelScroll);\n  const handleThumbPositionChange = useCallbackRef(onThumbPositionChange);\n  const handleResize = useDebounceCallback(onResize, 10);\n\n  function handleDragScroll(event: React.PointerEvent<HTMLElement>) {\n    if (rectRef.current) {\n      const x = event.clientX - rectRef.current.left;\n      const y = event.clientY - rectRef.current.top;\n      onDragScroll({ x, y });\n    }\n  }\n\n  /**\n   * We bind wheel event imperatively so we can switch off passive\n   * mode for document wheel event to allow it to be prevented\n   */\n  React.useEffect(() => {\n    const handleWheel = (event: WheelEvent) => {\n      const element = event.target as HTMLElement;\n      const isScrollbarWheel = scrollbar?.contains(element);\n      if (isScrollbarWheel) handleWheelScroll(event, maxScrollPos);\n    };\n    document.addEventListener('wheel', handleWheel, { passive: false });\n    return () => document.removeEventListener('wheel', handleWheel, { passive: false } as any);\n  }, [viewport, scrollbar, maxScrollPos, handleWheelScroll]);\n\n  /**\n   * Update thumb position on sizes change\n   */\n  React.useEffect(handleThumbPositionChange, [sizes, handleThumbPositionChange]);\n\n  useResizeObserver(scrollbar, handleResize);\n  useResizeObserver(context.content, handleResize);\n\n  return (\n    <ScrollbarProvider\n      scope={__scopeScrollArea}\n      scrollbar={scrollbar}\n      hasThumb={hasThumb}\n      onThumbChange={useCallbackRef(onThumbChange)}\n      onThumbPointerUp={useCallbackRef(onThumbPointerUp)}\n      onThumbPositionChange={handleThumbPositionChange}\n      onThumbPointerDown={useCallbackRef(onThumbPointerDown)}\n    >\n      <Primitive.div\n        {...scrollbarProps}\n        ref={composeRefs}\n        style={{ position: 'absolute', ...scrollbarProps.style }}\n        onPointerDown={composeEventHandlers(props.onPointerDown, (event) => {\n          const mainPointer = 0;\n          if (event.button === mainPointer) {\n            const element = event.target as HTMLElement;\n            element.setPointerCapture(event.pointerId);\n            rectRef.current = scrollbar!.getBoundingClientRect();\n            // pointer capture doesn't prevent text selection in Safari\n            // so we remove text selection manually when scrolling\n            prevWebkitUserSelectRef.current = document.body.style.webkitUserSelect;\n            document.body.style.webkitUserSelect = 'none';\n            if (context.viewport) context.viewport.style.scrollBehavior = 'auto';\n            handleDragScroll(event);\n          }\n        })}\n        onPointerMove={composeEventHandlers(props.onPointerMove, handleDragScroll)}\n        onPointerUp={composeEventHandlers(props.onPointerUp, (event) => {\n          const element = event.target as HTMLElement;\n          if (element.hasPointerCapture(event.pointerId)) {\n            element.releasePointerCapture(event.pointerId);\n          }\n          document.body.style.webkitUserSelect = prevWebkitUserSelectRef.current;\n          if (context.viewport) context.viewport.style.scrollBehavior = '';\n          rectRef.current = null;\n        })}\n      />\n    </ScrollbarProvider>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaThumb\n * -----------------------------------------------------------------------------------------------*/\n\nconst THUMB_NAME = 'ScrollAreaThumb';\n\ntype ScrollAreaThumbElement = ScrollAreaThumbImplElement;\ninterface ScrollAreaThumbProps extends ScrollAreaThumbImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst ScrollAreaThumb = React.forwardRef<ScrollAreaThumbElement, ScrollAreaThumbProps>(\n  (props: ScopedProps<ScrollAreaThumbProps>, forwardedRef) => {\n    const { forceMount, ...thumbProps } = props;\n    const scrollbarContext = useScrollbarContext(THUMB_NAME, props.__scopeScrollArea);\n    return (\n      <Presence present={forceMount || scrollbarContext.hasThumb}>\n        <ScrollAreaThumbImpl ref={forwardedRef} {...thumbProps} />\n      </Presence>\n    );\n  }\n);\n\ntype ScrollAreaThumbImplElement = React.ElementRef<typeof Primitive.div>;\ninterface ScrollAreaThumbImplProps extends PrimitiveDivProps {}\n\nconst ScrollAreaThumbImpl = React.forwardRef<ScrollAreaThumbImplElement, ScrollAreaThumbImplProps>(\n  (props: ScopedProps<ScrollAreaThumbImplProps>, forwardedRef) => {\n    const { __scopeScrollArea, style, ...thumbProps } = props;\n    const scrollAreaContext = useScrollAreaContext(THUMB_NAME, __scopeScrollArea);\n    const scrollbarContext = useScrollbarContext(THUMB_NAME, __scopeScrollArea);\n    const { onThumbPositionChange } = scrollbarContext;\n    const composedRef = useComposedRefs(forwardedRef, (node) =>\n      scrollbarContext.onThumbChange(node)\n    );\n    const removeUnlinkedScrollListenerRef = React.useRef<() => void>();\n    const debounceScrollEnd = useDebounceCallback(() => {\n      if (removeUnlinkedScrollListenerRef.current) {\n        removeUnlinkedScrollListenerRef.current();\n        removeUnlinkedScrollListenerRef.current = undefined;\n      }\n    }, 100);\n\n    React.useEffect(() => {\n      const viewport = scrollAreaContext.viewport;\n      if (viewport) {\n        /**\n         * We only bind to native scroll event so we know when scroll starts and ends.\n         * When scroll starts we start a requestAnimationFrame loop that checks for\n         * changes to scroll position. That rAF loop triggers our thumb position change\n         * when relevant to avoid scroll-linked effects. We cancel the loop when scroll ends.\n         * https://developer.mozilla.org/en-US/docs/Mozilla/Performance/Scroll-linked_effects\n         */\n        const handleScroll = () => {\n          debounceScrollEnd();\n          if (!removeUnlinkedScrollListenerRef.current) {\n            const listener = addUnlinkedScrollListener(viewport, onThumbPositionChange);\n            removeUnlinkedScrollListenerRef.current = listener;\n            onThumbPositionChange();\n          }\n        };\n        onThumbPositionChange();\n        viewport.addEventListener('scroll', handleScroll);\n        return () => viewport.removeEventListener('scroll', handleScroll);\n      }\n    }, [scrollAreaContext.viewport, debounceScrollEnd, onThumbPositionChange]);\n\n    return (\n      <Primitive.div\n        data-state={scrollbarContext.hasThumb ? 'visible' : 'hidden'}\n        {...thumbProps}\n        ref={composedRef}\n        style={{\n          width: 'var(--radix-scroll-area-thumb-width)',\n          height: 'var(--radix-scroll-area-thumb-height)',\n          ...style,\n        }}\n        onPointerDownCapture={composeEventHandlers(props.onPointerDownCapture, (event) => {\n          const thumb = event.target as HTMLElement;\n          const thumbRect = thumb.getBoundingClientRect();\n          const x = event.clientX - thumbRect.left;\n          const y = event.clientY - thumbRect.top;\n          scrollbarContext.onThumbPointerDown({ x, y });\n        })}\n        onPointerUp={composeEventHandlers(props.onPointerUp, scrollbarContext.onThumbPointerUp)}\n      />\n    );\n  }\n);\n\nScrollAreaThumb.displayName = THUMB_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaCorner\n * -----------------------------------------------------------------------------------------------*/\n\nconst CORNER_NAME = 'ScrollAreaCorner';\n\ntype ScrollAreaCornerElement = ScrollAreaCornerImplElement;\ninterface ScrollAreaCornerProps extends ScrollAreaCornerImplProps {}\n\nconst ScrollAreaCorner = React.forwardRef<ScrollAreaCornerElement, ScrollAreaCornerProps>(\n  (props: ScopedProps<ScrollAreaCornerProps>, forwardedRef) => {\n    const context = useScrollAreaContext(CORNER_NAME, props.__scopeScrollArea);\n    const hasBothScrollbarsVisible = Boolean(context.scrollbarX && context.scrollbarY);\n    const hasCorner = context.type !== 'scroll' && hasBothScrollbarsVisible;\n    return hasCorner ? <ScrollAreaCornerImpl {...props} ref={forwardedRef} /> : null;\n  }\n);\n\nScrollAreaCorner.displayName = CORNER_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ScrollAreaCornerImplElement = React.ElementRef<typeof Primitive.div>;\ninterface ScrollAreaCornerImplProps extends PrimitiveDivProps {}\n\nconst ScrollAreaCornerImpl = React.forwardRef<\n  ScrollAreaCornerImplElement,\n  ScrollAreaCornerImplProps\n>((props: ScopedProps<ScrollAreaCornerImplProps>, forwardedRef) => {\n  const { __scopeScrollArea, ...cornerProps } = props;\n  const context = useScrollAreaContext(CORNER_NAME, __scopeScrollArea);\n  const [width, setWidth] = React.useState(0);\n  const [height, setHeight] = React.useState(0);\n  const hasSize = Boolean(width && height);\n\n  useResizeObserver(context.scrollbarX, () => {\n    const height = context.scrollbarX?.offsetHeight || 0;\n    context.onCornerHeightChange(height);\n    setHeight(height);\n  });\n\n  useResizeObserver(context.scrollbarY, () => {\n    const width = context.scrollbarY?.offsetWidth || 0;\n    context.onCornerWidthChange(width);\n    setWidth(width);\n  });\n\n  return hasSize ? (\n    <Primitive.div\n      {...cornerProps}\n      ref={forwardedRef}\n      style={{\n        width,\n        height,\n        position: 'absolute',\n        right: context.dir === 'ltr' ? 0 : undefined,\n        left: context.dir === 'rtl' ? 0 : undefined,\n        bottom: 0,\n        ...props.style,\n      }}\n    />\n  ) : null;\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction toInt(value?: string) {\n  return value ? parseInt(value, 10) : 0;\n}\n\nfunction getThumbRatio(viewportSize: number, contentSize: number) {\n  const ratio = viewportSize / contentSize;\n  return isNaN(ratio) ? 0 : ratio;\n}\n\nfunction getThumbSize(sizes: Sizes) {\n  const ratio = getThumbRatio(sizes.viewport, sizes.content);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const thumbSize = (sizes.scrollbar.size - scrollbarPadding) * ratio;\n  // minimum of 18 matches macOS minimum\n  return Math.max(thumbSize, 18);\n}\n\nfunction getScrollPositionFromPointer(\n  pointerPos: number,\n  pointerOffset: number,\n  sizes: Sizes,\n  dir: Direction = 'ltr'\n) {\n  const thumbSizePx = getThumbSize(sizes);\n  const thumbCenter = thumbSizePx / 2;\n  const offset = pointerOffset || thumbCenter;\n  const thumbOffsetFromEnd = thumbSizePx - offset;\n  const minPointerPos = sizes.scrollbar.paddingStart + offset;\n  const maxPointerPos = sizes.scrollbar.size - sizes.scrollbar.paddingEnd - thumbOffsetFromEnd;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const scrollRange = dir === 'ltr' ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const interpolate = linearScale([minPointerPos, maxPointerPos], scrollRange as [number, number]);\n  return interpolate(pointerPos);\n}\n\nfunction getThumbOffsetFromScroll(scrollPos: number, sizes: Sizes, dir: Direction = 'ltr') {\n  const thumbSizePx = getThumbSize(sizes);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const scrollbar = sizes.scrollbar.size - scrollbarPadding;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const maxThumbPos = scrollbar - thumbSizePx;\n  const scrollClampRange = dir === 'ltr' ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const scrollWithoutMomentum = clamp(scrollPos, scrollClampRange as [number, number]);\n  const interpolate = linearScale([0, maxScrollPos], [0, maxThumbPos]);\n  return interpolate(scrollWithoutMomentum);\n}\n\n// https://github.com/tmcw-up-for-adoption/simple-linear-scale/blob/master/index.js\nfunction linearScale(input: readonly [number, number], output: readonly [number, number]) {\n  return (value: number) => {\n    if (input[0] === input[1] || output[0] === output[1]) return output[0];\n    const ratio = (output[1] - output[0]) / (input[1] - input[0]);\n    return output[0] + ratio * (value - input[0]);\n  };\n}\n\nfunction isScrollingWithinScrollbarBounds(scrollPos: number, maxScrollPos: number) {\n  return scrollPos > 0 && scrollPos < maxScrollPos;\n}\n\n// Custom scroll handler to avoid scroll-linked effects\n// https://developer.mozilla.org/en-US/docs/Mozilla/Performance/Scroll-linked_effects\nconst addUnlinkedScrollListener = (node: HTMLElement, handler = () => {}) => {\n  let prevPosition = { left: node.scrollLeft, top: node.scrollTop };\n  let rAF = 0;\n  (function loop() {\n    const position = { left: node.scrollLeft, top: node.scrollTop };\n    const isHorizontalScroll = prevPosition.left !== position.left;\n    const isVerticalScroll = prevPosition.top !== position.top;\n    if (isHorizontalScroll || isVerticalScroll) handler();\n    prevPosition = position;\n    rAF = window.requestAnimationFrame(loop);\n  })();\n  return () => window.cancelAnimationFrame(rAF);\n};\n\nfunction useDebounceCallback(callback: () => void, delay: number) {\n  const handleCallback = useCallbackRef(callback);\n  const debounceTimerRef = React.useRef(0);\n  React.useEffect(() => () => window.clearTimeout(debounceTimerRef.current), []);\n  return React.useCallback(() => {\n    window.clearTimeout(debounceTimerRef.current);\n    debounceTimerRef.current = window.setTimeout(handleCallback, delay);\n  }, [handleCallback, delay]);\n}\n\nfunction useResizeObserver(element: HTMLElement | null, onResize: () => void) {\n  const handleResize = useCallbackRef(onResize);\n  useLayoutEffect(() => {\n    let rAF = 0;\n    if (element) {\n      /**\n       * Resize Observer will throw an often benign error that says `ResizeObserver loop\n       * completed with undelivered notifications`. This means that ResizeObserver was not\n       * able to deliver all observations within a single animation frame, so we use\n       * `requestAnimationFrame` to ensure we don't deliver unnecessary observations.\n       * Further reading: https://github.com/WICG/resize-observer/issues/38\n       */\n      const resizeObserver = new ResizeObserver(() => {\n        cancelAnimationFrame(rAF);\n        rAF = window.requestAnimationFrame(handleResize);\n      });\n      resizeObserver.observe(element);\n      return () => {\n        window.cancelAnimationFrame(rAF);\n        resizeObserver.unobserve(element);\n      };\n    }\n  }, [element, handleResize]);\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = ScrollArea;\nconst Viewport = ScrollAreaViewport;\nconst Scrollbar = ScrollAreaScrollbar;\nconst Thumb = ScrollAreaThumb;\nconst Corner = ScrollAreaCorner;\n\nexport {\n  createScrollAreaScope,\n  //\n  ScrollArea,\n  ScrollAreaViewport,\n  ScrollAreaScrollbar,\n  ScrollAreaThumb,\n  ScrollAreaCorner,\n  //\n  Root,\n  Viewport,\n  Scrollbar,\n  Thumb,\n  Corner,\n};\nexport type {\n  ScrollAreaProps,\n  ScrollAreaViewportProps,\n  ScrollAreaScrollbarProps,\n  ScrollAreaThumbProps,\n  ScrollAreaCornerProps,\n};\n", "import * as React from 'react';\n\ntype Machine<S> = { [k: string]: { [k: string]: S } };\ntype MachineState<T> = keyof T;\ntype MachineEvent<T> = keyof UnionToIntersection<T[keyof T]>;\n\n// \uD83E\uDD2F https://fettblog.eu/typescript-union-to-intersection/\ntype UnionToIntersection<T> = (T extends any ? (x: T) => any : never) extends (x: infer R) => any\n  ? R\n  : never;\n\nexport function useStateMachine<M>(\n  initialState: MachineState<M>,\n  machine: M & Machine<MachineState<M>>\n) {\n  return React.useReducer((state: MachineState<M>, event: MachineEvent<M>): MachineState<M> => {\n    const nextState = (machine[state] as any)[event];\n    return nextState ?? state;\n  }, initialState);\n}\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { radiusPropDef } from '../props/radius.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst scrollbarsValues = ['vertical', 'horizontal', 'both'] as const;\n\nconst scrollAreaPropDefs = {\n  ...asChildPropDef,\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '1', responsive: true },\n  ...radiusPropDef,\n  scrollbars: { type: 'enum', values: scrollbarsValues, default: 'both' },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  scrollbars: PropDef<(typeof scrollbarsValues)[number]>;\n};\n\nexport { scrollAreaPropDefs };\n", "import type { MarginProps } from '../props/margin.props.js';\n\nexport function extractMarginProps<T extends MarginProps>(props: T) {\n  const { m, mx, my, mt, mr, mb, ml, ...rest } = props;\n  return { m, mx, my, mt, mr, mb, ml, rest };\n}\n", "import classNames from 'classnames';\n\nimport { getResponsiveStyles } from './get-responsive-styles.js';\nimport { mergeStyles } from './merge-styles.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\n\nconst marginValues = marginPropDefs.m.values;\n\nexport function getMarginStyles(props: MarginProps) {\n  const [mClassNames, mCustomProperties] = getResponsiveStyles({\n    className: 'rt-r-m',\n    customProperties: ['--margin'],\n    propValues: marginValues,\n    value: props.m,\n  });\n\n  const [mxClassNames, mxCustomProperties] = getResponsiveStyles({\n    className: 'rt-r-mx',\n    customProperties: ['--margin-left', '--margin-right'],\n    propValues: marginValues,\n    value: props.mx,\n  });\n\n  const [myClassNames, myCustomProperties] = getResponsiveStyles({\n    className: 'rt-r-my',\n    customProperties: ['--margin-top', '--margin-bottom'],\n    propValues: marginValues,\n    value: props.my,\n  });\n\n  const [mtClassNames, mtCustomProperties] = getResponsiveStyles({\n    className: 'rt-r-mt',\n    customProperties: ['--margin-top'],\n    propValues: marginValues,\n    value: props.mt,\n  });\n\n  const [mrClassNames, mrCustomProperties] = getResponsiveStyles({\n    className: 'rt-r-mr',\n    customProperties: ['--margin-right'],\n    propValues: marginValues,\n    value: props.mr,\n  });\n\n  const [mbClassNames, mbCustomProperties] = getResponsiveStyles({\n    className: 'rt-r-mb',\n    customProperties: ['--margin-bottom'],\n    propValues: marginValues,\n    value: props.mb,\n  });\n\n  const [mlClassNames, mlCustomProperties] = getResponsiveStyles({\n    className: 'rt-r-ml',\n    customProperties: ['--margin-left'],\n    propValues: marginValues,\n    value: props.ml,\n  });\n\n  return [\n    classNames(\n      mClassNames,\n      mxClassNames,\n      myClassNames,\n      mtClassNames,\n      mrClassNames,\n      mbClassNames,\n      mlClassNames\n    ),\n    mergeStyles(\n      mCustomProperties,\n      mxCustomProperties,\n      myCustomProperties,\n      mtCustomProperties,\n      mrCustomProperties,\n      mbCustomProperties,\n      mlCustomProperties\n    ),\n  ] as const;\n}\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport * as ScrollAreaPrimitive from '@radix-ui/react-scroll-area';\n\nimport { scrollAreaPropDefs } from './scroll-area.props.js';\nimport { extractMarginProps } from '../helpers/extract-margin-props.js';\nimport { getMarginStyles } from '../helpers/get-margin-styles.js';\nimport { getResponsiveClassNames } from '../helpers/get-responsive-styles.js';\nimport { getSubtree } from '../helpers/get-subtree.js';\nimport { mergeStyles } from '../helpers/merge-styles.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype ScrollAreaElement = React.ElementRef<typeof ScrollAreaPrimitive.Viewport>;\ntype ScrollAreaOwnProps = GetPropDefTypes<typeof scrollAreaPropDefs>;\ninterface ScrollAreaProps\n  extends ComponentPropsWithout<typeof ScrollAreaPrimitive.Root, RemovedProps>,\n    ComponentPropsWithout<typeof ScrollAreaPrimitive.Viewport, RemovedProps | 'dir'>,\n    MarginProps,\n    ScrollAreaOwnProps {}\nconst ScrollArea = React.forwardRef<ScrollAreaElement, ScrollAreaProps>((props, forwardedRef) => {\n  const { rest: marginRest, ...marginProps } = extractMarginProps(props);\n  const [marginClassNames, marginCustomProperties] = getMarginStyles(marginProps);\n\n  const {\n    asChild,\n    children,\n    className,\n    style,\n    type,\n    scrollHideDelay = type !== 'scroll' ? 0 : undefined,\n    dir,\n    size = scrollAreaPropDefs.size.default,\n    radius = scrollAreaPropDefs.radius.default,\n    scrollbars = scrollAreaPropDefs.scrollbars.default,\n    ...viewportProps\n  } = marginRest;\n\n  return (\n    <ScrollAreaPrimitive.Root\n      type={type}\n      scrollHideDelay={scrollHideDelay}\n      className={classNames('rt-ScrollAreaRoot', marginClassNames, className)}\n      style={mergeStyles(marginCustomProperties, style)}\n      asChild={asChild}\n    >\n      {getSubtree({ asChild, children }, (children) => (\n        <>\n          <ScrollAreaPrimitive.Viewport\n            {...viewportProps}\n            ref={forwardedRef}\n            className=\"rt-ScrollAreaViewport\"\n          >\n            {children}\n          </ScrollAreaPrimitive.Viewport>\n\n          <div className=\"rt-ScrollAreaViewportFocusRing\" />\n\n          {scrollbars !== 'vertical' ? (\n            <ScrollAreaPrimitive.Scrollbar\n              data-radius={radius}\n              orientation=\"horizontal\"\n              className={classNames(\n                'rt-ScrollAreaScrollbar',\n                getResponsiveClassNames({\n                  className: 'rt-r-size',\n                  value: size,\n                  propValues: scrollAreaPropDefs.size.values,\n                })\n              )}\n            >\n              <ScrollAreaPrimitive.Thumb className=\"rt-ScrollAreaThumb\" />\n            </ScrollAreaPrimitive.Scrollbar>\n          ) : null}\n\n          {scrollbars !== 'horizontal' ? (\n            <ScrollAreaPrimitive.Scrollbar\n              data-radius={radius}\n              orientation=\"vertical\"\n              className={classNames(\n                'rt-ScrollAreaScrollbar',\n                getResponsiveClassNames({\n                  className: 'rt-r-size',\n                  value: size,\n                  propValues: scrollAreaPropDefs.size.values,\n                })\n              )}\n            >\n              <ScrollAreaPrimitive.Thumb className=\"rt-ScrollAreaThumb\" />\n            </ScrollAreaPrimitive.Scrollbar>\n          ) : null}\n\n          {scrollbars === 'both' ? (\n            <ScrollAreaPrimitive.Corner className=\"rt-ScrollAreaCorner\" />\n          ) : null}\n        </>\n      ))}\n    </ScrollAreaPrimitive.Root>\n  );\n});\nScrollArea.displayName = 'ScrollArea';\n\nexport { ScrollArea };\nexport type { ScrollAreaProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { colorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst contentSizes = ['1', '2'] as const;\nconst contentVariants = ['solid', 'soft'] as const;\n\nconst baseMenuContentPropDefs = {\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: contentSizes,\n    default: '2',\n    responsive: true,\n  },\n  variant: {\n    type: 'enum',\n    className: 'rt-variant',\n    values: contentVariants,\n    default: 'solid',\n  },\n  ...colorPropDef,\n  ...highContrastPropDef,\n} satisfies {\n  size: PropDef<(typeof contentSizes)[number]>;\n  variant: PropDef<(typeof contentVariants)[number]>;\n};\n\nconst baseMenuItemPropDefs = {\n  ...asChildPropDef,\n  ...colorPropDef,\n  shortcut: { type: 'string' },\n} satisfies {\n  shortcut: PropDef<string>;\n};\n\nconst baseMenuCheckboxItemPropDefs = {\n  ...colorPropDef,\n  shortcut: { type: 'string' },\n} satisfies {\n  shortcut: PropDef<string>;\n};\n\nconst baseMenuRadioItemPropDefs = {\n  ...colorPropDef,\n};\n\nexport {\n  baseMenuContentPropDefs,\n  baseMenuItemPropDefs,\n  baseMenuCheckboxItemPropDefs,\n  baseMenuRadioItemPropDefs,\n};\n", "export {\n  baseMenuContentPropDefs as contextMenuContentPropDefs,\n  baseMenuItemPropDefs as contextMenuItemPropDefs,\n  baseMenuCheckboxItemPropDefs as contextMenuCheckboxItemPropDefs,\n  baseMenuRadioItemPropDefs as contextMenuRadioItemPropDefs,\n} from './base-menu.props.js';\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport * as ContextMenuPrimitive from '@radix-ui/react-context-menu';\nimport { Slottable } from '@radix-ui/react-slot';\n\nimport { ScrollArea } from './scroll-area.js';\nimport {\n  contextMenuContentPropDefs,\n  contextMenuItemPropDefs,\n  contextMenuCheckboxItemPropDefs,\n  contextMenuRadioItemPropDefs,\n} from './context-menu.props.js';\nimport { Theme, useThemeContext } from './theme.js';\nimport { ThickCheckIcon, ThickChevronRightIcon } from './icons.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { requireReactElement } from '../helpers/require-react-element.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ninterface ContextMenuRootProps\n  extends React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Root> {}\nconst ContextMenuRoot: React.FC<ContextMenuRootProps> = (props) => (\n  <ContextMenuPrimitive.Root {...props} />\n);\nContextMenuRoot.displayName = 'ContextMenu.Root';\n\ntype ContextMenuTriggerElement = React.ElementRef<typeof ContextMenuPrimitive.Trigger>;\ninterface ContextMenuTriggerProps\n  extends ComponentPropsWithout<typeof ContextMenuPrimitive.Trigger, RemovedProps> {}\nconst ContextMenuTrigger = React.forwardRef<ContextMenuTriggerElement, ContextMenuTriggerProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <ContextMenuPrimitive.Trigger {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </ContextMenuPrimitive.Trigger>\n  )\n);\nContextMenuTrigger.displayName = 'ContextMenu.Trigger';\n\ntype ContextMenuContentOwnProps = GetPropDefTypes<typeof contextMenuContentPropDefs>;\ntype ContextMenuContentContextValue = ContextMenuContentOwnProps;\nconst ContextMenuContentContext = React.createContext<ContextMenuContentContextValue>({});\ntype ContextMenuContentElement = React.ElementRef<typeof ContextMenuPrimitive.Content>;\ninterface ContextMenuContentProps\n  extends ComponentPropsWithout<typeof ContextMenuPrimitive.Content, RemovedProps>,\n    ContextMenuContentContextValue {\n  container?: React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Portal>['container'];\n}\nconst ContextMenuContent = React.forwardRef<ContextMenuContentElement, ContextMenuContentProps>(\n  (props, forwardedRef) => {\n    const themeContext = useThemeContext();\n    const {\n      size = contextMenuContentPropDefs.size.default,\n      variant = contextMenuContentPropDefs.variant.default,\n      highContrast = contextMenuContentPropDefs.highContrast.default,\n    } = props;\n    const { className, children, color, container, forceMount, ...contentProps } = extractProps(\n      props,\n      contextMenuContentPropDefs\n    );\n    const resolvedColor = color || themeContext.accentColor;\n    return (\n      <ContextMenuPrimitive.Portal container={container} forceMount={forceMount}>\n        <Theme asChild>\n          <ContextMenuPrimitive.Content\n            data-accent-color={resolvedColor}\n            alignOffset={-Number(size) * 4}\n            collisionPadding={10}\n            {...contentProps}\n            asChild={false}\n            ref={forwardedRef}\n            className={classNames(\n              'rt-PopperContent',\n              'rt-BaseMenuContent',\n              'rt-ContextMenuContent',\n              className\n            )}\n          >\n            <ScrollArea type=\"auto\">\n              <div className={classNames('rt-BaseMenuViewport', 'rt-ContextMenuViewport')}>\n                <ContextMenuContentContext.Provider\n                  value={React.useMemo(\n                    () => ({ size, variant, color: resolvedColor, highContrast }),\n                    [size, variant, resolvedColor, highContrast]\n                  )}\n                >\n                  {children}\n                </ContextMenuContentContext.Provider>\n              </div>\n            </ScrollArea>\n          </ContextMenuPrimitive.Content>\n        </Theme>\n      </ContextMenuPrimitive.Portal>\n    );\n  }\n);\nContextMenuContent.displayName = 'ContextMenu.Content';\n\ntype ContextMenuLabelElement = React.ElementRef<typeof ContextMenuPrimitive.Label>;\ninterface ContextMenuLabelProps\n  extends ComponentPropsWithout<typeof ContextMenuPrimitive.Label, RemovedProps> {}\nconst ContextMenuLabel = React.forwardRef<ContextMenuLabelElement, ContextMenuLabelProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <ContextMenuPrimitive.Label\n      {...props}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-BaseMenuLabel', 'rt-ContextMenuLabel', className)}\n    />\n  )\n);\nContextMenuLabel.displayName = 'ContextMenu.Label';\n\ntype ContextMenuItemElement = React.ElementRef<typeof ContextMenuPrimitive.Item>;\ntype ContextMenuItemOwnProps = GetPropDefTypes<typeof contextMenuItemPropDefs>;\ninterface ContextMenuItemProps\n  extends ComponentPropsWithout<typeof ContextMenuPrimitive.Item, RemovedProps>,\n    ContextMenuItemOwnProps {}\nconst ContextMenuItem = React.forwardRef<ContextMenuItemElement, ContextMenuItemProps>(\n  (props, forwardedRef) => {\n    const {\n      className,\n      children,\n      color = contextMenuItemPropDefs.color.default,\n      shortcut,\n      ...itemProps\n    } = props;\n    return (\n      <ContextMenuPrimitive.Item\n        data-accent-color={color}\n        {...itemProps}\n        ref={forwardedRef}\n        className={classNames('rt-reset', 'rt-BaseMenuItem', 'rt-ContextMenuItem', className)}\n      >\n        <Slottable>{children}</Slottable>\n        {shortcut && <div className=\"rt-BaseMenuShortcut rt-ContextMenuShortcut\">{shortcut}</div>}\n      </ContextMenuPrimitive.Item>\n    );\n  }\n);\nContextMenuItem.displayName = 'ContextMenu.Item';\n\ntype ContextMenuGroupElement = React.ElementRef<typeof ContextMenuPrimitive.Group>;\ninterface ContextMenuGroupProps\n  extends ComponentPropsWithout<typeof ContextMenuPrimitive.Group, RemovedProps> {}\nconst ContextMenuGroup = React.forwardRef<ContextMenuGroupElement, ContextMenuGroupProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <ContextMenuPrimitive.Group\n      {...props}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-BaseMenuGroup', 'rt-ContextMenuGroup', className)}\n    />\n  )\n);\nContextMenuGroup.displayName = 'ContextMenu.Group';\n\ntype ContextMenuRadioGroupElement = React.ElementRef<typeof ContextMenuPrimitive.RadioGroup>;\ninterface ContextMenuRadioGroupProps\n  extends ComponentPropsWithout<typeof ContextMenuPrimitive.RadioGroup, RemovedProps> {}\nconst ContextMenuRadioGroup = React.forwardRef<\n  ContextMenuRadioGroupElement,\n  ContextMenuRadioGroupProps\n>(({ className, ...props }, forwardedRef) => (\n  <ContextMenuPrimitive.RadioGroup\n    {...props}\n    asChild={false}\n    ref={forwardedRef}\n    className={classNames('rt-BaseMenuRadioGroup', 'rt-ContextMenuRadioGroup', className)}\n  />\n));\nContextMenuRadioGroup.displayName = 'ContextMenu.RadioGroup';\n\ntype ContextMenuRadioItemElement = React.ElementRef<typeof ContextMenuPrimitive.RadioItem>;\ntype ContextMenuRadioItemOwnProps = GetPropDefTypes<typeof contextMenuRadioItemPropDefs>;\ninterface ContextMenuRadioItemProps\n  extends ComponentPropsWithout<typeof ContextMenuPrimitive.RadioItem, RemovedProps>,\n    ContextMenuRadioItemOwnProps {}\nconst ContextMenuRadioItem = React.forwardRef<\n  ContextMenuRadioItemElement,\n  ContextMenuRadioItemProps\n>((props, forwardedRef) => {\n  const {\n    children,\n    className,\n    color = contextMenuRadioItemPropDefs.color.default,\n    ...itemProps\n  } = props;\n  return (\n    <ContextMenuPrimitive.RadioItem\n      {...itemProps}\n      asChild={false}\n      ref={forwardedRef}\n      data-accent-color={color}\n      className={classNames(\n        'rt-BaseMenuItem',\n        'rt-BaseMenuRadioItem',\n        'rt-ContextMenuItem',\n        'rt-ContextMenuRadioItem',\n        className\n      )}\n    >\n      <Slottable>{children}</Slottable>\n      <ContextMenuPrimitive.ItemIndicator className=\"rt-BaseMenuItemIndicator rt-ContextMenuItemIndicator\">\n        <ThickCheckIcon className=\"rt-BaseMenuItemIndicatorIcon rt-ContextMenuItemIndicatorIcon\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </ContextMenuPrimitive.RadioItem>\n  );\n});\nContextMenuRadioItem.displayName = 'ContextMenu.RadioItem';\n\ntype ContextMenuCheckboxItemElement = React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>;\ntype ContextMenuCheckboxItemOwnProps = GetPropDefTypes<typeof contextMenuCheckboxItemPropDefs>;\ninterface ContextMenuCheckboxItemProps\n  extends ComponentPropsWithout<typeof ContextMenuPrimitive.CheckboxItem, RemovedProps>,\n    ContextMenuCheckboxItemOwnProps {}\nconst ContextMenuCheckboxItem = React.forwardRef<\n  ContextMenuCheckboxItemElement,\n  ContextMenuCheckboxItemProps\n>((props, forwardedRef) => {\n  const {\n    children,\n    className,\n    shortcut,\n    color = contextMenuCheckboxItemPropDefs.color.default,\n    ...itemProps\n  } = props;\n  return (\n    <ContextMenuPrimitive.CheckboxItem\n      {...itemProps}\n      asChild={false}\n      ref={forwardedRef}\n      data-accent-color={color}\n      className={classNames(\n        'rt-BaseMenuItem',\n        'rt-BaseMenuCheckboxItem',\n        'rt-ContextMenuItem',\n        'rt-ContextMenuCheckboxItem',\n        className\n      )}\n    >\n      <Slottable>{children}</Slottable>\n      <ContextMenuPrimitive.ItemIndicator className=\"rt-BaseMenuItemIndicator rt-ContextMenuItemIndicator\">\n        <ThickCheckIcon className=\"rt-BaseMenuItemIndicatorIcon rt-ContextMenuItemIndicatorIcon\" />\n      </ContextMenuPrimitive.ItemIndicator>\n      {shortcut && <div className=\"rt-BaseMenuShortcut rt-ContextMenuShortcut\">{shortcut}</div>}\n    </ContextMenuPrimitive.CheckboxItem>\n  );\n});\nContextMenuCheckboxItem.displayName = 'ContextMenu.CheckboxItem';\n\ninterface ContextMenuSubProps\n  extends ComponentPropsWithout<typeof ContextMenuPrimitive.Sub, RemovedProps> {}\nconst ContextMenuSub: React.FC<ContextMenuSubProps> = (props) => (\n  <ContextMenuPrimitive.Sub {...props} />\n);\nContextMenuSub.displayName = 'ContextMenu.Sub';\n\ntype ContextMenuSubTriggerElement = React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>;\ninterface ContextMenuSubTriggerProps\n  extends ComponentPropsWithout<typeof ContextMenuPrimitive.SubTrigger, RemovedProps> {}\nconst ContextMenuSubTrigger = React.forwardRef<\n  ContextMenuSubTriggerElement,\n  ContextMenuSubTriggerProps\n>((props, forwardedRef) => {\n  const { className, children, ...subTriggerProps } = props;\n  return (\n    <ContextMenuPrimitive.SubTrigger\n      {...subTriggerProps}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames(\n        'rt-BaseMenuItem',\n        'rt-BaseMenuSubTrigger',\n        'rt-ContextMenuItem',\n        'rt-ContextMenuSubTrigger',\n        className\n      )}\n    >\n      {children}\n      <div className=\"rt-BaseMenuShortcut rt-ContextMenuShortcut\">\n        <ThickChevronRightIcon className=\"rt-BaseMenuSubTriggerIcon rt-ContextMenuSubTriggerIcon\" />\n      </div>\n    </ContextMenuPrimitive.SubTrigger>\n  );\n});\nContextMenuSubTrigger.displayName = 'ContextMenu.SubTrigger';\n\ntype ContextMenuSubContentElement = React.ElementRef<typeof ContextMenuPrimitive.SubContent>;\ninterface ContextMenuSubContentProps\n  extends ComponentPropsWithout<typeof ContextMenuPrimitive.SubContent, RemovedProps> {\n  container?: React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Portal>['container'];\n}\nconst ContextMenuSubContent = React.forwardRef<\n  ContextMenuSubContentElement,\n  ContextMenuSubContentProps\n>((props, forwardedRef) => {\n  const { size, variant, color, highContrast } = React.useContext(ContextMenuContentContext);\n  const { className, children, container, forceMount, ...subContentProps } = extractProps(\n    { size, variant, color, highContrast, ...props },\n    contextMenuContentPropDefs\n  );\n  return (\n    <ContextMenuPrimitive.Portal container={container} forceMount={forceMount}>\n      <Theme asChild>\n        <ContextMenuPrimitive.SubContent\n          data-accent-color={color}\n          alignOffset={-Number(size) * 4}\n          // Side offset accounts for the outer solid box-shadow\n          sideOffset={1}\n          collisionPadding={10}\n          {...subContentProps}\n          asChild={false}\n          ref={forwardedRef}\n          className={classNames(\n            'rt-PopperContent',\n            'rt-BaseMenuContent',\n            'rt-BaseMenuSubContent',\n            'rt-ContextMenuContent',\n            'rt-ContextMenuSubContent',\n            className\n          )}\n        >\n          <ScrollArea type=\"auto\">\n            <div className={classNames('rt-BaseMenuViewport', 'rt-ContextMenuViewport')}>\n              {children}\n            </div>\n          </ScrollArea>\n        </ContextMenuPrimitive.SubContent>\n      </Theme>\n    </ContextMenuPrimitive.Portal>\n  );\n});\nContextMenuSubContent.displayName = 'ContextMenu.SubContent';\n\ntype ContextMenuSeparatorElement = React.ElementRef<typeof ContextMenuPrimitive.Separator>;\ninterface ContextMenuSeparatorProps\n  extends ComponentPropsWithout<typeof ContextMenuPrimitive.Separator, RemovedProps> {}\nconst ContextMenuSeparator = React.forwardRef<\n  ContextMenuSeparatorElement,\n  ContextMenuSeparatorProps\n>(({ className, ...props }, forwardedRef) => (\n  <ContextMenuPrimitive.Separator\n    {...props}\n    asChild={false}\n    ref={forwardedRef}\n    className={classNames('rt-BaseMenuSeparator', 'rt-ContextMenuSeparator', className)}\n  />\n));\nContextMenuSeparator.displayName = 'ContextMenu.Separator';\n\nexport {\n  ContextMenuRoot as Root,\n  ContextMenuTrigger as Trigger,\n  ContextMenuContent as Content,\n  ContextMenuLabel as Label,\n  ContextMenuItem as Item,\n  ContextMenuGroup as Group,\n  ContextMenuRadioGroup as RadioGroup,\n  ContextMenuRadioItem as RadioItem,\n  ContextMenuCheckboxItem as CheckboxItem,\n  ContextMenuSub as Sub,\n  ContextMenuSubTrigger as SubTrigger,\n  ContextMenuSubContent as SubContent,\n  ContextMenuSeparator as Separator,\n};\n\nexport type {\n  ContextMenuRootProps as RootProps,\n  ContextMenuTriggerProps as TriggerProps,\n  ContextMenuContentProps as ContentProps,\n  ContextMenuLabelProps as LabelProps,\n  ContextMenuItemProps as ItemProps,\n  ContextMenuGroupProps as GroupProps,\n  ContextMenuRadioGroupProps as RadioGroupProps,\n  ContextMenuRadioItemProps as RadioItemProps,\n  ContextMenuCheckboxItemProps as CheckboxItemProps,\n  ContextMenuSubProps as SubProps,\n  ContextMenuSubTriggerProps as SubTriggerProps,\n  ContextMenuSubContentProps as SubContentProps,\n  ContextMenuSeparatorProps as SeparatorProps,\n};\n", "import { colorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { leadingTrimPropDef } from '../props/leading-trim.prop.js';\nimport { widthPropDefs } from '../props/width.props.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst alignValues = ['start', 'center', 'end', 'baseline', 'stretch'] as const;\nconst orientationValues = ['horizontal', 'vertical'] as const;\nconst sizes = ['1', '2', '3'] as const;\n\nconst dataListRootPropDefs = {\n  orientation: {\n    type: 'enum',\n    className: 'rt-r-orientation',\n    values: orientationValues,\n    default: 'horizontal',\n    responsive: true,\n  },\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: sizes,\n    default: '2',\n    responsive: true,\n  },\n  trim: {\n    ...leadingTrimPropDef.trim,\n    className: 'rt-r-trim', // Custom trim styles due to grid layout\n  },\n} satisfies {\n  orientation: PropDef<(typeof orientationValues)[number]>;\n  size: PropDef<(typeof sizes)[number]>;\n  trim: typeof leadingTrimPropDef.trim;\n};\n\nconst dataListItemPropDefs = {\n  align: {\n    type: 'enum',\n    className: 'rt-r-ai',\n    values: alignValues,\n    responsive: true,\n  },\n} satisfies {\n  align: PropDef<(typeof alignValues)[number]>;\n};\n\nconst dataListLabelPropDefs = {\n  ...widthPropDefs,\n  ...colorPropDef,\n  ...highContrastPropDef,\n};\n\nexport { dataListRootPropDefs, dataListItemPropDefs, dataListLabelPropDefs };\n", "import classNames from 'classnames';\nimport * as React from 'react';\n\nimport { Text } from './text.js';\nimport {\n  dataListRootPropDefs,\n  dataListItemPropDefs,\n  dataListLabelPropDefs,\n} from './data-list.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype DataListRootElement = HTMLDListElement;\ntype DataListRootOwnProps = GetPropDefTypes<typeof dataListRootPropDefs>;\ninterface DataListRootProps\n  extends ComponentPropsWithout<'dl', RemovedProps>,\n    MarginProps,\n    DataListRootOwnProps {}\nconst DataListRoot = React.forwardRef<DataListRootElement, DataListRootProps>(\n  (props, forwardedRef) => {\n    const { className, ...dataListProps } = extractProps(\n      props,\n      dataListRootPropDefs,\n      marginPropDefs\n    );\n    return (\n      <Text asChild>\n        <dl\n          {...dataListProps}\n          ref={forwardedRef}\n          className={classNames('rt-DataListRoot', className)}\n        />\n      </Text>\n    );\n  }\n);\nDataListRoot.displayName = 'DataList.Root';\n\ntype DataListItemElement = HTMLDivElement;\ntype DataListItemOwnProps = GetPropDefTypes<typeof dataListItemPropDefs>;\ninterface DataListItemProps\n  extends ComponentPropsWithout<'div', RemovedProps>,\n    DataListItemOwnProps {}\nconst DataListItem = React.forwardRef<DataListItemElement, DataListItemProps>(\n  (props, forwardedRef) => {\n    const { className, ...itemProps } = extractProps(props, dataListItemPropDefs);\n    return (\n      <div {...itemProps} ref={forwardedRef} className={classNames('rt-DataListItem', className)} />\n    );\n  }\n);\nDataListItem.displayName = 'DataList.Item';\n\ntype DataListLabelElement = React.ElementRef<'dt'>;\ntype DataListLabelOwnProps = GetPropDefTypes<typeof dataListLabelPropDefs>;\ninterface DataListLabelProps\n  extends ComponentPropsWithout<'dt', RemovedProps>,\n    DataListLabelOwnProps {}\nconst DataListLabel = React.forwardRef<DataListLabelElement, DataListLabelProps>(\n  (props, forwardedRef) => {\n    const { className, color, ...labelProps } = extractProps(props, dataListLabelPropDefs);\n    return (\n      <dt\n        {...labelProps}\n        data-accent-color={color}\n        ref={forwardedRef}\n        className={classNames('rt-DataListLabel', className)}\n      />\n    );\n  }\n);\nDataListLabel.displayName = 'DataList.Label';\n\ntype DataListValueElement = React.ElementRef<'dd'>;\ninterface DataListValueProps extends ComponentPropsWithout<'dd', RemovedProps> {}\nconst DataListValue = React.forwardRef<DataListValueElement, DataListValueProps>(\n  ({ children, className, ...props }, forwardedRef) => (\n    <dd {...props} ref={forwardedRef} className={classNames(className, 'rt-DataListValue')}>\n      {children}\n    </dd>\n  )\n);\nDataListValue.displayName = 'DataList.Value';\n\nexport {\n  DataListRoot as Root,\n  DataListItem as Item,\n  DataListLabel as Label,\n  DataListValue as Value,\n};\nexport type {\n  DataListRootProps as RootProps,\n  DataListItemProps as ItemProps,\n  DataListLabelProps as LabelProps,\n  DataListValueProps as ValueProps,\n};\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\n\nimport { dialogContentPropDefs } from './dialog.props.js';\nimport { Heading } from './heading.js';\nimport { Text } from './text.js';\nimport { Theme } from './theme.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { requireReactElement } from '../helpers/require-react-element.js';\n\nimport type { DialogContentOwnProps } from './dialog.props.js';\nimport type {\n  ComponentPropsWithout,\n  RemovedProps,\n  ComponentPropsAs,\n} from '../helpers/component-props.js';\n\ninterface DialogRootProps extends ComponentPropsWithout<typeof DialogPrimitive.Root, 'modal'> {}\nconst DialogRoot: React.FC<DialogRootProps> = (props) => <DialogPrimitive.Root {...props} modal />;\nDialogRoot.displayName = 'Dialog.Root';\n\ntype DialogTriggerElement = React.ElementRef<typeof DialogPrimitive.Trigger>;\ninterface DialogTriggerProps\n  extends ComponentPropsWithout<typeof DialogPrimitive.Trigger, RemovedProps> {}\nconst DialogTrigger = React.forwardRef<DialogTriggerElement, DialogTriggerProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <DialogPrimitive.Trigger {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </DialogPrimitive.Trigger>\n  )\n);\nDialogTrigger.displayName = 'Dialog.Trigger';\n\ntype DialogContentElement = React.ElementRef<typeof DialogPrimitive.Content>;\ninterface DialogContentProps\n  extends ComponentPropsWithout<typeof DialogPrimitive.Content, RemovedProps>,\n    DialogContentOwnProps {\n  container?: React.ComponentPropsWithoutRef<typeof DialogPrimitive.Portal>['container'];\n}\nconst DialogContent = React.forwardRef<DialogContentElement, DialogContentProps>(\n  ({ align, ...props }, forwardedRef) => {\n    const { align: alignPropDef, ...propDefs } = dialogContentPropDefs;\n    const { className: alignClassName } = extractProps({ align }, { align: alignPropDef });\n    const { className, forceMount, container, ...contentProps } = extractProps(props, propDefs);\n    return (\n      <DialogPrimitive.Portal container={container} forceMount={forceMount}>\n        <Theme asChild>\n          <DialogPrimitive.Overlay className=\"rt-BaseDialogOverlay rt-DialogOverlay\">\n            <div className=\"rt-BaseDialogScroll rt-DialogScroll\">\n              <div\n                className={`rt-BaseDialogScrollPadding rt-DialogScrollPadding ${alignClassName}`}\n              >\n                <DialogPrimitive.Content\n                  {...contentProps}\n                  ref={forwardedRef}\n                  className={classNames('rt-BaseDialogContent', 'rt-DialogContent', className)}\n                />\n              </div>\n            </div>\n          </DialogPrimitive.Overlay>\n        </Theme>\n      </DialogPrimitive.Portal>\n    );\n  }\n);\nDialogContent.displayName = 'Dialog.Content';\n\ntype DialogTitleElement = React.ElementRef<typeof Heading>;\ntype DialogTitleProps = ComponentPropsWithout<typeof Heading, 'asChild'>;\nconst DialogTitle = React.forwardRef<DialogTitleElement, DialogTitleProps>(\n  (props, forwardedRef) => (\n    <DialogPrimitive.Title asChild>\n      <Heading size=\"5\" mb=\"3\" trim=\"start\" {...props} asChild={false} ref={forwardedRef} />\n    </DialogPrimitive.Title>\n  )\n);\nDialogTitle.displayName = 'Dialog.Title';\n\ntype DialogDescriptionElement = HTMLParagraphElement;\ntype DialogDescriptionProps = ComponentPropsAs<typeof Text, 'p'>;\nconst DialogDescription = React.forwardRef<DialogDescriptionElement, DialogDescriptionProps>(\n  (props, forwardedRef) => (\n    <DialogPrimitive.Description asChild>\n      <Text as=\"p\" size=\"3\" {...props} asChild={false} ref={forwardedRef} />\n    </DialogPrimitive.Description>\n  )\n);\nDialogDescription.displayName = 'Dialog.Description';\n\ntype DialogCloseElement = React.ElementRef<typeof DialogPrimitive.Close>;\ninterface DialogCloseProps\n  extends ComponentPropsWithout<typeof DialogPrimitive.Close, RemovedProps> {}\nconst DialogClose = React.forwardRef<DialogCloseElement, DialogCloseProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <DialogPrimitive.Close {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </DialogPrimitive.Close>\n  )\n);\nDialogClose.displayName = 'Dialog.Close';\n\nexport {\n  DialogRoot as Root,\n  DialogTrigger as Trigger,\n  DialogContent as Content,\n  DialogTitle as Title,\n  DialogDescription as Description,\n  DialogClose as Close,\n};\n\nexport type {\n  DialogRootProps as RootProps,\n  DialogTriggerProps as TriggerProps,\n  DialogContentProps as ContentProps,\n  DialogTitleProps as TitleProps,\n  DialogDescriptionProps as DescriptionProps,\n  DialogCloseProps as CloseProps,\n};\n", "'use client';\nexport {\n  createDropdownMenuScope,\n  //\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuPortal,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuLabel,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuItemIndicator,\n  DropdownMenuSeparator,\n  DropdownMenuArrow,\n  DropdownMenuSub,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n} from './DropdownMenu';\nexport type {\n  DropdownMenuProps,\n  DropdownMenuTriggerProps,\n  DropdownMenuPortalProps,\n  DropdownMenuContentProps,\n  DropdownMenuGroupProps,\n  DropdownMenuLabelProps,\n  DropdownMenuItemProps,\n  DropdownMenuCheckboxItemProps,\n  DropdownMenuRadioGroupProps,\n  DropdownMenuRadioItemProps,\n  DropdownMenuItemIndicatorProps,\n  DropdownMenuSeparatorProps,\n  DropdownMenuArrowProps,\n  DropdownMenuSubProps,\n  DropdownMenuSubTriggerProps,\n  DropdownMenuSubContentProps,\n} from './DropdownMenu';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as MenuPrimitive from '@radix-ui/react-menu';\nimport { createMenuScope } from '@radix-ui/react-menu';\nimport { useId } from '@radix-ui/react-id';\n\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenu\n * -----------------------------------------------------------------------------------------------*/\n\nconst DROPDOWN_MENU_NAME = 'DropdownMenu';\n\ntype ScopedProps<P> = P & { __scopeDropdownMenu?: Scope };\nconst [createDropdownMenuContext, createDropdownMenuScope] = createContextScope(\n  DROPDOWN_MENU_NAME,\n  [createMenuScope]\n);\nconst useMenuScope = createMenuScope();\n\ntype DropdownMenuContextValue = {\n  triggerId: string;\n  triggerRef: React.RefObject<HTMLButtonElement>;\n  contentId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  modal: boolean;\n};\n\nconst [DropdownMenuProvider, useDropdownMenuContext] =\n  createDropdownMenuContext<DropdownMenuContextValue>(DROPDOWN_MENU_NAME);\n\ninterface DropdownMenuProps {\n  children?: React.ReactNode;\n  dir?: Direction;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  modal?: boolean;\n}\n\nconst DropdownMenu: React.FC<DropdownMenuProps> = (props: ScopedProps<DropdownMenuProps>) => {\n  const {\n    __scopeDropdownMenu,\n    children,\n    dir,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = true,\n  } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <DropdownMenuProvider\n      scope={__scopeDropdownMenu}\n      triggerId={useId()}\n      triggerRef={triggerRef}\n      contentId={useId()}\n      open={open}\n      onOpenChange={setOpen}\n      onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      modal={modal}\n    >\n      <MenuPrimitive.Root {...menuScope} open={open} onOpenChange={setOpen} dir={dir} modal={modal}>\n        {children}\n      </MenuPrimitive.Root>\n    </DropdownMenuProvider>\n  );\n};\n\nDropdownMenu.displayName = DROPDOWN_MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'DropdownMenuTrigger';\n\ntype DropdownMenuTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface DropdownMenuTriggerProps extends PrimitiveButtonProps {}\n\nconst DropdownMenuTrigger = React.forwardRef<DropdownMenuTriggerElement, DropdownMenuTriggerProps>(\n  (props: ScopedProps<DropdownMenuTriggerProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, disabled = false, ...triggerProps } = props;\n    const context = useDropdownMenuContext(TRIGGER_NAME, __scopeDropdownMenu);\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return (\n      <MenuPrimitive.Anchor asChild {...menuScope}>\n        <Primitive.button\n          type=\"button\"\n          id={context.triggerId}\n          aria-haspopup=\"menu\"\n          aria-expanded={context.open}\n          aria-controls={context.open ? context.contentId : undefined}\n          data-state={context.open ? 'open' : 'closed'}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          {...triggerProps}\n          ref={composeRefs(forwardedRef, context.triggerRef)}\n          onPointerDown={composeEventHandlers(props.onPointerDown, (event) => {\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n              context.onOpenToggle();\n              // prevent trigger focusing when opening\n              // this allows the content to be given focus without competition\n              if (!context.open) event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if (disabled) return;\n            if (['Enter', ' '].includes(event.key)) context.onOpenToggle();\n            if (event.key === 'ArrowDown') context.onOpenChange(true);\n            // prevent keydown from scrolling window / first focused item to execute\n            // that keydown (inadvertently closing the menu)\n            if (['Enter', ' ', 'ArrowDown'].includes(event.key)) event.preventDefault();\n          })}\n        />\n      </MenuPrimitive.Anchor>\n    );\n  }\n);\n\nDropdownMenuTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'DropdownMenuPortal';\n\ntype MenuPortalProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Portal>;\ninterface DropdownMenuPortalProps extends MenuPortalProps {}\n\nconst DropdownMenuPortal: React.FC<DropdownMenuPortalProps> = (\n  props: ScopedProps<DropdownMenuPortalProps>\n) => {\n  const { __scopeDropdownMenu, ...portalProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.Portal {...menuScope} {...portalProps} />;\n};\n\nDropdownMenuPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'DropdownMenuContent';\n\ntype DropdownMenuContentElement = React.ElementRef<typeof MenuPrimitive.Content>;\ntype MenuContentProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Content>;\ninterface DropdownMenuContentProps extends Omit<MenuContentProps, 'onEntryFocus'> {}\n\nconst DropdownMenuContent = React.forwardRef<DropdownMenuContentElement, DropdownMenuContentProps>(\n  (props: ScopedProps<DropdownMenuContentProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...contentProps } = props;\n    const context = useDropdownMenuContext(CONTENT_NAME, __scopeDropdownMenu);\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    const hasInteractedOutsideRef = React.useRef(false);\n\n    return (\n      <MenuPrimitive.Content\n        id={context.contentId}\n        aria-labelledby={context.triggerId}\n        {...menuScope}\n        {...contentProps}\n        ref={forwardedRef}\n        onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n          if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n          hasInteractedOutsideRef.current = false;\n          // Always prevent auto focus because we either focus manually or want user agent focus\n          event.preventDefault();\n        })}\n        onInteractOutside={composeEventHandlers(props.onInteractOutside, (event) => {\n          const originalEvent = event.detail.originalEvent as PointerEvent;\n          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n          if (!context.modal || isRightClick) hasInteractedOutsideRef.current = true;\n        })}\n        style={{\n          ...props.style,\n          // re-namespace exposed content custom properties\n          ...{\n            '--radix-dropdown-menu-content-transform-origin':\n              'var(--radix-popper-transform-origin)',\n            '--radix-dropdown-menu-content-available-width': 'var(--radix-popper-available-width)',\n            '--radix-dropdown-menu-content-available-height':\n              'var(--radix-popper-available-height)',\n            '--radix-dropdown-menu-trigger-width': 'var(--radix-popper-anchor-width)',\n            '--radix-dropdown-menu-trigger-height': 'var(--radix-popper-anchor-height)',\n          },\n        }}\n      />\n    );\n  }\n);\n\nDropdownMenuContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'DropdownMenuGroup';\n\ntype DropdownMenuGroupElement = React.ElementRef<typeof MenuPrimitive.Group>;\ntype MenuGroupProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Group>;\ninterface DropdownMenuGroupProps extends MenuGroupProps {}\n\nconst DropdownMenuGroup = React.forwardRef<DropdownMenuGroupElement, DropdownMenuGroupProps>(\n  (props: ScopedProps<DropdownMenuGroupProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...groupProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Group {...menuScope} {...groupProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'DropdownMenuLabel';\n\ntype DropdownMenuLabelElement = React.ElementRef<typeof MenuPrimitive.Label>;\ntype MenuLabelProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Label>;\ninterface DropdownMenuLabelProps extends MenuLabelProps {}\n\nconst DropdownMenuLabel = React.forwardRef<DropdownMenuLabelElement, DropdownMenuLabelProps>(\n  (props: ScopedProps<DropdownMenuLabelProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...labelProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Label {...menuScope} {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'DropdownMenuItem';\n\ntype DropdownMenuItemElement = React.ElementRef<typeof MenuPrimitive.Item>;\ntype MenuItemProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Item>;\ninterface DropdownMenuItemProps extends MenuItemProps {}\n\nconst DropdownMenuItem = React.forwardRef<DropdownMenuItemElement, DropdownMenuItemProps>(\n  (props: ScopedProps<DropdownMenuItemProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...itemProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Item {...menuScope} {...itemProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuCheckboxItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_ITEM_NAME = 'DropdownMenuCheckboxItem';\n\ntype DropdownMenuCheckboxItemElement = React.ElementRef<typeof MenuPrimitive.CheckboxItem>;\ntype MenuCheckboxItemProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.CheckboxItem>;\ninterface DropdownMenuCheckboxItemProps extends MenuCheckboxItemProps {}\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  DropdownMenuCheckboxItemElement,\n  DropdownMenuCheckboxItemProps\n>((props: ScopedProps<DropdownMenuCheckboxItemProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...checkboxItemProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.CheckboxItem {...menuScope} {...checkboxItemProps} ref={forwardedRef} />;\n});\n\nDropdownMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuRadioGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_GROUP_NAME = 'DropdownMenuRadioGroup';\n\ntype DropdownMenuRadioGroupElement = React.ElementRef<typeof MenuPrimitive.RadioGroup>;\ntype MenuRadioGroupProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioGroup>;\ninterface DropdownMenuRadioGroupProps extends MenuRadioGroupProps {}\n\nconst DropdownMenuRadioGroup = React.forwardRef<\n  DropdownMenuRadioGroupElement,\n  DropdownMenuRadioGroupProps\n>((props: ScopedProps<DropdownMenuRadioGroupProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...radioGroupProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.RadioGroup {...menuScope} {...radioGroupProps} ref={forwardedRef} />;\n});\n\nDropdownMenuRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuRadioItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_ITEM_NAME = 'DropdownMenuRadioItem';\n\ntype DropdownMenuRadioItemElement = React.ElementRef<typeof MenuPrimitive.RadioItem>;\ntype MenuRadioItemProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioItem>;\ninterface DropdownMenuRadioItemProps extends MenuRadioItemProps {}\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  DropdownMenuRadioItemElement,\n  DropdownMenuRadioItemProps\n>((props: ScopedProps<DropdownMenuRadioItemProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...radioItemProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.RadioItem {...menuScope} {...radioItemProps} ref={forwardedRef} />;\n});\n\nDropdownMenuRadioItem.displayName = RADIO_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'DropdownMenuItemIndicator';\n\ntype DropdownMenuItemIndicatorElement = React.ElementRef<typeof MenuPrimitive.ItemIndicator>;\ntype MenuItemIndicatorProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.ItemIndicator>;\ninterface DropdownMenuItemIndicatorProps extends MenuItemIndicatorProps {}\n\nconst DropdownMenuItemIndicator = React.forwardRef<\n  DropdownMenuItemIndicatorElement,\n  DropdownMenuItemIndicatorProps\n>((props: ScopedProps<DropdownMenuItemIndicatorProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...itemIndicatorProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.ItemIndicator {...menuScope} {...itemIndicatorProps} ref={forwardedRef} />;\n});\n\nDropdownMenuItemIndicator.displayName = INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'DropdownMenuSeparator';\n\ntype DropdownMenuSeparatorElement = React.ElementRef<typeof MenuPrimitive.Separator>;\ntype MenuSeparatorProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Separator>;\ninterface DropdownMenuSeparatorProps extends MenuSeparatorProps {}\n\nconst DropdownMenuSeparator = React.forwardRef<\n  DropdownMenuSeparatorElement,\n  DropdownMenuSeparatorProps\n>((props: ScopedProps<DropdownMenuSeparatorProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...separatorProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.Separator {...menuScope} {...separatorProps} ref={forwardedRef} />;\n});\n\nDropdownMenuSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'DropdownMenuArrow';\n\ntype DropdownMenuArrowElement = React.ElementRef<typeof MenuPrimitive.Arrow>;\ntype MenuArrowProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Arrow>;\ninterface DropdownMenuArrowProps extends MenuArrowProps {}\n\nconst DropdownMenuArrow = React.forwardRef<DropdownMenuArrowElement, DropdownMenuArrowProps>(\n  (props: ScopedProps<DropdownMenuArrowProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...arrowProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Arrow {...menuScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuArrow.displayName = ARROW_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSub\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DropdownMenuSubProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst DropdownMenuSub: React.FC<DropdownMenuSubProps> = (\n  props: ScopedProps<DropdownMenuSubProps>\n) => {\n  const { __scopeDropdownMenu, children, open: openProp, onOpenChange, defaultOpen } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <MenuPrimitive.Sub {...menuScope} open={open} onOpenChange={setOpen}>\n      {children}\n    </MenuPrimitive.Sub>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSubTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_TRIGGER_NAME = 'DropdownMenuSubTrigger';\n\ntype DropdownMenuSubTriggerElement = React.ElementRef<typeof MenuPrimitive.SubTrigger>;\ntype MenuSubTriggerProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.SubTrigger>;\ninterface DropdownMenuSubTriggerProps extends MenuSubTriggerProps {}\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  DropdownMenuSubTriggerElement,\n  DropdownMenuSubTriggerProps\n>((props: ScopedProps<DropdownMenuSubTriggerProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...subTriggerProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.SubTrigger {...menuScope} {...subTriggerProps} ref={forwardedRef} />;\n});\n\nDropdownMenuSubTrigger.displayName = SUB_TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSubContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_CONTENT_NAME = 'DropdownMenuSubContent';\n\ntype DropdownMenuSubContentElement = React.ElementRef<typeof MenuPrimitive.Content>;\ntype MenuSubContentProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.SubContent>;\ninterface DropdownMenuSubContentProps extends MenuSubContentProps {}\n\nconst DropdownMenuSubContent = React.forwardRef<\n  DropdownMenuSubContentElement,\n  DropdownMenuSubContentProps\n>((props: ScopedProps<DropdownMenuSubContentProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...subContentProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n\n  return (\n    <MenuPrimitive.SubContent\n      {...menuScope}\n      {...subContentProps}\n      ref={forwardedRef}\n      style={{\n        ...props.style,\n        // re-namespace exposed content custom properties\n        ...{\n          '--radix-dropdown-menu-content-transform-origin': 'var(--radix-popper-transform-origin)',\n          '--radix-dropdown-menu-content-available-width': 'var(--radix-popper-available-width)',\n          '--radix-dropdown-menu-content-available-height': 'var(--radix-popper-available-height)',\n          '--radix-dropdown-menu-trigger-width': 'var(--radix-popper-anchor-width)',\n          '--radix-dropdown-menu-trigger-height': 'var(--radix-popper-anchor-height)',\n        },\n      }}\n    />\n  );\n});\n\nDropdownMenuSubContent.displayName = SUB_CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = DropdownMenu;\nconst Trigger = DropdownMenuTrigger;\nconst Portal = DropdownMenuPortal;\nconst Content = DropdownMenuContent;\nconst Group = DropdownMenuGroup;\nconst Label = DropdownMenuLabel;\nconst Item = DropdownMenuItem;\nconst CheckboxItem = DropdownMenuCheckboxItem;\nconst RadioGroup = DropdownMenuRadioGroup;\nconst RadioItem = DropdownMenuRadioItem;\nconst ItemIndicator = DropdownMenuItemIndicator;\nconst Separator = DropdownMenuSeparator;\nconst Arrow = DropdownMenuArrow;\nconst Sub = DropdownMenuSub;\nconst SubTrigger = DropdownMenuSubTrigger;\nconst SubContent = DropdownMenuSubContent;\n\nexport {\n  createDropdownMenuScope,\n  //\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuPortal,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuLabel,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuItemIndicator,\n  DropdownMenuSeparator,\n  DropdownMenuArrow,\n  DropdownMenuSub,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n};\nexport type {\n  DropdownMenuProps,\n  DropdownMenuTriggerProps,\n  DropdownMenuPortalProps,\n  DropdownMenuContentProps,\n  DropdownMenuGroupProps,\n  DropdownMenuLabelProps,\n  DropdownMenuItemProps,\n  DropdownMenuCheckboxItemProps,\n  DropdownMenuRadioGroupProps,\n  DropdownMenuRadioItemProps,\n  DropdownMenuItemIndicatorProps,\n  DropdownMenuSeparatorProps,\n  DropdownMenuArrowProps,\n  DropdownMenuSubProps,\n  DropdownMenuSubTriggerProps,\n  DropdownMenuSubContentProps,\n};\n", "export {\n  baseMenuContentPropDefs as dropdownMenuContentPropDefs,\n  baseMenuItemPropDefs as dropdownMenuItemPropDefs,\n  baseMenuCheckboxItemPropDefs as dropdownMenuCheckboxItemPropDefs,\n  baseMenuRadioItemPropDefs as dropdownMenuRadioItemPropDefs,\n} from './base-menu.props.js';\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu';\nimport { Slottable } from '@radix-ui/react-slot';\n\nimport { ScrollArea } from './scroll-area.js';\nimport {\n  dropdownMenuContentPropDefs,\n  dropdownMenuItemPropDefs,\n  dropdownMenuCheckboxItemPropDefs,\n  dropdownMenuRadioItemPropDefs,\n} from './dropdown-menu.props.js';\nimport { Theme, useThemeContext } from './theme.js';\nimport { ChevronDownIcon, ThickCheckIcon, ThickChevronRightIcon } from './icons.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { requireReactElement } from '../helpers/require-react-element.js';\n\nimport type { IconProps } from './icons.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ninterface DropdownMenuRootProps\n  extends React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Root> {}\nconst DropdownMenuRoot: React.FC<DropdownMenuRootProps> = (props) => (\n  <DropdownMenuPrimitive.Root {...props} />\n);\nDropdownMenuRoot.displayName = 'DropdownMenu.Root';\n\ntype DropdownMenuTriggerElement = React.ElementRef<typeof DropdownMenuPrimitive.Trigger>;\ninterface DropdownMenuTriggerProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.Trigger, RemovedProps> {}\nconst DropdownMenuTrigger = React.forwardRef<DropdownMenuTriggerElement, DropdownMenuTriggerProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <DropdownMenuPrimitive.Trigger {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </DropdownMenuPrimitive.Trigger>\n  )\n);\nDropdownMenuTrigger.displayName = 'DropdownMenu.Trigger';\n\ntype DropdownMenuContentOwnProps = GetPropDefTypes<typeof dropdownMenuContentPropDefs>;\ntype DropdownMenuContentContextValue = DropdownMenuContentOwnProps;\nconst DropdownMenuContentContext = React.createContext<DropdownMenuContentContextValue>({});\ntype DropdownMenuContentElement = React.ElementRef<typeof DropdownMenuPrimitive.Content>;\ninterface DropdownMenuContentProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.Content, RemovedProps>,\n    DropdownMenuContentContextValue {\n  container?: React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Portal>['container'];\n}\nconst DropdownMenuContent = React.forwardRef<DropdownMenuContentElement, DropdownMenuContentProps>(\n  (props, forwardedRef) => {\n    const themeContext = useThemeContext();\n    const {\n      size = dropdownMenuContentPropDefs.size.default,\n      variant = dropdownMenuContentPropDefs.variant.default,\n      highContrast = dropdownMenuContentPropDefs.highContrast.default,\n    } = props;\n    const { className, children, color, container, forceMount, ...contentProps } = extractProps(\n      props,\n      dropdownMenuContentPropDefs\n    );\n    const resolvedColor = color || themeContext.accentColor;\n    return (\n      <DropdownMenuPrimitive.Portal container={container} forceMount={forceMount}>\n        <Theme asChild>\n          <DropdownMenuPrimitive.Content\n            data-accent-color={resolvedColor}\n            align=\"start\"\n            sideOffset={4}\n            collisionPadding={10}\n            {...contentProps}\n            asChild={false}\n            ref={forwardedRef}\n            className={classNames(\n              'rt-PopperContent',\n              'rt-BaseMenuContent',\n              'rt-DropdownMenuContent',\n              className\n            )}\n          >\n            <ScrollArea type=\"auto\">\n              <div className={classNames('rt-BaseMenuViewport', 'rt-DropdownMenuViewport')}>\n                <DropdownMenuContentContext.Provider\n                  value={React.useMemo(\n                    () => ({ size, variant, color: resolvedColor, highContrast }),\n                    [size, variant, resolvedColor, highContrast]\n                  )}\n                >\n                  {children}\n                </DropdownMenuContentContext.Provider>\n              </div>\n            </ScrollArea>\n          </DropdownMenuPrimitive.Content>\n        </Theme>\n      </DropdownMenuPrimitive.Portal>\n    );\n  }\n);\nDropdownMenuContent.displayName = 'DropdownMenu.Content';\n\ntype DropdownMenuLabelElement = React.ElementRef<typeof DropdownMenuPrimitive.Label>;\ninterface DropdownMenuLabelProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.Label, RemovedProps> {}\nconst DropdownMenuLabel = React.forwardRef<DropdownMenuLabelElement, DropdownMenuLabelProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <DropdownMenuPrimitive.Label\n      {...props}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-BaseMenuLabel', 'rt-DropdownMenuLabel', className)}\n    />\n  )\n);\nDropdownMenuLabel.displayName = 'DropdownMenu.Label';\n\ntype DropdownMenuItemElement = React.ElementRef<typeof DropdownMenuPrimitive.Item>;\ntype DropdownMenuItemOwnProps = GetPropDefTypes<typeof dropdownMenuItemPropDefs>;\ninterface DropdownMenuItemProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.Item, RemovedProps>,\n    DropdownMenuItemOwnProps {}\nconst DropdownMenuItem = React.forwardRef<DropdownMenuItemElement, DropdownMenuItemProps>(\n  (props, forwardedRef) => {\n    const {\n      className,\n      children,\n      color = dropdownMenuItemPropDefs.color.default,\n      shortcut,\n      ...itemProps\n    } = props;\n    return (\n      <DropdownMenuPrimitive.Item\n        data-accent-color={color}\n        {...itemProps}\n        ref={forwardedRef}\n        className={classNames('rt-reset', 'rt-BaseMenuItem', 'rt-DropdownMenuItem', className)}\n      >\n        <Slottable>{children}</Slottable>\n        {shortcut && <div className=\"rt-BaseMenuShortcut rt-DropdownMenuShortcut\">{shortcut}</div>}\n      </DropdownMenuPrimitive.Item>\n    );\n  }\n);\nDropdownMenuItem.displayName = 'DropdownMenu.Item';\n\ntype DropdownMenuGroupElement = React.ElementRef<typeof DropdownMenuPrimitive.Group>;\ninterface DropdownMenuGroupProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.Group, RemovedProps> {}\nconst DropdownMenuGroup = React.forwardRef<DropdownMenuGroupElement, DropdownMenuGroupProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <DropdownMenuPrimitive.Group\n      {...props}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-BaseMenuGroup', 'rt-DropdownMenuGroup', className)}\n    />\n  )\n);\nDropdownMenuGroup.displayName = 'DropdownMenu.Group';\n\ntype DropdownMenuRadioGroupElement = React.ElementRef<typeof DropdownMenuPrimitive.RadioGroup>;\ninterface DropdownMenuRadioGroupProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.RadioGroup, RemovedProps> {}\nconst DropdownMenuRadioGroup = React.forwardRef<\n  DropdownMenuRadioGroupElement,\n  DropdownMenuRadioGroupProps\n>(({ className, ...props }, forwardedRef) => (\n  <DropdownMenuPrimitive.RadioGroup\n    {...props}\n    asChild={false}\n    ref={forwardedRef}\n    className={classNames('rt-BaseMenuRadioGroup', 'rt-DropdownMenuRadioGroup', className)}\n  />\n));\nDropdownMenuRadioGroup.displayName = 'DropdownMenu.RadioGroup';\n\ntype DropdownMenuRadioItemElement = React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>;\ntype DropdownMenuRadioItemOwnProps = GetPropDefTypes<typeof dropdownMenuRadioItemPropDefs>;\ninterface DropdownMenuRadioItemProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.RadioItem, RemovedProps>,\n    DropdownMenuRadioItemOwnProps {}\nconst DropdownMenuRadioItem = React.forwardRef<\n  DropdownMenuRadioItemElement,\n  DropdownMenuRadioItemProps\n>((props, forwardedRef) => {\n  const {\n    children,\n    className,\n    color = dropdownMenuRadioItemPropDefs.color.default,\n    ...itemProps\n  } = props;\n  return (\n    <DropdownMenuPrimitive.RadioItem\n      {...itemProps}\n      asChild={false}\n      ref={forwardedRef}\n      data-accent-color={color}\n      className={classNames(\n        'rt-BaseMenuItem',\n        'rt-BaseMenuRadioItem',\n        'rt-DropdownMenuItem',\n        'rt-DropdownMenuRadioItem',\n        className\n      )}\n    >\n      {children}\n      <DropdownMenuPrimitive.ItemIndicator className=\"rt-BaseMenuItemIndicator rt-DropdownMenuItemIndicator\">\n        <ThickCheckIcon className=\"rt-BaseMenuItemIndicatorIcon rt-DropdownMenuItemIndicatorIcon\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </DropdownMenuPrimitive.RadioItem>\n  );\n});\nDropdownMenuRadioItem.displayName = 'DropdownMenu.RadioItem';\n\ntype DropdownMenuCheckboxItemElement = React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>;\ntype DropdownMenuCheckboxItemOwnProps = GetPropDefTypes<typeof dropdownMenuCheckboxItemPropDefs>;\ninterface DropdownMenuCheckboxItemProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.CheckboxItem, RemovedProps>,\n    DropdownMenuCheckboxItemOwnProps {}\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  DropdownMenuCheckboxItemElement,\n  DropdownMenuCheckboxItemProps\n>((props, forwardedRef) => {\n  const {\n    children,\n    className,\n    shortcut,\n    color = dropdownMenuCheckboxItemPropDefs.color.default,\n    ...itemProps\n  } = props;\n  return (\n    <DropdownMenuPrimitive.CheckboxItem\n      {...itemProps}\n      asChild={false}\n      ref={forwardedRef}\n      data-accent-color={color}\n      className={classNames(\n        'rt-BaseMenuItem',\n        'rt-BaseMenuCheckboxItem',\n        'rt-DropdownMenuItem',\n        'rt-DropdownMenuCheckboxItem',\n        className\n      )}\n    >\n      {children}\n      <DropdownMenuPrimitive.ItemIndicator className=\"rt-BaseMenuItemIndicator rt-DropdownMenuItemIndicator\">\n        <ThickCheckIcon className=\"rt-BaseMenuItemIndicatorIcon rt-ContextMenuItemIndicatorIcon\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n      {shortcut && <div className=\"rt-BaseMenuShortcut rt-DropdownMenuShortcut\">{shortcut}</div>}\n    </DropdownMenuPrimitive.CheckboxItem>\n  );\n});\nDropdownMenuCheckboxItem.displayName = 'DropdownMenu.CheckboxItem';\n\ninterface DropdownMenuSubProps\n  extends React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Sub> {}\nconst DropdownMenuSub: React.FC<DropdownMenuSubProps> = (props) => (\n  <DropdownMenuPrimitive.Sub {...props} />\n);\nDropdownMenuSub.displayName = 'DropdownMenu.Sub';\n\ntype DropdownMenuSubTriggerElement = React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>;\ninterface DropdownMenuSubTriggerProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.SubTrigger, RemovedProps> {}\nconst DropdownMenuSubTrigger = React.forwardRef<\n  DropdownMenuSubTriggerElement,\n  DropdownMenuSubTriggerProps\n>((props, forwardedRef) => {\n  const { className, children, ...subTriggerProps } = props;\n  return (\n    <DropdownMenuPrimitive.SubTrigger\n      {...subTriggerProps}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames(\n        'rt-BaseMenuItem',\n        'rt-BaseMenuSubTrigger',\n        'rt-DropdownMenuItem',\n        'rt-DropdownMenuSubTrigger',\n        className\n      )}\n    >\n      {children}\n      <div className=\"rt-BaseMenuShortcut rt-DropdownMenuShortcut\">\n        <ThickChevronRightIcon className=\"rt-BaseMenuSubTriggerIcon rt-DropdownMenuSubtriggerIcon\" />\n      </div>\n    </DropdownMenuPrimitive.SubTrigger>\n  );\n});\nDropdownMenuSubTrigger.displayName = 'DropdownMenu.SubTrigger';\n\ntype DropdownMenuSubContentElement = React.ElementRef<typeof DropdownMenuPrimitive.SubContent>;\ninterface DropdownMenuSubContentProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.SubContent, RemovedProps> {\n  container?: React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Portal>['container'];\n}\nconst DropdownMenuSubContent = React.forwardRef<\n  DropdownMenuSubContentElement,\n  DropdownMenuSubContentProps\n>((props, forwardedRef) => {\n  const { size, variant, color, highContrast } = React.useContext(DropdownMenuContentContext);\n  const { className, children, container, forceMount, ...subContentProps } = extractProps(\n    { size, variant, color, highContrast, ...props },\n    dropdownMenuContentPropDefs\n  );\n  return (\n    <DropdownMenuPrimitive.Portal container={container} forceMount={forceMount}>\n      <Theme asChild>\n        <DropdownMenuPrimitive.SubContent\n          data-accent-color={color}\n          alignOffset={-Number(size) * 4}\n          // Side offset accounts for the outer solid box-shadow\n          sideOffset={1}\n          collisionPadding={10}\n          {...subContentProps}\n          asChild={false}\n          ref={forwardedRef}\n          className={classNames(\n            'rt-PopperContent',\n            'rt-BaseMenuContent',\n            'rt-BaseMenuSubContent',\n            'rt-DropdownMenuContent',\n            'rt-DropdownMenuSubContent',\n            className\n          )}\n        >\n          <ScrollArea type=\"auto\">\n            <div className={classNames('rt-BaseMenuViewport', 'rt-DropdownMenuViewport')}>\n              {children}\n            </div>\n          </ScrollArea>\n        </DropdownMenuPrimitive.SubContent>\n      </Theme>\n    </DropdownMenuPrimitive.Portal>\n  );\n});\nDropdownMenuSubContent.displayName = 'DropdownMenu.SubContent';\n\ntype DropdownMenuSeparatorElement = React.ElementRef<typeof DropdownMenuPrimitive.Separator>;\ninterface DropdownMenuSeparatorProps\n  extends ComponentPropsWithout<typeof DropdownMenuPrimitive.Separator, RemovedProps> {}\nconst DropdownMenuSeparator = React.forwardRef<\n  DropdownMenuSeparatorElement,\n  DropdownMenuSeparatorProps\n>(({ className, ...props }, forwardedRef) => (\n  <DropdownMenuPrimitive.Separator\n    {...props}\n    asChild={false}\n    ref={forwardedRef}\n    className={classNames('rt-BaseMenuSeparator', 'rt-DropdownMenuSeparator', className)}\n  />\n));\nDropdownMenuSeparator.displayName = 'DropdownMenu.Separator';\n\nexport {\n  DropdownMenuRoot as Root,\n  DropdownMenuTrigger as Trigger,\n  ChevronDownIcon as TriggerIcon,\n  DropdownMenuContent as Content,\n  DropdownMenuLabel as Label,\n  DropdownMenuItem as Item,\n  DropdownMenuGroup as Group,\n  DropdownMenuRadioGroup as RadioGroup,\n  DropdownMenuRadioItem as RadioItem,\n  DropdownMenuCheckboxItem as CheckboxItem,\n  DropdownMenuSub as Sub,\n  DropdownMenuSubTrigger as SubTrigger,\n  DropdownMenuSubContent as SubContent,\n  DropdownMenuSeparator as Separator,\n};\n\nexport type {\n  DropdownMenuRootProps as RootProps,\n  DropdownMenuTriggerProps as TriggerProps,\n  IconProps as TriggerIconProps,\n  DropdownMenuContentProps as ContentProps,\n  DropdownMenuLabelProps as LabelProps,\n  DropdownMenuItemProps as ItemProps,\n  DropdownMenuGroupProps as GroupProps,\n  DropdownMenuRadioGroupProps as RadioGroupProps,\n  DropdownMenuRadioItemProps as RadioItemProps,\n  DropdownMenuCheckboxItemProps as CheckboxItemProps,\n  DropdownMenuSubProps as SubProps,\n  DropdownMenuSubTriggerProps as SubTriggerProps,\n  DropdownMenuSubContentProps as SubContentProps,\n  DropdownMenuSeparatorProps as SeparatorProps,\n};\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { textWrapPropDef } from '../props/text-wrap.prop.js';\nimport { truncatePropDef } from '../props/truncate.prop.js';\n\nconst emPropDefs = {\n  ...asChildPropDef,\n  ...truncatePropDef,\n  ...textWrapPropDef,\n};\n\nexport { emPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { emPropDefs } from './em.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype EmElement = React.ElementRef<'em'>;\ntype EmOwnProps = GetPropDefTypes<typeof emPropDefs>;\ninterface EmProps extends ComponentPropsWithout<'em', RemovedProps>, EmOwnProps {}\nconst Em = React.forwardRef<EmElement, EmProps>((props, forwardedRef) => {\n  const { asChild, className, ...emProps } = extractProps(props, emPropDefs);\n  const Comp = asChild ? Slot : 'em';\n  return <Comp {...emProps} ref={forwardedRef} className={classNames('rt-Em', className)} />;\n});\nEm.displayName = 'Em';\n\nexport { Em };\nexport type { EmProps };\n", "'use client';\nexport {\n  createHoverCardScope,\n  //\n  HoverCard,\n  HoverCardTrigger,\n  HoverCardPortal,\n  HoverCardContent,\n  HoverCardArrow,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Arrow,\n} from './HoverCard';\nexport type {\n  HoverCardProps,\n  HoverCardTriggerProps,\n  HoverCardPortalProps,\n  HoverCardContentProps,\n  HoverCardArrowProps,\n} from './HoverCard';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * HoverCard\n * -----------------------------------------------------------------------------------------------*/\n\nlet originalBodyUserSelect: string;\n\nconst HOVERCARD_NAME = 'HoverCard';\n\ntype ScopedProps<P> = P & { __scopeHoverCard?: Scope };\nconst [createHoverCardContext, createHoverCardScope] = createContextScope(HOVERCARD_NAME, [\n  createPopperScope,\n]);\nconst usePopperScope = createPopperScope();\n\ntype HoverCardContextValue = {\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpen(): void;\n  onClose(): void;\n  onDismiss(): void;\n  hasSelectionRef: React.MutableRefObject<boolean>;\n  isPointerDownOnContentRef: React.MutableRefObject<boolean>;\n};\n\nconst [HoverCardProvider, useHoverCardContext] =\n  createHoverCardContext<HoverCardContextValue>(HOVERCARD_NAME);\n\ninterface HoverCardProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?: (open: boolean) => void;\n  openDelay?: number;\n  closeDelay?: number;\n}\n\nconst HoverCard: React.FC<HoverCardProps> = (props: ScopedProps<HoverCardProps>) => {\n  const {\n    __scopeHoverCard,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    openDelay = 700,\n    closeDelay = 300,\n  } = props;\n  const popperScope = usePopperScope(__scopeHoverCard);\n  const openTimerRef = React.useRef(0);\n  const closeTimerRef = React.useRef(0);\n  const hasSelectionRef = React.useRef(false);\n  const isPointerDownOnContentRef = React.useRef(false);\n\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  const handleOpen = React.useCallback(() => {\n    clearTimeout(closeTimerRef.current);\n    openTimerRef.current = window.setTimeout(() => setOpen(true), openDelay);\n  }, [openDelay, setOpen]);\n\n  const handleClose = React.useCallback(() => {\n    clearTimeout(openTimerRef.current);\n    if (!hasSelectionRef.current && !isPointerDownOnContentRef.current) {\n      closeTimerRef.current = window.setTimeout(() => setOpen(false), closeDelay);\n    }\n  }, [closeDelay, setOpen]);\n\n  const handleDismiss = React.useCallback(() => setOpen(false), [setOpen]);\n\n  // cleanup any queued state updates on unmount\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(openTimerRef.current);\n      clearTimeout(closeTimerRef.current);\n    };\n  }, []);\n\n  return (\n    <HoverCardProvider\n      scope={__scopeHoverCard}\n      open={open}\n      onOpenChange={setOpen}\n      onOpen={handleOpen}\n      onClose={handleClose}\n      onDismiss={handleDismiss}\n      hasSelectionRef={hasSelectionRef}\n      isPointerDownOnContentRef={isPointerDownOnContentRef}\n    >\n      <PopperPrimitive.Root {...popperScope}>{children}</PopperPrimitive.Root>\n    </HoverCardProvider>\n  );\n};\n\nHoverCard.displayName = HOVERCARD_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * HoverCardTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'HoverCardTrigger';\n\ntype HoverCardTriggerElement = React.ElementRef<typeof Primitive.a>;\ntype PrimitiveLinkProps = React.ComponentPropsWithoutRef<typeof Primitive.a>;\ninterface HoverCardTriggerProps extends PrimitiveLinkProps {}\n\nconst HoverCardTrigger = React.forwardRef<HoverCardTriggerElement, HoverCardTriggerProps>(\n  (props: ScopedProps<HoverCardTriggerProps>, forwardedRef) => {\n    const { __scopeHoverCard, ...triggerProps } = props;\n    const context = useHoverCardContext(TRIGGER_NAME, __scopeHoverCard);\n    const popperScope = usePopperScope(__scopeHoverCard);\n    return (\n      <PopperPrimitive.Anchor asChild {...popperScope}>\n        <Primitive.a\n          data-state={context.open ? 'open' : 'closed'}\n          {...triggerProps}\n          ref={forwardedRef}\n          onPointerEnter={composeEventHandlers(props.onPointerEnter, excludeTouch(context.onOpen))}\n          onPointerLeave={composeEventHandlers(props.onPointerLeave, excludeTouch(context.onClose))}\n          onFocus={composeEventHandlers(props.onFocus, context.onOpen)}\n          onBlur={composeEventHandlers(props.onBlur, context.onClose)}\n          // prevent focus event on touch devices\n          onTouchStart={composeEventHandlers(props.onTouchStart, (event) => event.preventDefault())}\n        />\n      </PopperPrimitive.Anchor>\n    );\n  }\n);\n\nHoverCardTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * HoverCardPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'HoverCardPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createHoverCardContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface HoverCardPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst HoverCardPortal: React.FC<HoverCardPortalProps> = (\n  props: ScopedProps<HoverCardPortalProps>\n) => {\n  const { __scopeHoverCard, forceMount, children, container } = props;\n  const context = useHoverCardContext(PORTAL_NAME, __scopeHoverCard);\n  return (\n    <PortalProvider scope={__scopeHoverCard} forceMount={forceMount}>\n      <Presence present={forceMount || context.open}>\n        <PortalPrimitive asChild container={container}>\n          {children}\n        </PortalPrimitive>\n      </Presence>\n    </PortalProvider>\n  );\n};\n\nHoverCardPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * HoverCardContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'HoverCardContent';\n\ntype HoverCardContentElement = HoverCardContentImplElement;\ninterface HoverCardContentProps extends HoverCardContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst HoverCardContent = React.forwardRef<HoverCardContentElement, HoverCardContentProps>(\n  (props: ScopedProps<HoverCardContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeHoverCard);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = useHoverCardContext(CONTENT_NAME, props.__scopeHoverCard);\n    return (\n      <Presence present={forceMount || context.open}>\n        <HoverCardContentImpl\n          data-state={context.open ? 'open' : 'closed'}\n          {...contentProps}\n          onPointerEnter={composeEventHandlers(props.onPointerEnter, excludeTouch(context.onOpen))}\n          onPointerLeave={composeEventHandlers(props.onPointerLeave, excludeTouch(context.onClose))}\n          ref={forwardedRef}\n        />\n      </Presence>\n    );\n  }\n);\n\nHoverCardContent.displayName = CONTENT_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype HoverCardContentImplElement = React.ElementRef<typeof PopperPrimitive.Content>;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype PopperContentProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ninterface HoverCardContentImplProps extends Omit<PopperContentProps, 'onPlaced'> {\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: DismissableLayerProps['onEscapeKeyDown'];\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `HoverCard`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: DismissableLayerProps['onPointerDownOutside'];\n  /**\n   * Event handler called when the focus moves outside of the `HoverCard`.\n   * Can be prevented.\n   */\n  onFocusOutside?: DismissableLayerProps['onFocusOutside'];\n  /**\n   * Event handler called when an interaction happens outside the `HoverCard`.\n   * Specifically, when a `pointerdown` event happens outside or focus moves outside of it.\n   * Can be prevented.\n   */\n  onInteractOutside?: DismissableLayerProps['onInteractOutside'];\n}\n\nconst HoverCardContentImpl = React.forwardRef<\n  HoverCardContentImplElement,\n  HoverCardContentImplProps\n>((props: ScopedProps<HoverCardContentImplProps>, forwardedRef) => {\n  const {\n    __scopeHoverCard,\n    onEscapeKeyDown,\n    onPointerDownOutside,\n    onFocusOutside,\n    onInteractOutside,\n    ...contentProps\n  } = props;\n  const context = useHoverCardContext(CONTENT_NAME, __scopeHoverCard);\n  const popperScope = usePopperScope(__scopeHoverCard);\n  const ref = React.useRef<HoverCardContentImplElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const [containSelection, setContainSelection] = React.useState(false);\n\n  React.useEffect(() => {\n    if (containSelection) {\n      const body = document.body;\n\n      // Safari requires prefix\n      originalBodyUserSelect = body.style.userSelect || body.style.webkitUserSelect;\n\n      body.style.userSelect = 'none';\n      body.style.webkitUserSelect = 'none';\n      return () => {\n        body.style.userSelect = originalBodyUserSelect;\n        body.style.webkitUserSelect = originalBodyUserSelect;\n      };\n    }\n  }, [containSelection]);\n\n  React.useEffect(() => {\n    if (ref.current) {\n      const handlePointerUp = () => {\n        setContainSelection(false);\n        context.isPointerDownOnContentRef.current = false;\n\n        // Delay a frame to ensure we always access the latest selection\n        setTimeout(() => {\n          const hasSelection = document.getSelection()?.toString() !== '';\n          if (hasSelection) context.hasSelectionRef.current = true;\n        });\n      };\n\n      document.addEventListener('pointerup', handlePointerUp);\n      return () => {\n        document.removeEventListener('pointerup', handlePointerUp);\n        context.hasSelectionRef.current = false;\n        context.isPointerDownOnContentRef.current = false;\n      };\n    }\n  }, [context.isPointerDownOnContentRef, context.hasSelectionRef]);\n\n  React.useEffect(() => {\n    if (ref.current) {\n      const tabbables = getTabbableNodes(ref.current);\n      tabbables.forEach((tabbable) => tabbable.setAttribute('tabindex', '-1'));\n    }\n  });\n\n  return (\n    <DismissableLayer\n      asChild\n      disableOutsidePointerEvents={false}\n      onInteractOutside={onInteractOutside}\n      onEscapeKeyDown={onEscapeKeyDown}\n      onPointerDownOutside={onPointerDownOutside}\n      onFocusOutside={composeEventHandlers(onFocusOutside, (event) => {\n        event.preventDefault();\n      })}\n      onDismiss={context.onDismiss}\n    >\n      <PopperPrimitive.Content\n        {...popperScope}\n        {...contentProps}\n        onPointerDown={composeEventHandlers(contentProps.onPointerDown, (event) => {\n          // Contain selection to current layer\n          if (event.currentTarget.contains(event.target as HTMLElement)) {\n            setContainSelection(true);\n          }\n          context.hasSelectionRef.current = false;\n          context.isPointerDownOnContentRef.current = true;\n        })}\n        ref={composedRefs}\n        style={{\n          ...contentProps.style,\n          userSelect: containSelection ? 'text' : undefined,\n          // Safari requires prefix\n          WebkitUserSelect: containSelection ? 'text' : undefined,\n          // re-namespace exposed content custom properties\n          ...{\n            '--radix-hover-card-content-transform-origin': 'var(--radix-popper-transform-origin)',\n            '--radix-hover-card-content-available-width': 'var(--radix-popper-available-width)',\n            '--radix-hover-card-content-available-height': 'var(--radix-popper-available-height)',\n            '--radix-hover-card-trigger-width': 'var(--radix-popper-anchor-width)',\n            '--radix-hover-card-trigger-height': 'var(--radix-popper-anchor-height)',\n          },\n        }}\n      />\n    </DismissableLayer>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * HoverCardArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'HoverCardArrow';\n\ntype HoverCardArrowElement = React.ElementRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface HoverCardArrowProps extends PopperArrowProps {}\n\nconst HoverCardArrow = React.forwardRef<HoverCardArrowElement, HoverCardArrowProps>(\n  (props: ScopedProps<HoverCardArrowProps>, forwardedRef) => {\n    const { __scopeHoverCard, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeHoverCard);\n    return <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nHoverCardArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction excludeTouch<E>(eventHandler: () => void) {\n  return (event: React.PointerEvent<E>) =>\n    event.pointerType === 'touch' ? undefined : eventHandler();\n}\n\n/**\n * Returns a list of nodes that can be in the tab sequence.\n * @see: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n */\nfunction getTabbableNodes(container: HTMLElement) {\n  const nodes: HTMLElement[] = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    },\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement);\n  return nodes;\n}\n\nconst Root = HoverCard;\nconst Trigger = HoverCardTrigger;\nconst Portal = HoverCardPortal;\nconst Content = HoverCardContent;\nconst Arrow = HoverCardArrow;\n\nexport {\n  createHoverCardScope,\n  //\n  HoverCard,\n  HoverCardTrigger,\n  HoverCardPortal,\n  HoverCardContent,\n  HoverCardArrow,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Arrow,\n};\nexport type {\n  HoverCardProps,\n  HoverCardTriggerProps,\n  HoverCardPortalProps,\n  HoverCardContentProps,\n  HoverCardArrowProps,\n};\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { heightPropDefs } from '../props/height.props.js';\nimport { widthPropDefs } from '../props/width.props.js';\n\nimport type { PropDef, GetPropDefTypes } from '../props/prop-def.js';\n\nconst contentSizes = ['1', '2', '3'] as const;\n\nconst hoverCardContentPropDefs = {\n  ...asChildPropDef,\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: contentSizes,\n    default: '2',\n    responsive: true,\n  },\n  width: widthPropDefs.width,\n  minWidth: widthPropDefs.minWidth,\n  maxWidth: { ...widthPropDefs.maxWidth, default: '480px' },\n  ...heightPropDefs,\n} satisfies {\n  width: PropDef<string>;\n  minWidth: PropDef<string>;\n  maxWidth: PropDef<string>;\n  size: PropDef<(typeof contentSizes)[number]>;\n};\n\ntype HoverCardContentOwnProps = GetPropDefTypes<\n  typeof hoverCardContentPropDefs &\n    typeof asChildPropDef &\n    typeof widthPropDefs &\n    typeof heightPropDefs\n>;\n\nexport { hoverCardContentPropDefs };\nexport type { HoverCardContentOwnProps };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport * as HoverCardPrimitive from '@radix-ui/react-hover-card';\n\nimport { hoverCardContentPropDefs } from './hover-card.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { requireReactElement } from '../helpers/require-react-element.js';\nimport { Theme } from './theme.js';\n\nimport type { HoverCardContentOwnProps } from './hover-card.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ninterface HoverCardRootProps\n  extends React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Root> {}\nconst HoverCardRoot: React.FC<HoverCardRootProps> = (props) => (\n  <HoverCardPrimitive.Root closeDelay={150} openDelay={200} {...props} />\n);\nHoverCardRoot.displayName = 'HoverCard.Root';\n\ntype HoverCardTriggerElement = React.ElementRef<typeof HoverCardPrimitive.Trigger>;\ninterface HoverCardTriggerProps\n  extends ComponentPropsWithout<typeof HoverCardPrimitive.Trigger, RemovedProps> {}\nconst HoverCardTrigger = React.forwardRef<HoverCardTriggerElement, HoverCardTriggerProps>(\n  ({ children, className, ...props }, forwardedRef) => (\n    <HoverCardPrimitive.Trigger\n      ref={forwardedRef}\n      className={classNames('rt-HoverCardTrigger', className)}\n      {...props}\n      asChild\n    >\n      {requireReactElement(children)}\n    </HoverCardPrimitive.Trigger>\n  )\n);\nHoverCardTrigger.displayName = 'HoverCard.Trigger';\n\ntype HoverCardContentElement = React.ElementRef<typeof HoverCardPrimitive.Content>;\ninterface HoverCardContentProps\n  extends ComponentPropsWithout<typeof HoverCardPrimitive.Content, RemovedProps>,\n    HoverCardContentOwnProps {\n  container?: React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Portal>['container'];\n}\nconst HoverCardContent = React.forwardRef<HoverCardContentElement, HoverCardContentProps>(\n  (props, forwardedRef) => {\n    const { className, forceMount, container, ...contentProps } = extractProps(\n      props,\n      hoverCardContentPropDefs\n    );\n    return (\n      <HoverCardPrimitive.Portal container={container} forceMount={forceMount}>\n        <Theme asChild>\n          <HoverCardPrimitive.Content\n            align=\"start\"\n            sideOffset={8}\n            collisionPadding={10}\n            {...contentProps}\n            ref={forwardedRef}\n            className={classNames('rt-PopperContent', 'rt-HoverCardContent', className)}\n          />\n        </Theme>\n      </HoverCardPrimitive.Portal>\n    );\n  }\n);\nHoverCardContent.displayName = 'HoverCard.Content';\n\nexport { HoverCardRoot as Root, HoverCardTrigger as Trigger, HoverCardContent as Content };\nexport type {\n  HoverCardRootProps as RootProps,\n  HoverCardTriggerProps as TriggerProps,\n  HoverCardContentProps as ContentProps,\n};\n", "import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { BaseButton } from './base-button.js';\n\ntype IconButtonElement = React.ElementRef<typeof BaseButton>;\ninterface IconButtonProps extends React.ComponentPropsWithoutRef<typeof BaseButton> {}\nconst IconButton = React.forwardRef<IconButtonElement, IconButtonProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <BaseButton {...props} ref={forwardedRef} className={classNames('rt-IconButton', className)} />\n  )\n);\nIconButton.displayName = 'IconButton';\n\nexport { IconButton };\nexport type { IconButtonProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sides = ['all', 'x', 'y', 'top', 'bottom', 'left', 'right'] as const;\nconst clipValues = ['border-box', 'padding-box'] as const;\nconst paddingValues = ['current', '0'] as const;\n\nconst insetPropDefs = {\n  ...asChildPropDef,\n  side: {\n    type: 'enum',\n    className: 'rt-r-side',\n    values: sides,\n    default: 'all',\n    responsive: true,\n  },\n  clip: {\n    type: 'enum',\n    className: 'rt-r-clip',\n    values: clipValues,\n    default: 'border-box',\n    responsive: true,\n  },\n  p: {\n    type: 'enum',\n    className: 'rt-r-p',\n    values: paddingValues,\n    parseValue: parsePaddingValue,\n    responsive: true,\n  },\n  px: {\n    type: 'enum',\n    className: 'rt-r-px',\n    values: paddingValues,\n    parseValue: parsePaddingValue,\n    responsive: true,\n  },\n  py: {\n    type: 'enum',\n    className: 'rt-r-py',\n    values: paddingValues,\n    parseValue: parsePaddingValue,\n    responsive: true,\n  },\n  pt: {\n    type: 'enum',\n    className: 'rt-r-pt',\n    values: paddingValues,\n    parseValue: parsePaddingValue,\n    responsive: true,\n  },\n  pr: {\n    type: 'enum',\n    className: 'rt-r-pr',\n    values: paddingValues,\n    parseValue: parsePaddingValue,\n    responsive: true,\n  },\n  pb: {\n    type: 'enum',\n    className: 'rt-r-pb',\n    values: paddingValues,\n    parseValue: parsePaddingValue,\n    responsive: true,\n  },\n  pl: {\n    type: 'enum',\n    className: 'rt-r-pl',\n    values: paddingValues,\n    parseValue: parsePaddingValue,\n    responsive: true,\n  },\n} satisfies {\n  side: PropDef<(typeof sides)[number]>;\n  clip: PropDef<(typeof clipValues)[number]>;\n  p: PropDef<(typeof paddingValues)[number]>;\n  px: PropDef<(typeof paddingValues)[number]>;\n  py: PropDef<(typeof paddingValues)[number]>;\n  pt: PropDef<(typeof paddingValues)[number]>;\n  pr: PropDef<(typeof paddingValues)[number]>;\n  pb: PropDef<(typeof paddingValues)[number]>;\n  pl: PropDef<(typeof paddingValues)[number]>;\n};\n\nfunction parsePaddingValue(value: string) {\n  return value === 'current' ? 'inset' : value;\n}\n\nexport { insetPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { insetPropDefs } from './inset.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype InsetElement = React.ElementRef<'div'>;\ntype InsetOwnProps = GetPropDefTypes<typeof insetPropDefs>;\ninterface InsetProps\n  extends ComponentPropsWithout<'div', RemovedProps>,\n    MarginProps,\n    InsetOwnProps {}\n\nconst Inset = React.forwardRef<InsetElement, InsetProps>((props, forwardedRef) => {\n  const { asChild, className, ...insetProps } = extractProps(props, insetPropDefs, marginPropDefs);\n  const Comp = asChild ? Slot : 'div';\n  return <Comp {...insetProps} ref={forwardedRef} className={classNames('rt-Inset', className)} />;\n});\nInset.displayName = 'Inset';\n\nexport { Inset };\nexport type { InsetProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3', '4', '5', '6', '7', '8', '9'] as const;\n\nconst kbdPropDefs = {\n  ...asChildPropDef,\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: sizes,\n    responsive: true,\n  },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n};\n\nexport { kbdPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { kbdPropDefs } from './kbd.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype KbdElement = React.ElementRef<'kbd'>;\ntype KbdOwnProps = GetPropDefTypes<typeof kbdPropDefs>;\ninterface KbdProps extends ComponentPropsWithout<'kbd', RemovedProps>, MarginProps, KbdOwnProps {}\nconst Kbd = React.forwardRef<KbdElement, KbdProps>((props, forwardedRef) => {\n  const { asChild, className, ...kbdProps } = extractProps(props, kbdPropDefs, marginPropDefs);\n  const Comp = asChild ? Slot : 'kbd';\n  return (\n    <Comp\n      {...kbdProps}\n      ref={forwardedRef}\n      className={classNames('rt-reset', 'rt-Kbd', className)}\n    />\n  );\n});\nKbd.displayName = 'Kbd';\n\nexport { Kbd };\nexport type { KbdProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { accentColorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { leadingTrimPropDef } from '../props/leading-trim.prop.js';\nimport { textWrapPropDef } from '../props/text-wrap.prop.js';\nimport { truncatePropDef } from '../props/truncate.prop.js';\nimport { weightPropDef } from '../props/weight.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3', '4', '5', '6', '7', '8', '9'] as const;\nconst underline = ['auto', 'always', 'hover', 'none'] as const;\n\nconst linkPropDefs = {\n  ...asChildPropDef,\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: sizes,\n    responsive: true,\n  },\n  ...weightPropDef,\n  ...leadingTrimPropDef,\n  ...truncatePropDef,\n  ...textWrapPropDef,\n  underline: { type: 'enum', className: 'rt-underline', values: underline, default: 'auto' },\n  ...accentColorPropDef,\n  ...highContrastPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  underline: PropDef<(typeof underline)[number]>;\n};\n\nexport { linkPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { Text } from './text.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { linkPropDefs } from './link.props.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype LinkElement = React.ElementRef<'a'>;\ntype LinkOwnProps = GetPropDefTypes<typeof linkPropDefs>;\ninterface LinkProps extends ComponentPropsWithout<'a', RemovedProps>, MarginProps, LinkOwnProps {}\nconst Link = React.forwardRef<LinkElement, LinkProps>((props, forwardedRef) => {\n  const { children, className, color, asChild, ...linkProps } = extractProps(props, linkPropDefs);\n  return (\n    <Text\n      {...linkProps}\n      data-accent-color={color}\n      ref={forwardedRef}\n      asChild\n      className={classNames('rt-reset', 'rt-Link', className)}\n    >\n      {asChild ? children : <a>{children}</a>}\n    </Text>\n  );\n});\nLink.displayName = 'Link';\n\nexport { Link };\nexport type { LinkProps };\n", "'use client';\nexport {\n  createPopoverScope,\n  //\n  Popover,\n  PopoverAnchor,\n  PopoverTrigger,\n  PopoverPortal,\n  PopoverContent,\n  PopoverClose,\n  PopoverArrow,\n  //\n  Root,\n  Anchor,\n  Trigger,\n  Portal,\n  Content,\n  Close,\n  Arrow,\n} from './Popover';\nexport type {\n  PopoverProps,\n  PopoverAnchorProps,\n  PopoverTriggerProps,\n  PopoverPortalProps,\n  PopoverContentProps,\n  PopoverCloseProps,\n  PopoverArrowProps,\n} from './Popover';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { Slot } from '@radix-ui/react-slot';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { hideOthers } from 'aria-hidden';\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Popover\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPOVER_NAME = 'Popover';\n\ntype ScopedProps<P> = P & { __scopePopover?: Scope };\nconst [createPopoverContext, createPopoverScope] = createContextScope(POPOVER_NAME, [\n  createPopperScope,\n]);\nconst usePopperScope = createPopperScope();\n\ntype PopoverContextValue = {\n  triggerRef: React.RefObject<HTMLButtonElement>;\n  contentId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  hasCustomAnchor: boolean;\n  onCustomAnchorAdd(): void;\n  onCustomAnchorRemove(): void;\n  modal: boolean;\n};\n\nconst [PopoverProvider, usePopoverContext] =\n  createPopoverContext<PopoverContextValue>(POPOVER_NAME);\n\ninterface PopoverProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?: (open: boolean) => void;\n  modal?: boolean;\n}\n\nconst Popover: React.FC<PopoverProps> = (props: ScopedProps<PopoverProps>) => {\n  const {\n    __scopePopover,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = false,\n  } = props;\n  const popperScope = usePopperScope(__scopePopover);\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const [hasCustomAnchor, setHasCustomAnchor] = React.useState(false);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <PopoverProvider\n        scope={__scopePopover}\n        contentId={useId()}\n        triggerRef={triggerRef}\n        open={open}\n        onOpenChange={setOpen}\n        onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n        hasCustomAnchor={hasCustomAnchor}\n        onCustomAnchorAdd={React.useCallback(() => setHasCustomAnchor(true), [])}\n        onCustomAnchorRemove={React.useCallback(() => setHasCustomAnchor(false), [])}\n        modal={modal}\n      >\n        {children}\n      </PopoverProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nPopover.displayName = POPOVER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopoverAnchor';\n\ntype PopoverAnchorElement = React.ElementRef<typeof PopperPrimitive.Anchor>;\ntype PopperAnchorProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Anchor>;\ninterface PopoverAnchorProps extends PopperAnchorProps {}\n\nconst PopoverAnchor = React.forwardRef<PopoverAnchorElement, PopoverAnchorProps>(\n  (props: ScopedProps<PopoverAnchorProps>, forwardedRef) => {\n    const { __scopePopover, ...anchorProps } = props;\n    const context = usePopoverContext(ANCHOR_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n    const { onCustomAnchorAdd, onCustomAnchorRemove } = context;\n\n    React.useEffect(() => {\n      onCustomAnchorAdd();\n      return () => onCustomAnchorRemove();\n    }, [onCustomAnchorAdd, onCustomAnchorRemove]);\n\n    return <PopperPrimitive.Anchor {...popperScope} {...anchorProps} ref={forwardedRef} />;\n  }\n);\n\nPopoverAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'PopoverTrigger';\n\ntype PopoverTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface PopoverTriggerProps extends PrimitiveButtonProps {}\n\nconst PopoverTrigger = React.forwardRef<PopoverTriggerElement, PopoverTriggerProps>(\n  (props: ScopedProps<PopoverTriggerProps>, forwardedRef) => {\n    const { __scopePopover, ...triggerProps } = props;\n    const context = usePopoverContext(TRIGGER_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n\n    const trigger = (\n      <Primitive.button\n        type=\"button\"\n        aria-haspopup=\"dialog\"\n        aria-expanded={context.open}\n        aria-controls={context.contentId}\n        data-state={getState(context.open)}\n        {...triggerProps}\n        ref={composedTriggerRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n\n    return context.hasCustomAnchor ? (\n      trigger\n    ) : (\n      <PopperPrimitive.Anchor asChild {...popperScope}>\n        {trigger}\n      </PopperPrimitive.Anchor>\n    );\n  }\n);\n\nPopoverTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'PopoverPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createPopoverContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface PopoverPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst PopoverPortal: React.FC<PopoverPortalProps> = (props: ScopedProps<PopoverPortalProps>) => {\n  const { __scopePopover, forceMount, children, container } = props;\n  const context = usePopoverContext(PORTAL_NAME, __scopePopover);\n  return (\n    <PortalProvider scope={__scopePopover} forceMount={forceMount}>\n      <Presence present={forceMount || context.open}>\n        <PortalPrimitive asChild container={container}>\n          {children}\n        </PortalPrimitive>\n      </Presence>\n    </PortalProvider>\n  );\n};\n\nPopoverPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopoverContent';\n\ninterface PopoverContentProps extends PopoverContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst PopoverContent = React.forwardRef<PopoverContentTypeElement, PopoverContentProps>(\n  (props: ScopedProps<PopoverContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopePopover);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    return (\n      <Presence present={forceMount || context.open}>\n        {context.modal ? (\n          <PopoverContentModal {...contentProps} ref={forwardedRef} />\n        ) : (\n          <PopoverContentNonModal {...contentProps} ref={forwardedRef} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nPopoverContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PopoverContentTypeElement = PopoverContentImplElement;\ninterface PopoverContentTypeProps\n  extends Omit<PopoverContentImplProps, 'trapFocus' | 'disableOutsidePointerEvents'> {}\n\nconst PopoverContentModal = React.forwardRef<PopoverContentTypeElement, PopoverContentTypeProps>(\n  (props: ScopedProps<PopoverContentTypeProps>, forwardedRef) => {\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n    const isRightClickOutsideRef = React.useRef(false);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      const content = contentRef.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <RemoveScroll as={Slot} allowPinchZoom>\n        <PopoverContentImpl\n          {...props}\n          ref={composedRefs}\n          // we make sure we're not trapping once it's been closed\n          // (closed !== unmounted when animating out)\n          trapFocus={context.open}\n          disableOutsidePointerEvents\n          onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n            event.preventDefault();\n            if (!isRightClickOutsideRef.current) context.triggerRef.current?.focus();\n          })}\n          onPointerDownOutside={composeEventHandlers(\n            props.onPointerDownOutside,\n            (event) => {\n              const originalEvent = event.detail.originalEvent;\n              const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n              const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n\n              isRightClickOutsideRef.current = isRightClick;\n            },\n            { checkForDefaultPrevented: false }\n          )}\n          // When focus is trapped, a `focusout` event may still happen.\n          // We make sure we don't trigger our `onDismiss` in such case.\n          onFocusOutside={composeEventHandlers(\n            props.onFocusOutside,\n            (event) => event.preventDefault(),\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </RemoveScroll>\n    );\n  }\n);\n\nconst PopoverContentNonModal = React.forwardRef<PopoverContentTypeElement, PopoverContentTypeProps>(\n  (props: ScopedProps<PopoverContentTypeProps>, forwardedRef) => {\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    const hasInteractedOutsideRef = React.useRef(false);\n    const hasPointerDownOutsideRef = React.useRef(false);\n\n    return (\n      <PopoverContentImpl\n        {...props}\n        ref={forwardedRef}\n        trapFocus={false}\n        disableOutsidePointerEvents={false}\n        onCloseAutoFocus={(event) => {\n          props.onCloseAutoFocus?.(event);\n\n          if (!event.defaultPrevented) {\n            if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n            // Always prevent auto focus because we either focus manually or want user agent focus\n            event.preventDefault();\n          }\n\n          hasInteractedOutsideRef.current = false;\n          hasPointerDownOutsideRef.current = false;\n        }}\n        onInteractOutside={(event) => {\n          props.onInteractOutside?.(event);\n\n          if (!event.defaultPrevented) {\n            hasInteractedOutsideRef.current = true;\n            if (event.detail.originalEvent.type === 'pointerdown') {\n              hasPointerDownOutsideRef.current = true;\n            }\n          }\n\n          // Prevent dismissing when clicking the trigger.\n          // As the trigger is already setup to close, without doing so would\n          // cause it to close and immediately open.\n          const target = event.target as HTMLElement;\n          const targetIsTrigger = context.triggerRef.current?.contains(target);\n          if (targetIsTrigger) event.preventDefault();\n\n          // On Safari if the trigger is inside a container with tabIndex={0}, when clicked\n          // we will get the pointer down outside event on the trigger, but then a subsequent\n          // focus outside event on the container, we ignore any focus outside event when we've\n          // already had a pointer down outside event.\n          if (event.detail.originalEvent.type === 'focusin' && hasPointerDownOutsideRef.current) {\n            event.preventDefault();\n          }\n        }}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PopoverContentImplElement = React.ElementRef<typeof PopperPrimitive.Content>;\ntype FocusScopeProps = React.ComponentPropsWithoutRef<typeof FocusScope>;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype PopperContentProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ninterface PopoverContentImplProps\n  extends Omit<PopperContentProps, 'onPlaced'>,\n    Omit<DismissableLayerProps, 'onDismiss'> {\n  /**\n   * Whether focus should be trapped within the `Popover`\n   * (default: false)\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n}\n\nconst PopoverContentImpl = React.forwardRef<PopoverContentImplElement, PopoverContentImplProps>(\n  (props: ScopedProps<PopoverContentImplProps>, forwardedRef) => {\n    const {\n      __scopePopover,\n      trapFocus,\n      onOpenAutoFocus,\n      onCloseAutoFocus,\n      disableOutsidePointerEvents,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      ...contentProps\n    } = props;\n    const context = usePopoverContext(CONTENT_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n\n    // Make sure the whole tree has focus guards as our `Popover` may be\n    // the last element in the DOM (beacuse of the `Portal`)\n    useFocusGuards();\n\n    return (\n      <FocusScope\n        asChild\n        loop\n        trapped={trapFocus}\n        onMountAutoFocus={onOpenAutoFocus}\n        onUnmountAutoFocus={onCloseAutoFocus}\n      >\n        <DismissableLayer\n          asChild\n          disableOutsidePointerEvents={disableOutsidePointerEvents}\n          onInteractOutside={onInteractOutside}\n          onEscapeKeyDown={onEscapeKeyDown}\n          onPointerDownOutside={onPointerDownOutside}\n          onFocusOutside={onFocusOutside}\n          onDismiss={() => context.onOpenChange(false)}\n        >\n          <PopperPrimitive.Content\n            data-state={getState(context.open)}\n            role=\"dialog\"\n            id={context.contentId}\n            {...popperScope}\n            {...contentProps}\n            ref={forwardedRef}\n            style={{\n              ...contentProps.style,\n              // re-namespace exposed content custom properties\n              ...{\n                '--radix-popover-content-transform-origin': 'var(--radix-popper-transform-origin)',\n                '--radix-popover-content-available-width': 'var(--radix-popper-available-width)',\n                '--radix-popover-content-available-height': 'var(--radix-popper-available-height)',\n                '--radix-popover-trigger-width': 'var(--radix-popper-anchor-width)',\n                '--radix-popover-trigger-height': 'var(--radix-popper-anchor-height)',\n              },\n            }}\n          />\n        </DismissableLayer>\n      </FocusScope>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst CLOSE_NAME = 'PopoverClose';\n\ntype PopoverCloseElement = React.ElementRef<typeof Primitive.button>;\ninterface PopoverCloseProps extends PrimitiveButtonProps {}\n\nconst PopoverClose = React.forwardRef<PopoverCloseElement, PopoverCloseProps>(\n  (props: ScopedProps<PopoverCloseProps>, forwardedRef) => {\n    const { __scopePopover, ...closeProps } = props;\n    const context = usePopoverContext(CLOSE_NAME, __scopePopover);\n    return (\n      <Primitive.button\n        type=\"button\"\n        {...closeProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, () => context.onOpenChange(false))}\n      />\n    );\n  }\n);\n\nPopoverClose.displayName = CLOSE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopoverArrow';\n\ntype PopoverArrowElement = React.ElementRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface PopoverArrowProps extends PopperArrowProps {}\n\nconst PopoverArrow = React.forwardRef<PopoverArrowElement, PopoverArrowProps>(\n  (props: ScopedProps<PopoverArrowProps>, forwardedRef) => {\n    const { __scopePopover, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopePopover);\n    return <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nPopoverArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst Root = Popover;\nconst Anchor = PopoverAnchor;\nconst Trigger = PopoverTrigger;\nconst Portal = PopoverPortal;\nconst Content = PopoverContent;\nconst Close = PopoverClose;\nconst Arrow = PopoverArrow;\n\nexport {\n  createPopoverScope,\n  //\n  Popover,\n  PopoverAnchor,\n  PopoverTrigger,\n  PopoverPortal,\n  PopoverContent,\n  PopoverClose,\n  PopoverArrow,\n  //\n  Root,\n  Anchor,\n  Trigger,\n  Portal,\n  Content,\n  Close,\n  Arrow,\n};\nexport type {\n  PopoverProps,\n  PopoverAnchorProps,\n  PopoverTriggerProps,\n  PopoverPortalProps,\n  PopoverContentProps,\n  PopoverCloseProps,\n  PopoverArrowProps,\n};\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { heightPropDefs } from '../props/height.props.js';\nimport { widthPropDefs } from '../props/width.props.js';\n\nimport type { PropDef, GetPropDefTypes } from '../props/prop-def.js';\n\nconst contentSizes = ['1', '2', '3', '4'] as const;\n\nconst popoverContentPropDefs = {\n  ...asChildPropDef,\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: contentSizes,\n    default: '2',\n    responsive: true,\n  },\n  width: widthPropDefs.width,\n  minWidth: widthPropDefs.minWidth,\n  maxWidth: { ...widthPropDefs.maxWidth, default: '480px' },\n  ...heightPropDefs,\n} satisfies {\n  width: PropDef<string>;\n  minWidth: PropDef<string>;\n  maxWidth: PropDef<string>;\n  size: PropDef<(typeof contentSizes)[number]>;\n};\n\ntype PopoverContentOwnProps = GetPropDefTypes<\n  typeof popoverContentPropDefs &\n    typeof asChildPropDef &\n    typeof widthPropDefs &\n    typeof heightPropDefs\n>;\n\nexport { popoverContentPropDefs };\nexport type { PopoverContentOwnProps };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport * as PopoverPrimitive from '@radix-ui/react-popover';\n\nimport { extractProps } from '../helpers/extract-props.js';\nimport { requireReactElement } from '../helpers/require-react-element.js';\nimport { popoverContentPropDefs } from './popover.props.js';\nimport { Theme } from './theme.js';\n\nimport type { PopoverContentOwnProps } from './popover.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ninterface PopoverRootProps extends React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Root> {}\nconst PopoverRoot: React.FC<PopoverRootProps> = (props: PopoverRootProps) => (\n  <PopoverPrimitive.Root {...props} />\n);\nPopoverRoot.displayName = 'Popover.Root';\n\ntype PopoverTriggerElement = React.ElementRef<typeof PopoverPrimitive.Trigger>;\ninterface PopoverTriggerProps\n  extends ComponentPropsWithout<typeof PopoverPrimitive.Trigger, RemovedProps> {}\nconst PopoverTrigger = React.forwardRef<PopoverTriggerElement, PopoverTriggerProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <PopoverPrimitive.Trigger {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </PopoverPrimitive.Trigger>\n  )\n);\nPopoverTrigger.displayName = 'Popover.Trigger';\n\ntype PopoverContentElement = React.ElementRef<typeof PopoverPrimitive.Content>;\ninterface PopoverContentProps\n  extends ComponentPropsWithout<typeof PopoverPrimitive.Content, RemovedProps>,\n    PopoverContentOwnProps {\n  container?: React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Portal>['container'];\n}\nconst PopoverContent = React.forwardRef<PopoverContentElement, PopoverContentProps>(\n  (props, forwardedRef) => {\n    const { className, forceMount, container, ...contentProps } = extractProps(\n      props,\n      popoverContentPropDefs\n    );\n    return (\n      <PopoverPrimitive.Portal container={container} forceMount={forceMount}>\n        <Theme asChild>\n          <PopoverPrimitive.Content\n            align=\"start\"\n            sideOffset={8}\n            collisionPadding={10}\n            {...contentProps}\n            ref={forwardedRef}\n            className={classNames('rt-PopperContent', 'rt-PopoverContent', className)}\n          />\n        </Theme>\n      </PopoverPrimitive.Portal>\n    );\n  }\n);\nPopoverContent.displayName = 'Popover.Content';\n\ntype PopoverCloseElement = React.ElementRef<typeof PopoverPrimitive.Close>;\ninterface PopoverCloseProps\n  extends ComponentPropsWithout<typeof PopoverPrimitive.Close, RemovedProps> {}\nconst PopoverClose = React.forwardRef<PopoverCloseElement, PopoverCloseProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <PopoverPrimitive.Close {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </PopoverPrimitive.Close>\n  )\n);\nPopoverClose.displayName = 'Popover.Close';\n\ntype PopoverAnchorElement = React.ElementRef<typeof PopoverPrimitive.Anchor>;\ninterface PopoverAnchorProps extends React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Anchor> {}\nconst PopoverAnchor = React.forwardRef<PopoverAnchorElement, PopoverAnchorProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <PopoverPrimitive.Anchor {...props} ref={forwardedRef} />\n  )\n);\n\nPopoverAnchor.displayName = 'Popover.Anchor';\n\nexport {\n  PopoverRoot as Root,\n  PopoverContent as Content,\n  PopoverTrigger as Trigger,\n  PopoverClose as Close,\n  PopoverAnchor as Anchor,\n};\nexport type {\n  PopoverRootProps as RootProps,\n  PopoverContentProps as ContentProps,\n  PopoverTriggerProps as TriggerProps,\n  PopoverCloseProps as CloseProps,\n  PopoverAnchorProps as AnchorProps,\n};\n", "export { Portal } from '@radix-ui/react-portal';\n", "'use client';\nexport {\n  createProgressScope,\n  //\n  Progress,\n  ProgressIndicator,\n  //\n  Root,\n  Indicator,\n} from './Progress';\nexport type { ProgressProps, ProgressIndicatorProps } from './Progress';\n", "import * as React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Progress\n * -----------------------------------------------------------------------------------------------*/\n\nconst PROGRESS_NAME = 'Progress';\nconst DEFAULT_MAX = 100;\n\ntype ScopedProps<P> = P & { __scopeProgress?: Scope };\nconst [createProgressContext, createProgressScope] = createContextScope(PROGRESS_NAME);\n\ntype ProgressState = 'indeterminate' | 'complete' | 'loading';\ntype ProgressContextValue = { value: number | null; max: number };\nconst [ProgressProvider, useProgressContext] =\n  createProgressContext<ProgressContextValue>(PROGRESS_NAME);\n\ntype ProgressElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface ProgressProps extends PrimitiveDivProps {\n  value?: number | null | undefined;\n  max?: number;\n  getValueLabel?(value: number, max: number): string;\n}\n\nconst Progress = React.forwardRef<ProgressElement, ProgressProps>(\n  (props: ScopedProps<ProgressProps>, forwardedRef) => {\n    const {\n      __scopeProgress,\n      value: valueProp = null,\n      max: maxProp,\n      getValueLabel = defaultGetValueLabel,\n      ...progressProps\n    } = props;\n\n    if ((maxProp || maxProp === 0) && !isValidMaxNumber(maxProp)) {\n      console.error(getInvalidMaxError(`${maxProp}`, 'Progress'));\n    }\n\n    const max = isValidMaxNumber(maxProp) ? maxProp : DEFAULT_MAX;\n\n    if (valueProp !== null && !isValidValueNumber(valueProp, max)) {\n      console.error(getInvalidValueError(`${valueProp}`, 'Progress'));\n    }\n\n    const value = isValidValueNumber(valueProp, max) ? valueProp : null;\n    const valueLabel = isNumber(value) ? getValueLabel(value, max) : undefined;\n\n    return (\n      <ProgressProvider scope={__scopeProgress} value={value} max={max}>\n        <Primitive.div\n          aria-valuemax={max}\n          aria-valuemin={0}\n          aria-valuenow={isNumber(value) ? value : undefined}\n          aria-valuetext={valueLabel}\n          role=\"progressbar\"\n          data-state={getProgressState(value, max)}\n          data-value={value ?? undefined}\n          data-max={max}\n          {...progressProps}\n          ref={forwardedRef}\n        />\n      </ProgressProvider>\n    );\n  }\n);\n\nProgress.displayName = PROGRESS_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ProgressIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'ProgressIndicator';\n\ntype ProgressIndicatorElement = React.ElementRef<typeof Primitive.div>;\ninterface ProgressIndicatorProps extends PrimitiveDivProps {}\n\nconst ProgressIndicator = React.forwardRef<ProgressIndicatorElement, ProgressIndicatorProps>(\n  (props: ScopedProps<ProgressIndicatorProps>, forwardedRef) => {\n    const { __scopeProgress, ...indicatorProps } = props;\n    const context = useProgressContext(INDICATOR_NAME, __scopeProgress);\n    return (\n      <Primitive.div\n        data-state={getProgressState(context.value, context.max)}\n        data-value={context.value ?? undefined}\n        data-max={context.max}\n        {...indicatorProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nProgressIndicator.displayName = INDICATOR_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction defaultGetValueLabel(value: number, max: number) {\n  return `${Math.round((value / max) * 100)}%`;\n}\n\nfunction getProgressState(value: number | undefined | null, maxValue: number): ProgressState {\n  return value == null ? 'indeterminate' : value === maxValue ? 'complete' : 'loading';\n}\n\nfunction isNumber(value: any): value is number {\n  return typeof value === 'number';\n}\n\nfunction isValidMaxNumber(max: any): max is number {\n  // prettier-ignore\n  return (\n    isNumber(max) &&\n    !isNaN(max) &&\n    max > 0\n  );\n}\n\nfunction isValidValueNumber(value: any, max: number): value is number {\n  // prettier-ignore\n  return (\n    isNumber(value) &&\n    !isNaN(value) &&\n    value <= max &&\n    value >= 0\n  );\n}\n\n// Split this out for clearer readability of the error message.\nfunction getInvalidMaxError(propValue: string, componentName: string) {\n  return `Invalid prop \\`max\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`. Only numbers greater than 0 are valid max values. Defaulting to \\`${DEFAULT_MAX}\\`.`;\n}\n\nfunction getInvalidValueError(propValue: string, componentName: string) {\n  return `Invalid prop \\`value\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`. The \\`value\\` prop must be:\n  - a positive number\n  - less than the value passed to \\`max\\` (or ${DEFAULT_MAX} if no \\`max\\` prop is set)\n  - \\`null\\` or \\`undefined\\` if the progress is indeterminate.\n\nDefaulting to \\`null\\`.`;\n}\n\nconst Root = Progress;\nconst Indicator = ProgressIndicator;\n\nexport {\n  createProgressScope,\n  //\n  Progress,\n  ProgressIndicator,\n  //\n  Root,\n  Indicator,\n};\nexport type { ProgressProps, ProgressIndicatorProps };\n", "import { colorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { radiusPropDef } from '../props/radius.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['classic', 'surface', 'soft'] as const;\n\nconst progressPropDefs = {\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'surface' },\n  ...colorPropDef,\n  ...highContrastPropDef,\n  ...radiusPropDef,\n  duration: { type: 'string' },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n  duration: PropDef<string>;\n};\n\nexport { progressPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport * as ProgressPrimitive from '@radix-ui/react-progress';\n\nimport { progressPropDefs } from './progress.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { mergeStyles } from '../helpers/merge-styles.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype ProgressElement = React.ElementRef<typeof ProgressPrimitive.Root>;\ntype ProgressOwnProps = GetPropDefTypes<typeof progressPropDefs>;\ninterface ProgressProps\n  extends ComponentPropsWithout<typeof ProgressPrimitive.Root, RemovedProps | 'children'>,\n    MarginProps,\n    ProgressOwnProps {\n  duration?: `${number}s` | `${number}ms`;\n}\nconst Progress = React.forwardRef<ProgressElement, ProgressProps>((props, forwardedRef) => {\n  const { className, style, color, radius, duration, ...progressProps } = extractProps(\n    props,\n    progressPropDefs,\n    marginPropDefs\n  );\n\n  return (\n    <ProgressPrimitive.Root\n      data-accent-color={color}\n      data-radius={radius}\n      ref={forwardedRef}\n      className={classNames('rt-ProgressRoot', className)}\n      style={mergeStyles(\n        {\n          '--progress-duration': 'value' in progressProps ? undefined : duration,\n          '--progress-value': 'value' in progressProps ? progressProps.value : undefined,\n          '--progress-max': 'max' in progressProps ? progressProps.max : undefined,\n        },\n        style\n      )}\n      {...progressProps}\n      asChild={false}\n    >\n      <ProgressPrimitive.Indicator className=\"rt-ProgressIndicator\" />\n    </ProgressPrimitive.Root>\n  );\n});\nProgress.displayName = 'Progress';\n\nexport { Progress };\nexport type { ProgressProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { textWrapPropDef } from '../props/text-wrap.prop.js';\nimport { truncatePropDef } from '../props/truncate.prop.js';\n\nconst quotePropDefs = {\n  ...asChildPropDef,\n  ...truncatePropDef,\n  ...textWrapPropDef,\n};\n\nexport { quotePropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { quotePropDefs } from './quote.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype QuoteElement = React.ElementRef<'q'>;\ntype QuoteOwnProps = GetPropDefTypes<typeof quotePropDefs>;\ninterface QuoteProps extends ComponentPropsWithout<'q', RemovedProps>, QuoteOwnProps {}\nconst Quote = React.forwardRef<QuoteElement, QuoteProps>((props, forwardedRef) => {\n  const { asChild, className, ...quoteProps } = extractProps(props, quotePropDefs);\n  const Comp = asChild ? Slot : 'q';\n  return <Comp {...quoteProps} ref={forwardedRef} className={classNames('rt-Quote', className)} />;\n});\nQuote.displayName = 'Quote';\n\nexport { Quote };\nexport type { QuoteProps };\n", "'use client';\nexport {\n  createRadioGroupScope,\n  //\n  RadioGroup,\n  RadioGroupItem,\n  RadioGroupIndicator,\n  //\n  Root,\n  Item,\n  Indicator,\n} from './RadioGroup';\nexport type { RadioGroupProps, RadioGroupItemProps, RadioGroupIndicatorProps } from './RadioGroup';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { Radio, RadioIndicator, createRadioScope } from './Radio';\n\nimport type { Scope } from '@radix-ui/react-context';\n\nconst ARROW_KEYS = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\n\n/* -------------------------------------------------------------------------------------------------\n * RadioGroup\n * -----------------------------------------------------------------------------------------------*/\nconst RADIO_GROUP_NAME = 'RadioGroup';\n\ntype ScopedProps<P> = P & { __scopeRadioGroup?: Scope };\nconst [createRadioGroupContext, createRadioGroupScope] = createContextScope(RADIO_GROUP_NAME, [\n  createRovingFocusGroupScope,\n  createRadioScope,\n]);\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\nconst useRadioScope = createRadioScope();\n\ntype RadioGroupContextValue = {\n  name?: string;\n  required: boolean;\n  disabled: boolean;\n  value?: string;\n  onValueChange(value: string): void;\n};\n\nconst [RadioGroupProvider, useRadioGroupContext] =\n  createRadioGroupContext<RadioGroupContextValue>(RADIO_GROUP_NAME);\n\ntype RadioGroupElement = React.ElementRef<typeof Primitive.div>;\ntype RovingFocusGroupProps = React.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface RadioGroupProps extends PrimitiveDivProps {\n  name?: RadioGroupContextValue['name'];\n  required?: React.ComponentPropsWithoutRef<typeof Radio>['required'];\n  disabled?: React.ComponentPropsWithoutRef<typeof Radio>['disabled'];\n  dir?: RovingFocusGroupProps['dir'];\n  orientation?: RovingFocusGroupProps['orientation'];\n  loop?: RovingFocusGroupProps['loop'];\n  defaultValue?: string;\n  value?: RadioGroupContextValue['value'];\n  onValueChange?: RadioGroupContextValue['onValueChange'];\n}\n\nconst RadioGroup = React.forwardRef<RadioGroupElement, RadioGroupProps>(\n  (props: ScopedProps<RadioGroupProps>, forwardedRef) => {\n    const {\n      __scopeRadioGroup,\n      name,\n      defaultValue,\n      value: valueProp,\n      required = false,\n      disabled = false,\n      orientation,\n      dir,\n      loop = true,\n      onValueChange,\n      ...groupProps\n    } = props;\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeRadioGroup);\n    const direction = useDirection(dir);\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      defaultProp: defaultValue,\n      onChange: onValueChange,\n    });\n\n    return (\n      <RadioGroupProvider\n        scope={__scopeRadioGroup}\n        name={name}\n        required={required}\n        disabled={disabled}\n        value={value}\n        onValueChange={setValue}\n      >\n        <RovingFocusGroup.Root\n          asChild\n          {...rovingFocusGroupScope}\n          orientation={orientation}\n          dir={direction}\n          loop={loop}\n        >\n          <Primitive.div\n            role=\"radiogroup\"\n            aria-required={required}\n            aria-orientation={orientation}\n            data-disabled={disabled ? '' : undefined}\n            dir={direction}\n            {...groupProps}\n            ref={forwardedRef}\n          />\n        </RovingFocusGroup.Root>\n      </RadioGroupProvider>\n    );\n  }\n);\n\nRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * RadioGroupItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'RadioGroupItem';\n\ntype RadioGroupItemElement = React.ElementRef<typeof Radio>;\ntype RadioProps = React.ComponentPropsWithoutRef<typeof Radio>;\ninterface RadioGroupItemProps extends Omit<RadioProps, 'onCheck' | 'name'> {\n  value: string;\n}\n\nconst RadioGroupItem = React.forwardRef<RadioGroupItemElement, RadioGroupItemProps>(\n  (props: ScopedProps<RadioGroupItemProps>, forwardedRef) => {\n    const { __scopeRadioGroup, disabled, ...itemProps } = props;\n    const context = useRadioGroupContext(ITEM_NAME, __scopeRadioGroup);\n    const isDisabled = context.disabled || disabled;\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeRadioGroup);\n    const radioScope = useRadioScope(__scopeRadioGroup);\n    const ref = React.useRef<React.ElementRef<typeof Radio>>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const checked = context.value === itemProps.value;\n    const isArrowKeyPressedRef = React.useRef(false);\n\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (ARROW_KEYS.includes(event.key)) {\n          isArrowKeyPressedRef.current = true;\n        }\n      };\n      const handleKeyUp = () => (isArrowKeyPressedRef.current = false);\n      document.addEventListener('keydown', handleKeyDown);\n      document.addEventListener('keyup', handleKeyUp);\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown);\n        document.removeEventListener('keyup', handleKeyUp);\n      };\n    }, []);\n\n    return (\n      <RovingFocusGroup.Item\n        asChild\n        {...rovingFocusGroupScope}\n        focusable={!isDisabled}\n        active={checked}\n      >\n        <Radio\n          disabled={isDisabled}\n          required={context.required}\n          checked={checked}\n          {...radioScope}\n          {...itemProps}\n          name={context.name}\n          ref={composedRefs}\n          onCheck={() => context.onValueChange(itemProps.value)}\n          onKeyDown={composeEventHandlers((event) => {\n            // According to WAI ARIA, radio groups don't activate items on enter keypress\n            if (event.key === 'Enter') event.preventDefault();\n          })}\n          onFocus={composeEventHandlers(itemProps.onFocus, () => {\n            /**\n             * Our `RovingFocusGroup` will focus the radio when navigating with arrow keys\n             * and we need to \"check\" it in that case. We click it to \"check\" it (instead\n             * of updating `context.value`) so that the radio change event fires.\n             */\n            if (isArrowKeyPressedRef.current) ref.current?.click();\n          })}\n        />\n      </RovingFocusGroup.Item>\n    );\n  }\n);\n\nRadioGroupItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * RadioGroupIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'RadioGroupIndicator';\n\ntype RadioGroupIndicatorElement = React.ElementRef<typeof RadioIndicator>;\ntype RadioIndicatorProps = React.ComponentPropsWithoutRef<typeof RadioIndicator>;\ninterface RadioGroupIndicatorProps extends RadioIndicatorProps {}\n\nconst RadioGroupIndicator = React.forwardRef<RadioGroupIndicatorElement, RadioGroupIndicatorProps>(\n  (props: ScopedProps<RadioGroupIndicatorProps>, forwardedRef) => {\n    const { __scopeRadioGroup, ...indicatorProps } = props;\n    const radioScope = useRadioScope(__scopeRadioGroup);\n    return <RadioIndicator {...radioScope} {...indicatorProps} ref={forwardedRef} />;\n  }\n);\n\nRadioGroupIndicator.displayName = INDICATOR_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nconst Root = RadioGroup;\nconst Item = RadioGroupItem;\nconst Indicator = RadioGroupIndicator;\n\nexport {\n  createRadioGroupScope,\n  //\n  RadioGroup,\n  RadioGroupItem,\n  RadioGroupIndicator,\n  //\n  Root,\n  Item,\n  Indicator,\n};\nexport type { RadioGroupProps, RadioGroupItemProps, RadioGroupIndicatorProps };\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useSize } from '@radix-ui/react-use-size';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Radio\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_NAME = 'Radio';\n\ntype ScopedProps<P> = P & { __scopeRadio?: Scope };\nconst [createRadioContext, createRadioScope] = createContextScope(RADIO_NAME);\n\ntype RadioContextValue = { checked: boolean; disabled?: boolean };\nconst [RadioProvider, useRadioContext] = createRadioContext<RadioContextValue>(RADIO_NAME);\n\ntype RadioElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface RadioProps extends PrimitiveButtonProps {\n  checked?: boolean;\n  required?: boolean;\n  onCheck?(): void;\n}\n\nconst Radio = React.forwardRef<RadioElement, RadioProps>(\n  (props: ScopedProps<RadioProps>, forwardedRef) => {\n    const {\n      __scopeRadio,\n      name,\n      checked = false,\n      required,\n      disabled,\n      value = 'on',\n      onCheck,\n      ...radioProps\n    } = props;\n    const [button, setButton] = React.useState<HTMLButtonElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));\n    const hasConsumerStoppedPropagationRef = React.useRef(false);\n    // We set this to true by default so that events bubble to forms without JS (SSR)\n    const isFormControl = button ? Boolean(button.closest('form')) : true;\n\n    return (\n      <RadioProvider scope={__scopeRadio} checked={checked} disabled={disabled}>\n        <Primitive.button\n          type=\"button\"\n          role=\"radio\"\n          aria-checked={checked}\n          data-state={getState(checked)}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          value={value}\n          {...radioProps}\n          ref={composedRefs}\n          onClick={composeEventHandlers(props.onClick, (event) => {\n            // radios cannot be unchecked so we only communicate a checked state\n            if (!checked) onCheck?.();\n            if (isFormControl) {\n              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n              // if radio is in a form, stop propagation from the button so that we only propagate\n              // one click event (from the input). We propagate changes from an input so that native\n              // form validation works and form events reflect radio updates.\n              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n            }\n          })}\n        />\n        {isFormControl && (\n          <BubbleInput\n            control={button}\n            bubbles={!hasConsumerStoppedPropagationRef.current}\n            name={name}\n            value={value}\n            checked={checked}\n            required={required}\n            disabled={disabled}\n            // We transform because the input is absolutely positioned but we have\n            // rendered it **after** the button. This pulls it back to sit on top\n            // of the button.\n            style={{ transform: 'translateX(-100%)' }}\n          />\n        )}\n      </RadioProvider>\n    );\n  }\n);\n\nRadio.displayName = RADIO_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * RadioIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'RadioIndicator';\n\ntype RadioIndicatorElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\nexport interface RadioIndicatorProps extends PrimitiveSpanProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst RadioIndicator = React.forwardRef<RadioIndicatorElement, RadioIndicatorProps>(\n  (props: ScopedProps<RadioIndicatorProps>, forwardedRef) => {\n    const { __scopeRadio, forceMount, ...indicatorProps } = props;\n    const context = useRadioContext(INDICATOR_NAME, __scopeRadio);\n    return (\n      <Presence present={forceMount || context.checked}>\n        <Primitive.span\n          data-state={getState(context.checked)}\n          data-disabled={context.disabled ? '' : undefined}\n          {...indicatorProps}\n          ref={forwardedRef}\n        />\n      </Presence>\n    );\n  }\n);\n\nRadioIndicator.displayName = INDICATOR_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype InputProps = React.ComponentPropsWithoutRef<'input'>;\ninterface BubbleInputProps extends Omit<InputProps, 'checked'> {\n  checked: boolean;\n  control: HTMLElement | null;\n  bubbles: boolean;\n}\n\nconst BubbleInput = (props: BubbleInputProps) => {\n  const { control, checked, bubbles = true, ...inputProps } = props;\n  const ref = React.useRef<HTMLInputElement>(null);\n  const prevChecked = usePrevious(checked);\n  const controlSize = useSize(control);\n\n  // Bubble checked change to parents (e.g form change event)\n  React.useEffect(() => {\n    const input = ref.current!;\n    const inputProto = window.HTMLInputElement.prototype;\n    const descriptor = Object.getOwnPropertyDescriptor(inputProto, 'checked') as PropertyDescriptor;\n    const setChecked = descriptor.set;\n    if (prevChecked !== checked && setChecked) {\n      const event = new Event('click', { bubbles });\n      setChecked.call(input, checked);\n      input.dispatchEvent(event);\n    }\n  }, [prevChecked, checked, bubbles]);\n\n  return (\n    <input\n      type=\"radio\"\n      aria-hidden\n      defaultChecked={checked}\n      {...inputProps}\n      tabIndex={-1}\n      ref={ref}\n      style={{\n        ...props.style,\n        ...controlSize,\n        position: 'absolute',\n        pointerEvents: 'none',\n        opacity: 0,\n        margin: 0,\n      }}\n    />\n  );\n};\n\nfunction getState(checked: boolean) {\n  return checked ? 'checked' : 'unchecked';\n}\n\nexport {\n  createRadioScope,\n  //\n  Radio,\n  RadioIndicator,\n};\nexport type { RadioProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { colorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { gridPropDefs } from './grid.props.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['surface', 'classic'] as const;\n\nconst radioCardsRootPropDefs = {\n  ...asChildPropDef,\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'surface' },\n  ...colorPropDef,\n  ...highContrastPropDef,\n  columns: { ...gridPropDefs.columns, default: 'repeat(auto-fit, minmax(160px, 1fr))' },\n  gap: { ...gridPropDefs.gap, default: '4' },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n  columns: PropDef<(typeof gridPropDefs.columns.values)[number]>;\n  gap: PropDef<(typeof gridPropDefs.gap.values)[number]>;\n};\n\nexport { radioCardsRootPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport * as RadioGroupPrimitive from '@radix-ui/react-radio-group';\n\nimport { radioCardsRootPropDefs } from './radio-cards.props.js';\nimport { Grid } from './grid.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype RadioCardsRootElement = React.ElementRef<typeof RadioGroupPrimitive.Root>;\ntype RadioCardsRootOwnProps = GetPropDefTypes<typeof radioCardsRootPropDefs>;\ninterface RadioCardsRootProps\n  extends ComponentPropsWithout<\n      typeof RadioGroupPrimitive.Root,\n      'asChild' | 'color' | 'defaultChecked'\n    >,\n    MarginProps,\n    RadioCardsRootOwnProps {}\nconst RadioCardsRoot = React.forwardRef<RadioCardsRootElement, RadioCardsRootProps>(\n  (props, forwardedRef) => {\n    const { className, color, ...rootProps } = extractProps(\n      props,\n      radioCardsRootPropDefs,\n      marginPropDefs\n    );\n    return (\n      <Grid asChild>\n        <RadioGroupPrimitive.Root\n          data-accent-color={color}\n          {...rootProps}\n          ref={forwardedRef}\n          className={classNames('rt-RadioCardsRoot', className)}\n        />\n      </Grid>\n    );\n  }\n);\nRadioCardsRoot.displayName = 'RadioCards.Root';\n\ntype RadioCardsItemElement = React.ElementRef<typeof RadioGroupPrimitive.Item>;\ninterface RadioCardsItemProps\n  extends ComponentPropsWithout<typeof RadioGroupPrimitive.Item, RemovedProps>,\n    MarginProps {}\nconst RadioCardsItem = React.forwardRef<RadioCardsItemElement, RadioCardsItemProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <RadioGroupPrimitive.Item\n      {...props}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-reset', 'rt-BaseCard', 'rt-RadioCardsItem', className)}\n    />\n  )\n);\nRadioCardsItem.displayName = 'RadioCards.Item';\n\nexport { RadioCardsRoot as Root, RadioCardsItem as Item };\nexport type { RadioCardsRootProps as RootProps, RadioCardsItemProps as ItemProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { colorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['classic', 'surface', 'soft'] as const;\n\nconst radioGroupRootPropDefs = {\n  ...asChildPropDef,\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'surface' },\n  ...colorPropDef,\n  ...highContrastPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n};\n\nexport { radioGroupRootPropDefs };\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { createContextScope } from '@radix-ui/react-context';\nimport * as RadioGroupPrimitive from '@radix-ui/react-radio-group';\nimport { createRadioGroupScope } from '@radix-ui/react-radio-group';\n\nimport { radioGroupRootPropDefs } from './radio-group.props.js';\nimport { Text } from './text.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { Scope } from '@radix-ui/react-context';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\nconst RADIO_GROUP_NAME = 'RadioGroup';\n\ntype ScopedProps<P> = P & { __scopeRadioGroup?: Scope };\nconst [createRadioGroupContext] = createContextScope(RADIO_GROUP_NAME, [createRadioGroupScope]);\nconst useRadioGroupScope = createRadioGroupScope();\n\ntype RadioGroupRootOwnProps = GetPropDefTypes<typeof radioGroupRootPropDefs>;\ntype RadioGroupContextValue = RadioGroupRootOwnProps;\n\nconst [RadioGroupProvider, useRadioGroupContext] =\n  createRadioGroupContext<RadioGroupContextValue>(RADIO_GROUP_NAME);\n\ntype RadioGroupRootElement = React.ElementRef<typeof RadioGroupPrimitive.Root>;\ninterface RadioGroupRootProps\n  extends ComponentPropsWithout<\n      typeof RadioGroupPrimitive.Root,\n      'asChild' | 'color' | 'defaultChecked'\n    >,\n    MarginProps,\n    RadioGroupRootOwnProps {}\nconst RadioGroupRoot = React.forwardRef<RadioGroupRootElement, RadioGroupRootProps>(\n  (\n    {\n      color = radioGroupRootPropDefs.color.default,\n      highContrast = radioGroupRootPropDefs.highContrast.default,\n      size = radioGroupRootPropDefs.size.default,\n      variant = radioGroupRootPropDefs.variant.default,\n      ...props\n    }: ScopedProps<RadioGroupRootProps>,\n    forwardedRef\n  ) => {\n    const { __scopeRadioGroup, className, ...rootProps } = extractProps(props, marginPropDefs);\n    const radioGroupScope = useRadioGroupScope(__scopeRadioGroup);\n    return (\n      <RadioGroupProvider\n        scope={__scopeRadioGroup}\n        color={color}\n        highContrast={highContrast}\n        size={size}\n        variant={variant}\n      >\n        <RadioGroupPrimitive.Root\n          {...radioGroupScope}\n          {...rootProps}\n          ref={forwardedRef}\n          className={classNames('rt-RadioGroupRoot', className)}\n        />\n      </RadioGroupProvider>\n    );\n  }\n);\nRadioGroupRoot.displayName = 'RadioGroup.Root';\n\ntype RadioGroupItemElement = React.ElementRef<typeof RadioGroupItemRadio>;\ninterface RadioGroupItemProps\n  extends ComponentPropsWithout<typeof RadioGroupItemRadio, RemovedProps>,\n    MarginProps {}\nconst RadioGroupItem = React.forwardRef<RadioGroupItemElement, RadioGroupItemProps>(\n  (_props: ScopedProps<RadioGroupItemProps>, forwardedRef) => {\n    const { __scopeRadioGroup, children, className, style, ...props } = _props;\n    const { size } = useRadioGroupContext('RadioGroupItem', __scopeRadioGroup);\n\n    // Render `<Text as=\"label\">` if children\u00A0are provided, otherwise render\n    // the solo radio button to allow building out your custom layouts with it.\n    if (children) {\n      return (\n        <Text\n          as=\"label\"\n          size={size}\n          className={classNames('rt-RadioGroupItem', className)}\n          style={style}\n        >\n          <RadioGroupItemRadio\n            __scopeRadioGroup={__scopeRadioGroup}\n            {...props}\n            ref={forwardedRef}\n          />\n          {children && <span className=\"rt-RadioGroupItemInner\">{children}</span>}\n        </Text>\n      );\n    }\n\n    return (\n      <RadioGroupItemRadio\n        __scopeRadioGroup={__scopeRadioGroup}\n        {...props}\n        ref={forwardedRef}\n        className={className}\n        style={style}\n      />\n    );\n  }\n);\nRadioGroupItem.displayName = 'RadioGroup.Item';\n\ntype RadioGroupItemRadioElement = React.ElementRef<typeof RadioGroupPrimitive.Item>;\ninterface RadioGroupItemRadioProps\n  extends React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item> {}\nconst RadioGroupItemRadio = React.forwardRef<\n  RadioGroupItemRadioElement,\n  ScopedProps<RadioGroupItemRadioProps>\n>(({ __scopeRadioGroup, ...props }, forwardedRef) => {\n  const context = useRadioGroupContext('RadioGroupItemRadio', __scopeRadioGroup);\n  const radioGroupScope = useRadioGroupScope(__scopeRadioGroup);\n  const { color, className } = extractProps(\n    { ...props, ...context },\n    radioGroupRootPropDefs,\n    marginPropDefs\n  );\n  return (\n    <RadioGroupPrimitive.Item\n      {...radioGroupScope}\n      data-accent-color={color}\n      {...props}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-reset', 'rt-BaseRadioRoot', className)}\n    />\n  );\n});\nRadioGroupItemRadio.displayName = 'RadioGroup.ItemRadio';\n\nexport { RadioGroupRoot as Root, RadioGroupItem as Item };\nexport type { RadioGroupRootProps as RootProps, RadioGroupItemProps as ItemProps };\n", "import { colorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['classic', 'surface', 'soft'] as const;\n\nconst baseRadioPropDefs = {\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'surface' },\n  ...colorPropDef,\n  ...highContrastPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n};\n\nexport { baseRadioPropDefs };\n", "export { baseRadioPropDefs as radioPropDefs } from './base-radio.props.js';\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\nimport { radioPropDefs } from './radio.props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout } from '../helpers/component-props.js';\nimport type { NotInputRadioAttributes } from '../helpers/input-attributes.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype RadioElement = React.ElementRef<'input'>;\ntype RadioOwnProps = GetPropDefTypes<typeof radioPropDefs> & {\n  value: string;\n  onValueChange?: (value: string) => void;\n};\ntype RadioInputProps = ComponentPropsWithout<\n  'input',\n  NotInputRadioAttributes | 'color' | 'defaultValue' | 'value'\n>;\ninterface RadioProps extends RadioInputProps, MarginProps, RadioOwnProps {}\n\nconst Radio = React.forwardRef<RadioElement, RadioProps>((props, forwardedRef) => {\n  const ref = React.useRef<RadioElement>(null);\n  const { className, color, onChange, onValueChange, ...radioProps } = extractProps(\n    props,\n    radioPropDefs,\n    marginPropDefs\n  );\n  return (\n    <input\n      type=\"radio\"\n      data-accent-color={color}\n      {...radioProps}\n      onChange={composeEventHandlers(onChange, (event) =>\n        onValueChange?.(event.currentTarget.value)\n      )}\n      ref={composeRefs(ref, forwardedRef)}\n      className={classNames('rt-reset', 'rt-BaseRadioRoot', 'rt-RadioRoot', className)}\n    />\n  );\n});\nRadio.displayName = 'Radio';\n\nexport { Radio };\nexport type { RadioProps };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { requireReactElement } from '../helpers/require-react-element.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ninterface ResetProps extends ComponentPropsWithout<typeof Slot, RemovedProps> {}\nconst Reset = React.forwardRef<HTMLElement, ResetProps>(\n  ({ className, children, ...props }, forwardedRef) => {\n    return (\n      <Slot {...props} ref={forwardedRef} className={classNames('rt-reset', className)}>\n        {requireReactElement(children)}\n      </Slot>\n    );\n  }\n);\nReset.displayName = 'Reset';\n\nexport { Reset };\nexport type { ResetProps };\n", "'use client';\nexport {\n  Toggle,\n  //\n  Root,\n} from './Toggle';\nexport type { ToggleProps } from './Toggle';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Toggle\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Toggle';\n\ntype ToggleElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface ToggleProps extends PrimitiveButtonProps {\n  /**\n   * The controlled state of the toggle.\n   */\n  pressed?: boolean;\n  /**\n   * The state of the toggle when initially rendered. Use `defaultPressed`\n   * if you do not need to control the state of the toggle.\n   * @defaultValue false\n   */\n  defaultPressed?: boolean;\n  /**\n   * The callback that fires when the state of the toggle changes.\n   */\n  onPressedChange?(pressed: boolean): void;\n}\n\nconst Toggle = React.forwardRef<ToggleElement, ToggleProps>((props, forwardedRef) => {\n  const { pressed: pressedProp, defaultPressed = false, onPressedChange, ...buttonProps } = props;\n\n  const [pressed = false, setPressed] = useControllableState({\n    prop: pressedProp,\n    onChange: onPressedChange,\n    defaultProp: defaultPressed,\n  });\n\n  return (\n    <Primitive.button\n      type=\"button\"\n      aria-pressed={pressed}\n      data-state={pressed ? 'on' : 'off'}\n      data-disabled={props.disabled ? '' : undefined}\n      {...buttonProps}\n      ref={forwardedRef}\n      onClick={composeEventHandlers(props.onClick, () => {\n        if (!props.disabled) {\n          setPressed(!pressed);\n        }\n      })}\n    />\n  );\n});\n\nToggle.displayName = NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nconst Root = Toggle;\n\nexport {\n  Toggle,\n  //\n  Root,\n};\nexport type { ToggleProps };\n", "'use client';\nexport {\n  createToggleGroupScope,\n  //\n  ToggleGroup,\n  ToggleGroupItem,\n  //\n  Root,\n  Item,\n} from './ToggleGroup';\nexport type {\n  ToggleGroupSingleProps,\n  ToggleGroupMultipleProps,\n  ToggleGroupItemProps,\n} from './ToggleGroup';\n", "import React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { Toggle } from '@radix-ui/react-toggle';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useDirection } from '@radix-ui/react-direction';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * ToggleGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst TOGGLE_GROUP_NAME = 'ToggleGroup';\n\ntype ScopedProps<P> = P & { __scopeToggleGroup?: Scope };\nconst [createToggleGroupContext, createToggleGroupScope] = createContextScope(TOGGLE_GROUP_NAME, [\n  createRovingFocusGroupScope,\n]);\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\n\ntype ToggleGroupElement = ToggleGroupImplSingleElement | ToggleGroupImplMultipleElement;\ninterface ToggleGroupSingleProps extends ToggleGroupImplSingleProps {\n  type: 'single';\n}\ninterface ToggleGroupMultipleProps extends ToggleGroupImplMultipleProps {\n  type: 'multiple';\n}\n\nconst ToggleGroup = React.forwardRef<\n  ToggleGroupElement,\n  ToggleGroupSingleProps | ToggleGroupMultipleProps\n>((props, forwardedRef) => {\n  const { type, ...toggleGroupProps } = props;\n\n  if (type === 'single') {\n    const singleProps = toggleGroupProps as ToggleGroupImplSingleProps;\n    return <ToggleGroupImplSingle {...singleProps} ref={forwardedRef} />;\n  }\n\n  if (type === 'multiple') {\n    const multipleProps = toggleGroupProps as ToggleGroupImplMultipleProps;\n    return <ToggleGroupImplMultiple {...multipleProps} ref={forwardedRef} />;\n  }\n\n  throw new Error(`Missing prop \\`type\\` expected on \\`${TOGGLE_GROUP_NAME}\\``);\n});\n\nToggleGroup.displayName = TOGGLE_GROUP_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ToggleGroupValueContextValue = {\n  type: 'single' | 'multiple';\n  value: string[];\n  onItemActivate(value: string): void;\n  onItemDeactivate(value: string): void;\n};\n\nconst [ToggleGroupValueProvider, useToggleGroupValueContext] =\n  createToggleGroupContext<ToggleGroupValueContextValue>(TOGGLE_GROUP_NAME);\n\ntype ToggleGroupImplSingleElement = ToggleGroupImplElement;\ninterface ToggleGroupImplSingleProps extends ToggleGroupImplProps {\n  /**\n   * The controlled stateful value of the item that is pressed.\n   */\n  value?: string;\n  /**\n   * The value of the item that is pressed when initially rendered. Use\n   * `defaultValue` if you do not need to control the state of a toggle group.\n   */\n  defaultValue?: string;\n  /**\n   * The callback that fires when the value of the toggle group changes.\n   */\n  onValueChange?(value: string): void;\n}\n\nconst ToggleGroupImplSingle = React.forwardRef<\n  ToggleGroupImplSingleElement,\n  ToggleGroupImplSingleProps\n>((props: ScopedProps<ToggleGroupImplSingleProps>, forwardedRef) => {\n  const {\n    value: valueProp,\n    defaultValue,\n    onValueChange = () => {},\n    ...toggleGroupSingleProps\n  } = props;\n\n  const [value, setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue,\n    onChange: onValueChange,\n  });\n\n  return (\n    <ToggleGroupValueProvider\n      scope={props.__scopeToggleGroup}\n      type=\"single\"\n      value={value ? [value] : []}\n      onItemActivate={setValue}\n      onItemDeactivate={React.useCallback(() => setValue(''), [setValue])}\n    >\n      <ToggleGroupImpl {...toggleGroupSingleProps} ref={forwardedRef} />\n    </ToggleGroupValueProvider>\n  );\n});\n\ntype ToggleGroupImplMultipleElement = ToggleGroupImplElement;\ninterface ToggleGroupImplMultipleProps extends ToggleGroupImplProps {\n  /**\n   * The controlled stateful value of the items that are pressed.\n   */\n  value?: string[];\n  /**\n   * The value of the items that are pressed when initially rendered. Use\n   * `defaultValue` if you do not need to control the state of a toggle group.\n   */\n  defaultValue?: string[];\n  /**\n   * The callback that fires when the state of the toggle group changes.\n   */\n  onValueChange?(value: string[]): void;\n}\n\nconst ToggleGroupImplMultiple = React.forwardRef<\n  ToggleGroupImplMultipleElement,\n  ToggleGroupImplMultipleProps\n>((props: ScopedProps<ToggleGroupImplMultipleProps>, forwardedRef) => {\n  const {\n    value: valueProp,\n    defaultValue,\n    onValueChange = () => {},\n    ...toggleGroupMultipleProps\n  } = props;\n\n  const [value = [], setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue,\n    onChange: onValueChange,\n  });\n\n  const handleButtonActivate = React.useCallback(\n    (itemValue: string) => setValue((prevValue = []) => [...prevValue, itemValue]),\n    [setValue]\n  );\n\n  const handleButtonDeactivate = React.useCallback(\n    (itemValue: string) =>\n      setValue((prevValue = []) => prevValue.filter((value) => value !== itemValue)),\n    [setValue]\n  );\n\n  return (\n    <ToggleGroupValueProvider\n      scope={props.__scopeToggleGroup}\n      type=\"multiple\"\n      value={value}\n      onItemActivate={handleButtonActivate}\n      onItemDeactivate={handleButtonDeactivate}\n    >\n      <ToggleGroupImpl {...toggleGroupMultipleProps} ref={forwardedRef} />\n    </ToggleGroupValueProvider>\n  );\n});\n\nToggleGroup.displayName = TOGGLE_GROUP_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ToggleGroupContextValue = { rovingFocus: boolean; disabled: boolean };\n\nconst [ToggleGroupContext, useToggleGroupContext] =\n  createToggleGroupContext<ToggleGroupContextValue>(TOGGLE_GROUP_NAME);\n\ntype RovingFocusGroupProps = React.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype ToggleGroupImplElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface ToggleGroupImplProps extends PrimitiveDivProps {\n  /**\n   * Whether the group is disabled from user interaction.\n   * @defaultValue false\n   */\n  disabled?: boolean;\n  /**\n   * Whether the group should maintain roving focus of its buttons.\n   * @defaultValue true\n   */\n  rovingFocus?: boolean;\n  loop?: RovingFocusGroupProps['loop'];\n  orientation?: RovingFocusGroupProps['orientation'];\n  dir?: RovingFocusGroupProps['dir'];\n}\n\nconst ToggleGroupImpl = React.forwardRef<ToggleGroupImplElement, ToggleGroupImplProps>(\n  (props: ScopedProps<ToggleGroupImplProps>, forwardedRef) => {\n    const {\n      __scopeToggleGroup,\n      disabled = false,\n      rovingFocus = true,\n      orientation,\n      dir,\n      loop = true,\n      ...toggleGroupProps\n    } = props;\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeToggleGroup);\n    const direction = useDirection(dir);\n    const commonProps = { role: 'group', dir: direction, ...toggleGroupProps };\n    return (\n      <ToggleGroupContext scope={__scopeToggleGroup} rovingFocus={rovingFocus} disabled={disabled}>\n        {rovingFocus ? (\n          <RovingFocusGroup.Root\n            asChild\n            {...rovingFocusGroupScope}\n            orientation={orientation}\n            dir={direction}\n            loop={loop}\n          >\n            <Primitive.div {...commonProps} ref={forwardedRef} />\n          </RovingFocusGroup.Root>\n        ) : (\n          <Primitive.div {...commonProps} ref={forwardedRef} />\n        )}\n      </ToggleGroupContext>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * ToggleGroupItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'ToggleGroupItem';\n\ntype ToggleGroupItemElement = ToggleGroupItemImplElement;\ninterface ToggleGroupItemProps extends Omit<ToggleGroupItemImplProps, 'pressed'> {}\n\nconst ToggleGroupItem = React.forwardRef<ToggleGroupItemElement, ToggleGroupItemProps>(\n  (props: ScopedProps<ToggleGroupItemProps>, forwardedRef) => {\n    const valueContext = useToggleGroupValueContext(ITEM_NAME, props.__scopeToggleGroup);\n    const context = useToggleGroupContext(ITEM_NAME, props.__scopeToggleGroup);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(props.__scopeToggleGroup);\n    const pressed = valueContext.value.includes(props.value);\n    const disabled = context.disabled || props.disabled;\n    const commonProps = { ...props, pressed, disabled };\n    const ref = React.useRef<HTMLDivElement>(null);\n    return context.rovingFocus ? (\n      <RovingFocusGroup.Item\n        asChild\n        {...rovingFocusGroupScope}\n        focusable={!disabled}\n        active={pressed}\n        ref={ref}\n      >\n        <ToggleGroupItemImpl {...commonProps} ref={forwardedRef} />\n      </RovingFocusGroup.Item>\n    ) : (\n      <ToggleGroupItemImpl {...commonProps} ref={forwardedRef} />\n    );\n  }\n);\n\nToggleGroupItem.displayName = ITEM_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ToggleGroupItemImplElement = React.ElementRef<typeof Toggle>;\ntype ToggleProps = React.ComponentPropsWithoutRef<typeof Toggle>;\ninterface ToggleGroupItemImplProps extends Omit<ToggleProps, 'defaultPressed' | 'onPressedChange'> {\n  /**\n   * A string value for the toggle group item. All items within a toggle group should use a unique value.\n   */\n  value: string;\n}\n\nconst ToggleGroupItemImpl = React.forwardRef<ToggleGroupItemImplElement, ToggleGroupItemImplProps>(\n  (props: ScopedProps<ToggleGroupItemImplProps>, forwardedRef) => {\n    const { __scopeToggleGroup, value, ...itemProps } = props;\n    const valueContext = useToggleGroupValueContext(ITEM_NAME, __scopeToggleGroup);\n    const singleProps = { role: 'radio', 'aria-checked': props.pressed, 'aria-pressed': undefined };\n    const typeProps = valueContext.type === 'single' ? singleProps : undefined;\n    return (\n      <Toggle\n        {...typeProps}\n        {...itemProps}\n        ref={forwardedRef}\n        onPressedChange={(pressed) => {\n          if (pressed) {\n            valueContext.onItemActivate(value);\n          } else {\n            valueContext.onItemDeactivate(value);\n          }\n        }}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = ToggleGroup;\nconst Item = ToggleGroupItem;\n\nexport {\n  createToggleGroupScope,\n  //\n  ToggleGroup,\n  ToggleGroupItem,\n  //\n  Root,\n  Item,\n};\nexport type { ToggleGroupSingleProps, ToggleGroupMultipleProps, ToggleGroupItemProps };\n", "import { radiusPropDef } from '../props/radius.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['surface', 'classic'] as const;\n\nconst segmentedControlRootPropDefs = {\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'surface' },\n  ...radiusPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n};\n\nexport { segmentedControlRootPropDefs };\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport * as ToggleGroupPrimitive from '@radix-ui/react-toggle-group';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\n\nimport { segmentedControlRootPropDefs } from './segmented-control.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype SegmentedControlRootOwnProps = GetPropDefTypes<typeof segmentedControlRootPropDefs>;\n\ninterface SegmentedControlRootProps\n  extends ComponentPropsWithout<'div', RemovedProps | 'dir'>,\n    SegmentedControlRootOwnProps,\n    MarginProps {\n  value?: string;\n  defaultValue?: string;\n  onValueChange?(value: string): void;\n}\n\nconst SegmentedControlRoot = React.forwardRef<HTMLDivElement, SegmentedControlRootProps>(\n  (props, forwardedRef) => {\n    const {\n      className,\n      children,\n      radius,\n      value: valueProp,\n      defaultValue: defaultValueProp,\n      onValueChange: onValueChangeProp,\n      ...rootProps\n    } = extractProps(props, segmentedControlRootPropDefs, marginPropDefs);\n\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChangeProp,\n      defaultProp: defaultValueProp,\n    });\n\n    return (\n      <ToggleGroupPrimitive.Root\n        data-radius={radius}\n        ref={forwardedRef}\n        className={classNames('rt-SegmentedControlRoot', className)}\n        onValueChange={(value) => {\n          if (value) {\n            setValue(value);\n          }\n        }}\n        {...rootProps}\n        type=\"single\"\n        value={value}\n        asChild={false}\n        disabled={false}\n      >\n        {children}\n        <div className=\"rt-SegmentedControlIndicator\" />\n      </ToggleGroupPrimitive.Root>\n    );\n  }\n);\n\nSegmentedControlRoot.displayName = 'SegmentedControl.Root';\n\ninterface SegmentedControlItemOwnProps {\n  value: string;\n}\n\ninterface SegmentedControlItemProps\n  extends ComponentPropsWithout<\n      typeof ToggleGroupPrimitive.Item,\n      RemovedProps | 'disabled' | 'type' | 'value'\n    >,\n    SegmentedControlItemOwnProps {}\n\nconst SegmentedControlItem = React.forwardRef<HTMLButtonElement, SegmentedControlItemProps>(\n  ({ children, className, ...props }, forwardedRef) => (\n    <ToggleGroupPrimitive.Item\n      ref={forwardedRef}\n      className={classNames('rt-reset', 'rt-SegmentedControlItem', className)}\n      {...props}\n      disabled={false}\n      asChild={false}\n    >\n      <span className=\"rt-SegmentedControlItemSeparator\" />\n      <span className=\"rt-SegmentedControlItemLabel\">\n        <span className=\"rt-SegmentedControlItemLabelActive\">{children}</span>\n        <span className=\"rt-SegmentedControlItemLabelInactive\">{children}</span>\n      </span>\n    </ToggleGroupPrimitive.Item>\n  )\n);\n\nSegmentedControlItem.displayName = 'SegmentedControl.Item';\n\nexport { SegmentedControlRoot as Root, SegmentedControlItem as Item };\nexport type { SegmentedControlRootProps as RootProps, SegmentedControlItemProps as ItemProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\n\nimport type { PropDef, GetPropDefTypes } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3', '4'] as const;\nconst displayValues = ['none', 'initial'] as const;\n\nconst sectionPropDefs = {\n  ...asChildPropDef,\n  /**\n   * Controls the vertical padding of the section.\n   *\n   * @values\n   * | Size     | Padding |\n   * | :------- | ------: |\n   * | size=\"1\" | 24px    |\n   * | size=\"2\" | 40px    |\n   * | size=\"3\" | 64px    |\n   * | size=\"4\" | 80px    |\n   *\n   * @example\n   * size=\"4\"\n   * size={{ sm: '3', lg: '4' }}\n   *\n   * @link\n   * https://github.com/radix-ui/themes/blob/main/packages/radix-ui-themes/src/components/section.css\n   */\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: sizes,\n    default: '3',\n    responsive: true,\n  },\n  /**\n   * Controls whether the section is visible or hidden.\n   * Supports \"none\", \"initial\", and responsive object values.\n   *\n   * @example\n   * display=\"none\"\n   * display={{ sm: 'none', lg: 'initial' }}\n   */\n  display: {\n    type: 'enum',\n    className: 'rt-r-display',\n    values: displayValues,\n    parseValue: parseDisplayValue,\n    responsive: true,\n  },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  display: PropDef<(typeof displayValues)[number]>;\n};\n\nfunction parseDisplayValue(value: string) {\n  return value === 'initial' ? 'block' : value;\n}\n\n// Use all of the imported prop defs to ensure that JSDoc works\ntype SectionOwnProps = GetPropDefTypes<typeof sectionPropDefs & typeof asChildPropDef>;\n\nexport { sectionPropDefs };\nexport type { SectionOwnProps };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { sectionPropDefs } from './section.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { layoutPropDefs } from '../props/layout.props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { LayoutProps } from '../props/layout.props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { SectionOwnProps } from './section.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ntype SectionElement = React.ElementRef<'div'>;\ninterface SectionProps\n  extends ComponentPropsWithout<'div', RemovedProps>,\n    MarginProps,\n    LayoutProps,\n    SectionOwnProps {}\nconst Section = React.forwardRef<SectionElement, SectionProps>((props, forwardedRef) => {\n  const { asChild, className, ...sectionProps } = extractProps(\n    props,\n    sectionPropDefs,\n    layoutPropDefs,\n    marginPropDefs\n  );\n  const Comp = asChild ? Slot : 'section';\n  return (\n    <Comp {...sectionProps} ref={forwardedRef} className={classNames('rt-Section', className)} />\n  );\n});\nSection.displayName = 'Section';\n\nexport { Section };\nexport type { SectionProps };\n", "'use client';\nexport {\n  createSelectScope,\n  //\n  Select,\n  SelectTrigger,\n  SelectValue,\n  SelectIcon,\n  SelectPortal,\n  SelectContent,\n  SelectViewport,\n  SelectGroup,\n  SelectLabel,\n  SelectItem,\n  SelectItemText,\n  SelectItemIndicator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n  SelectSeparator,\n  SelectArrow,\n  //\n  Root,\n  Trigger,\n  Value,\n  Icon,\n  Portal,\n  Content,\n  Viewport,\n  Group,\n  Label,\n  Item,\n  ItemText,\n  ItemIndicator,\n  ScrollUpButton,\n  ScrollDownButton,\n  Separator,\n  Arrow,\n} from './Select';\nexport type {\n  SelectProps,\n  SelectTriggerProps,\n  SelectValueProps,\n  SelectIconProps,\n  SelectPortalProps,\n  SelectContentProps,\n  SelectViewportProps,\n  SelectGroupProps,\n  SelectLabelProps,\n  SelectItemProps,\n  SelectItemTextProps,\n  SelectItemIndicatorProps,\n  SelectScrollUpButtonProps,\n  SelectScrollDownButtonProps,\n  SelectSeparatorProps,\n  SelectArrowProps,\n} from './Select';\n", "import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { clamp } from '@radix-ui/number';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { Slot } from '@radix-ui/react-slot';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { VisuallyHidden } from '@radix-ui/react-visually-hidden';\nimport { hideOthers } from 'aria-hidden';\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\nconst OPEN_KEYS = [' ', 'Enter', 'ArrowUp', 'ArrowDown'];\nconst SELECTION_KEYS = [' ', 'Enter'];\n\n/* -------------------------------------------------------------------------------------------------\n * Select\n * -----------------------------------------------------------------------------------------------*/\n\nconst SELECT_NAME = 'Select';\n\ntype ItemData = { value: string; disabled: boolean; textValue: string };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  SelectItemElement,\n  ItemData\n>(SELECT_NAME);\n\ntype ScopedProps<P> = P & { __scopeSelect?: Scope };\nconst [createSelectContext, createSelectScope] = createContextScope(SELECT_NAME, [\n  createCollectionScope,\n  createPopperScope,\n]);\nconst usePopperScope = createPopperScope();\n\ntype SelectContextValue = {\n  trigger: SelectTriggerElement | null;\n  onTriggerChange(node: SelectTriggerElement | null): void;\n  valueNode: SelectValueElement | null;\n  onValueNodeChange(node: SelectValueElement): void;\n  valueNodeHasChildren: boolean;\n  onValueNodeHasChildrenChange(hasChildren: boolean): void;\n  contentId: string;\n  value?: string;\n  onValueChange(value: string): void;\n  open: boolean;\n  required?: boolean;\n  onOpenChange(open: boolean): void;\n  dir: SelectProps['dir'];\n  triggerPointerDownPosRef: React.MutableRefObject<{ x: number; y: number } | null>;\n  disabled?: boolean;\n};\n\nconst [SelectProvider, useSelectContext] = createSelectContext<SelectContextValue>(SELECT_NAME);\n\ntype NativeOption = React.ReactElement<React.ComponentProps<'option'>>;\n\ntype SelectNativeOptionsContextValue = {\n  onNativeOptionAdd(option: NativeOption): void;\n  onNativeOptionRemove(option: NativeOption): void;\n};\nconst [SelectNativeOptionsProvider, useSelectNativeOptionsContext] =\n  createSelectContext<SelectNativeOptionsContextValue>(SELECT_NAME);\n\ninterface SelectProps {\n  children?: React.ReactNode;\n  value?: string;\n  defaultValue?: string;\n  onValueChange?(value: string): void;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  dir?: Direction;\n  name?: string;\n  autoComplete?: string;\n  disabled?: boolean;\n  required?: boolean;\n}\n\nconst Select: React.FC<SelectProps> = (props: ScopedProps<SelectProps>) => {\n  const {\n    __scopeSelect,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    value: valueProp,\n    defaultValue,\n    onValueChange,\n    dir,\n    name,\n    autoComplete,\n    disabled,\n    required,\n  } = props;\n  const popperScope = usePopperScope(__scopeSelect);\n  const [trigger, setTrigger] = React.useState<SelectTriggerElement | null>(null);\n  const [valueNode, setValueNode] = React.useState<SelectValueElement | null>(null);\n  const [valueNodeHasChildren, setValueNodeHasChildren] = React.useState(false);\n  const direction = useDirection(dir);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n  const [value, setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue,\n    onChange: onValueChange,\n  });\n  const triggerPointerDownPosRef = React.useRef<{ x: number; y: number } | null>(null);\n\n  // We set this to true by default so that events bubble to forms without JS (SSR)\n  const isFormControl = trigger ? Boolean(trigger.closest('form')) : true;\n  const [nativeOptionsSet, setNativeOptionsSet] = React.useState(new Set<NativeOption>());\n\n  // The native `select` only associates the correct default value if the corresponding\n  // `option` is rendered as a child **at the same time** as itself.\n  // Because it might take a few renders for our items to gather the information to build\n  // the native `option`(s), we generate a key on the `select` to make sure React re-builds it\n  // each time the options change.\n  const nativeSelectKey = Array.from(nativeOptionsSet)\n    .map((option) => option.props.value)\n    .join(';');\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <SelectProvider\n        required={required}\n        scope={__scopeSelect}\n        trigger={trigger}\n        onTriggerChange={setTrigger}\n        valueNode={valueNode}\n        onValueNodeChange={setValueNode}\n        valueNodeHasChildren={valueNodeHasChildren}\n        onValueNodeHasChildrenChange={setValueNodeHasChildren}\n        contentId={useId()}\n        value={value}\n        onValueChange={setValue}\n        open={open}\n        onOpenChange={setOpen}\n        dir={direction}\n        triggerPointerDownPosRef={triggerPointerDownPosRef}\n        disabled={disabled}\n      >\n        <Collection.Provider scope={__scopeSelect}>\n          <SelectNativeOptionsProvider\n            scope={props.__scopeSelect}\n            onNativeOptionAdd={React.useCallback((option) => {\n              setNativeOptionsSet((prev) => new Set(prev).add(option));\n            }, [])}\n            onNativeOptionRemove={React.useCallback((option) => {\n              setNativeOptionsSet((prev) => {\n                const optionsSet = new Set(prev);\n                optionsSet.delete(option);\n                return optionsSet;\n              });\n            }, [])}\n          >\n            {children}\n          </SelectNativeOptionsProvider>\n        </Collection.Provider>\n\n        {isFormControl ? (\n          <BubbleSelect\n            key={nativeSelectKey}\n            aria-hidden\n            required={required}\n            tabIndex={-1}\n            name={name}\n            autoComplete={autoComplete}\n            value={value}\n            // enable form autofill\n            onChange={(event) => setValue(event.target.value)}\n            disabled={disabled}\n          >\n            {value === undefined ? <option value=\"\" /> : null}\n            {Array.from(nativeOptionsSet)}\n          </BubbleSelect>\n        ) : null}\n      </SelectProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nSelect.displayName = SELECT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'SelectTrigger';\n\ntype SelectTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface SelectTriggerProps extends PrimitiveButtonProps {}\n\nconst SelectTrigger = React.forwardRef<SelectTriggerElement, SelectTriggerProps>(\n  (props: ScopedProps<SelectTriggerProps>, forwardedRef) => {\n    const { __scopeSelect, disabled = false, ...triggerProps } = props;\n    const popperScope = usePopperScope(__scopeSelect);\n    const context = useSelectContext(TRIGGER_NAME, __scopeSelect);\n    const isDisabled = context.disabled || disabled;\n    const composedRefs = useComposedRefs(forwardedRef, context.onTriggerChange);\n    const getItems = useCollection(__scopeSelect);\n\n    const [searchRef, handleTypeaheadSearch, resetTypeahead] = useTypeaheadSearch((search) => {\n      const enabledItems = getItems().filter((item) => !item.disabled);\n      const currentItem = enabledItems.find((item) => item.value === context.value);\n      const nextItem = findNextItem(enabledItems, search, currentItem);\n      if (nextItem !== undefined) {\n        context.onValueChange(nextItem.value);\n      }\n    });\n\n    const handleOpen = () => {\n      if (!isDisabled) {\n        context.onOpenChange(true);\n        // reset typeahead when we open\n        resetTypeahead();\n      }\n    };\n\n    return (\n      <PopperPrimitive.Anchor asChild {...popperScope}>\n        <Primitive.button\n          type=\"button\"\n          role=\"combobox\"\n          aria-controls={context.contentId}\n          aria-expanded={context.open}\n          aria-required={context.required}\n          aria-autocomplete=\"none\"\n          dir={context.dir}\n          data-state={context.open ? 'open' : 'closed'}\n          disabled={isDisabled}\n          data-disabled={isDisabled ? '' : undefined}\n          data-placeholder={shouldShowPlaceholder(context.value) ? '' : undefined}\n          {...triggerProps}\n          ref={composedRefs}\n          // Enable compatibility with native label or custom `Label` \"click\" for Safari:\n          onClick={composeEventHandlers(triggerProps.onClick, (event) => {\n            // Whilst browsers generally have no issue focusing the trigger when clicking\n            // on a label, Safari seems to struggle with the fact that there's no `onClick`.\n            // We force `focus` in this case. Note: this doesn't create any other side-effect\n            // because we are preventing default in `onPointerDown` so effectively\n            // this only runs for a label \"click\"\n            event.currentTarget.focus();\n          })}\n          onPointerDown={composeEventHandlers(triggerProps.onPointerDown, (event) => {\n            // prevent implicit pointer capture\n            // https://www.w3.org/TR/pointerevents3/#implicit-pointer-capture\n            const target = event.target as HTMLElement;\n            if (target.hasPointerCapture(event.pointerId)) {\n              target.releasePointerCapture(event.pointerId);\n            }\n\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (event.button === 0 && event.ctrlKey === false) {\n              handleOpen();\n              context.triggerPointerDownPosRef.current = {\n                x: Math.round(event.pageX),\n                y: Math.round(event.pageY),\n              };\n              // prevent trigger from stealing focus from the active item after opening.\n              event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(triggerProps.onKeyDown, (event) => {\n            const isTypingAhead = searchRef.current !== '';\n            const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n            if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);\n            if (isTypingAhead && event.key === ' ') return;\n            if (OPEN_KEYS.includes(event.key)) {\n              handleOpen();\n              event.preventDefault();\n            }\n          })}\n        />\n      </PopperPrimitive.Anchor>\n    );\n  }\n);\n\nSelectTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectValue\n * -----------------------------------------------------------------------------------------------*/\n\nconst VALUE_NAME = 'SelectValue';\n\ntype SelectValueElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface SelectValueProps extends Omit<PrimitiveSpanProps, 'placeholder'> {\n  placeholder?: React.ReactNode;\n}\n\nconst SelectValue = React.forwardRef<SelectValueElement, SelectValueProps>(\n  (props: ScopedProps<SelectValueProps>, forwardedRef) => {\n    // We ignore `className` and `style` as this part shouldn't be styled.\n    const { __scopeSelect, className, style, children, placeholder = '', ...valueProps } = props;\n    const context = useSelectContext(VALUE_NAME, __scopeSelect);\n    const { onValueNodeHasChildrenChange } = context;\n    const hasChildren = children !== undefined;\n    const composedRefs = useComposedRefs(forwardedRef, context.onValueNodeChange);\n\n    useLayoutEffect(() => {\n      onValueNodeHasChildrenChange(hasChildren);\n    }, [onValueNodeHasChildrenChange, hasChildren]);\n\n    return (\n      <Primitive.span\n        {...valueProps}\n        ref={composedRefs}\n        // we don't want events from the portalled `SelectValue` children to bubble\n        // through the item they came from\n        style={{ pointerEvents: 'none' }}\n      >\n        {shouldShowPlaceholder(context.value) ? <>{placeholder}</> : children}\n      </Primitive.span>\n    );\n  }\n);\n\nSelectValue.displayName = VALUE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectIcon\n * -----------------------------------------------------------------------------------------------*/\n\nconst ICON_NAME = 'SelectIcon';\n\ntype SelectIconElement = React.ElementRef<typeof Primitive.span>;\ninterface SelectIconProps extends PrimitiveSpanProps {}\n\nconst SelectIcon = React.forwardRef<SelectIconElement, SelectIconProps>(\n  (props: ScopedProps<SelectIconProps>, forwardedRef) => {\n    const { __scopeSelect, children, ...iconProps } = props;\n    return (\n      <Primitive.span aria-hidden {...iconProps} ref={forwardedRef}>\n        {children || '\u25BC'}\n      </Primitive.span>\n    );\n  }\n);\n\nSelectIcon.displayName = ICON_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'SelectPortal';\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface SelectPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n}\n\nconst SelectPortal: React.FC<SelectPortalProps> = (props: ScopedProps<SelectPortalProps>) => {\n  return <PortalPrimitive asChild {...props} />;\n};\n\nSelectPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'SelectContent';\n\ntype SelectContentElement = SelectContentImplElement;\ninterface SelectContentProps extends SelectContentImplProps {}\n\nconst SelectContent = React.forwardRef<SelectContentElement, SelectContentProps>(\n  (props: ScopedProps<SelectContentProps>, forwardedRef) => {\n    const context = useSelectContext(CONTENT_NAME, props.__scopeSelect);\n    const [fragment, setFragment] = React.useState<DocumentFragment>();\n\n    // setting the fragment in `useLayoutEffect` as `DocumentFragment` doesn't exist on the server\n    useLayoutEffect(() => {\n      setFragment(new DocumentFragment());\n    }, []);\n\n    if (!context.open) {\n      const frag = fragment as Element | undefined;\n      return frag\n        ? ReactDOM.createPortal(\n            <SelectContentProvider scope={props.__scopeSelect}>\n              <Collection.Slot scope={props.__scopeSelect}>\n                <div>{props.children}</div>\n              </Collection.Slot>\n            </SelectContentProvider>,\n            frag\n          )\n        : null;\n    }\n\n    return <SelectContentImpl {...props} ref={forwardedRef} />;\n  }\n);\n\nSelectContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectContentImpl\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_MARGIN = 10;\n\ntype SelectContentContextValue = {\n  content?: SelectContentElement | null;\n  viewport?: SelectViewportElement | null;\n  onViewportChange?: (node: SelectViewportElement | null) => void;\n  itemRefCallback?: (node: SelectItemElement | null, value: string, disabled: boolean) => void;\n  selectedItem?: SelectItemElement | null;\n  onItemLeave?: () => void;\n  itemTextRefCallback?: (\n    node: SelectItemTextElement | null,\n    value: string,\n    disabled: boolean\n  ) => void;\n  focusSelectedItem?: () => void;\n  selectedItemText?: SelectItemTextElement | null;\n  position?: SelectContentProps['position'];\n  isPositioned?: boolean;\n  searchRef?: React.RefObject<string>;\n};\n\nconst [SelectContentProvider, useSelectContentContext] =\n  createSelectContext<SelectContentContextValue>(CONTENT_NAME);\n\nconst CONTENT_IMPL_NAME = 'SelectContentImpl';\n\ntype SelectContentImplElement = SelectPopperPositionElement | SelectItemAlignedPositionElement;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype FocusScopeProps = React.ComponentPropsWithoutRef<typeof FocusScope>;\n\ntype SelectPopperPrivateProps = { onPlaced?: PopperContentProps['onPlaced'] };\n\ninterface SelectContentImplProps\n  extends Omit<SelectPopperPositionProps, keyof SelectPopperPrivateProps>,\n    Omit<SelectItemAlignedPositionProps, keyof SelectPopperPrivateProps> {\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: DismissableLayerProps['onEscapeKeyDown'];\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: DismissableLayerProps['onPointerDownOutside'];\n\n  position?: 'item-aligned' | 'popper';\n}\n\nconst SelectContentImpl = React.forwardRef<SelectContentImplElement, SelectContentImplProps>(\n  (props: ScopedProps<SelectContentImplProps>, forwardedRef) => {\n    const {\n      __scopeSelect,\n      position = 'item-aligned',\n      onCloseAutoFocus,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      //\n      // PopperContent props\n      side,\n      sideOffset,\n      align,\n      alignOffset,\n      arrowPadding,\n      collisionBoundary,\n      collisionPadding,\n      sticky,\n      hideWhenDetached,\n      avoidCollisions,\n      //\n      ...contentProps\n    } = props;\n    const context = useSelectContext(CONTENT_NAME, __scopeSelect);\n    const [content, setContent] = React.useState<SelectContentImplElement | null>(null);\n    const [viewport, setViewport] = React.useState<SelectViewportElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n    const [selectedItem, setSelectedItem] = React.useState<SelectItemElement | null>(null);\n    const [selectedItemText, setSelectedItemText] = React.useState<SelectItemTextElement | null>(\n      null\n    );\n    const getItems = useCollection(__scopeSelect);\n    const [isPositioned, setIsPositioned] = React.useState(false);\n    const firstValidItemFoundRef = React.useRef(false);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      if (content) return hideOthers(content);\n    }, [content]);\n\n    // Make sure the whole tree has focus guards as our `Select` may be\n    // the last element in the DOM (because of the `Portal`)\n    useFocusGuards();\n\n    const focusFirst = React.useCallback(\n      (candidates: Array<HTMLElement | null>) => {\n        const [firstItem, ...restItems] = getItems().map((item) => item.ref.current);\n        const [lastItem] = restItems.slice(-1);\n\n        const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n        for (const candidate of candidates) {\n          // if focus is already where we want to go, we don't want to keep going through the candidates\n          if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n          candidate?.scrollIntoView({ block: 'nearest' });\n          // viewport might have padding so scroll to its edges when focusing first/last items.\n          if (candidate === firstItem && viewport) viewport.scrollTop = 0;\n          if (candidate === lastItem && viewport) viewport.scrollTop = viewport.scrollHeight;\n          candidate?.focus();\n          if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n        }\n      },\n      [getItems, viewport]\n    );\n\n    const focusSelectedItem = React.useCallback(\n      () => focusFirst([selectedItem, content]),\n      [focusFirst, selectedItem, content]\n    );\n\n    // Since this is not dependent on layout, we want to ensure this runs at the same time as\n    // other effects across components. Hence why we don't call `focusSelectedItem` inside `position`.\n    React.useEffect(() => {\n      if (isPositioned) {\n        focusSelectedItem();\n      }\n    }, [isPositioned, focusSelectedItem]);\n\n    // prevent selecting items on `pointerup` in some cases after opening from `pointerdown`\n    // and close on `pointerup` outside.\n    const { onOpenChange, triggerPointerDownPosRef } = context;\n    React.useEffect(() => {\n      if (content) {\n        let pointerMoveDelta = { x: 0, y: 0 };\n\n        const handlePointerMove = (event: PointerEvent) => {\n          pointerMoveDelta = {\n            x: Math.abs(Math.round(event.pageX) - (triggerPointerDownPosRef.current?.x ?? 0)),\n            y: Math.abs(Math.round(event.pageY) - (triggerPointerDownPosRef.current?.y ?? 0)),\n          };\n        };\n        const handlePointerUp = (event: PointerEvent) => {\n          // If the pointer hasn't moved by a certain threshold then we prevent selecting item on `pointerup`.\n          if (pointerMoveDelta.x <= 10 && pointerMoveDelta.y <= 10) {\n            event.preventDefault();\n          } else {\n            // otherwise, if the event was outside the content, close.\n            if (!content.contains(event.target as HTMLElement)) {\n              onOpenChange(false);\n            }\n          }\n          document.removeEventListener('pointermove', handlePointerMove);\n          triggerPointerDownPosRef.current = null;\n        };\n\n        if (triggerPointerDownPosRef.current !== null) {\n          document.addEventListener('pointermove', handlePointerMove);\n          document.addEventListener('pointerup', handlePointerUp, { capture: true, once: true });\n        }\n\n        return () => {\n          document.removeEventListener('pointermove', handlePointerMove);\n          document.removeEventListener('pointerup', handlePointerUp, { capture: true });\n        };\n      }\n    }, [content, onOpenChange, triggerPointerDownPosRef]);\n\n    React.useEffect(() => {\n      const close = () => onOpenChange(false);\n      window.addEventListener('blur', close);\n      window.addEventListener('resize', close);\n      return () => {\n        window.removeEventListener('blur', close);\n        window.removeEventListener('resize', close);\n      };\n    }, [onOpenChange]);\n\n    const [searchRef, handleTypeaheadSearch] = useTypeaheadSearch((search) => {\n      const enabledItems = getItems().filter((item) => !item.disabled);\n      const currentItem = enabledItems.find((item) => item.ref.current === document.activeElement);\n      const nextItem = findNextItem(enabledItems, search, currentItem);\n      if (nextItem) {\n        /**\n         * Imperative focus during keydown is risky so we prevent React's batching updates\n         * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n         */\n        setTimeout(() => (nextItem.ref.current as HTMLElement).focus());\n      }\n    });\n\n    const itemRefCallback = React.useCallback(\n      (node: SelectItemElement | null, value: string, disabled: boolean) => {\n        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;\n        const isSelectedItem = context.value !== undefined && context.value === value;\n        if (isSelectedItem || isFirstValidItem) {\n          setSelectedItem(node);\n          if (isFirstValidItem) firstValidItemFoundRef.current = true;\n        }\n      },\n      [context.value]\n    );\n    const handleItemLeave = React.useCallback(() => content?.focus(), [content]);\n    const itemTextRefCallback = React.useCallback(\n      (node: SelectItemTextElement | null, value: string, disabled: boolean) => {\n        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;\n        const isSelectedItem = context.value !== undefined && context.value === value;\n        if (isSelectedItem || isFirstValidItem) {\n          setSelectedItemText(node);\n        }\n      },\n      [context.value]\n    );\n\n    const SelectPosition = position === 'popper' ? SelectPopperPosition : SelectItemAlignedPosition;\n\n    // Silently ignore props that are not supported by `SelectItemAlignedPosition`\n    const popperContentProps =\n      SelectPosition === SelectPopperPosition\n        ? {\n            side,\n            sideOffset,\n            align,\n            alignOffset,\n            arrowPadding,\n            collisionBoundary,\n            collisionPadding,\n            sticky,\n            hideWhenDetached,\n            avoidCollisions,\n          }\n        : {};\n\n    return (\n      <SelectContentProvider\n        scope={__scopeSelect}\n        content={content}\n        viewport={viewport}\n        onViewportChange={setViewport}\n        itemRefCallback={itemRefCallback}\n        selectedItem={selectedItem}\n        onItemLeave={handleItemLeave}\n        itemTextRefCallback={itemTextRefCallback}\n        focusSelectedItem={focusSelectedItem}\n        selectedItemText={selectedItemText}\n        position={position}\n        isPositioned={isPositioned}\n        searchRef={searchRef}\n      >\n        <RemoveScroll as={Slot} allowPinchZoom>\n          <FocusScope\n            asChild\n            // we make sure we're not trapping once it's been closed\n            // (closed !== unmounted when animating out)\n            trapped={context.open}\n            onMountAutoFocus={(event) => {\n              // we prevent open autofocus because we manually focus the selected item\n              event.preventDefault();\n            }}\n            onUnmountAutoFocus={composeEventHandlers(onCloseAutoFocus, (event) => {\n              context.trigger?.focus({ preventScroll: true });\n              event.preventDefault();\n            })}\n          >\n            <DismissableLayer\n              asChild\n              disableOutsidePointerEvents\n              onEscapeKeyDown={onEscapeKeyDown}\n              onPointerDownOutside={onPointerDownOutside}\n              // When focus is trapped, a focusout event may still happen.\n              // We make sure we don't trigger our `onDismiss` in such case.\n              onFocusOutside={(event) => event.preventDefault()}\n              onDismiss={() => context.onOpenChange(false)}\n            >\n              <SelectPosition\n                role=\"listbox\"\n                id={context.contentId}\n                data-state={context.open ? 'open' : 'closed'}\n                dir={context.dir}\n                onContextMenu={(event) => event.preventDefault()}\n                {...contentProps}\n                {...popperContentProps}\n                onPlaced={() => setIsPositioned(true)}\n                ref={composedRefs}\n                style={{\n                  // flex layout so we can place the scroll buttons properly\n                  display: 'flex',\n                  flexDirection: 'column',\n                  // reset the outline by default as the content MAY get focused\n                  outline: 'none',\n                  ...contentProps.style,\n                }}\n                onKeyDown={composeEventHandlers(contentProps.onKeyDown, (event) => {\n                  const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n\n                  // select should not be navigated using tab key so we prevent it\n                  if (event.key === 'Tab') event.preventDefault();\n\n                  if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);\n\n                  if (['ArrowUp', 'ArrowDown', 'Home', 'End'].includes(event.key)) {\n                    const items = getItems().filter((item) => !item.disabled);\n                    let candidateNodes = items.map((item) => item.ref.current!);\n\n                    if (['ArrowUp', 'End'].includes(event.key)) {\n                      candidateNodes = candidateNodes.slice().reverse();\n                    }\n                    if (['ArrowUp', 'ArrowDown'].includes(event.key)) {\n                      const currentElement = event.target as SelectItemElement;\n                      const currentIndex = candidateNodes.indexOf(currentElement);\n                      candidateNodes = candidateNodes.slice(currentIndex + 1);\n                    }\n\n                    /**\n                     * Imperative focus during keydown is risky so we prevent React's batching updates\n                     * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n                     */\n                    setTimeout(() => focusFirst(candidateNodes));\n\n                    event.preventDefault();\n                  }\n                })}\n              />\n            </DismissableLayer>\n          </FocusScope>\n        </RemoveScroll>\n      </SelectContentProvider>\n    );\n  }\n);\n\nSelectContentImpl.displayName = CONTENT_IMPL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItemAlignedPosition\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_ALIGNED_POSITION_NAME = 'SelectItemAlignedPosition';\n\ntype SelectItemAlignedPositionElement = React.ElementRef<typeof Primitive.div>;\ninterface SelectItemAlignedPositionProps extends PrimitiveDivProps, SelectPopperPrivateProps {}\n\nconst SelectItemAlignedPosition = React.forwardRef<\n  SelectItemAlignedPositionElement,\n  SelectItemAlignedPositionProps\n>((props: ScopedProps<SelectItemAlignedPositionProps>, forwardedRef) => {\n  const { __scopeSelect, onPlaced, ...popperProps } = props;\n  const context = useSelectContext(CONTENT_NAME, __scopeSelect);\n  const contentContext = useSelectContentContext(CONTENT_NAME, __scopeSelect);\n  const [contentWrapper, setContentWrapper] = React.useState<HTMLDivElement | null>(null);\n  const [content, setContent] = React.useState<SelectItemAlignedPositionElement | null>(null);\n  const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n  const getItems = useCollection(__scopeSelect);\n  const shouldExpandOnScrollRef = React.useRef(false);\n  const shouldRepositionRef = React.useRef(true);\n\n  const { viewport, selectedItem, selectedItemText, focusSelectedItem } = contentContext;\n  const position = React.useCallback(() => {\n    if (\n      context.trigger &&\n      context.valueNode &&\n      contentWrapper &&\n      content &&\n      viewport &&\n      selectedItem &&\n      selectedItemText\n    ) {\n      const triggerRect = context.trigger.getBoundingClientRect();\n\n      // -----------------------------------------------------------------------------------------\n      //  Horizontal positioning\n      // -----------------------------------------------------------------------------------------\n      const contentRect = content.getBoundingClientRect();\n      const valueNodeRect = context.valueNode.getBoundingClientRect();\n      const itemTextRect = selectedItemText.getBoundingClientRect();\n\n      if (context.dir !== 'rtl') {\n        const itemTextOffset = itemTextRect.left - contentRect.left;\n        const left = valueNodeRect.left - itemTextOffset;\n        const leftDelta = triggerRect.left - left;\n        const minContentWidth = triggerRect.width + leftDelta;\n        const contentWidth = Math.max(minContentWidth, contentRect.width);\n        const rightEdge = window.innerWidth - CONTENT_MARGIN;\n        const clampedLeft = clamp(left, [CONTENT_MARGIN, rightEdge - contentWidth]);\n\n        contentWrapper.style.minWidth = minContentWidth + 'px';\n        contentWrapper.style.left = clampedLeft + 'px';\n      } else {\n        const itemTextOffset = contentRect.right - itemTextRect.right;\n        const right = window.innerWidth - valueNodeRect.right - itemTextOffset;\n        const rightDelta = window.innerWidth - triggerRect.right - right;\n        const minContentWidth = triggerRect.width + rightDelta;\n        const contentWidth = Math.max(minContentWidth, contentRect.width);\n        const leftEdge = window.innerWidth - CONTENT_MARGIN;\n        const clampedRight = clamp(right, [CONTENT_MARGIN, leftEdge - contentWidth]);\n\n        contentWrapper.style.minWidth = minContentWidth + 'px';\n        contentWrapper.style.right = clampedRight + 'px';\n      }\n\n      // -----------------------------------------------------------------------------------------\n      // Vertical positioning\n      // -----------------------------------------------------------------------------------------\n      const items = getItems();\n      const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;\n      const itemsHeight = viewport.scrollHeight;\n\n      const contentStyles = window.getComputedStyle(content);\n      const contentBorderTopWidth = parseInt(contentStyles.borderTopWidth, 10);\n      const contentPaddingTop = parseInt(contentStyles.paddingTop, 10);\n      const contentBorderBottomWidth = parseInt(contentStyles.borderBottomWidth, 10);\n      const contentPaddingBottom = parseInt(contentStyles.paddingBottom, 10);\n      const fullContentHeight = contentBorderTopWidth + contentPaddingTop + itemsHeight + contentPaddingBottom + contentBorderBottomWidth; // prettier-ignore\n      const minContentHeight = Math.min(selectedItem.offsetHeight * 5, fullContentHeight);\n\n      const viewportStyles = window.getComputedStyle(viewport);\n      const viewportPaddingTop = parseInt(viewportStyles.paddingTop, 10);\n      const viewportPaddingBottom = parseInt(viewportStyles.paddingBottom, 10);\n\n      const topEdgeToTriggerMiddle = triggerRect.top + triggerRect.height / 2 - CONTENT_MARGIN;\n      const triggerMiddleToBottomEdge = availableHeight - topEdgeToTriggerMiddle;\n\n      const selectedItemHalfHeight = selectedItem.offsetHeight / 2;\n      const itemOffsetMiddle = selectedItem.offsetTop + selectedItemHalfHeight;\n      const contentTopToItemMiddle = contentBorderTopWidth + contentPaddingTop + itemOffsetMiddle;\n      const itemMiddleToContentBottom = fullContentHeight - contentTopToItemMiddle;\n\n      const willAlignWithoutTopOverflow = contentTopToItemMiddle <= topEdgeToTriggerMiddle;\n\n      if (willAlignWithoutTopOverflow) {\n        const isLastItem = selectedItem === items[items.length - 1].ref.current;\n        contentWrapper.style.bottom = 0 + 'px';\n        const viewportOffsetBottom =\n          content.clientHeight - viewport.offsetTop - viewport.offsetHeight;\n        const clampedTriggerMiddleToBottomEdge = Math.max(\n          triggerMiddleToBottomEdge,\n          selectedItemHalfHeight +\n            // viewport might have padding bottom, include it to avoid a scrollable viewport\n            (isLastItem ? viewportPaddingBottom : 0) +\n            viewportOffsetBottom +\n            contentBorderBottomWidth\n        );\n        const height = contentTopToItemMiddle + clampedTriggerMiddleToBottomEdge;\n        contentWrapper.style.height = height + 'px';\n      } else {\n        const isFirstItem = selectedItem === items[0].ref.current;\n        contentWrapper.style.top = 0 + 'px';\n        const clampedTopEdgeToTriggerMiddle = Math.max(\n          topEdgeToTriggerMiddle,\n          contentBorderTopWidth +\n            viewport.offsetTop +\n            // viewport might have padding top, include it to avoid a scrollable viewport\n            (isFirstItem ? viewportPaddingTop : 0) +\n            selectedItemHalfHeight\n        );\n        const height = clampedTopEdgeToTriggerMiddle + itemMiddleToContentBottom;\n        contentWrapper.style.height = height + 'px';\n        viewport.scrollTop = contentTopToItemMiddle - topEdgeToTriggerMiddle + viewport.offsetTop;\n      }\n\n      contentWrapper.style.margin = `${CONTENT_MARGIN}px 0`;\n      contentWrapper.style.minHeight = minContentHeight + 'px';\n      contentWrapper.style.maxHeight = availableHeight + 'px';\n      // -----------------------------------------------------------------------------------------\n\n      onPlaced?.();\n\n      // we don't want the initial scroll position adjustment to trigger \"expand on scroll\"\n      // so we explicitly turn it on only after they've registered.\n      requestAnimationFrame(() => (shouldExpandOnScrollRef.current = true));\n    }\n  }, [\n    getItems,\n    context.trigger,\n    context.valueNode,\n    contentWrapper,\n    content,\n    viewport,\n    selectedItem,\n    selectedItemText,\n    context.dir,\n    onPlaced,\n  ]);\n\n  useLayoutEffect(() => position(), [position]);\n\n  // copy z-index from content to wrapper\n  const [contentZIndex, setContentZIndex] = React.useState<string>();\n  useLayoutEffect(() => {\n    if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n  }, [content]);\n\n  // When the viewport becomes scrollable at the top, the scroll up button will mount.\n  // Because it is part of the normal flow, it will push down the viewport, thus throwing our\n  // trigger => selectedItem alignment off by the amount the viewport was pushed down.\n  // We wait for this to happen and then re-run the positining logic one more time to account for it.\n  const handleScrollButtonChange = React.useCallback(\n    (node: SelectScrollButtonImplElement | null) => {\n      if (node && shouldRepositionRef.current === true) {\n        position();\n        focusSelectedItem?.();\n        shouldRepositionRef.current = false;\n      }\n    },\n    [position, focusSelectedItem]\n  );\n\n  return (\n    <SelectViewportProvider\n      scope={__scopeSelect}\n      contentWrapper={contentWrapper}\n      shouldExpandOnScrollRef={shouldExpandOnScrollRef}\n      onScrollButtonChange={handleScrollButtonChange}\n    >\n      <div\n        ref={setContentWrapper}\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          position: 'fixed',\n          zIndex: contentZIndex,\n        }}\n      >\n        <Primitive.div\n          {...popperProps}\n          ref={composedRefs}\n          style={{\n            // When we get the height of the content, it includes borders. If we were to set\n            // the height without having `boxSizing: 'border-box'` it would be too big.\n            boxSizing: 'border-box',\n            // We need to ensure the content doesn't get taller than the wrapper\n            maxHeight: '100%',\n            ...popperProps.style,\n          }}\n        />\n      </div>\n    </SelectViewportProvider>\n  );\n});\n\nSelectItemAlignedPosition.displayName = ITEM_ALIGNED_POSITION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectPopperPosition\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_POSITION_NAME = 'SelectPopperPosition';\n\ntype SelectPopperPositionElement = React.ElementRef<typeof PopperPrimitive.Content>;\ntype PopperContentProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ninterface SelectPopperPositionProps extends PopperContentProps, SelectPopperPrivateProps {}\n\nconst SelectPopperPosition = React.forwardRef<\n  SelectPopperPositionElement,\n  SelectPopperPositionProps\n>((props: ScopedProps<SelectPopperPositionProps>, forwardedRef) => {\n  const {\n    __scopeSelect,\n    align = 'start',\n    collisionPadding = CONTENT_MARGIN,\n    ...popperProps\n  } = props;\n  const popperScope = usePopperScope(__scopeSelect);\n\n  return (\n    <PopperPrimitive.Content\n      {...popperScope}\n      {...popperProps}\n      ref={forwardedRef}\n      align={align}\n      collisionPadding={collisionPadding}\n      style={{\n        // Ensure border-box for floating-ui calculations\n        boxSizing: 'border-box',\n        ...popperProps.style,\n        // re-namespace exposed content custom properties\n        ...{\n          '--radix-select-content-transform-origin': 'var(--radix-popper-transform-origin)',\n          '--radix-select-content-available-width': 'var(--radix-popper-available-width)',\n          '--radix-select-content-available-height': 'var(--radix-popper-available-height)',\n          '--radix-select-trigger-width': 'var(--radix-popper-anchor-width)',\n          '--radix-select-trigger-height': 'var(--radix-popper-anchor-height)',\n        },\n      }}\n    />\n  );\n});\n\nSelectPopperPosition.displayName = POPPER_POSITION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectViewport\n * -----------------------------------------------------------------------------------------------*/\n\ntype SelectViewportContextValue = {\n  contentWrapper?: HTMLDivElement | null;\n  shouldExpandOnScrollRef?: React.RefObject<boolean>;\n  onScrollButtonChange?: (node: SelectScrollButtonImplElement | null) => void;\n};\n\nconst [SelectViewportProvider, useSelectViewportContext] =\n  createSelectContext<SelectViewportContextValue>(CONTENT_NAME, {});\n\nconst VIEWPORT_NAME = 'SelectViewport';\n\ntype SelectViewportElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface SelectViewportProps extends PrimitiveDivProps {\n  nonce?: string;\n}\n\nconst SelectViewport = React.forwardRef<SelectViewportElement, SelectViewportProps>(\n  (props: ScopedProps<SelectViewportProps>, forwardedRef) => {\n    const { __scopeSelect, nonce, ...viewportProps } = props;\n    const contentContext = useSelectContentContext(VIEWPORT_NAME, __scopeSelect);\n    const viewportContext = useSelectViewportContext(VIEWPORT_NAME, __scopeSelect);\n    const composedRefs = useComposedRefs(forwardedRef, contentContext.onViewportChange);\n    const prevScrollTopRef = React.useRef(0);\n    return (\n      <>\n        {/* Hide scrollbars cross-browser and enable momentum scroll for touch devices */}\n        <style\n          dangerouslySetInnerHTML={{\n            __html: `[data-radix-select-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-select-viewport]::-webkit-scrollbar{display:none}`,\n          }}\n          nonce={nonce}\n        />\n        <Collection.Slot scope={__scopeSelect}>\n          <Primitive.div\n            data-radix-select-viewport=\"\"\n            role=\"presentation\"\n            {...viewportProps}\n            ref={composedRefs}\n            style={{\n              // we use position: 'relative' here on the `viewport` so that when we call\n              // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport\n              // (independent of the scrollUpButton).\n              position: 'relative',\n              flex: 1,\n              overflow: 'auto',\n              ...viewportProps.style,\n            }}\n            onScroll={composeEventHandlers(viewportProps.onScroll, (event) => {\n              const viewport = event.currentTarget;\n              const { contentWrapper, shouldExpandOnScrollRef } = viewportContext;\n              if (shouldExpandOnScrollRef?.current && contentWrapper) {\n                const scrolledBy = Math.abs(prevScrollTopRef.current - viewport.scrollTop);\n                if (scrolledBy > 0) {\n                  const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;\n                  const cssMinHeight = parseFloat(contentWrapper.style.minHeight);\n                  const cssHeight = parseFloat(contentWrapper.style.height);\n                  const prevHeight = Math.max(cssMinHeight, cssHeight);\n\n                  if (prevHeight < availableHeight) {\n                    const nextHeight = prevHeight + scrolledBy;\n                    const clampedNextHeight = Math.min(availableHeight, nextHeight);\n                    const heightDiff = nextHeight - clampedNextHeight;\n\n                    contentWrapper.style.height = clampedNextHeight + 'px';\n                    if (contentWrapper.style.bottom === '0px') {\n                      viewport.scrollTop = heightDiff > 0 ? heightDiff : 0;\n                      // ensure the content stays pinned to the bottom\n                      contentWrapper.style.justifyContent = 'flex-end';\n                    }\n                  }\n                }\n              }\n              prevScrollTopRef.current = viewport.scrollTop;\n            })}\n          />\n        </Collection.Slot>\n      </>\n    );\n  }\n);\n\nSelectViewport.displayName = VIEWPORT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'SelectGroup';\n\ntype SelectGroupContextValue = { id: string };\n\nconst [SelectGroupContextProvider, useSelectGroupContext] =\n  createSelectContext<SelectGroupContextValue>(GROUP_NAME);\n\ntype SelectGroupElement = React.ElementRef<typeof Primitive.div>;\ninterface SelectGroupProps extends PrimitiveDivProps {}\n\nconst SelectGroup = React.forwardRef<SelectGroupElement, SelectGroupProps>(\n  (props: ScopedProps<SelectGroupProps>, forwardedRef) => {\n    const { __scopeSelect, ...groupProps } = props;\n    const groupId = useId();\n    return (\n      <SelectGroupContextProvider scope={__scopeSelect} id={groupId}>\n        <Primitive.div role=\"group\" aria-labelledby={groupId} {...groupProps} ref={forwardedRef} />\n      </SelectGroupContextProvider>\n    );\n  }\n);\n\nSelectGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'SelectLabel';\n\ntype SelectLabelElement = React.ElementRef<typeof Primitive.div>;\ninterface SelectLabelProps extends PrimitiveDivProps {}\n\nconst SelectLabel = React.forwardRef<SelectLabelElement, SelectLabelProps>(\n  (props: ScopedProps<SelectLabelProps>, forwardedRef) => {\n    const { __scopeSelect, ...labelProps } = props;\n    const groupContext = useSelectGroupContext(LABEL_NAME, __scopeSelect);\n    return <Primitive.div id={groupContext.id} {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nSelectLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'SelectItem';\n\ntype SelectItemContextValue = {\n  value: string;\n  disabled: boolean;\n  textId: string;\n  isSelected: boolean;\n  onItemTextChange(node: SelectItemTextElement | null): void;\n};\n\nconst [SelectItemContextProvider, useSelectItemContext] =\n  createSelectContext<SelectItemContextValue>(ITEM_NAME);\n\ntype SelectItemElement = React.ElementRef<typeof Primitive.div>;\ninterface SelectItemProps extends PrimitiveDivProps {\n  value: string;\n  disabled?: boolean;\n  textValue?: string;\n}\n\nconst SelectItem = React.forwardRef<SelectItemElement, SelectItemProps>(\n  (props: ScopedProps<SelectItemProps>, forwardedRef) => {\n    const {\n      __scopeSelect,\n      value,\n      disabled = false,\n      textValue: textValueProp,\n      ...itemProps\n    } = props;\n    const context = useSelectContext(ITEM_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ITEM_NAME, __scopeSelect);\n    const isSelected = context.value === value;\n    const [textValue, setTextValue] = React.useState(textValueProp ?? '');\n    const [isFocused, setIsFocused] = React.useState(false);\n    const composedRefs = useComposedRefs(forwardedRef, (node) =>\n      contentContext.itemRefCallback?.(node, value, disabled)\n    );\n    const textId = useId();\n\n    const handleSelect = () => {\n      if (!disabled) {\n        context.onValueChange(value);\n        context.onOpenChange(false);\n      }\n    };\n\n    if (value === '') {\n      throw new Error(\n        'A <Select.Item /> must have a value prop that is not an empty string. This is because the Select value can be set to an empty string to clear the selection and show the placeholder.'\n      );\n    }\n\n    return (\n      <SelectItemContextProvider\n        scope={__scopeSelect}\n        value={value}\n        disabled={disabled}\n        textId={textId}\n        isSelected={isSelected}\n        onItemTextChange={React.useCallback((node) => {\n          setTextValue((prevTextValue) => prevTextValue || (node?.textContent ?? '').trim());\n        }, [])}\n      >\n        <Collection.ItemSlot\n          scope={__scopeSelect}\n          value={value}\n          disabled={disabled}\n          textValue={textValue}\n        >\n          <Primitive.div\n            role=\"option\"\n            aria-labelledby={textId}\n            data-highlighted={isFocused ? '' : undefined}\n            // `isFocused` caveat fixes stuttering in VoiceOver\n            aria-selected={isSelected && isFocused}\n            data-state={isSelected ? 'checked' : 'unchecked'}\n            aria-disabled={disabled || undefined}\n            data-disabled={disabled ? '' : undefined}\n            tabIndex={disabled ? undefined : -1}\n            {...itemProps}\n            ref={composedRefs}\n            onFocus={composeEventHandlers(itemProps.onFocus, () => setIsFocused(true))}\n            onBlur={composeEventHandlers(itemProps.onBlur, () => setIsFocused(false))}\n            onPointerUp={composeEventHandlers(itemProps.onPointerUp, handleSelect)}\n            onPointerMove={composeEventHandlers(itemProps.onPointerMove, (event) => {\n              if (disabled) {\n                contentContext.onItemLeave?.();\n              } else {\n                // even though safari doesn't support this option, it's acceptable\n                // as it only means it might scroll a few pixels when using the pointer.\n                event.currentTarget.focus({ preventScroll: true });\n              }\n            })}\n            onPointerLeave={composeEventHandlers(itemProps.onPointerLeave, (event) => {\n              if (event.currentTarget === document.activeElement) {\n                contentContext.onItemLeave?.();\n              }\n            })}\n            onKeyDown={composeEventHandlers(itemProps.onKeyDown, (event) => {\n              const isTypingAhead = contentContext.searchRef?.current !== '';\n              if (isTypingAhead && event.key === ' ') return;\n              if (SELECTION_KEYS.includes(event.key)) handleSelect();\n              // prevent page scroll if using the space key to select an item\n              if (event.key === ' ') event.preventDefault();\n            })}\n          />\n        </Collection.ItemSlot>\n      </SelectItemContextProvider>\n    );\n  }\n);\n\nSelectItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItemText\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_TEXT_NAME = 'SelectItemText';\n\ntype SelectItemTextElement = React.ElementRef<typeof Primitive.span>;\ninterface SelectItemTextProps extends PrimitiveSpanProps {}\n\nconst SelectItemText = React.forwardRef<SelectItemTextElement, SelectItemTextProps>(\n  (props: ScopedProps<SelectItemTextProps>, forwardedRef) => {\n    // We ignore `className` and `style` as this part shouldn't be styled.\n    const { __scopeSelect, className, style, ...itemTextProps } = props;\n    const context = useSelectContext(ITEM_TEXT_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ITEM_TEXT_NAME, __scopeSelect);\n    const itemContext = useSelectItemContext(ITEM_TEXT_NAME, __scopeSelect);\n    const nativeOptionsContext = useSelectNativeOptionsContext(ITEM_TEXT_NAME, __scopeSelect);\n    const [itemTextNode, setItemTextNode] = React.useState<SelectItemTextElement | null>(null);\n    const composedRefs = useComposedRefs(\n      forwardedRef,\n      (node) => setItemTextNode(node),\n      itemContext.onItemTextChange,\n      (node) => contentContext.itemTextRefCallback?.(node, itemContext.value, itemContext.disabled)\n    );\n\n    const textContent = itemTextNode?.textContent;\n    const nativeOption = React.useMemo(\n      () => (\n        <option key={itemContext.value} value={itemContext.value} disabled={itemContext.disabled}>\n          {textContent}\n        </option>\n      ),\n      [itemContext.disabled, itemContext.value, textContent]\n    );\n\n    const { onNativeOptionAdd, onNativeOptionRemove } = nativeOptionsContext;\n    useLayoutEffect(() => {\n      onNativeOptionAdd(nativeOption);\n      return () => onNativeOptionRemove(nativeOption);\n    }, [onNativeOptionAdd, onNativeOptionRemove, nativeOption]);\n\n    return (\n      <>\n        <Primitive.span id={itemContext.textId} {...itemTextProps} ref={composedRefs} />\n\n        {/* Portal the select item text into the trigger value node */}\n        {itemContext.isSelected && context.valueNode && !context.valueNodeHasChildren\n          ? ReactDOM.createPortal(itemTextProps.children, context.valueNode)\n          : null}\n      </>\n    );\n  }\n);\n\nSelectItemText.displayName = ITEM_TEXT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_INDICATOR_NAME = 'SelectItemIndicator';\n\ntype SelectItemIndicatorElement = React.ElementRef<typeof Primitive.span>;\ninterface SelectItemIndicatorProps extends PrimitiveSpanProps {}\n\nconst SelectItemIndicator = React.forwardRef<SelectItemIndicatorElement, SelectItemIndicatorProps>(\n  (props: ScopedProps<SelectItemIndicatorProps>, forwardedRef) => {\n    const { __scopeSelect, ...itemIndicatorProps } = props;\n    const itemContext = useSelectItemContext(ITEM_INDICATOR_NAME, __scopeSelect);\n    return itemContext.isSelected ? (\n      <Primitive.span aria-hidden {...itemIndicatorProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nSelectItemIndicator.displayName = ITEM_INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectScrollUpButton\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLL_UP_BUTTON_NAME = 'SelectScrollUpButton';\n\ntype SelectScrollUpButtonElement = SelectScrollButtonImplElement;\ninterface SelectScrollUpButtonProps extends Omit<SelectScrollButtonImplProps, 'onAutoScroll'> {}\n\nconst SelectScrollUpButton = React.forwardRef<\n  SelectScrollUpButtonElement,\n  SelectScrollUpButtonProps\n>((props: ScopedProps<SelectScrollUpButtonProps>, forwardedRef) => {\n  const contentContext = useSelectContentContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);\n  const viewportContext = useSelectViewportContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);\n  const [canScrollUp, setCanScrollUp] = React.useState(false);\n  const composedRefs = useComposedRefs(forwardedRef, viewportContext.onScrollButtonChange);\n\n  useLayoutEffect(() => {\n    if (contentContext.viewport && contentContext.isPositioned) {\n      const viewport = contentContext.viewport;\n      function handleScroll() {\n        const canScrollUp = viewport.scrollTop > 0;\n        setCanScrollUp(canScrollUp);\n      }\n      handleScroll();\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n  }, [contentContext.viewport, contentContext.isPositioned]);\n\n  return canScrollUp ? (\n    <SelectScrollButtonImpl\n      {...props}\n      ref={composedRefs}\n      onAutoScroll={() => {\n        const { viewport, selectedItem } = contentContext;\n        if (viewport && selectedItem) {\n          viewport.scrollTop = viewport.scrollTop - selectedItem.offsetHeight;\n        }\n      }}\n    />\n  ) : null;\n});\n\nSelectScrollUpButton.displayName = SCROLL_UP_BUTTON_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectScrollDownButton\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLL_DOWN_BUTTON_NAME = 'SelectScrollDownButton';\n\ntype SelectScrollDownButtonElement = SelectScrollButtonImplElement;\ninterface SelectScrollDownButtonProps extends Omit<SelectScrollButtonImplProps, 'onAutoScroll'> {}\n\nconst SelectScrollDownButton = React.forwardRef<\n  SelectScrollDownButtonElement,\n  SelectScrollDownButtonProps\n>((props: ScopedProps<SelectScrollDownButtonProps>, forwardedRef) => {\n  const contentContext = useSelectContentContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);\n  const viewportContext = useSelectViewportContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);\n  const [canScrollDown, setCanScrollDown] = React.useState(false);\n  const composedRefs = useComposedRefs(forwardedRef, viewportContext.onScrollButtonChange);\n\n  useLayoutEffect(() => {\n    if (contentContext.viewport && contentContext.isPositioned) {\n      const viewport = contentContext.viewport;\n      function handleScroll() {\n        const maxScroll = viewport.scrollHeight - viewport.clientHeight;\n        // we use Math.ceil here because if the UI is zoomed-in\n        // `scrollTop` is not always reported as an integer\n        const canScrollDown = Math.ceil(viewport.scrollTop) < maxScroll;\n        setCanScrollDown(canScrollDown);\n      }\n      handleScroll();\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n  }, [contentContext.viewport, contentContext.isPositioned]);\n\n  return canScrollDown ? (\n    <SelectScrollButtonImpl\n      {...props}\n      ref={composedRefs}\n      onAutoScroll={() => {\n        const { viewport, selectedItem } = contentContext;\n        if (viewport && selectedItem) {\n          viewport.scrollTop = viewport.scrollTop + selectedItem.offsetHeight;\n        }\n      }}\n    />\n  ) : null;\n});\n\nSelectScrollDownButton.displayName = SCROLL_DOWN_BUTTON_NAME;\n\ntype SelectScrollButtonImplElement = React.ElementRef<typeof Primitive.div>;\ninterface SelectScrollButtonImplProps extends PrimitiveDivProps {\n  onAutoScroll(): void;\n}\n\nconst SelectScrollButtonImpl = React.forwardRef<\n  SelectScrollButtonImplElement,\n  SelectScrollButtonImplProps\n>((props: ScopedProps<SelectScrollButtonImplProps>, forwardedRef) => {\n  const { __scopeSelect, onAutoScroll, ...scrollIndicatorProps } = props;\n  const contentContext = useSelectContentContext('SelectScrollButton', __scopeSelect);\n  const autoScrollTimerRef = React.useRef<number | null>(null);\n  const getItems = useCollection(__scopeSelect);\n\n  const clearAutoScrollTimer = React.useCallback(() => {\n    if (autoScrollTimerRef.current !== null) {\n      window.clearInterval(autoScrollTimerRef.current);\n      autoScrollTimerRef.current = null;\n    }\n  }, []);\n\n  React.useEffect(() => {\n    return () => clearAutoScrollTimer();\n  }, [clearAutoScrollTimer]);\n\n  // When the viewport becomes scrollable on either side, the relevant scroll button will mount.\n  // Because it is part of the normal flow, it will push down (top button) or shrink (bottom button)\n  // the viewport, potentially causing the active item to now be partially out of view.\n  // We re-run the `scrollIntoView` logic to make sure it stays within the viewport.\n  useLayoutEffect(() => {\n    const activeItem = getItems().find((item) => item.ref.current === document.activeElement);\n    activeItem?.ref.current?.scrollIntoView({ block: 'nearest' });\n  }, [getItems]);\n\n  return (\n    <Primitive.div\n      aria-hidden\n      {...scrollIndicatorProps}\n      ref={forwardedRef}\n      style={{ flexShrink: 0, ...scrollIndicatorProps.style }}\n      onPointerDown={composeEventHandlers(scrollIndicatorProps.onPointerDown, () => {\n        if (autoScrollTimerRef.current === null) {\n          autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);\n        }\n      })}\n      onPointerMove={composeEventHandlers(scrollIndicatorProps.onPointerMove, () => {\n        contentContext.onItemLeave?.();\n        if (autoScrollTimerRef.current === null) {\n          autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);\n        }\n      })}\n      onPointerLeave={composeEventHandlers(scrollIndicatorProps.onPointerLeave, () => {\n        clearAutoScrollTimer();\n      })}\n    />\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * SelectSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'SelectSeparator';\n\ntype SelectSeparatorElement = React.ElementRef<typeof Primitive.div>;\ninterface SelectSeparatorProps extends PrimitiveDivProps {}\n\nconst SelectSeparator = React.forwardRef<SelectSeparatorElement, SelectSeparatorProps>(\n  (props: ScopedProps<SelectSeparatorProps>, forwardedRef) => {\n    const { __scopeSelect, ...separatorProps } = props;\n    return <Primitive.div aria-hidden {...separatorProps} ref={forwardedRef} />;\n  }\n);\n\nSelectSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'SelectArrow';\n\ntype SelectArrowElement = React.ElementRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface SelectArrowProps extends PopperArrowProps {}\n\nconst SelectArrow = React.forwardRef<SelectArrowElement, SelectArrowProps>(\n  (props: ScopedProps<SelectArrowProps>, forwardedRef) => {\n    const { __scopeSelect, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeSelect);\n    const context = useSelectContext(ARROW_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ARROW_NAME, __scopeSelect);\n    return context.open && contentContext.position === 'popper' ? (\n      <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nSelectArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction shouldShowPlaceholder(value?: string) {\n  return value === '' || value === undefined;\n}\n\nconst BubbleSelect = React.forwardRef<HTMLSelectElement, React.ComponentPropsWithoutRef<'select'>>(\n  (props, forwardedRef) => {\n    const { value, ...selectProps } = props;\n    const ref = React.useRef<HTMLSelectElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const prevValue = usePrevious(value);\n\n    // Bubble value change to parents (e.g form change event)\n    React.useEffect(() => {\n      const select = ref.current!;\n      const selectProto = window.HTMLSelectElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        selectProto,\n        'value'\n      ) as PropertyDescriptor;\n      const setValue = descriptor.set;\n      if (prevValue !== value && setValue) {\n        const event = new Event('change', { bubbles: true });\n        setValue.call(select, value);\n        select.dispatchEvent(event);\n      }\n    }, [prevValue, value]);\n\n    /**\n     * We purposefully use a `select` here to support form autofill as much\n     * as possible.\n     *\n     * We purposefully do not add the `value` attribute here to allow the value\n     * to be set programatically and bubble to any parent form `onChange` event.\n     * Adding the `value` will cause React to consider the programatic\n     * dispatch a duplicate and it will get swallowed.\n     *\n     * We use `VisuallyHidden` rather than `display: \"none\"` because Safari autofill\n     * won't work otherwise.\n     */\n    return (\n      <VisuallyHidden asChild>\n        <select {...selectProps} ref={composedRefs} defaultValue={value} />\n      </VisuallyHidden>\n    );\n  }\n);\n\nBubbleSelect.displayName = 'BubbleSelect';\n\nfunction useTypeaheadSearch(onSearchChange: (search: string) => void) {\n  const handleSearchChange = useCallbackRef(onSearchChange);\n  const searchRef = React.useRef('');\n  const timerRef = React.useRef(0);\n\n  const handleTypeaheadSearch = React.useCallback(\n    (key: string) => {\n      const search = searchRef.current + key;\n      handleSearchChange(search);\n\n      (function updateSearch(value: string) {\n        searchRef.current = value;\n        window.clearTimeout(timerRef.current);\n        // Reset `searchRef` 1 second after it was last updated\n        if (value !== '') timerRef.current = window.setTimeout(() => updateSearch(''), 1000);\n      })(search);\n    },\n    [handleSearchChange]\n  );\n\n  const resetTypeahead = React.useCallback(() => {\n    searchRef.current = '';\n    window.clearTimeout(timerRef.current);\n  }, []);\n\n  React.useEffect(() => {\n    return () => window.clearTimeout(timerRef.current);\n  }, []);\n\n  return [searchRef, handleTypeaheadSearch, resetTypeahead] as const;\n}\n\n/**\n * This is the \"meat\" of the typeahead matching logic. It takes in a list of items,\n * the search and the current item, and returns the next item (or `undefined`).\n *\n * We normalize the search because if a user has repeatedly pressed a character,\n * we want the exact same behavior as if we only had that one character\n * (ie. cycle through items starting with that character)\n *\n * We also reorder the items by wrapping the array around the current item.\n * This is so we always look forward from the current item, and picking the first\n * item will always be the correct one.\n *\n * Finally, if the normalized search is exactly one character, we exclude the\n * current item from the values because otherwise it would be the first to match always\n * and focus would never move. This is as opposed to the regular case, where we\n * don't want focus to move if the current item still matches.\n */\nfunction findNextItem<T extends { textValue: string }>(\n  items: T[],\n  search: string,\n  currentItem?: T\n) {\n  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n  const normalizedSearch = isRepeated ? search[0] : search;\n  const currentItemIndex = currentItem ? items.indexOf(currentItem) : -1;\n  let wrappedItems = wrapArray(items, Math.max(currentItemIndex, 0));\n  const excludeCurrentItem = normalizedSearch.length === 1;\n  if (excludeCurrentItem) wrappedItems = wrappedItems.filter((v) => v !== currentItem);\n  const nextItem = wrappedItems.find((item) =>\n    item.textValue.toLowerCase().startsWith(normalizedSearch.toLowerCase())\n  );\n  return nextItem !== currentItem ? nextItem : undefined;\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n\nconst Root = Select;\nconst Trigger = SelectTrigger;\nconst Value = SelectValue;\nconst Icon = SelectIcon;\nconst Portal = SelectPortal;\nconst Content = SelectContent;\nconst Viewport = SelectViewport;\nconst Group = SelectGroup;\nconst Label = SelectLabel;\nconst Item = SelectItem;\nconst ItemText = SelectItemText;\nconst ItemIndicator = SelectItemIndicator;\nconst ScrollUpButton = SelectScrollUpButton;\nconst ScrollDownButton = SelectScrollDownButton;\nconst Separator = SelectSeparator;\nconst Arrow = SelectArrow;\n\nexport {\n  createSelectScope,\n  //\n  Select,\n  SelectTrigger,\n  SelectValue,\n  SelectIcon,\n  SelectPortal,\n  SelectContent,\n  SelectViewport,\n  SelectGroup,\n  SelectLabel,\n  SelectItem,\n  SelectItemText,\n  SelectItemIndicator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n  SelectSeparator,\n  SelectArrow,\n  //\n  Root,\n  Trigger,\n  Value,\n  Icon,\n  Portal,\n  Content,\n  Viewport,\n  Group,\n  Label,\n  Item,\n  ItemText,\n  ItemIndicator,\n  ScrollUpButton,\n  ScrollDownButton,\n  Separator,\n  Arrow,\n};\nexport type {\n  SelectProps,\n  SelectTriggerProps,\n  SelectValueProps,\n  SelectIconProps,\n  SelectPortalProps,\n  SelectContentProps,\n  SelectViewportProps,\n  SelectGroupProps,\n  SelectLabelProps,\n  SelectItemProps,\n  SelectItemTextProps,\n  SelectItemIndicatorProps,\n  SelectScrollUpButtonProps,\n  SelectScrollDownButtonProps,\n  SelectSeparatorProps,\n  SelectArrowProps,\n};\n", "import { colorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { radiusPropDef } from '../props/radius.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\n\nconst selectRootPropDefs = {\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n};\n\nconst triggerVariants = ['classic', 'surface', 'soft', 'ghost'] as const;\n\nconst selectTriggerPropDefs = {\n  variant: { type: 'enum', className: 'rt-variant', values: triggerVariants, default: 'surface' },\n  ...colorPropDef,\n  ...radiusPropDef,\n  placeholder: { type: 'string' },\n} satisfies {\n  variant: PropDef<(typeof triggerVariants)[number]>;\n  placeholder: PropDef<string>;\n};\n\nconst contentVariants = ['solid', 'soft'] as const;\n\nconst selectContentPropDefs = {\n  variant: { type: 'enum', className: 'rt-variant', values: contentVariants, default: 'solid' },\n  ...colorPropDef,\n  ...highContrastPropDef,\n} satisfies {\n  variant: PropDef<(typeof contentVariants)[number]>;\n};\n\nexport { selectRootPropDefs, selectTriggerPropDefs, selectContentPropDefs };\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport * as SelectPrimitive from '@radix-ui/react-select';\nimport * as ScrollAreaPrimitive from '@radix-ui/react-scroll-area';\n\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\nimport { ChevronDownIcon, ThickCheckIcon } from './icons.js';\nimport {\n  selectRootPropDefs,\n  selectTriggerPropDefs,\n  selectContentPropDefs,\n} from './select.props.js';\nimport { useThemeContext, Theme } from './theme.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ntype SelectRootOwnProps = GetPropDefTypes<typeof selectRootPropDefs>;\n\ntype SelectContextValue = SelectRootOwnProps;\nconst SelectContext = React.createContext<SelectContextValue>({});\n\ninterface SelectRootProps\n  extends React.ComponentPropsWithoutRef<typeof SelectPrimitive.Root>,\n    SelectContextValue {}\nconst SelectRoot: React.FC<SelectRootProps> = (props) => {\n  const { children, size = selectRootPropDefs.size.default, ...rootProps } = props;\n  return (\n    <SelectPrimitive.Root {...rootProps}>\n      <SelectContext.Provider value={React.useMemo(() => ({ size }), [size])}>\n        {children}\n      </SelectContext.Provider>\n    </SelectPrimitive.Root>\n  );\n};\nSelectRoot.displayName = 'Select.Root';\n\ntype SelectTriggerElement = React.ElementRef<typeof SelectPrimitive.Trigger>;\ntype SelectTriggerOwnProps = GetPropDefTypes<typeof selectTriggerPropDefs>;\ninterface SelectTriggerProps\n  extends ComponentPropsWithout<typeof SelectPrimitive.Trigger, RemovedProps>,\n    MarginProps,\n    SelectTriggerOwnProps {}\nconst SelectTrigger = React.forwardRef<SelectTriggerElement, SelectTriggerProps>(\n  (props, forwardedRef) => {\n    const context = React.useContext(SelectContext);\n    const { children, className, color, radius, placeholder, ...triggerProps } = extractProps(\n      // Pass size value from the context to generate styles\n      { size: context?.size, ...props },\n      // Pass size prop def to allow it to be extracted\n      { size: selectRootPropDefs.size },\n      selectTriggerPropDefs,\n      marginPropDefs\n    );\n    return (\n      <SelectPrimitive.Trigger asChild>\n        <button\n          data-accent-color={color}\n          data-radius={radius}\n          {...triggerProps}\n          ref={forwardedRef}\n          className={classNames('rt-reset', 'rt-SelectTrigger', className)}\n        >\n          <span className=\"rt-SelectTriggerInner\">\n            <SelectPrimitive.Value placeholder={placeholder}>{children}</SelectPrimitive.Value>\n          </span>\n          <SelectPrimitive.Icon asChild>\n            <ChevronDownIcon className=\"rt-SelectIcon\" />\n          </SelectPrimitive.Icon>\n        </button>\n      </SelectPrimitive.Trigger>\n    );\n  }\n);\nSelectTrigger.displayName = 'Select.Trigger';\n\ntype SelectContentElement = React.ElementRef<typeof SelectPrimitive.Content>;\ntype SelectContentOwnProps = GetPropDefTypes<typeof selectContentPropDefs>;\ninterface SelectContentProps\n  extends ComponentPropsWithout<typeof SelectPrimitive.Content, RemovedProps>,\n    SelectContentOwnProps {\n  container?: React.ComponentPropsWithoutRef<typeof SelectPrimitive.Portal>['container'];\n}\nconst SelectContent = React.forwardRef<SelectContentElement, SelectContentProps>(\n  (props, forwardedRef) => {\n    const context = React.useContext(SelectContext);\n    const { className, children, color, container, ...contentProps } = extractProps(\n      // Pass size value from the context to generate styles\n      { size: context?.size, ...props },\n      // Pass size prop def to allow it to be extracted\n      { size: selectRootPropDefs.size },\n      selectContentPropDefs\n    );\n    const themeContext = useThemeContext();\n    const resolvedColor = color || themeContext.accentColor;\n    return (\n      <SelectPrimitive.Portal container={container}>\n        <Theme asChild>\n          <SelectPrimitive.Content\n            data-accent-color={resolvedColor}\n            sideOffset={4}\n            {...contentProps}\n            asChild={false}\n            ref={forwardedRef}\n            className={classNames(\n              { 'rt-PopperContent': contentProps.position === 'popper' },\n              'rt-SelectContent',\n              className\n            )}\n          >\n            <ScrollAreaPrimitive.Root type=\"auto\" className=\"rt-ScrollAreaRoot\">\n              <SelectPrimitive.Viewport asChild className=\"rt-SelectViewport\">\n                <ScrollAreaPrimitive.Viewport\n                  className=\"rt-ScrollAreaViewport\"\n                  style={{ overflowY: undefined }}\n                >\n                  {children}\n                </ScrollAreaPrimitive.Viewport>\n              </SelectPrimitive.Viewport>\n              <ScrollAreaPrimitive.Scrollbar\n                className=\"rt-ScrollAreaScrollbar rt-r-size-1\"\n                orientation=\"vertical\"\n              >\n                <ScrollAreaPrimitive.Thumb className=\"rt-ScrollAreaThumb\" />\n              </ScrollAreaPrimitive.Scrollbar>\n            </ScrollAreaPrimitive.Root>\n          </SelectPrimitive.Content>\n        </Theme>\n      </SelectPrimitive.Portal>\n    );\n  }\n);\nSelectContent.displayName = 'Select.Content';\n\ntype SelectItemElement = React.ElementRef<typeof SelectPrimitive.Item>;\ninterface SelectItemProps\n  extends ComponentPropsWithout<typeof SelectPrimitive.Item, RemovedProps> {}\nconst SelectItem = React.forwardRef<SelectItemElement, SelectItemProps>((props, forwardedRef) => {\n  const { className, children, ...itemProps } = props;\n  return (\n    <SelectPrimitive.Item\n      {...itemProps}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-SelectItem', className)}\n    >\n      <SelectPrimitive.ItemIndicator className=\"rt-SelectItemIndicator\">\n        <ThickCheckIcon className=\"rt-SelectItemIndicatorIcon\" />\n      </SelectPrimitive.ItemIndicator>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  );\n});\nSelectItem.displayName = 'Select.Item';\n\ntype SelectGroupElement = React.ElementRef<typeof SelectPrimitive.Group>;\ninterface SelectGroupProps\n  extends ComponentPropsWithout<typeof SelectPrimitive.Group, RemovedProps> {}\nconst SelectGroup = React.forwardRef<SelectGroupElement, SelectGroupProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <SelectPrimitive.Group\n      {...props}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-SelectGroup', className)}\n    />\n  )\n);\nSelectGroup.displayName = 'Select.Group';\n\ntype SelectLabelElement = React.ElementRef<typeof SelectPrimitive.Label>;\ninterface SelectLabelProps\n  extends ComponentPropsWithout<typeof SelectPrimitive.Label, RemovedProps> {}\nconst SelectLabel = React.forwardRef<SelectLabelElement, SelectLabelProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <SelectPrimitive.Label\n      {...props}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-SelectLabel', className)}\n    />\n  )\n);\nSelectLabel.displayName = 'Select.Label';\n\ntype SelectSeparatorElement = React.ElementRef<typeof SelectPrimitive.Separator>;\ninterface SelectSeparatorProps\n  extends ComponentPropsWithout<typeof SelectPrimitive.Separator, RemovedProps> {}\nconst SelectSeparator = React.forwardRef<SelectSeparatorElement, SelectSeparatorProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <SelectPrimitive.Separator\n      {...props}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-SelectSeparator', className)}\n    />\n  )\n);\nSelectSeparator.displayName = 'Select.Separator';\n\nexport {\n  SelectRoot as Root,\n  SelectTrigger as Trigger,\n  SelectContent as Content,\n  SelectItem as Item,\n  SelectGroup as Group,\n  SelectLabel as Label,\n  SelectSeparator as Separator,\n};\n\nexport type {\n  SelectRootProps as RootProps,\n  SelectTriggerProps as TriggerProps,\n  SelectContentProps as ContentProps,\n  SelectItemProps as ItemProps,\n  SelectGroupProps as GroupProps,\n  SelectLabelProps as LabelProps,\n  SelectSeparatorProps as SeparatorProps,\n};\n", "import { colorPropDef } from '../props/color.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst orientationValues = ['horizontal', 'vertical'] as const;\nconst sizes = ['1', '2', '3', '4'] as const;\n\nconst separatorPropDefs = {\n  orientation: {\n    type: 'enum',\n    className: 'rt-r-orientation',\n    values: orientationValues,\n    default: 'horizontal',\n    responsive: true,\n  },\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '1', responsive: true },\n  color: { ...colorPropDef.color, default: 'gray' },\n  decorative: { type: 'boolean', default: true },\n} satisfies {\n  orientation: PropDef<(typeof orientationValues)[number]>;\n  size: PropDef<(typeof sizes)[number]>;\n  color: typeof colorPropDef.color;\n  decorative: PropDef<boolean>;\n};\n\nexport { separatorPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { separatorPropDefs } from './separator.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype SeparatorElement = React.ElementRef<'span'>;\ntype SeparatorOwnProps = GetPropDefTypes<typeof separatorPropDefs>;\ninterface SeparatorProps\n  extends ComponentPropsWithout<'span', RemovedProps>,\n    MarginProps,\n    SeparatorOwnProps {}\nconst Separator = React.forwardRef<SeparatorElement, SeparatorProps>((props, forwardedRef) => {\n  const { className, color, decorative, ...separatorProps } = extractProps(\n    props,\n    separatorPropDefs,\n    marginPropDefs\n  );\n  return (\n    <span\n      data-accent-color={color}\n      role={decorative ? undefined : 'separator'}\n      {...separatorProps}\n      ref={forwardedRef}\n      className={classNames('rt-Separator', className)}\n    />\n  );\n});\nSeparator.displayName = 'Separator';\n\nexport { Separator };\nexport type { SeparatorProps };\n", "import { heightPropDefs } from '../props/height.props.js';\nimport { widthPropDefs } from '../props/width.props.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst skeletonPropDefs = {\n  loading: { type: 'boolean', default: true },\n  ...widthPropDefs,\n  ...heightPropDefs,\n} satisfies {\n  loading: PropDef<boolean>;\n};\n\nexport { skeletonPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { inert } from '../helpers/inert.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\nimport { skeletonPropDefs } from './skeleton.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ntype SkeletonElement = React.ElementRef<'span'>;\ntype SkeletonOwnProps = GetPropDefTypes<typeof skeletonPropDefs>;\ninterface SkeletonProps\n  extends ComponentPropsWithout<'span', RemovedProps>,\n    MarginProps,\n    SkeletonOwnProps {}\nconst Skeleton = React.forwardRef<SkeletonElement, SkeletonProps>((props, forwardedRef) => {\n  const { children, className, loading, ...skeletonProps } = extractProps(\n    props,\n    skeletonPropDefs,\n    marginPropDefs\n  );\n\n  if (!loading) return children;\n\n  const Tag = React.isValidElement(children) ? Slot : 'span';\n\n  return (\n    <Tag\n      ref={forwardedRef}\n      aria-hidden\n      className={classNames('rt-Skeleton', className)}\n      data-inline-skeleton={React.isValidElement(children) ? undefined : true}\n      tabIndex={-1}\n      // @ts-ignore\n      inert={inert}\n      {...skeletonProps}\n    >\n      {children}\n    </Tag>\n  );\n});\nSkeleton.displayName = 'Skeleton';\n\nexport { Skeleton };\nexport type { SkeletonProps };\n", "'use client';\nexport {\n  createSliderScope,\n  //\n  Slider,\n  SliderTrack,\n  SliderRange,\n  SliderThumb,\n  //\n  Root,\n  Track,\n  Range,\n  Thumb,\n} from './Slider';\nexport type { SliderProps, SliderTrackProps, SliderRangeProps, SliderThumbProps } from './Slider';\n", "import * as React from 'react';\nimport { clamp } from '@radix-ui/number';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { useSize } from '@radix-ui/react-use-size';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { createCollection } from '@radix-ui/react-collection';\n\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\nconst PAGE_KEYS = ['PageUp', 'PageDown'];\nconst ARROW_KEYS = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\n\ntype SlideDirection = 'from-left' | 'from-right' | 'from-bottom' | 'from-top';\nconst BACK_KEYS: Record<SlideDirection, string[]> = {\n  'from-left': ['Home', 'PageDown', 'ArrowDown', 'ArrowLeft'],\n  'from-right': ['Home', 'PageDown', 'ArrowDown', 'ArrowRight'],\n  'from-bottom': ['Home', 'PageDown', 'ArrowDown', 'ArrowLeft'],\n  'from-top': ['Home', 'PageDown', 'ArrowUp', 'ArrowLeft'],\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Slider\n * -----------------------------------------------------------------------------------------------*/\n\nconst SLIDER_NAME = 'Slider';\n\nconst [Collection, useCollection, createCollectionScope] =\n  createCollection<SliderThumbElement>(SLIDER_NAME);\n\ntype ScopedProps<P> = P & { __scopeSlider?: Scope };\nconst [createSliderContext, createSliderScope] = createContextScope(SLIDER_NAME, [\n  createCollectionScope,\n]);\n\ntype SliderContextValue = {\n  name?: string;\n  disabled?: boolean;\n  min: number;\n  max: number;\n  values: number[];\n  valueIndexToChangeRef: React.MutableRefObject<number>;\n  thumbs: Set<SliderThumbElement>;\n  orientation: SliderProps['orientation'];\n};\n\nconst [SliderProvider, useSliderContext] = createSliderContext<SliderContextValue>(SLIDER_NAME);\n\ntype SliderElement = SliderHorizontalElement | SliderVerticalElement;\ninterface SliderProps\n  extends Omit<\n    SliderHorizontalProps | SliderVerticalProps,\n    keyof SliderOrientationPrivateProps | 'defaultValue'\n  > {\n  name?: string;\n  disabled?: boolean;\n  orientation?: React.AriaAttributes['aria-orientation'];\n  dir?: Direction;\n  min?: number;\n  max?: number;\n  step?: number;\n  minStepsBetweenThumbs?: number;\n  value?: number[];\n  defaultValue?: number[];\n  onValueChange?(value: number[]): void;\n  onValueCommit?(value: number[]): void;\n  inverted?: boolean;\n}\n\nconst Slider = React.forwardRef<SliderElement, SliderProps>(\n  (props: ScopedProps<SliderProps>, forwardedRef) => {\n    const {\n      name,\n      min = 0,\n      max = 100,\n      step = 1,\n      orientation = 'horizontal',\n      disabled = false,\n      minStepsBetweenThumbs = 0,\n      defaultValue = [min],\n      value,\n      onValueChange = () => {},\n      onValueCommit = () => {},\n      inverted = false,\n      ...sliderProps\n    } = props;\n    const thumbRefs = React.useRef<SliderContextValue['thumbs']>(new Set());\n    const valueIndexToChangeRef = React.useRef<number>(0);\n    const isHorizontal = orientation === 'horizontal';\n    const SliderOrientation = isHorizontal ? SliderHorizontal : SliderVertical;\n\n    const [values = [], setValues] = useControllableState({\n      prop: value,\n      defaultProp: defaultValue,\n      onChange: (value) => {\n        const thumbs = [...thumbRefs.current];\n        thumbs[valueIndexToChangeRef.current]?.focus();\n        onValueChange(value);\n      },\n    });\n    const valuesBeforeSlideStartRef = React.useRef(values);\n\n    function handleSlideStart(value: number) {\n      const closestIndex = getClosestValueIndex(values, value);\n      updateValues(value, closestIndex);\n    }\n\n    function handleSlideMove(value: number) {\n      updateValues(value, valueIndexToChangeRef.current);\n    }\n\n    function handleSlideEnd() {\n      const prevValue = valuesBeforeSlideStartRef.current[valueIndexToChangeRef.current];\n      const nextValue = values[valueIndexToChangeRef.current];\n      const hasChanged = nextValue !== prevValue;\n      if (hasChanged) onValueCommit(values);\n    }\n\n    function updateValues(value: number, atIndex: number, { commit } = { commit: false }) {\n      const decimalCount = getDecimalCount(step);\n      const snapToStep = roundValue(Math.round((value - min) / step) * step + min, decimalCount);\n      const nextValue = clamp(snapToStep, [min, max]);\n\n      setValues((prevValues = []) => {\n        const nextValues = getNextSortedValues(prevValues, nextValue, atIndex);\n        if (hasMinStepsBetweenValues(nextValues, minStepsBetweenThumbs * step)) {\n          valueIndexToChangeRef.current = nextValues.indexOf(nextValue);\n          const hasChanged = String(nextValues) !== String(prevValues);\n          if (hasChanged && commit) onValueCommit(nextValues);\n          return hasChanged ? nextValues : prevValues;\n        } else {\n          return prevValues;\n        }\n      });\n    }\n\n    return (\n      <SliderProvider\n        scope={props.__scopeSlider}\n        name={name}\n        disabled={disabled}\n        min={min}\n        max={max}\n        valueIndexToChangeRef={valueIndexToChangeRef}\n        thumbs={thumbRefs.current}\n        values={values}\n        orientation={orientation}\n      >\n        <Collection.Provider scope={props.__scopeSlider}>\n          <Collection.Slot scope={props.__scopeSlider}>\n            <SliderOrientation\n              aria-disabled={disabled}\n              data-disabled={disabled ? '' : undefined}\n              {...sliderProps}\n              ref={forwardedRef}\n              onPointerDown={composeEventHandlers(sliderProps.onPointerDown, () => {\n                if (!disabled) valuesBeforeSlideStartRef.current = values;\n              })}\n              min={min}\n              max={max}\n              inverted={inverted}\n              onSlideStart={disabled ? undefined : handleSlideStart}\n              onSlideMove={disabled ? undefined : handleSlideMove}\n              onSlideEnd={disabled ? undefined : handleSlideEnd}\n              onHomeKeyDown={() => !disabled && updateValues(min, 0, { commit: true })}\n              onEndKeyDown={() =>\n                !disabled && updateValues(max, values.length - 1, { commit: true })\n              }\n              onStepKeyDown={({ event, direction: stepDirection }) => {\n                if (!disabled) {\n                  const isPageKey = PAGE_KEYS.includes(event.key);\n                  const isSkipKey = isPageKey || (event.shiftKey && ARROW_KEYS.includes(event.key));\n                  const multiplier = isSkipKey ? 10 : 1;\n                  const atIndex = valueIndexToChangeRef.current;\n                  const value = values[atIndex];\n                  const stepInDirection = step * multiplier * stepDirection;\n                  updateValues(value + stepInDirection, atIndex, { commit: true });\n                }\n              }}\n            />\n          </Collection.Slot>\n        </Collection.Provider>\n      </SliderProvider>\n    );\n  }\n);\n\nSlider.displayName = SLIDER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SliderHorizontal\n * -----------------------------------------------------------------------------------------------*/\n\ntype Side = 'top' | 'right' | 'bottom' | 'left';\n\nconst [SliderOrientationProvider, useSliderOrientationContext] = createSliderContext<{\n  startEdge: Side;\n  endEdge: Side;\n  size: keyof NonNullable<ReturnType<typeof useSize>>;\n  direction: number;\n}>(SLIDER_NAME, {\n  startEdge: 'left',\n  endEdge: 'right',\n  size: 'width',\n  direction: 1,\n});\n\ntype SliderOrientationPrivateProps = {\n  min: number;\n  max: number;\n  inverted: boolean;\n  onSlideStart?(value: number): void;\n  onSlideMove?(value: number): void;\n  onSlideEnd?(): void;\n  onHomeKeyDown(event: React.KeyboardEvent): void;\n  onEndKeyDown(event: React.KeyboardEvent): void;\n  onStepKeyDown(step: { event: React.KeyboardEvent; direction: number }): void;\n};\ninterface SliderOrientationProps\n  extends Omit<SliderImplProps, keyof SliderImplPrivateProps>,\n    SliderOrientationPrivateProps {}\n\ntype SliderHorizontalElement = SliderImplElement;\ninterface SliderHorizontalProps extends SliderOrientationProps {\n  dir?: Direction;\n}\n\nconst SliderHorizontal = React.forwardRef<SliderHorizontalElement, SliderHorizontalProps>(\n  (props: ScopedProps<SliderHorizontalProps>, forwardedRef) => {\n    const {\n      min,\n      max,\n      dir,\n      inverted,\n      onSlideStart,\n      onSlideMove,\n      onSlideEnd,\n      onStepKeyDown,\n      ...sliderProps\n    } = props;\n    const [slider, setSlider] = React.useState<SliderImplElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setSlider(node));\n    const rectRef = React.useRef<ClientRect>();\n    const direction = useDirection(dir);\n    const isDirectionLTR = direction === 'ltr';\n    const isSlidingFromLeft = (isDirectionLTR && !inverted) || (!isDirectionLTR && inverted);\n\n    function getValueFromPointer(pointerPosition: number) {\n      const rect = rectRef.current || slider!.getBoundingClientRect();\n      const input: [number, number] = [0, rect.width];\n      const output: [number, number] = isSlidingFromLeft ? [min, max] : [max, min];\n      const value = linearScale(input, output);\n\n      rectRef.current = rect;\n      return value(pointerPosition - rect.left);\n    }\n\n    return (\n      <SliderOrientationProvider\n        scope={props.__scopeSlider}\n        startEdge={isSlidingFromLeft ? 'left' : 'right'}\n        endEdge={isSlidingFromLeft ? 'right' : 'left'}\n        direction={isSlidingFromLeft ? 1 : -1}\n        size=\"width\"\n      >\n        <SliderImpl\n          dir={direction}\n          data-orientation=\"horizontal\"\n          {...sliderProps}\n          ref={composedRefs}\n          style={{\n            ...sliderProps.style,\n            ['--radix-slider-thumb-transform' as any]: 'translateX(-50%)',\n          }}\n          onSlideStart={(event) => {\n            const value = getValueFromPointer(event.clientX);\n            onSlideStart?.(value);\n          }}\n          onSlideMove={(event) => {\n            const value = getValueFromPointer(event.clientX);\n            onSlideMove?.(value);\n          }}\n          onSlideEnd={() => {\n            rectRef.current = undefined;\n            onSlideEnd?.();\n          }}\n          onStepKeyDown={(event) => {\n            const slideDirection = isSlidingFromLeft ? 'from-left' : 'from-right';\n            const isBackKey = BACK_KEYS[slideDirection].includes(event.key);\n            onStepKeyDown?.({ event, direction: isBackKey ? -1 : 1 });\n          }}\n        />\n      </SliderOrientationProvider>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * SliderVertical\n * -----------------------------------------------------------------------------------------------*/\n\ntype SliderVerticalElement = SliderImplElement;\ninterface SliderVerticalProps extends SliderOrientationProps {}\n\nconst SliderVertical = React.forwardRef<SliderVerticalElement, SliderVerticalProps>(\n  (props: ScopedProps<SliderVerticalProps>, forwardedRef) => {\n    const {\n      min,\n      max,\n      inverted,\n      onSlideStart,\n      onSlideMove,\n      onSlideEnd,\n      onStepKeyDown,\n      ...sliderProps\n    } = props;\n    const sliderRef = React.useRef<SliderImplElement>(null);\n    const ref = useComposedRefs(forwardedRef, sliderRef);\n    const rectRef = React.useRef<ClientRect>();\n    const isSlidingFromBottom = !inverted;\n\n    function getValueFromPointer(pointerPosition: number) {\n      const rect = rectRef.current || sliderRef.current!.getBoundingClientRect();\n      const input: [number, number] = [0, rect.height];\n      const output: [number, number] = isSlidingFromBottom ? [max, min] : [min, max];\n      const value = linearScale(input, output);\n\n      rectRef.current = rect;\n      return value(pointerPosition - rect.top);\n    }\n\n    return (\n      <SliderOrientationProvider\n        scope={props.__scopeSlider}\n        startEdge={isSlidingFromBottom ? 'bottom' : 'top'}\n        endEdge={isSlidingFromBottom ? 'top' : 'bottom'}\n        size=\"height\"\n        direction={isSlidingFromBottom ? 1 : -1}\n      >\n        <SliderImpl\n          data-orientation=\"vertical\"\n          {...sliderProps}\n          ref={ref}\n          style={{\n            ...sliderProps.style,\n            ['--radix-slider-thumb-transform' as any]: 'translateY(50%)',\n          }}\n          onSlideStart={(event) => {\n            const value = getValueFromPointer(event.clientY);\n            onSlideStart?.(value);\n          }}\n          onSlideMove={(event) => {\n            const value = getValueFromPointer(event.clientY);\n            onSlideMove?.(value);\n          }}\n          onSlideEnd={() => {\n            rectRef.current = undefined;\n            onSlideEnd?.();\n          }}\n          onStepKeyDown={(event) => {\n            const slideDirection = isSlidingFromBottom ? 'from-bottom' : 'from-top';\n            const isBackKey = BACK_KEYS[slideDirection].includes(event.key);\n            onStepKeyDown?.({ event, direction: isBackKey ? -1 : 1 });\n          }}\n        />\n      </SliderOrientationProvider>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * SliderImpl\n * -----------------------------------------------------------------------------------------------*/\n\ntype SliderImplElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ntype SliderImplPrivateProps = {\n  onSlideStart(event: React.PointerEvent): void;\n  onSlideMove(event: React.PointerEvent): void;\n  onSlideEnd(event: React.PointerEvent): void;\n  onHomeKeyDown(event: React.KeyboardEvent): void;\n  onEndKeyDown(event: React.KeyboardEvent): void;\n  onStepKeyDown(event: React.KeyboardEvent): void;\n};\ninterface SliderImplProps extends PrimitiveDivProps, SliderImplPrivateProps {}\n\nconst SliderImpl = React.forwardRef<SliderImplElement, SliderImplProps>(\n  (props: ScopedProps<SliderImplProps>, forwardedRef) => {\n    const {\n      __scopeSlider,\n      onSlideStart,\n      onSlideMove,\n      onSlideEnd,\n      onHomeKeyDown,\n      onEndKeyDown,\n      onStepKeyDown,\n      ...sliderProps\n    } = props;\n    const context = useSliderContext(SLIDER_NAME, __scopeSlider);\n\n    return (\n      <Primitive.span\n        {...sliderProps}\n        ref={forwardedRef}\n        onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n          if (event.key === 'Home') {\n            onHomeKeyDown(event);\n            // Prevent scrolling to page start\n            event.preventDefault();\n          } else if (event.key === 'End') {\n            onEndKeyDown(event);\n            // Prevent scrolling to page end\n            event.preventDefault();\n          } else if (PAGE_KEYS.concat(ARROW_KEYS).includes(event.key)) {\n            onStepKeyDown(event);\n            // Prevent scrolling for directional key presses\n            event.preventDefault();\n          }\n        })}\n        onPointerDown={composeEventHandlers(props.onPointerDown, (event) => {\n          const target = event.target as HTMLElement;\n          target.setPointerCapture(event.pointerId);\n          // Prevent browser focus behaviour because we focus a thumb manually when values change.\n          event.preventDefault();\n          // Touch devices have a delay before focusing so won't focus if touch immediately moves\n          // away from target (sliding). We want thumb to focus regardless.\n          if (context.thumbs.has(target)) {\n            target.focus();\n          } else {\n            onSlideStart(event);\n          }\n        })}\n        onPointerMove={composeEventHandlers(props.onPointerMove, (event) => {\n          const target = event.target as HTMLElement;\n          if (target.hasPointerCapture(event.pointerId)) onSlideMove(event);\n        })}\n        onPointerUp={composeEventHandlers(props.onPointerUp, (event) => {\n          const target = event.target as HTMLElement;\n          if (target.hasPointerCapture(event.pointerId)) {\n            target.releasePointerCapture(event.pointerId);\n            onSlideEnd(event);\n          }\n        })}\n      />\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * SliderTrack\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRACK_NAME = 'SliderTrack';\n\ntype SliderTrackElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface SliderTrackProps extends PrimitiveSpanProps {}\n\nconst SliderTrack = React.forwardRef<SliderTrackElement, SliderTrackProps>(\n  (props: ScopedProps<SliderTrackProps>, forwardedRef) => {\n    const { __scopeSlider, ...trackProps } = props;\n    const context = useSliderContext(TRACK_NAME, __scopeSlider);\n    return (\n      <Primitive.span\n        data-disabled={context.disabled ? '' : undefined}\n        data-orientation={context.orientation}\n        {...trackProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nSliderTrack.displayName = TRACK_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SliderRange\n * -----------------------------------------------------------------------------------------------*/\n\nconst RANGE_NAME = 'SliderRange';\n\ntype SliderRangeElement = React.ElementRef<typeof Primitive.span>;\ninterface SliderRangeProps extends PrimitiveSpanProps {}\n\nconst SliderRange = React.forwardRef<SliderRangeElement, SliderRangeProps>(\n  (props: ScopedProps<SliderRangeProps>, forwardedRef) => {\n    const { __scopeSlider, ...rangeProps } = props;\n    const context = useSliderContext(RANGE_NAME, __scopeSlider);\n    const orientation = useSliderOrientationContext(RANGE_NAME, __scopeSlider);\n    const ref = React.useRef<HTMLSpanElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const valuesCount = context.values.length;\n    const percentages = context.values.map((value) =>\n      convertValueToPercentage(value, context.min, context.max)\n    );\n    const offsetStart = valuesCount > 1 ? Math.min(...percentages) : 0;\n    const offsetEnd = 100 - Math.max(...percentages);\n\n    return (\n      <Primitive.span\n        data-orientation={context.orientation}\n        data-disabled={context.disabled ? '' : undefined}\n        {...rangeProps}\n        ref={composedRefs}\n        style={{\n          ...props.style,\n          [orientation.startEdge]: offsetStart + '%',\n          [orientation.endEdge]: offsetEnd + '%',\n        }}\n      />\n    );\n  }\n);\n\nSliderRange.displayName = RANGE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SliderThumb\n * -----------------------------------------------------------------------------------------------*/\n\nconst THUMB_NAME = 'SliderThumb';\n\ntype SliderThumbElement = SliderThumbImplElement;\ninterface SliderThumbProps extends Omit<SliderThumbImplProps, 'index'> {}\n\nconst SliderThumb = React.forwardRef<SliderThumbElement, SliderThumbProps>(\n  (props: ScopedProps<SliderThumbProps>, forwardedRef) => {\n    const getItems = useCollection(props.__scopeSlider);\n    const [thumb, setThumb] = React.useState<SliderThumbImplElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setThumb(node));\n    const index = React.useMemo(\n      () => (thumb ? getItems().findIndex((item) => item.ref.current === thumb) : -1),\n      [getItems, thumb]\n    );\n    return <SliderThumbImpl {...props} ref={composedRefs} index={index} />;\n  }\n);\n\ntype SliderThumbImplElement = React.ElementRef<typeof Primitive.span>;\ninterface SliderThumbImplProps extends PrimitiveSpanProps {\n  index: number;\n  name?: string;\n}\n\nconst SliderThumbImpl = React.forwardRef<SliderThumbImplElement, SliderThumbImplProps>(\n  (props: ScopedProps<SliderThumbImplProps>, forwardedRef) => {\n    const { __scopeSlider, index, name, ...thumbProps } = props;\n    const context = useSliderContext(THUMB_NAME, __scopeSlider);\n    const orientation = useSliderOrientationContext(THUMB_NAME, __scopeSlider);\n    const [thumb, setThumb] = React.useState<HTMLSpanElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setThumb(node));\n    // We set this to true by default so that events bubble to forms without JS (SSR)\n    const isFormControl = thumb ? Boolean(thumb.closest('form')) : true;\n    const size = useSize(thumb);\n    // We cast because index could be `-1` which would return undefined\n    const value = context.values[index] as number | undefined;\n    const percent =\n      value === undefined ? 0 : convertValueToPercentage(value, context.min, context.max);\n    const label = getLabel(index, context.values.length);\n    const orientationSize = size?.[orientation.size];\n    const thumbInBoundsOffset = orientationSize\n      ? getThumbInBoundsOffset(orientationSize, percent, orientation.direction)\n      : 0;\n\n    React.useEffect(() => {\n      if (thumb) {\n        context.thumbs.add(thumb);\n        return () => {\n          context.thumbs.delete(thumb);\n        };\n      }\n    }, [thumb, context.thumbs]);\n\n    return (\n      <span\n        style={{\n          transform: 'var(--radix-slider-thumb-transform)',\n          position: 'absolute',\n          [orientation.startEdge]: `calc(${percent}% + ${thumbInBoundsOffset}px)`,\n        }}\n      >\n        <Collection.ItemSlot scope={props.__scopeSlider}>\n          <Primitive.span\n            role=\"slider\"\n            aria-label={props['aria-label'] || label}\n            aria-valuemin={context.min}\n            aria-valuenow={value}\n            aria-valuemax={context.max}\n            aria-orientation={context.orientation}\n            data-orientation={context.orientation}\n            data-disabled={context.disabled ? '' : undefined}\n            tabIndex={context.disabled ? undefined : 0}\n            {...thumbProps}\n            ref={composedRefs}\n            /**\n             * There will be no value on initial render while we work out the index so we hide thumbs\n             * without a value, otherwise SSR will render them in the wrong position before they\n             * snap into the correct position during hydration which would be visually jarring for\n             * slower connections.\n             */\n            style={value === undefined ? { display: 'none' } : props.style}\n            onFocus={composeEventHandlers(props.onFocus, () => {\n              context.valueIndexToChangeRef.current = index;\n            })}\n          />\n        </Collection.ItemSlot>\n\n        {isFormControl && (\n          <BubbleInput\n            key={index}\n            name={\n              name ??\n              (context.name ? context.name + (context.values.length > 1 ? '[]' : '') : undefined)\n            }\n            value={value}\n          />\n        )}\n      </span>\n    );\n  }\n);\n\nSliderThumb.displayName = THUMB_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst BubbleInput = (props: React.ComponentPropsWithoutRef<'input'>) => {\n  const { value, ...inputProps } = props;\n  const ref = React.useRef<HTMLInputElement>(null);\n  const prevValue = usePrevious(value);\n\n  // Bubble value change to parents (e.g form change event)\n  React.useEffect(() => {\n    const input = ref.current!;\n    const inputProto = window.HTMLInputElement.prototype;\n    const descriptor = Object.getOwnPropertyDescriptor(inputProto, 'value') as PropertyDescriptor;\n    const setValue = descriptor.set;\n    if (prevValue !== value && setValue) {\n      const event = new Event('input', { bubbles: true });\n      setValue.call(input, value);\n      input.dispatchEvent(event);\n    }\n  }, [prevValue, value]);\n\n  /**\n   * We purposefully do not use `type=\"hidden\"` here otherwise forms that\n   * wrap it will not be able to access its value via the FormData API.\n   *\n   * We purposefully do not add the `value` attribute here to allow the value\n   * to be set programatically and bubble to any parent form `onChange` event.\n   * Adding the `value` will cause React to consider the programatic\n   * dispatch a duplicate and it will get swallowed.\n   */\n  return <input style={{ display: 'none' }} {...inputProps} ref={ref} defaultValue={value} />;\n};\n\nfunction getNextSortedValues(prevValues: number[] = [], nextValue: number, atIndex: number) {\n  const nextValues = [...prevValues];\n  nextValues[atIndex] = nextValue;\n  return nextValues.sort((a, b) => a - b);\n}\n\nfunction convertValueToPercentage(value: number, min: number, max: number) {\n  const maxSteps = max - min;\n  const percentPerStep = 100 / maxSteps;\n  const percentage = percentPerStep * (value - min);\n  return clamp(percentage, [0, 100]);\n}\n\n/**\n * Returns a label for each thumb when there are two or more thumbs\n */\nfunction getLabel(index: number, totalValues: number) {\n  if (totalValues > 2) {\n    return `Value ${index + 1} of ${totalValues}`;\n  } else if (totalValues === 2) {\n    return ['Minimum', 'Maximum'][index];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Given a `values` array and a `nextValue`, determine which value in\n * the array is closest to `nextValue` and return its index.\n *\n * @example\n * // returns 1\n * getClosestValueIndex([10, 30], 25);\n */\nfunction getClosestValueIndex(values: number[], nextValue: number) {\n  if (values.length === 1) return 0;\n  const distances = values.map((value) => Math.abs(value - nextValue));\n  const closestDistance = Math.min(...distances);\n  return distances.indexOf(closestDistance);\n}\n\n/**\n * Offsets the thumb centre point while sliding to ensure it remains\n * within the bounds of the slider when reaching the edges\n */\nfunction getThumbInBoundsOffset(width: number, left: number, direction: number) {\n  const halfWidth = width / 2;\n  const halfPercent = 50;\n  const offset = linearScale([0, halfPercent], [0, halfWidth]);\n  return (halfWidth - offset(left) * direction) * direction;\n}\n\n/**\n * Gets an array of steps between each value.\n *\n * @example\n * // returns [1, 9]\n * getStepsBetweenValues([10, 11, 20]);\n */\nfunction getStepsBetweenValues(values: number[]) {\n  return values.slice(0, -1).map((value, index) => values[index + 1] - value);\n}\n\n/**\n * Verifies the minimum steps between all values is greater than or equal\n * to the expected minimum steps.\n *\n * @example\n * // returns false\n * hasMinStepsBetweenValues([1,2,3], 2);\n *\n * @example\n * // returns true\n * hasMinStepsBetweenValues([1,2,3], 1);\n */\nfunction hasMinStepsBetweenValues(values: number[], minStepsBetweenValues: number) {\n  if (minStepsBetweenValues > 0) {\n    const stepsBetweenValues = getStepsBetweenValues(values);\n    const actualMinStepsBetweenValues = Math.min(...stepsBetweenValues);\n    return actualMinStepsBetweenValues >= minStepsBetweenValues;\n  }\n  return true;\n}\n\n// https://github.com/tmcw-up-for-adoption/simple-linear-scale/blob/master/index.js\nfunction linearScale(input: readonly [number, number], output: readonly [number, number]) {\n  return (value: number) => {\n    if (input[0] === input[1] || output[0] === output[1]) return output[0];\n    const ratio = (output[1] - output[0]) / (input[1] - input[0]);\n    return output[0] + ratio * (value - input[0]);\n  };\n}\n\nfunction getDecimalCount(value: number) {\n  return (String(value).split('.')[1] || '').length;\n}\n\nfunction roundValue(value: number, decimalCount: number) {\n  const rounder = Math.pow(10, decimalCount);\n  return Math.round(value * rounder) / rounder;\n}\n\nconst Root = Slider;\nconst Track = SliderTrack;\nconst Range = SliderRange;\nconst Thumb = SliderThumb;\n\nexport {\n  createSliderScope,\n  //\n  Slider,\n  SliderTrack,\n  SliderRange,\n  SliderThumb,\n  //\n  Root,\n  Track,\n  Range,\n  Thumb,\n};\nexport type { SliderProps, SliderTrackProps, SliderRangeProps, SliderThumbProps };\n", "import { colorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { radiusPropDef } from '../props/radius.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['classic', 'surface', 'soft'] as const;\n\nconst sliderPropDefs = {\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'surface' },\n  ...colorPropDef,\n  ...highContrastPropDef,\n  ...radiusPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n};\n\nexport { sliderPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport * as SliderPrimitive from '@radix-ui/react-slider';\n\nimport { sliderPropDefs } from './slider.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype SliderElement = React.ElementRef<typeof SliderPrimitive.Root>;\ntype SliderOwnProps = GetPropDefTypes<typeof sliderPropDefs>;\ninterface SliderProps\n  extends ComponentPropsWithout<\n      typeof SliderPrimitive.Root,\n      'asChild' | 'color' | 'children' | 'defaultChecked'\n    >,\n    MarginProps,\n    SliderOwnProps {}\nconst Slider = React.forwardRef<SliderElement, SliderProps>((props, forwardedRef) => {\n  const { className, color, radius, tabIndex, ...sliderProps } = extractProps(\n    props,\n    sliderPropDefs,\n    marginPropDefs\n  );\n  return (\n    <SliderPrimitive.Root\n      data-accent-color={color}\n      data-radius={radius}\n      ref={forwardedRef}\n      {...sliderProps}\n      asChild={false}\n      className={classNames('rt-SliderRoot', className)}\n    >\n      <SliderPrimitive.Track className=\"rt-SliderTrack\">\n        <SliderPrimitive.Range\n          className={classNames('rt-SliderRange', { 'rt-high-contrast': props.highContrast })}\n          data-inverted={sliderProps.inverted ? '' : undefined}\n        />\n      </SliderPrimitive.Track>\n      {(sliderProps.value ?? sliderProps.defaultValue ?? []).map((value, index) => (\n        <SliderPrimitive.Thumb\n          key={index}\n          className=\"rt-SliderThumb\"\n          {...(tabIndex !== undefined ? { tabIndex } : undefined)}\n        />\n      ))}\n    </SliderPrimitive.Root>\n  );\n});\nSlider.displayName = 'Slider';\n\nexport { Slider };\nexport type { SliderProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\nimport { textWrapPropDef } from '../props/text-wrap.prop.js';\nimport { truncatePropDef } from '../props/truncate.prop.js';\n\nconst strongPropDefs = {\n  ...asChildPropDef,\n  ...truncatePropDef,\n  ...textWrapPropDef,\n};\n\nexport { strongPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { extractProps } from '../helpers/extract-props.js';\nimport { strongPropDefs } from './strong.props.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype StrongElement = React.ElementRef<'strong'>;\ntype StrongOwnProps = GetPropDefTypes<typeof strongPropDefs>;\ninterface StrongProps extends ComponentPropsWithout<'strong', RemovedProps>, StrongOwnProps {}\nconst Strong = React.forwardRef<StrongElement, StrongProps>((props, forwardedRef) => {\n  const { asChild, className, ...strongProps } = extractProps(props, strongPropDefs);\n  const Comp = asChild ? Slot : 'strong';\n  return (\n    <Comp {...strongProps} ref={forwardedRef} className={classNames('rt-Strong', className)} />\n  );\n});\nStrong.displayName = 'Strong';\n\nexport { Strong };\nexport type { StrongProps };\n", "'use client';\nexport {\n  createSwitchScope,\n  //\n  Switch,\n  SwitchThumb,\n  //\n  Root,\n  Thumb,\n} from './Switch';\nexport type { SwitchProps, SwitchThumbProps } from './Switch';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { useSize } from '@radix-ui/react-use-size';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Switch\n * -----------------------------------------------------------------------------------------------*/\n\nconst SWITCH_NAME = 'Switch';\n\ntype ScopedProps<P> = P & { __scopeSwitch?: Scope };\nconst [createSwitchContext, createSwitchScope] = createContextScope(SWITCH_NAME);\n\ntype SwitchContextValue = { checked: boolean; disabled?: boolean };\nconst [SwitchProvider, useSwitchContext] = createSwitchContext<SwitchContextValue>(SWITCH_NAME);\n\ntype SwitchElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface SwitchProps extends PrimitiveButtonProps {\n  checked?: boolean;\n  defaultChecked?: boolean;\n  required?: boolean;\n  onCheckedChange?(checked: boolean): void;\n}\n\nconst Switch = React.forwardRef<SwitchElement, SwitchProps>(\n  (props: ScopedProps<SwitchProps>, forwardedRef) => {\n    const {\n      __scopeSwitch,\n      name,\n      checked: checkedProp,\n      defaultChecked,\n      required,\n      disabled,\n      value = 'on',\n      onCheckedChange,\n      ...switchProps\n    } = props;\n    const [button, setButton] = React.useState<HTMLButtonElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));\n    const hasConsumerStoppedPropagationRef = React.useRef(false);\n    // We set this to true by default so that events bubble to forms without JS (SSR)\n    const isFormControl = button ? Boolean(button.closest('form')) : true;\n    const [checked = false, setChecked] = useControllableState({\n      prop: checkedProp,\n      defaultProp: defaultChecked,\n      onChange: onCheckedChange,\n    });\n\n    return (\n      <SwitchProvider scope={__scopeSwitch} checked={checked} disabled={disabled}>\n        <Primitive.button\n          type=\"button\"\n          role=\"switch\"\n          aria-checked={checked}\n          aria-required={required}\n          data-state={getState(checked)}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          value={value}\n          {...switchProps}\n          ref={composedRefs}\n          onClick={composeEventHandlers(props.onClick, (event) => {\n            setChecked((prevChecked) => !prevChecked);\n            if (isFormControl) {\n              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n              // if switch is in a form, stop propagation from the button so that we only propagate\n              // one click event (from the input). We propagate changes from an input so that native\n              // form validation works and form events reflect switch updates.\n              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n            }\n          })}\n        />\n        {isFormControl && (\n          <BubbleInput\n            control={button}\n            bubbles={!hasConsumerStoppedPropagationRef.current}\n            name={name}\n            value={value}\n            checked={checked}\n            required={required}\n            disabled={disabled}\n            // We transform because the input is absolutely positioned but we have\n            // rendered it **after** the button. This pulls it back to sit on top\n            // of the button.\n            style={{ transform: 'translateX(-100%)' }}\n          />\n        )}\n      </SwitchProvider>\n    );\n  }\n);\n\nSwitch.displayName = SWITCH_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SwitchThumb\n * -----------------------------------------------------------------------------------------------*/\n\nconst THUMB_NAME = 'SwitchThumb';\n\ntype SwitchThumbElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface SwitchThumbProps extends PrimitiveSpanProps {}\n\nconst SwitchThumb = React.forwardRef<SwitchThumbElement, SwitchThumbProps>(\n  (props: ScopedProps<SwitchThumbProps>, forwardedRef) => {\n    const { __scopeSwitch, ...thumbProps } = props;\n    const context = useSwitchContext(THUMB_NAME, __scopeSwitch);\n    return (\n      <Primitive.span\n        data-state={getState(context.checked)}\n        data-disabled={context.disabled ? '' : undefined}\n        {...thumbProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nSwitchThumb.displayName = THUMB_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype InputProps = React.ComponentPropsWithoutRef<'input'>;\ninterface BubbleInputProps extends Omit<InputProps, 'checked'> {\n  checked: boolean;\n  control: HTMLElement | null;\n  bubbles: boolean;\n}\n\nconst BubbleInput = (props: BubbleInputProps) => {\n  const { control, checked, bubbles = true, ...inputProps } = props;\n  const ref = React.useRef<HTMLInputElement>(null);\n  const prevChecked = usePrevious(checked);\n  const controlSize = useSize(control);\n\n  // Bubble checked change to parents (e.g form change event)\n  React.useEffect(() => {\n    const input = ref.current!;\n    const inputProto = window.HTMLInputElement.prototype;\n    const descriptor = Object.getOwnPropertyDescriptor(inputProto, 'checked') as PropertyDescriptor;\n    const setChecked = descriptor.set;\n    if (prevChecked !== checked && setChecked) {\n      const event = new Event('click', { bubbles });\n      setChecked.call(input, checked);\n      input.dispatchEvent(event);\n    }\n  }, [prevChecked, checked, bubbles]);\n\n  return (\n    <input\n      type=\"checkbox\"\n      aria-hidden\n      defaultChecked={checked}\n      {...inputProps}\n      tabIndex={-1}\n      ref={ref}\n      style={{\n        ...props.style,\n        ...controlSize,\n        position: 'absolute',\n        pointerEvents: 'none',\n        opacity: 0,\n        margin: 0,\n      }}\n    />\n  );\n};\n\nfunction getState(checked: boolean) {\n  return checked ? 'checked' : 'unchecked';\n}\n\nconst Root = Switch;\nconst Thumb = SwitchThumb;\n\nexport {\n  createSwitchScope,\n  //\n  Switch,\n  SwitchThumb,\n  //\n  Root,\n  Thumb,\n};\nexport type { SwitchProps, SwitchThumbProps };\n", "import { colorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\nimport { radiusPropDef } from '../props/radius.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['classic', 'surface', 'soft'] as const;\n\nconst switchPropDefs = {\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'surface' },\n  ...colorPropDef,\n  ...highContrastPropDef,\n  ...radiusPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n};\n\nexport { switchPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport * as SwitchPrimitive from '@radix-ui/react-switch';\n\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\nimport { switchPropDefs } from './switch.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\nimport type { ComponentPropsWithout } from '../helpers/component-props.js';\n\ntype SwitchElement = React.ElementRef<typeof SwitchPrimitive.Root>;\ntype SwitchOwnProps = GetPropDefTypes<typeof switchPropDefs>;\ninterface SwitchProps\n  extends ComponentPropsWithout<\n      typeof SwitchPrimitive.Root,\n      'asChild' | 'color' | 'defaultValue' | 'children'\n    >,\n    MarginProps,\n    SwitchOwnProps {}\nconst Switch = React.forwardRef<SwitchElement, SwitchProps>((props, forwardedRef) => {\n  const { className, color, radius, ...switchProps } = extractProps(\n    props,\n    switchPropDefs,\n    marginPropDefs\n  );\n  return (\n    <SwitchPrimitive.Root\n      data-accent-color={color}\n      data-radius={radius}\n      {...switchProps}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-reset', 'rt-SwitchRoot', className)}\n    >\n      <SwitchPrimitive.Thumb\n        className={classNames('rt-SwitchThumb', { 'rt-high-contrast': props.highContrast })}\n      />\n    </SwitchPrimitive.Root>\n  );\n});\nSwitch.displayName = 'Switch';\n\nexport { Switch };\nexport type { SwitchProps };\n", "'use client';\nexport {\n  createNavigationMenuScope,\n  //\n  NavigationMenu,\n  NavigationMenuSub,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuContent,\n  NavigationMenuViewport,\n  //\n  Root,\n  Sub,\n  List,\n  Item,\n  Trigger,\n  Link,\n  Indicator,\n  Content,\n  Viewport,\n} from './NavigationMenu';\nexport type {\n  NavigationMenuProps,\n  NavigationMenuSubProps,\n  NavigationMenuListProps,\n  NavigationMenuItemProps,\n  NavigationMenuTriggerProps,\n  NavigationMenuLinkProps,\n  NavigationMenuIndicatorProps,\n  NavigationMenuContentProps,\n  NavigationMenuViewportProps,\n} from './NavigationMenu';\n", "/// <reference types=\"resize-observer-browser\" />\n\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { composeRefs, useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { Presence } from '@radix-ui/react-presence';\nimport { useId } from '@radix-ui/react-id';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport * as VisuallyHiddenPrimitive from '@radix-ui/react-visually-hidden';\n\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Orientation = 'vertical' | 'horizontal';\ntype Direction = 'ltr' | 'rtl';\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenu\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAVIGATION_MENU_NAME = 'NavigationMenu';\n\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  NavigationMenuTriggerElement,\n  { value: string }\n>(NAVIGATION_MENU_NAME);\n\nconst [FocusGroupCollection, useFocusGroupCollection, createFocusGroupCollectionScope] =\n  createCollection<FocusGroupItemElement, {}>(NAVIGATION_MENU_NAME);\n\ntype ScopedProps<P> = P & { __scopeNavigationMenu?: Scope };\nconst [createNavigationMenuContext, createNavigationMenuScope] = createContextScope(\n  NAVIGATION_MENU_NAME,\n  [createCollectionScope, createFocusGroupCollectionScope]\n);\n\ntype ContentData = {\n  ref?: React.Ref<ViewportContentMounterElement>;\n} & ViewportContentMounterProps;\n\ntype NavigationMenuContextValue = {\n  isRootMenu: boolean;\n  value: string;\n  previousValue: string;\n  baseId: string;\n  dir: Direction;\n  orientation: Orientation;\n  rootNavigationMenu: NavigationMenuElement | null;\n  indicatorTrack: HTMLDivElement | null;\n  onIndicatorTrackChange(indicatorTrack: HTMLDivElement | null): void;\n  viewport: NavigationMenuViewportElement | null;\n  onViewportChange(viewport: NavigationMenuViewportElement | null): void;\n  onViewportContentChange(contentValue: string, contentData: ContentData): void;\n  onViewportContentRemove(contentValue: string): void;\n  onTriggerEnter(itemValue: string): void;\n  onTriggerLeave(): void;\n  onContentEnter(): void;\n  onContentLeave(): void;\n  onItemSelect(itemValue: string): void;\n  onItemDismiss(): void;\n};\n\nconst [NavigationMenuProviderImpl, useNavigationMenuContext] =\n  createNavigationMenuContext<NavigationMenuContextValue>(NAVIGATION_MENU_NAME);\n\nconst [ViewportContentProvider, useViewportContentContext] = createNavigationMenuContext<{\n  items: Map<string, ContentData>;\n}>(NAVIGATION_MENU_NAME);\n\ntype NavigationMenuElement = React.ElementRef<typeof Primitive.nav>;\ntype PrimitiveNavProps = React.ComponentPropsWithoutRef<typeof Primitive.nav>;\ninterface NavigationMenuProps\n  extends Omit<NavigationMenuProviderProps, keyof NavigationMenuProviderPrivateProps>,\n    PrimitiveNavProps {\n  value?: string;\n  defaultValue?: string;\n  onValueChange?: (value: string) => void;\n  dir?: Direction;\n  orientation?: Orientation;\n  /**\n   * The duration from when the pointer enters the trigger until the tooltip gets opened.\n   * @defaultValue 200\n   */\n  delayDuration?: number;\n  /**\n   * How much time a user has to enter another trigger without incurring a delay again.\n   * @defaultValue 300\n   */\n  skipDelayDuration?: number;\n}\n\nconst NavigationMenu = React.forwardRef<NavigationMenuElement, NavigationMenuProps>(\n  (props: ScopedProps<NavigationMenuProps>, forwardedRef) => {\n    const {\n      __scopeNavigationMenu,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      delayDuration = 200,\n      skipDelayDuration = 300,\n      orientation = 'horizontal',\n      dir,\n      ...NavigationMenuProps\n    } = props;\n    const [navigationMenu, setNavigationMenu] = React.useState<NavigationMenuElement | null>(null);\n    const composedRef = useComposedRefs(forwardedRef, (node) => setNavigationMenu(node));\n    const direction = useDirection(dir);\n    const openTimerRef = React.useRef(0);\n    const closeTimerRef = React.useRef(0);\n    const skipDelayTimerRef = React.useRef(0);\n    const [isOpenDelayed, setIsOpenDelayed] = React.useState(true);\n    const [value = '', setValue] = useControllableState({\n      prop: valueProp,\n      onChange: (value) => {\n        const isOpen = value !== '';\n        const hasSkipDelayDuration = skipDelayDuration > 0;\n\n        if (isOpen) {\n          window.clearTimeout(skipDelayTimerRef.current);\n          if (hasSkipDelayDuration) setIsOpenDelayed(false);\n        } else {\n          window.clearTimeout(skipDelayTimerRef.current);\n          skipDelayTimerRef.current = window.setTimeout(\n            () => setIsOpenDelayed(true),\n            skipDelayDuration\n          );\n        }\n\n        onValueChange?.(value);\n      },\n      defaultProp: defaultValue,\n    });\n\n    const startCloseTimer = React.useCallback(() => {\n      window.clearTimeout(closeTimerRef.current);\n      closeTimerRef.current = window.setTimeout(() => setValue(''), 150);\n    }, [setValue]);\n\n    const handleOpen = React.useCallback(\n      (itemValue: string) => {\n        window.clearTimeout(closeTimerRef.current);\n        setValue(itemValue);\n      },\n      [setValue]\n    );\n\n    const handleDelayedOpen = React.useCallback(\n      (itemValue: string) => {\n        const isOpenItem = value === itemValue;\n        if (isOpenItem) {\n          // If the item is already open (e.g. we're transitioning from the content to the trigger)\n          // then we want to clear the close timer immediately.\n          window.clearTimeout(closeTimerRef.current);\n        } else {\n          openTimerRef.current = window.setTimeout(() => {\n            window.clearTimeout(closeTimerRef.current);\n            setValue(itemValue);\n          }, delayDuration);\n        }\n      },\n      [value, setValue, delayDuration]\n    );\n\n    React.useEffect(() => {\n      return () => {\n        window.clearTimeout(openTimerRef.current);\n        window.clearTimeout(closeTimerRef.current);\n        window.clearTimeout(skipDelayTimerRef.current);\n      };\n    }, []);\n\n    return (\n      <NavigationMenuProvider\n        scope={__scopeNavigationMenu}\n        isRootMenu={true}\n        value={value}\n        dir={direction}\n        orientation={orientation}\n        rootNavigationMenu={navigationMenu}\n        onTriggerEnter={(itemValue) => {\n          window.clearTimeout(openTimerRef.current);\n          if (isOpenDelayed) handleDelayedOpen(itemValue);\n          else handleOpen(itemValue);\n        }}\n        onTriggerLeave={() => {\n          window.clearTimeout(openTimerRef.current);\n          startCloseTimer();\n        }}\n        onContentEnter={() => window.clearTimeout(closeTimerRef.current)}\n        onContentLeave={startCloseTimer}\n        onItemSelect={(itemValue) => {\n          setValue((prevValue) => (prevValue === itemValue ? '' : itemValue));\n        }}\n        onItemDismiss={() => setValue('')}\n      >\n        <Primitive.nav\n          aria-label=\"Main\"\n          data-orientation={orientation}\n          dir={direction}\n          {...NavigationMenuProps}\n          ref={composedRef}\n        />\n      </NavigationMenuProvider>\n    );\n  }\n);\n\nNavigationMenu.displayName = NAVIGATION_MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuSub\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_NAME = 'NavigationMenuSub';\n\ntype NavigationMenuSubElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface NavigationMenuSubProps\n  extends Omit<NavigationMenuProviderProps, keyof NavigationMenuProviderPrivateProps>,\n    PrimitiveDivProps {\n  value?: string;\n  defaultValue?: string;\n  onValueChange?: (value: string) => void;\n  orientation?: Orientation;\n}\n\nconst NavigationMenuSub = React.forwardRef<NavigationMenuSubElement, NavigationMenuSubProps>(\n  (props: ScopedProps<NavigationMenuSubProps>, forwardedRef) => {\n    const {\n      __scopeNavigationMenu,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      orientation = 'horizontal',\n      ...subProps\n    } = props;\n    const context = useNavigationMenuContext(SUB_NAME, __scopeNavigationMenu);\n    const [value = '', setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChange,\n      defaultProp: defaultValue,\n    });\n\n    return (\n      <NavigationMenuProvider\n        scope={__scopeNavigationMenu}\n        isRootMenu={false}\n        value={value}\n        dir={context.dir}\n        orientation={orientation}\n        rootNavigationMenu={context.rootNavigationMenu}\n        onTriggerEnter={(itemValue) => setValue(itemValue)}\n        onItemSelect={(itemValue) => setValue(itemValue)}\n        onItemDismiss={() => setValue('')}\n      >\n        <Primitive.div data-orientation={orientation} {...subProps} ref={forwardedRef} />\n      </NavigationMenuProvider>\n    );\n  }\n);\n\nNavigationMenuSub.displayName = SUB_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ninterface NavigationMenuProviderPrivateProps {\n  isRootMenu: boolean;\n  scope: Scope;\n  children: React.ReactNode;\n  orientation: Orientation;\n  dir: Direction;\n  rootNavigationMenu: NavigationMenuElement | null;\n  value: string;\n  onTriggerEnter(itemValue: string): void;\n  onTriggerLeave?(): void;\n  onContentEnter?(): void;\n  onContentLeave?(): void;\n  onItemSelect(itemValue: string): void;\n  onItemDismiss(): void;\n}\n\ninterface NavigationMenuProviderProps extends NavigationMenuProviderPrivateProps {}\n\nconst NavigationMenuProvider: React.FC<NavigationMenuProviderProps> = (\n  props: ScopedProps<NavigationMenuProviderProps>\n) => {\n  const {\n    scope,\n    isRootMenu,\n    rootNavigationMenu,\n    dir,\n    orientation,\n    children,\n    value,\n    onItemSelect,\n    onItemDismiss,\n    onTriggerEnter,\n    onTriggerLeave,\n    onContentEnter,\n    onContentLeave,\n  } = props;\n  const [viewport, setViewport] = React.useState<NavigationMenuViewportElement | null>(null);\n  const [viewportContent, setViewportContent] = React.useState<Map<string, ContentData>>(new Map());\n  const [indicatorTrack, setIndicatorTrack] = React.useState<HTMLDivElement | null>(null);\n\n  return (\n    <NavigationMenuProviderImpl\n      scope={scope}\n      isRootMenu={isRootMenu}\n      rootNavigationMenu={rootNavigationMenu}\n      value={value}\n      previousValue={usePrevious(value)}\n      baseId={useId()}\n      dir={dir}\n      orientation={orientation}\n      viewport={viewport}\n      onViewportChange={setViewport}\n      indicatorTrack={indicatorTrack}\n      onIndicatorTrackChange={setIndicatorTrack}\n      onTriggerEnter={useCallbackRef(onTriggerEnter)}\n      onTriggerLeave={useCallbackRef(onTriggerLeave)}\n      onContentEnter={useCallbackRef(onContentEnter)}\n      onContentLeave={useCallbackRef(onContentLeave)}\n      onItemSelect={useCallbackRef(onItemSelect)}\n      onItemDismiss={useCallbackRef(onItemDismiss)}\n      onViewportContentChange={React.useCallback((contentValue, contentData) => {\n        setViewportContent((prevContent) => {\n          prevContent.set(contentValue, contentData);\n          return new Map(prevContent);\n        });\n      }, [])}\n      onViewportContentRemove={React.useCallback((contentValue) => {\n        setViewportContent((prevContent) => {\n          if (!prevContent.has(contentValue)) return prevContent;\n          prevContent.delete(contentValue);\n          return new Map(prevContent);\n        });\n      }, [])}\n    >\n      <Collection.Provider scope={scope}>\n        <ViewportContentProvider scope={scope} items={viewportContent}>\n          {children}\n        </ViewportContentProvider>\n      </Collection.Provider>\n    </NavigationMenuProviderImpl>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuList\n * -----------------------------------------------------------------------------------------------*/\n\nconst LIST_NAME = 'NavigationMenuList';\n\ntype NavigationMenuListElement = React.ElementRef<typeof Primitive.ul>;\ntype PrimitiveUnorderedListProps = React.ComponentPropsWithoutRef<typeof Primitive.ul>;\ninterface NavigationMenuListProps extends PrimitiveUnorderedListProps {}\n\nconst NavigationMenuList = React.forwardRef<NavigationMenuListElement, NavigationMenuListProps>(\n  (props: ScopedProps<NavigationMenuListProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, ...listProps } = props;\n    const context = useNavigationMenuContext(LIST_NAME, __scopeNavigationMenu);\n\n    const list = (\n      <Primitive.ul data-orientation={context.orientation} {...listProps} ref={forwardedRef} />\n    );\n\n    return (\n      <Primitive.div style={{ position: 'relative' }} ref={context.onIndicatorTrackChange}>\n        <Collection.Slot scope={__scopeNavigationMenu}>\n          {context.isRootMenu ? <FocusGroup asChild>{list}</FocusGroup> : list}\n        </Collection.Slot>\n      </Primitive.div>\n    );\n  }\n);\n\nNavigationMenuList.displayName = LIST_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'NavigationMenuItem';\n\ntype FocusProxyElement = React.ElementRef<typeof VisuallyHiddenPrimitive.Root>;\n\ntype NavigationMenuItemContextValue = {\n  value: string;\n  triggerRef: React.RefObject<NavigationMenuTriggerElement>;\n  contentRef: React.RefObject<NavigationMenuContentElement>;\n  focusProxyRef: React.RefObject<FocusProxyElement>;\n  wasEscapeCloseRef: React.MutableRefObject<boolean>;\n  onEntryKeyDown(): void;\n  onFocusProxyEnter(side: 'start' | 'end'): void;\n  onRootContentClose(): void;\n  onContentFocusOutside(): void;\n};\n\nconst [NavigationMenuItemContextProvider, useNavigationMenuItemContext] =\n  createNavigationMenuContext<NavigationMenuItemContextValue>(ITEM_NAME);\n\ntype NavigationMenuItemElement = React.ElementRef<typeof Primitive.li>;\ntype PrimitiveListItemProps = React.ComponentPropsWithoutRef<typeof Primitive.li>;\ninterface NavigationMenuItemProps extends PrimitiveListItemProps {\n  value?: string;\n}\n\nconst NavigationMenuItem = React.forwardRef<NavigationMenuItemElement, NavigationMenuItemProps>(\n  (props: ScopedProps<NavigationMenuItemProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, value: valueProp, ...itemProps } = props;\n    const autoValue = useId();\n    // We need to provide an initial deterministic value as `useId` will return\n    // empty string on the first render and we don't want to match our internal \"closed\" value.\n    const value = valueProp || autoValue || 'LEGACY_REACT_AUTO_VALUE';\n    const contentRef = React.useRef<NavigationMenuContentElement>(null);\n    const triggerRef = React.useRef<NavigationMenuTriggerElement>(null);\n    const focusProxyRef = React.useRef<FocusProxyElement>(null);\n    const restoreContentTabOrderRef = React.useRef(() => {});\n    const wasEscapeCloseRef = React.useRef(false);\n\n    const handleContentEntry = React.useCallback((side = 'start') => {\n      if (contentRef.current) {\n        restoreContentTabOrderRef.current();\n        const candidates = getTabbableCandidates(contentRef.current);\n        if (candidates.length) focusFirst(side === 'start' ? candidates : candidates.reverse());\n      }\n    }, []);\n\n    const handleContentExit = React.useCallback(() => {\n      if (contentRef.current) {\n        const candidates = getTabbableCandidates(contentRef.current);\n        if (candidates.length) restoreContentTabOrderRef.current = removeFromTabOrder(candidates);\n      }\n    }, []);\n\n    return (\n      <NavigationMenuItemContextProvider\n        scope={__scopeNavigationMenu}\n        value={value}\n        triggerRef={triggerRef}\n        contentRef={contentRef}\n        focusProxyRef={focusProxyRef}\n        wasEscapeCloseRef={wasEscapeCloseRef}\n        onEntryKeyDown={handleContentEntry}\n        onFocusProxyEnter={handleContentEntry}\n        onRootContentClose={handleContentExit}\n        onContentFocusOutside={handleContentExit}\n      >\n        <Primitive.li {...itemProps} ref={forwardedRef} />\n      </NavigationMenuItemContextProvider>\n    );\n  }\n);\n\nNavigationMenuItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'NavigationMenuTrigger';\n\ntype NavigationMenuTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface NavigationMenuTriggerProps extends PrimitiveButtonProps {}\n\nconst NavigationMenuTrigger = React.forwardRef<\n  NavigationMenuTriggerElement,\n  NavigationMenuTriggerProps\n>((props: ScopedProps<NavigationMenuTriggerProps>, forwardedRef) => {\n  const { __scopeNavigationMenu, disabled, ...triggerProps } = props;\n  const context = useNavigationMenuContext(TRIGGER_NAME, props.__scopeNavigationMenu);\n  const itemContext = useNavigationMenuItemContext(TRIGGER_NAME, props.__scopeNavigationMenu);\n  const ref = React.useRef<NavigationMenuTriggerElement>(null);\n  const composedRefs = useComposedRefs(ref, itemContext.triggerRef, forwardedRef);\n  const triggerId = makeTriggerId(context.baseId, itemContext.value);\n  const contentId = makeContentId(context.baseId, itemContext.value);\n  const hasPointerMoveOpenedRef = React.useRef(false);\n  const wasClickCloseRef = React.useRef(false);\n  const open = itemContext.value === context.value;\n\n  return (\n    <>\n      <Collection.ItemSlot scope={__scopeNavigationMenu} value={itemContext.value}>\n        <FocusGroupItem asChild>\n          <Primitive.button\n            id={triggerId}\n            disabled={disabled}\n            data-disabled={disabled ? '' : undefined}\n            data-state={getOpenState(open)}\n            aria-expanded={open}\n            aria-controls={contentId}\n            {...triggerProps}\n            ref={composedRefs}\n            onPointerEnter={composeEventHandlers(props.onPointerEnter, () => {\n              wasClickCloseRef.current = false;\n              itemContext.wasEscapeCloseRef.current = false;\n            })}\n            onPointerMove={composeEventHandlers(\n              props.onPointerMove,\n              whenMouse(() => {\n                if (\n                  disabled ||\n                  wasClickCloseRef.current ||\n                  itemContext.wasEscapeCloseRef.current ||\n                  hasPointerMoveOpenedRef.current\n                )\n                  return;\n                context.onTriggerEnter(itemContext.value);\n                hasPointerMoveOpenedRef.current = true;\n              })\n            )}\n            onPointerLeave={composeEventHandlers(\n              props.onPointerLeave,\n              whenMouse(() => {\n                if (disabled) return;\n                context.onTriggerLeave();\n                hasPointerMoveOpenedRef.current = false;\n              })\n            )}\n            onClick={composeEventHandlers(props.onClick, () => {\n              context.onItemSelect(itemContext.value);\n              wasClickCloseRef.current = open;\n            })}\n            onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n              const verticalEntryKey = context.dir === 'rtl' ? 'ArrowLeft' : 'ArrowRight';\n              const entryKey = { horizontal: 'ArrowDown', vertical: verticalEntryKey }[\n                context.orientation\n              ];\n              if (open && event.key === entryKey) {\n                itemContext.onEntryKeyDown();\n                // Prevent FocusGroupItem from handling the event\n                event.preventDefault();\n              }\n            })}\n          />\n        </FocusGroupItem>\n      </Collection.ItemSlot>\n\n      {/* Proxy tab order between trigger and content */}\n      {open && (\n        <>\n          <VisuallyHiddenPrimitive.Root\n            aria-hidden\n            tabIndex={0}\n            ref={itemContext.focusProxyRef}\n            onFocus={(event) => {\n              const content = itemContext.contentRef.current;\n              const prevFocusedElement = event.relatedTarget as HTMLElement | null;\n              const wasTriggerFocused = prevFocusedElement === ref.current;\n              const wasFocusFromContent = content?.contains(prevFocusedElement);\n\n              if (wasTriggerFocused || !wasFocusFromContent) {\n                itemContext.onFocusProxyEnter(wasTriggerFocused ? 'start' : 'end');\n              }\n            }}\n          />\n\n          {/* Restructure a11y tree to make content accessible to screen reader when using the viewport */}\n          {context.viewport && <span aria-owns={contentId} />}\n        </>\n      )}\n    </>\n  );\n});\n\nNavigationMenuTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuLink\n * -----------------------------------------------------------------------------------------------*/\n\nconst LINK_NAME = 'NavigationMenuLink';\nconst LINK_SELECT = 'navigationMenu.linkSelect';\n\ntype NavigationMenuLinkElement = React.ElementRef<typeof Primitive.a>;\ntype PrimitiveLinkProps = React.ComponentPropsWithoutRef<typeof Primitive.a>;\ninterface NavigationMenuLinkProps extends Omit<PrimitiveLinkProps, 'onSelect'> {\n  active?: boolean;\n  onSelect?: (event: Event) => void;\n}\n\nconst NavigationMenuLink = React.forwardRef<NavigationMenuLinkElement, NavigationMenuLinkProps>(\n  (props: ScopedProps<NavigationMenuLinkProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, active, onSelect, ...linkProps } = props;\n\n    return (\n      <FocusGroupItem asChild>\n        <Primitive.a\n          data-active={active ? '' : undefined}\n          aria-current={active ? 'page' : undefined}\n          {...linkProps}\n          ref={forwardedRef}\n          onClick={composeEventHandlers(\n            props.onClick,\n            (event) => {\n              const target = event.target as HTMLElement;\n              const linkSelectEvent = new CustomEvent(LINK_SELECT, {\n                bubbles: true,\n                cancelable: true,\n              });\n              target.addEventListener(LINK_SELECT, (event) => onSelect?.(event), { once: true });\n              dispatchDiscreteCustomEvent(target, linkSelectEvent);\n\n              if (!linkSelectEvent.defaultPrevented && !event.metaKey) {\n                const rootContentDismissEvent = new CustomEvent(ROOT_CONTENT_DISMISS, {\n                  bubbles: true,\n                  cancelable: true,\n                });\n                dispatchDiscreteCustomEvent(target, rootContentDismissEvent);\n              }\n            },\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </FocusGroupItem>\n    );\n  }\n);\n\nNavigationMenuLink.displayName = LINK_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'NavigationMenuIndicator';\n\ntype NavigationMenuIndicatorElement = NavigationMenuIndicatorImplElement;\ninterface NavigationMenuIndicatorProps extends NavigationMenuIndicatorImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst NavigationMenuIndicator = React.forwardRef<\n  NavigationMenuIndicatorElement,\n  NavigationMenuIndicatorProps\n>((props: ScopedProps<NavigationMenuIndicatorProps>, forwardedRef) => {\n  const { forceMount, ...indicatorProps } = props;\n  const context = useNavigationMenuContext(INDICATOR_NAME, props.__scopeNavigationMenu);\n  const isVisible = Boolean(context.value);\n\n  return context.indicatorTrack\n    ? ReactDOM.createPortal(\n        <Presence present={forceMount || isVisible}>\n          <NavigationMenuIndicatorImpl {...indicatorProps} ref={forwardedRef} />\n        </Presence>,\n        context.indicatorTrack\n      )\n    : null;\n});\n\nNavigationMenuIndicator.displayName = INDICATOR_NAME;\n\ntype NavigationMenuIndicatorImplElement = React.ElementRef<typeof Primitive.div>;\ninterface NavigationMenuIndicatorImplProps extends PrimitiveDivProps {}\n\nconst NavigationMenuIndicatorImpl = React.forwardRef<\n  NavigationMenuIndicatorImplElement,\n  NavigationMenuIndicatorImplProps\n>((props: ScopedProps<NavigationMenuIndicatorImplProps>, forwardedRef) => {\n  const { __scopeNavigationMenu, ...indicatorProps } = props;\n  const context = useNavigationMenuContext(INDICATOR_NAME, __scopeNavigationMenu);\n  const getItems = useCollection(__scopeNavigationMenu);\n  const [activeTrigger, setActiveTrigger] = React.useState<NavigationMenuTriggerElement | null>(\n    null\n  );\n  const [position, setPosition] = React.useState<{ size: number; offset: number } | null>(null);\n  const isHorizontal = context.orientation === 'horizontal';\n  const isVisible = Boolean(context.value);\n\n  React.useEffect(() => {\n    const items = getItems();\n    const triggerNode = items.find((item) => item.value === context.value)?.ref.current;\n    if (triggerNode) setActiveTrigger(triggerNode);\n  }, [getItems, context.value]);\n\n  /**\n   * Update position when the indicator or parent track size changes\n   */\n  const handlePositionChange = () => {\n    if (activeTrigger) {\n      setPosition({\n        size: isHorizontal ? activeTrigger.offsetWidth : activeTrigger.offsetHeight,\n        offset: isHorizontal ? activeTrigger.offsetLeft : activeTrigger.offsetTop,\n      });\n    }\n  };\n  useResizeObserver(activeTrigger, handlePositionChange);\n  useResizeObserver(context.indicatorTrack, handlePositionChange);\n\n  // We need to wait for the indicator position to be available before rendering to\n  // snap immediately into position rather than transitioning from initial\n  return position ? (\n    <Primitive.div\n      aria-hidden\n      data-state={isVisible ? 'visible' : 'hidden'}\n      data-orientation={context.orientation}\n      {...indicatorProps}\n      ref={forwardedRef}\n      style={{\n        position: 'absolute',\n        ...(isHorizontal\n          ? {\n              left: 0,\n              width: position.size + 'px',\n              transform: `translateX(${position.offset}px)`,\n            }\n          : {\n              top: 0,\n              height: position.size + 'px',\n              transform: `translateY(${position.offset}px)`,\n            }),\n        ...indicatorProps.style,\n      }}\n    />\n  ) : null;\n});\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'NavigationMenuContent';\n\ntype NavigationMenuContentElement = NavigationMenuContentImplElement;\ninterface NavigationMenuContentProps\n  extends Omit<NavigationMenuContentImplProps, keyof NavigationMenuContentImplPrivateProps> {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst NavigationMenuContent = React.forwardRef<\n  NavigationMenuContentElement,\n  NavigationMenuContentProps\n>((props: ScopedProps<NavigationMenuContentProps>, forwardedRef) => {\n  const { forceMount, ...contentProps } = props;\n  const context = useNavigationMenuContext(CONTENT_NAME, props.__scopeNavigationMenu);\n  const itemContext = useNavigationMenuItemContext(CONTENT_NAME, props.__scopeNavigationMenu);\n  const composedRefs = useComposedRefs(itemContext.contentRef, forwardedRef);\n  const open = itemContext.value === context.value;\n\n  const commonProps = {\n    value: itemContext.value,\n    triggerRef: itemContext.triggerRef,\n    focusProxyRef: itemContext.focusProxyRef,\n    wasEscapeCloseRef: itemContext.wasEscapeCloseRef,\n    onContentFocusOutside: itemContext.onContentFocusOutside,\n    onRootContentClose: itemContext.onRootContentClose,\n    ...contentProps,\n  };\n\n  return !context.viewport ? (\n    <Presence present={forceMount || open}>\n      <NavigationMenuContentImpl\n        data-state={getOpenState(open)}\n        {...commonProps}\n        ref={composedRefs}\n        onPointerEnter={composeEventHandlers(props.onPointerEnter, context.onContentEnter)}\n        onPointerLeave={composeEventHandlers(\n          props.onPointerLeave,\n          whenMouse(context.onContentLeave)\n        )}\n        style={{\n          // Prevent interaction when animating out\n          pointerEvents: !open && context.isRootMenu ? 'none' : undefined,\n          ...commonProps.style,\n        }}\n      />\n    </Presence>\n  ) : (\n    <ViewportContentMounter forceMount={forceMount} {...commonProps} ref={composedRefs} />\n  );\n});\n\nNavigationMenuContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ViewportContentMounterElement = NavigationMenuContentImplElement;\ninterface ViewportContentMounterProps extends NavigationMenuContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst ViewportContentMounter = React.forwardRef<\n  ViewportContentMounterElement,\n  ViewportContentMounterProps\n>((props: ScopedProps<ViewportContentMounterProps>, forwardedRef) => {\n  const context = useNavigationMenuContext(CONTENT_NAME, props.__scopeNavigationMenu);\n  const { onViewportContentChange, onViewportContentRemove } = context;\n\n  useLayoutEffect(() => {\n    onViewportContentChange(props.value, {\n      ref: forwardedRef,\n      ...props,\n    });\n  }, [props, forwardedRef, onViewportContentChange]);\n\n  useLayoutEffect(() => {\n    return () => onViewportContentRemove(props.value);\n  }, [props.value, onViewportContentRemove]);\n\n  // Content is proxied into the viewport\n  return null;\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst ROOT_CONTENT_DISMISS = 'navigationMenu.rootContentDismiss';\n\ntype MotionAttribute = 'to-start' | 'to-end' | 'from-start' | 'from-end';\ntype NavigationMenuContentImplElement = React.ElementRef<typeof DismissableLayer>;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\n\ninterface NavigationMenuContentImplPrivateProps {\n  value: string;\n  triggerRef: React.RefObject<NavigationMenuTriggerElement>;\n  focusProxyRef: React.RefObject<FocusProxyElement>;\n  wasEscapeCloseRef: React.MutableRefObject<boolean>;\n  onContentFocusOutside(): void;\n  onRootContentClose(): void;\n}\ninterface NavigationMenuContentImplProps\n  extends Omit<DismissableLayerProps, 'onDismiss' | 'disableOutsidePointerEvents'>,\n    NavigationMenuContentImplPrivateProps {}\n\nconst NavigationMenuContentImpl = React.forwardRef<\n  NavigationMenuContentImplElement,\n  NavigationMenuContentImplProps\n>((props: ScopedProps<NavigationMenuContentImplProps>, forwardedRef) => {\n  const {\n    __scopeNavigationMenu,\n    value,\n    triggerRef,\n    focusProxyRef,\n    wasEscapeCloseRef,\n    onRootContentClose,\n    onContentFocusOutside,\n    ...contentProps\n  } = props;\n  const context = useNavigationMenuContext(CONTENT_NAME, __scopeNavigationMenu);\n  const ref = React.useRef<NavigationMenuContentImplElement>(null);\n  const composedRefs = useComposedRefs(ref, forwardedRef);\n  const triggerId = makeTriggerId(context.baseId, value);\n  const contentId = makeContentId(context.baseId, value);\n  const getItems = useCollection(__scopeNavigationMenu);\n  const prevMotionAttributeRef = React.useRef<MotionAttribute | null>(null);\n\n  const { onItemDismiss } = context;\n\n  React.useEffect(() => {\n    const content = ref.current;\n\n    // Bubble dismiss to the root content node and focus its trigger\n    if (context.isRootMenu && content) {\n      const handleClose = () => {\n        onItemDismiss();\n        onRootContentClose();\n        if (content.contains(document.activeElement)) triggerRef.current?.focus();\n      };\n      content.addEventListener(ROOT_CONTENT_DISMISS, handleClose);\n      return () => content.removeEventListener(ROOT_CONTENT_DISMISS, handleClose);\n    }\n  }, [context.isRootMenu, props.value, triggerRef, onItemDismiss, onRootContentClose]);\n\n  const motionAttribute = React.useMemo(() => {\n    const items = getItems();\n    const values = items.map((item) => item.value);\n    if (context.dir === 'rtl') values.reverse();\n    const index = values.indexOf(context.value);\n    const prevIndex = values.indexOf(context.previousValue);\n    const isSelected = value === context.value;\n    const wasSelected = prevIndex === values.indexOf(value);\n\n    // We only want to update selected and the last selected content\n    // this avoids animations being interrupted outside of that range\n    if (!isSelected && !wasSelected) return prevMotionAttributeRef.current;\n\n    const attribute = (() => {\n      // Don't provide a direction on the initial open\n      if (index !== prevIndex) {\n        // If we're moving to this item from another\n        if (isSelected && prevIndex !== -1) return index > prevIndex ? 'from-end' : 'from-start';\n        // If we're leaving this item for another\n        if (wasSelected && index !== -1) return index > prevIndex ? 'to-start' : 'to-end';\n      }\n      // Otherwise we're entering from closed or leaving the list\n      // entirely and should not animate in any direction\n      return null;\n    })();\n\n    prevMotionAttributeRef.current = attribute;\n    return attribute;\n  }, [context.previousValue, context.value, context.dir, getItems, value]);\n\n  return (\n    <FocusGroup asChild>\n      <DismissableLayer\n        id={contentId}\n        aria-labelledby={triggerId}\n        data-motion={motionAttribute}\n        data-orientation={context.orientation}\n        {...contentProps}\n        ref={composedRefs}\n        disableOutsidePointerEvents={false}\n        onDismiss={() => {\n          const rootContentDismissEvent = new Event(ROOT_CONTENT_DISMISS, {\n            bubbles: true,\n            cancelable: true,\n          });\n          ref.current?.dispatchEvent(rootContentDismissEvent);\n        }}\n        onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) => {\n          onContentFocusOutside();\n          const target = event.target as HTMLElement;\n          // Only dismiss content when focus moves outside of the menu\n          if (context.rootNavigationMenu?.contains(target)) event.preventDefault();\n        })}\n        onPointerDownOutside={composeEventHandlers(props.onPointerDownOutside, (event) => {\n          const target = event.target as HTMLElement;\n          const isTrigger = getItems().some((item) => item.ref.current?.contains(target));\n          const isRootViewport = context.isRootMenu && context.viewport?.contains(target);\n          if (isTrigger || isRootViewport || !context.isRootMenu) event.preventDefault();\n        })}\n        onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n          const isMetaKey = event.altKey || event.ctrlKey || event.metaKey;\n          const isTabKey = event.key === 'Tab' && !isMetaKey;\n          if (isTabKey) {\n            const candidates = getTabbableCandidates(event.currentTarget);\n            const focusedElement = document.activeElement;\n            const index = candidates.findIndex((candidate) => candidate === focusedElement);\n            const isMovingBackwards = event.shiftKey;\n            const nextCandidates = isMovingBackwards\n              ? candidates.slice(0, index).reverse()\n              : candidates.slice(index + 1, candidates.length);\n\n            if (focusFirst(nextCandidates)) {\n              // prevent browser tab keydown because we've handled focus\n              event.preventDefault();\n            } else {\n              // If we can't focus that means we're at the edges\n              // so focus the proxy and let browser handle\n              // tab/shift+tab keypress on the proxy instead\n              focusProxyRef.current?.focus();\n            }\n          }\n        })}\n        onEscapeKeyDown={composeEventHandlers(props.onEscapeKeyDown, (event) => {\n          // prevent the dropdown from reopening\n          // after the escape key has been pressed\n          wasEscapeCloseRef.current = true;\n        })}\n      />\n    </FocusGroup>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuViewport\n * -----------------------------------------------------------------------------------------------*/\n\nconst VIEWPORT_NAME = 'NavigationMenuViewport';\n\ntype NavigationMenuViewportElement = NavigationMenuViewportImplElement;\ninterface NavigationMenuViewportProps\n  extends Omit<NavigationMenuViewportImplProps, 'children' | 'activeContentValue'> {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst NavigationMenuViewport = React.forwardRef<\n  NavigationMenuViewportElement,\n  NavigationMenuViewportProps\n>((props: ScopedProps<NavigationMenuViewportProps>, forwardedRef) => {\n  const { forceMount, ...viewportProps } = props;\n  const context = useNavigationMenuContext(VIEWPORT_NAME, props.__scopeNavigationMenu);\n  const open = Boolean(context.value);\n\n  return (\n    <Presence present={forceMount || open}>\n      <NavigationMenuViewportImpl {...viewportProps} ref={forwardedRef} />\n    </Presence>\n  );\n});\n\nNavigationMenuViewport.displayName = VIEWPORT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype NavigationMenuViewportImplElement = React.ElementRef<typeof Primitive.div>;\ninterface NavigationMenuViewportImplProps extends PrimitiveDivProps {}\n\nconst NavigationMenuViewportImpl = React.forwardRef<\n  NavigationMenuViewportImplElement,\n  NavigationMenuViewportImplProps\n>((props: ScopedProps<NavigationMenuViewportImplProps>, forwardedRef) => {\n  const { __scopeNavigationMenu, children, ...viewportImplProps } = props;\n  const context = useNavigationMenuContext(VIEWPORT_NAME, __scopeNavigationMenu);\n  const composedRefs = useComposedRefs(forwardedRef, context.onViewportChange);\n  const viewportContentContext = useViewportContentContext(\n    CONTENT_NAME,\n    props.__scopeNavigationMenu\n  );\n  const [size, setSize] = React.useState<{ width: number; height: number } | null>(null);\n  const [content, setContent] = React.useState<NavigationMenuContentElement | null>(null);\n  const viewportWidth = size ? size?.width + 'px' : undefined;\n  const viewportHeight = size ? size?.height + 'px' : undefined;\n  const open = Boolean(context.value);\n  // We persist the last active content value as the viewport may be animating out\n  // and we want the content to remain mounted for the lifecycle of the viewport.\n  const activeContentValue = open ? context.value : context.previousValue;\n\n  /**\n   * Update viewport size to match the active content node.\n   * We prefer offset dimensions over `getBoundingClientRect` as the latter respects CSS transform.\n   * For example, if content animates in from `scale(0.5)` the dimensions would be anything\n   * from `0.5` to `1` of the intended size.\n   */\n  const handleSizeChange = () => {\n    if (content) setSize({ width: content.offsetWidth, height: content.offsetHeight });\n  };\n  useResizeObserver(content, handleSizeChange);\n\n  return (\n    <Primitive.div\n      data-state={getOpenState(open)}\n      data-orientation={context.orientation}\n      {...viewportImplProps}\n      ref={composedRefs}\n      style={{\n        // Prevent interaction when animating out\n        pointerEvents: !open && context.isRootMenu ? 'none' : undefined,\n        ['--radix-navigation-menu-viewport-width' as any]: viewportWidth,\n        ['--radix-navigation-menu-viewport-height' as any]: viewportHeight,\n        ...viewportImplProps.style,\n      }}\n      onPointerEnter={composeEventHandlers(props.onPointerEnter, context.onContentEnter)}\n      onPointerLeave={composeEventHandlers(props.onPointerLeave, whenMouse(context.onContentLeave))}\n    >\n      {Array.from(viewportContentContext.items).map(([value, { ref, forceMount, ...props }]) => {\n        const isActive = activeContentValue === value;\n        return (\n          <Presence key={value} present={forceMount || isActive}>\n            <NavigationMenuContentImpl\n              {...props}\n              ref={composeRefs(ref, (node) => {\n                // We only want to update the stored node when another is available\n                // as we need to smoothly transition between them.\n                if (isActive && node) setContent(node);\n              })}\n            />\n          </Presence>\n        );\n      })}\n    </Primitive.div>\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst FOCUS_GROUP_NAME = 'FocusGroup';\n\ntype FocusGroupElement = React.ElementRef<typeof Primitive.div>;\ninterface FocusGroupProps extends PrimitiveDivProps {}\n\nconst FocusGroup = React.forwardRef<FocusGroupElement, FocusGroupProps>(\n  (props: ScopedProps<FocusGroupProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, ...groupProps } = props;\n    const context = useNavigationMenuContext(FOCUS_GROUP_NAME, __scopeNavigationMenu);\n\n    return (\n      <FocusGroupCollection.Provider scope={__scopeNavigationMenu}>\n        <FocusGroupCollection.Slot scope={__scopeNavigationMenu}>\n          <Primitive.div dir={context.dir} {...groupProps} ref={forwardedRef} />\n        </FocusGroupCollection.Slot>\n      </FocusGroupCollection.Provider>\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_KEYS = ['ArrowRight', 'ArrowLeft', 'ArrowUp', 'ArrowDown'];\nconst FOCUS_GROUP_ITEM_NAME = 'FocusGroupItem';\n\ntype FocusGroupItemElement = React.ElementRef<typeof Primitive.button>;\ninterface FocusGroupItemProps extends PrimitiveButtonProps {}\n\nconst FocusGroupItem = React.forwardRef<FocusGroupItemElement, FocusGroupItemProps>(\n  (props: ScopedProps<FocusGroupItemProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, ...groupProps } = props;\n    const getItems = useFocusGroupCollection(__scopeNavigationMenu);\n    const context = useNavigationMenuContext(FOCUS_GROUP_ITEM_NAME, __scopeNavigationMenu);\n\n    return (\n      <FocusGroupCollection.ItemSlot scope={__scopeNavigationMenu}>\n        <Primitive.button\n          {...groupProps}\n          ref={forwardedRef}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            const isFocusNavigationKey = ['Home', 'End', ...ARROW_KEYS].includes(event.key);\n            if (isFocusNavigationKey) {\n              let candidateNodes = getItems().map((item) => item.ref.current!);\n              const prevItemKey = context.dir === 'rtl' ? 'ArrowRight' : 'ArrowLeft';\n              const prevKeys = [prevItemKey, 'ArrowUp', 'End'];\n              if (prevKeys.includes(event.key)) candidateNodes.reverse();\n              if (ARROW_KEYS.includes(event.key)) {\n                const currentIndex = candidateNodes.indexOf(event.currentTarget);\n                candidateNodes = candidateNodes.slice(currentIndex + 1);\n              }\n              /**\n               * Imperative focus during keydown is risky so we prevent React's batching updates\n               * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n               */\n              setTimeout(() => focusFirst(candidateNodes));\n\n              // Prevent page scroll while navigating\n              event.preventDefault();\n            }\n          })}\n        />\n      </FocusGroupCollection.ItemSlot>\n    );\n  }\n);\n\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */\nfunction getTabbableCandidates(container: HTMLElement) {\n  const nodes: HTMLElement[] = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    },\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement);\n  // we do not take into account the order of nodes with positive `tabIndex` as it\n  // hinders accessibility to have tab order different from visual order.\n  return nodes;\n}\n\nfunction focusFirst(candidates: HTMLElement[]) {\n  const previouslyFocusedElement = document.activeElement;\n  return candidates.some((candidate) => {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === previouslyFocusedElement) return true;\n    candidate.focus();\n    return document.activeElement !== previouslyFocusedElement;\n  });\n}\n\nfunction removeFromTabOrder(candidates: HTMLElement[]) {\n  candidates.forEach((candidate) => {\n    candidate.dataset.tabindex = candidate.getAttribute('tabindex') || '';\n    candidate.setAttribute('tabindex', '-1');\n  });\n  return () => {\n    candidates.forEach((candidate) => {\n      const prevTabIndex = candidate.dataset.tabindex as string;\n      candidate.setAttribute('tabindex', prevTabIndex);\n    });\n  };\n}\n\nfunction useResizeObserver(element: HTMLElement | null, onResize: () => void) {\n  const handleResize = useCallbackRef(onResize);\n  useLayoutEffect(() => {\n    let rAF = 0;\n    if (element) {\n      /**\n       * Resize Observer will throw an often benign error that says `ResizeObserver loop\n       * completed with undelivered notifications`. This means that ResizeObserver was not\n       * able to deliver all observations within a single animation frame, so we use\n       * `requestAnimationFrame` to ensure we don't deliver unnecessary observations.\n       * Further reading: https://github.com/WICG/resize-observer/issues/38\n       */\n      const resizeObserver = new ResizeObserver(() => {\n        cancelAnimationFrame(rAF);\n        rAF = window.requestAnimationFrame(handleResize);\n      });\n      resizeObserver.observe(element);\n      return () => {\n        window.cancelAnimationFrame(rAF);\n        resizeObserver.unobserve(element);\n      };\n    }\n  }, [element, handleResize]);\n}\n\nfunction getOpenState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nfunction makeTriggerId(baseId: string, value: string) {\n  return `${baseId}-trigger-${value}`;\n}\n\nfunction makeContentId(baseId: string, value: string) {\n  return `${baseId}-content-${value}`;\n}\n\nfunction whenMouse<E>(handler: React.PointerEventHandler<E>): React.PointerEventHandler<E> {\n  return (event) => (event.pointerType === 'mouse' ? handler(event) : undefined);\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = NavigationMenu;\nconst Sub = NavigationMenuSub;\nconst List = NavigationMenuList;\nconst Item = NavigationMenuItem;\nconst Trigger = NavigationMenuTrigger;\nconst Link = NavigationMenuLink;\nconst Indicator = NavigationMenuIndicator;\nconst Content = NavigationMenuContent;\nconst Viewport = NavigationMenuViewport;\n\nexport {\n  createNavigationMenuScope,\n  //\n  NavigationMenu,\n  NavigationMenuSub,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuContent,\n  NavigationMenuViewport,\n  //\n  Root,\n  Sub,\n  List,\n  Item,\n  Trigger,\n  Link,\n  Indicator,\n  Content,\n  Viewport,\n};\nexport type {\n  NavigationMenuProps,\n  NavigationMenuSubProps,\n  NavigationMenuListProps,\n  NavigationMenuItemProps,\n  NavigationMenuTriggerProps,\n  NavigationMenuLinkProps,\n  NavigationMenuIndicatorProps,\n  NavigationMenuContentProps,\n  NavigationMenuViewportProps,\n};\n", "import { colorPropDef } from '../props/color.prop.js';\nimport { highContrastPropDef } from '../props/high-contrast.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2'] as const;\nconst wrapValues = ['nowrap', 'wrap', 'wrap-reverse'] as const;\nconst justifyValues = ['start', 'center', 'end'] as const;\n\nconst baseTabListPropDefs = {\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  wrap: {\n    type: 'enum',\n    className: 'rt-r-fw',\n    values: wrapValues,\n    responsive: true,\n  },\n  justify: {\n    type: 'enum',\n    className: 'rt-r-jc',\n    values: justifyValues,\n    responsive: true,\n  },\n  ...colorPropDef,\n  ...highContrastPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  wrap: PropDef<(typeof wrapValues)[number]>;\n  justify: PropDef<(typeof justifyValues)[number]>;\n};\n\nexport { baseTabListPropDefs };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst tabNavLinkPropDefs = {\n  ...asChildPropDef,\n  active: { type: 'boolean', default: false },\n} satisfies {\n  active: PropDef<boolean>;\n};\n\nexport { baseTabListPropDefs as tabNavRootPropDefs } from './base-tab-list.props.js';\nexport { tabNavLinkPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport * as NavigationMenu from '@radix-ui/react-navigation-menu';\n\nimport { tabNavLinkPropDefs, tabNavRootPropDefs } from './tab-nav.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { getSubtree } from '../helpers/get-subtree.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype TabNavRootElement = React.ElementRef<typeof NavigationMenu.Root>;\ntype TabNavRootElementProps = ComponentPropsWithout<'nav', RemovedProps>;\ntype TabNavOwnProps = GetPropDefTypes<typeof tabNavRootPropDefs>;\ninterface TabNavRootProps\n  extends Omit<TabNavRootElementProps, 'defaultValue' | 'dir' | 'color'>,\n    MarginProps,\n    TabNavOwnProps {}\nconst TabNavRoot = React.forwardRef<TabNavRootElement, TabNavRootProps>((props, forwardedRef) => {\n  const { children, className, color, ...rootProps } = extractProps(\n    props,\n    tabNavRootPropDefs,\n    marginPropDefs\n  );\n  return (\n    <NavigationMenu.Root\n      className=\"rt-TabNavRoot\"\n      data-accent-color={color}\n      {...rootProps}\n      asChild={false}\n      ref={forwardedRef}\n    >\n      <NavigationMenu.List\n        className={classNames('rt-reset', 'rt-BaseTabList', 'rt-TabNavList', className)}\n      >\n        {children}\n      </NavigationMenu.List>\n    </NavigationMenu.Root>\n  );\n});\nTabNavRoot.displayName = 'TabNav.Root';\n\ntype TabNavLinkElement = React.ElementRef<typeof NavigationMenu.Link>;\ntype TabNavLinkOwnProps = GetPropDefTypes<typeof tabNavLinkPropDefs>;\ninterface TabNavLinkProps\n  extends ComponentPropsWithout<typeof NavigationMenu.Link, RemovedProps | 'onSelect'>,\n    TabNavLinkOwnProps {}\nconst TabNavLink = React.forwardRef<TabNavLinkElement, TabNavLinkProps>((props, forwardedRef) => {\n  const { asChild, children, className, ...linkProps } = props;\n\n  return (\n    <NavigationMenu.Item className=\"rt-TabNavItem\">\n      <NavigationMenu.Link\n        {...linkProps}\n        ref={forwardedRef}\n        className={classNames('rt-reset', 'rt-BaseTabListTrigger', 'rt-TabNavLink', className)}\n        onSelect={undefined}\n        asChild={asChild}\n      >\n        {getSubtree({ asChild, children }, (children) => (\n          <>\n            <span className=\"rt-BaseTabListTriggerInner rt-TabNavLinkInner\">{children}</span>\n            <span className=\"rt-BaseTabListTriggerInnerHidden rt-TabNavLinkInnerHidden\">\n              {children}\n            </span>\n          </>\n        ))}\n      </NavigationMenu.Link>\n    </NavigationMenu.Item>\n  );\n});\nTabNavLink.displayName = 'TabNav.Link';\n\nexport { TabNavRoot as Root, TabNavLink as Link };\nexport type { TabNavRootProps as RootProps, TabNavLinkProps as LinkProps };\n", "import { paddingPropDefs } from '../props/padding.props.js';\nimport { widthPropDefs } from '../props/width.props.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['surface', 'ghost'] as const;\nconst layoutValues = ['auto', 'fixed'] as const;\n\nconst tableRootPropDefs = {\n  size: {\n    type: 'enum',\n    className: 'rt-r-size',\n    values: sizes,\n    default: '2',\n    responsive: true,\n  },\n  variant: {\n    type: 'enum',\n    className: 'rt-variant',\n    values: variants,\n    default: 'ghost',\n  },\n  layout: {\n    type: 'enum',\n    className: 'rt-r-tl',\n    values: layoutValues,\n    responsive: true,\n  },\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n  layout: PropDef<(typeof layoutValues)[number]>;\n};\n\nconst rowAlign = ['start', 'center', 'end', 'baseline'] as const;\n\nconst tableRowPropDefs = {\n  align: {\n    type: 'enum',\n    className: 'rt-r-va',\n    values: rowAlign,\n    parseValue: parseAlignValue,\n    responsive: true,\n  },\n} satisfies {\n  align: PropDef<(typeof rowAlign)[number]>;\n};\n\nfunction parseAlignValue(value: string) {\n  return {\n    baseline: 'baseline',\n    start: 'top',\n    center: 'middle',\n    end: 'bottom',\n  }[value];\n}\n\nconst justifyValues = ['start', 'center', 'end'] as const;\n\nconst tableCellPropDefs = {\n  justify: {\n    type: 'enum',\n    className: 'rt-r-ta',\n    values: justifyValues,\n    parseValue: parseJustifyValue,\n    responsive: true,\n  },\n  ...widthPropDefs,\n  ...paddingPropDefs,\n} satisfies {\n  justify: PropDef<(typeof justifyValues)[number]>;\n};\n\nfunction parseJustifyValue(value: string) {\n  return {\n    start: 'left',\n    center: 'center',\n    end: 'right',\n  }[value];\n}\n\nexport { tableRootPropDefs, tableRowPropDefs, tableCellPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { tableRootPropDefs, tableRowPropDefs, tableCellPropDefs } from './table.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { getResponsiveClassNames } from '../helpers/get-responsive-styles.js';\nimport { marginPropDefs } from '../props/margin.props.js';\nimport { ScrollArea } from './scroll-area.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype TableRootElement = React.ElementRef<'div'>;\ntype TableRootOwnProps = GetPropDefTypes<typeof tableRootPropDefs>;\ninterface TableRootProps\n  extends ComponentPropsWithout<'div', RemovedProps>,\n    MarginProps,\n    TableRootOwnProps {}\nconst TableRoot = React.forwardRef<TableRootElement, TableRootProps>((props, forwardedRef) => {\n  const { layout: layoutPropDef, ...rootPropDefs } = tableRootPropDefs;\n  const { className, children, layout, ...rootProps } = extractProps(\n    props,\n    rootPropDefs,\n    marginPropDefs\n  );\n  const tableLayoutClassNames = getResponsiveClassNames({\n    value: layout,\n    className: tableRootPropDefs.layout.className,\n    propValues: tableRootPropDefs.layout.values,\n  });\n  return (\n    <div ref={forwardedRef} className={classNames('rt-TableRoot', className)} {...rootProps}>\n      <ScrollArea>\n        <table className={classNames('rt-TableRootTable', tableLayoutClassNames)}>{children}</table>\n      </ScrollArea>\n    </div>\n  );\n});\nTableRoot.displayName = 'Table.Root';\n\ntype TableHeaderElement = React.ElementRef<'thead'>;\ninterface TableHeaderProps extends ComponentPropsWithout<'thead', RemovedProps> {}\nconst TableHeader = React.forwardRef<TableHeaderElement, TableHeaderProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <thead {...props} ref={forwardedRef} className={classNames('rt-TableHeader', className)} />\n  )\n);\nTableHeader.displayName = 'Table.Header';\n\ntype TableBodyElement = React.ElementRef<'tbody'>;\ninterface TableBodyProps extends ComponentPropsWithout<'tbody', RemovedProps> {}\nconst TableBody = React.forwardRef<TableBodyElement, TableBodyProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <tbody {...props} ref={forwardedRef} className={classNames('rt-TableBody', className)} />\n  )\n);\nTableBody.displayName = 'Table.Body';\n\ntype TableRowElement = React.ElementRef<'tr'>;\ntype TableRowOwnProps = GetPropDefTypes<typeof tableRowPropDefs>;\ninterface TableRowProps extends ComponentPropsWithout<'tr', RemovedProps>, TableRowOwnProps {}\nconst TableRow = React.forwardRef<TableRowElement, TableRowProps>((props, forwardedRef) => {\n  const { className, ...rowProps } = extractProps(props, tableRowPropDefs);\n  return <tr {...rowProps} ref={forwardedRef} className={classNames('rt-TableRow', className)} />;\n});\nTableRow.displayName = 'Table.Row';\n\ntype TableCellElement = React.ElementRef<'td'>;\ntype TableCellOwnProps = GetPropDefTypes<typeof tableCellPropDefs>;\ninterface TableCellProps\n  extends ComponentPropsWithout<'td', RemovedProps | 'width'>,\n    TableCellOwnProps {}\nconst TableCell = React.forwardRef<TableCellElement, TableCellProps>((props, forwardedRef) => {\n  const { className, ...cellProps } = extractProps(props, tableCellPropDefs);\n  return <td className={classNames('rt-TableCell', className)} ref={forwardedRef} {...cellProps} />;\n});\nTableCell.displayName = 'Table.Cell';\n\ntype TableColumnHeaderCellElement = React.ElementRef<'th'>;\ninterface TableColumnHeaderCellProps\n  extends ComponentPropsWithout<'th', RemovedProps>,\n    TableCellOwnProps {}\nconst TableColumnHeaderCell = React.forwardRef<\n  TableColumnHeaderCellElement,\n  TableColumnHeaderCellProps\n>((props, forwardedRef) => {\n  const { className, ...cellProps } = extractProps(props, tableCellPropDefs);\n  return (\n    <th\n      className={classNames('rt-TableCell', 'rt-TableColumnHeaderCell', className)}\n      scope=\"col\"\n      ref={forwardedRef}\n      {...cellProps}\n    />\n  );\n});\nTableColumnHeaderCell.displayName = 'Table.ColumnHeaderCell';\n\ntype TableRowHeaderCellElement = React.ElementRef<'th'>;\ninterface TableRowHeaderCellProps\n  extends ComponentPropsWithout<'th', RemovedProps>,\n    TableCellOwnProps {}\nconst TableRowHeaderCell = React.forwardRef<TableRowHeaderCellElement, TableRowHeaderCellProps>(\n  (props, forwardedRef) => {\n    const { className, ...cellProps } = extractProps(props, tableCellPropDefs);\n    return (\n      <th\n        className={classNames('rt-TableCell', 'rt-TableRowHeaderCell', className)}\n        scope=\"row\"\n        ref={forwardedRef}\n        {...cellProps}\n      />\n    );\n  }\n);\nTableRowHeaderCell.displayName = 'Table.RowHeaderCell';\n\nexport {\n  TableRoot as Root,\n  TableHeader as Header,\n  TableBody as Body,\n  TableRow as Row,\n  TableCell as Cell,\n  TableColumnHeaderCell as ColumnHeaderCell,\n  TableRowHeaderCell as RowHeaderCell,\n};\n\nexport type {\n  TableRootProps as RootProps,\n  TableHeaderProps as HeaderProps,\n  TableBodyProps as BodyProps,\n  TableRowProps as RowProps,\n  TableCellProps as CellProps,\n  TableColumnHeaderCellProps as ColumnHeaderCellProps,\n  TableRowHeaderCellProps as RowHeaderCellProps,\n};\n", "'use client';\nexport {\n  createTabsScope,\n  //\n  Tabs,\n  TabsList,\n  TabsTrigger,\n  TabsContent,\n  //\n  Root,\n  List,\n  Trigger,\n  Content,\n} from './Tabs';\nexport type { TabsProps, TabsListProps, TabsTriggerProps, TabsContentProps } from './Tabs';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useId } from '@radix-ui/react-id';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Tabs\n * -----------------------------------------------------------------------------------------------*/\n\nconst TABS_NAME = 'Tabs';\n\ntype ScopedProps<P> = P & { __scopeTabs?: Scope };\nconst [createTabsContext, createTabsScope] = createContextScope(TABS_NAME, [\n  createRovingFocusGroupScope,\n]);\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\n\ntype TabsContextValue = {\n  baseId: string;\n  value?: string;\n  onValueChange: (value: string) => void;\n  orientation?: TabsProps['orientation'];\n  dir?: TabsProps['dir'];\n  activationMode?: TabsProps['activationMode'];\n};\n\nconst [TabsProvider, useTabsContext] = createTabsContext<TabsContextValue>(TABS_NAME);\n\ntype TabsElement = React.ElementRef<typeof Primitive.div>;\ntype RovingFocusGroupProps = React.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface TabsProps extends PrimitiveDivProps {\n  /** The value for the selected tab, if controlled */\n  value?: string;\n  /** The value of the tab to select by default, if uncontrolled */\n  defaultValue?: string;\n  /** A function called when a new tab is selected */\n  onValueChange?: (value: string) => void;\n  /**\n   * The orientation the tabs are layed out.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   * @defaultValue horizontal\n   */\n  orientation?: RovingFocusGroupProps['orientation'];\n  /**\n   * The direction of navigation between toolbar items.\n   */\n  dir?: RovingFocusGroupProps['dir'];\n  /**\n   * Whether a tab is activated automatically or manually.\n   * @defaultValue automatic\n   * */\n  activationMode?: 'automatic' | 'manual';\n}\n\nconst Tabs = React.forwardRef<TabsElement, TabsProps>(\n  (props: ScopedProps<TabsProps>, forwardedRef) => {\n    const {\n      __scopeTabs,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      orientation = 'horizontal',\n      dir,\n      activationMode = 'automatic',\n      ...tabsProps\n    } = props;\n    const direction = useDirection(dir);\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChange,\n      defaultProp: defaultValue,\n    });\n\n    return (\n      <TabsProvider\n        scope={__scopeTabs}\n        baseId={useId()}\n        value={value}\n        onValueChange={setValue}\n        orientation={orientation}\n        dir={direction}\n        activationMode={activationMode}\n      >\n        <Primitive.div\n          dir={direction}\n          data-orientation={orientation}\n          {...tabsProps}\n          ref={forwardedRef}\n        />\n      </TabsProvider>\n    );\n  }\n);\n\nTabs.displayName = TABS_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsList\n * -----------------------------------------------------------------------------------------------*/\n\nconst TAB_LIST_NAME = 'TabsList';\n\ntype TabsListElement = React.ElementRef<typeof Primitive.div>;\ninterface TabsListProps extends PrimitiveDivProps {\n  loop?: RovingFocusGroupProps['loop'];\n}\n\nconst TabsList = React.forwardRef<TabsListElement, TabsListProps>(\n  (props: ScopedProps<TabsListProps>, forwardedRef) => {\n    const { __scopeTabs, loop = true, ...listProps } = props;\n    const context = useTabsContext(TAB_LIST_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    return (\n      <RovingFocusGroup.Root\n        asChild\n        {...rovingFocusGroupScope}\n        orientation={context.orientation}\n        dir={context.dir}\n        loop={loop}\n      >\n        <Primitive.div\n          role=\"tablist\"\n          aria-orientation={context.orientation}\n          {...listProps}\n          ref={forwardedRef}\n        />\n      </RovingFocusGroup.Root>\n    );\n  }\n);\n\nTabsList.displayName = TAB_LIST_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'TabsTrigger';\n\ntype TabsTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface TabsTriggerProps extends PrimitiveButtonProps {\n  value: string;\n}\n\nconst TabsTrigger = React.forwardRef<TabsTriggerElement, TabsTriggerProps>(\n  (props: ScopedProps<TabsTriggerProps>, forwardedRef) => {\n    const { __scopeTabs, value, disabled = false, ...triggerProps } = props;\n    const context = useTabsContext(TRIGGER_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    return (\n      <RovingFocusGroup.Item\n        asChild\n        {...rovingFocusGroupScope}\n        focusable={!disabled}\n        active={isSelected}\n      >\n        <Primitive.button\n          type=\"button\"\n          role=\"tab\"\n          aria-selected={isSelected}\n          aria-controls={contentId}\n          data-state={isSelected ? 'active' : 'inactive'}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          id={triggerId}\n          {...triggerProps}\n          ref={forwardedRef}\n          onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n              context.onValueChange(value);\n            } else {\n              // prevent focus to avoid accidental activation\n              event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if ([' ', 'Enter'].includes(event.key)) context.onValueChange(value);\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => {\n            // handle \"automatic\" activation if necessary\n            // ie. activate tab following focus\n            const isAutomaticActivation = context.activationMode !== 'manual';\n            if (!isSelected && !disabled && isAutomaticActivation) {\n              context.onValueChange(value);\n            }\n          })}\n        />\n      </RovingFocusGroup.Item>\n    );\n  }\n);\n\nTabsTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'TabsContent';\n\ntype TabsContentElement = React.ElementRef<typeof Primitive.div>;\ninterface TabsContentProps extends PrimitiveDivProps {\n  value: string;\n\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst TabsContent = React.forwardRef<TabsContentElement, TabsContentProps>(\n  (props: ScopedProps<TabsContentProps>, forwardedRef) => {\n    const { __scopeTabs, value, forceMount, children, ...contentProps } = props;\n    const context = useTabsContext(CONTENT_NAME, __scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    const isMountAnimationPreventedRef = React.useRef(isSelected);\n\n    React.useEffect(() => {\n      const rAF = requestAnimationFrame(() => (isMountAnimationPreventedRef.current = false));\n      return () => cancelAnimationFrame(rAF);\n    }, []);\n\n    return (\n      <Presence present={forceMount || isSelected}>\n        {({ present }) => (\n          <Primitive.div\n            data-state={isSelected ? 'active' : 'inactive'}\n            data-orientation={context.orientation}\n            role=\"tabpanel\"\n            aria-labelledby={triggerId}\n            hidden={!present}\n            id={contentId}\n            tabIndex={0}\n            {...contentProps}\n            ref={forwardedRef}\n            style={{\n              ...props.style,\n              animationDuration: isMountAnimationPreventedRef.current ? '0s' : undefined,\n            }}\n          >\n            {present && children}\n          </Primitive.div>\n        )}\n      </Presence>\n    );\n  }\n);\n\nTabsContent.displayName = CONTENT_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction makeTriggerId(baseId: string, value: string) {\n  return `${baseId}-trigger-${value}`;\n}\n\nfunction makeContentId(baseId: string, value: string) {\n  return `${baseId}-content-${value}`;\n}\n\nconst Root = Tabs;\nconst List = TabsList;\nconst Trigger = TabsTrigger;\nconst Content = TabsContent;\n\nexport {\n  createTabsScope,\n  //\n  Tabs,\n  TabsList,\n  TabsTrigger,\n  TabsContent,\n  //\n  Root,\n  List,\n  Trigger,\n  Content,\n};\nexport type { TabsProps, TabsListProps, TabsTriggerProps, TabsContentProps };\n", "import { asChildPropDef } from '../props/as-child.prop.js';\n\nconst tabsRootPropDefs = {\n  ...asChildPropDef,\n};\n\nconst tabsContentPropDefs = {\n  ...asChildPropDef,\n};\n\nexport { baseTabListPropDefs as tabsListPropDefs } from './base-tab-list.props.js';\nexport { tabsRootPropDefs, tabsContentPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport * as TabsPrimitive from '@radix-ui/react-tabs';\n\nimport { tabsContentPropDefs, tabsListPropDefs, tabsRootPropDefs } from './tabs.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype TabsRootElement = React.ElementRef<typeof TabsPrimitive.Root>;\ntype TabsRootOwnProps = GetPropDefTypes<typeof tabsRootPropDefs>;\ninterface TabsRootProps\n  extends ComponentPropsWithout<typeof TabsPrimitive.Root, 'asChild' | 'color' | 'defaultChecked'>,\n    MarginProps,\n    TabsRootOwnProps {}\nconst TabsRoot = React.forwardRef<TabsRootElement, TabsRootProps>((props, forwardedRef) => {\n  const { className, ...rootProps } = extractProps(props, marginPropDefs);\n  return (\n    <TabsPrimitive.Root\n      {...rootProps}\n      ref={forwardedRef}\n      className={classNames('rt-TabsRoot', className)}\n    />\n  );\n});\nTabsRoot.displayName = 'Tabs.Root';\n\ntype TabsListElement = React.ElementRef<typeof TabsPrimitive.List>;\ntype TabsListOwnProps = GetPropDefTypes<typeof tabsListPropDefs>;\ninterface TabsListProps\n  extends ComponentPropsWithout<typeof TabsPrimitive.List, RemovedProps>,\n    MarginProps,\n    TabsListOwnProps {}\nconst TabsList = React.forwardRef<TabsListElement, TabsListProps>((props, forwardedRef) => {\n  const { className, color, ...listProps } = extractProps(props, tabsListPropDefs, marginPropDefs);\n  return (\n    <TabsPrimitive.List\n      data-accent-color={color}\n      {...listProps}\n      asChild={false}\n      ref={forwardedRef}\n      className={classNames('rt-BaseTabList', 'rt-TabsList', className)}\n    />\n  );\n});\nTabsList.displayName = 'Tabs.List';\n\ntype TabsTriggerElement = React.ElementRef<typeof TabsPrimitive.Trigger>;\ninterface TabsTriggerProps\n  extends ComponentPropsWithout<typeof TabsPrimitive.Trigger, RemovedProps> {}\nconst TabsTrigger = React.forwardRef<TabsTriggerElement, TabsTriggerProps>(\n  (props, forwardedRef) => {\n    const { className, children, ...triggerProps } = props;\n    return (\n      <TabsPrimitive.Trigger\n        {...triggerProps}\n        asChild={false}\n        ref={forwardedRef}\n        className={classNames('rt-reset', 'rt-BaseTabListTrigger', 'rt-TabsTrigger', className)}\n      >\n        <span className=\"rt-BaseTabListTriggerInner rt-TabsTriggerInner\">{children}</span>\n        <span className=\"rt-BaseTabListTriggerInnerHidden rt-TabsTriggerInnerHidden\">\n          {children}\n        </span>\n      </TabsPrimitive.Trigger>\n    );\n  }\n);\nTabsTrigger.displayName = 'Tabs.Trigger';\n\ntype TabsContentElement = React.ElementRef<typeof TabsPrimitive.Content>;\ntype TabsContentOwnProps = GetPropDefTypes<typeof tabsContentPropDefs>;\ninterface TabsContentProps\n  extends ComponentPropsWithout<typeof TabsPrimitive.Content, RemovedProps>,\n    MarginProps,\n    TabsContentOwnProps {}\nconst TabsContent = React.forwardRef<TabsContentElement, TabsContentProps>(\n  (props, forwardedRef) => {\n    const { className, ...contentProps } = extractProps(props, marginPropDefs);\n    return (\n      <TabsPrimitive.Content\n        {...contentProps}\n        ref={forwardedRef}\n        className={classNames('rt-TabsContent', className)}\n      />\n    );\n  }\n);\nTabsContent.displayName = 'Tabs.Content';\n\nexport { TabsRoot as Root, TabsList as List, TabsTrigger as Trigger, TabsContent as Content };\nexport type {\n  TabsRootProps as RootProps,\n  TabsListProps as ListProps,\n  TabsTriggerProps as TriggerProps,\n  TabsContentProps as ContentProps,\n};\n", "import { colorPropDef } from '../props/color.prop.js';\nimport { radiusPropDef } from '../props/radius.prop.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['classic', 'surface', 'soft'] as const;\nconst resizeValues = ['none', 'vertical', 'horizontal', 'both'] as const;\n\n// prettier-ignore\nconst textAreaPropDefs = {\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'surface' },\n  resize: { type: 'enum', className: 'rt-r-resize', values: resizeValues,  responsive: true },\n  ...colorPropDef,\n  ...radiusPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n  resize: PropDef<(typeof resizeValues)[number]>;\n    };\n\nexport { textAreaPropDefs };\n", "import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { textAreaPropDefs } from './text-area.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype TextAreaElement = React.ElementRef<'textarea'>;\ntype TextAreaOwnProps = GetPropDefTypes<typeof textAreaPropDefs> & {\n  defaultValue?: string;\n  value?: string;\n};\ninterface TextAreaProps\n  extends ComponentPropsWithout<'textarea', RemovedProps | 'size' | 'value'>,\n    MarginProps,\n    TextAreaOwnProps {}\nconst TextArea = React.forwardRef<TextAreaElement, TextAreaProps>((props, forwardedRef) => {\n  const { className, color, radius, style, ...textAreaProps } = extractProps(\n    props,\n    textAreaPropDefs,\n    marginPropDefs\n  );\n  return (\n    <div\n      data-accent-color={color}\n      data-radius={radius}\n      className={classNames('rt-TextAreaRoot', className)}\n      style={style}\n    >\n      <textarea className=\"rt-reset rt-TextAreaInput\" ref={forwardedRef} {...textAreaProps} />\n    </div>\n  );\n});\nTextArea.displayName = 'TextArea';\n\nexport { TextArea };\nexport type { TextAreaProps };\n", "import { colorPropDef } from '../props/color.prop.js';\nimport { paddingPropDefs } from '../props/padding.props.js';\nimport { radiusPropDef } from '../props/radius.prop.js';\nimport { flexPropDefs } from './flex.props.js';\n\nimport type { PropDef } from '../props/prop-def.js';\n\nconst sizes = ['1', '2', '3'] as const;\nconst variants = ['classic', 'surface', 'soft'] as const;\n\nconst textFieldRootPropDefs = {\n  size: { type: 'enum', className: 'rt-r-size', values: sizes, default: '2', responsive: true },\n  variant: { type: 'enum', className: 'rt-variant', values: variants, default: 'surface' },\n  ...colorPropDef,\n  ...radiusPropDef,\n} satisfies {\n  size: PropDef<(typeof sizes)[number]>;\n  variant: PropDef<(typeof variants)[number]>;\n};\n\nconst sides = ['left', 'right'] as const;\n\nconst textFieldSlotPropDefs = {\n  side: { type: 'enum', values: sides },\n  ...colorPropDef,\n  gap: flexPropDefs.gap,\n  px: paddingPropDefs.px,\n  pl: paddingPropDefs.pl,\n  pr: paddingPropDefs.pr,\n} satisfies {\n  side: PropDef<(typeof sides)[number]>;\n  gap: typeof flexPropDefs.gap;\n  px: typeof paddingPropDefs.px;\n  pl: typeof paddingPropDefs.pl;\n  pr: typeof paddingPropDefs.pr;\n};\n\nexport { textFieldRootPropDefs, textFieldSlotPropDefs };\n", "'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\nimport { textFieldRootPropDefs, textFieldSlotPropDefs } from './text-field.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { NotInputTextualAttributes } from '../helpers/input-attributes.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype TextFieldRootElement = React.ElementRef<'input'>;\ntype TextFieldRootOwnProps = GetPropDefTypes<typeof textFieldRootPropDefs> & {\n  defaultValue?: string | number;\n  value?: string | number;\n  type?:\n    | 'date'\n    | 'datetime-local'\n    | 'email'\n    | 'hidden'\n    | 'month'\n    | 'number'\n    | 'password'\n    | 'search'\n    | 'tel'\n    | 'text'\n    | 'time'\n    | 'url'\n    | 'week';\n};\ntype TextFieldInputProps = ComponentPropsWithout<\n  'input',\n  NotInputTextualAttributes | 'color' | 'defaultValue' | 'size' | 'type' | 'value'\n>;\ninterface TextFieldRootProps extends TextFieldInputProps, MarginProps, TextFieldRootOwnProps {}\nconst TextFieldRoot = React.forwardRef<TextFieldRootElement, TextFieldRootProps>(\n  (props, forwardedRef) => {\n    const inputRef = React.useRef<HTMLInputElement>(null);\n    const { children, className, color, radius, style, ...inputProps } = extractProps(\n      props,\n      textFieldRootPropDefs,\n      marginPropDefs\n    );\n    return (\n      <div\n        data-accent-color={color}\n        data-radius={radius}\n        style={style}\n        className={classNames('rt-TextFieldRoot', className)}\n        onPointerDown={(event) => {\n          const target = event.target as HTMLElement;\n          if (target.closest('input, button, a')) return;\n\n          const input = inputRef.current;\n          if (!input) return;\n\n          // Same selector as in the CSS to find the right slot\n          const isRightSlot = target.closest(`\n            .rt-TextFieldSlot[data-side='right'],\n            .rt-TextFieldSlot:not([data-side='right']) ~ .rt-TextFieldSlot:not([data-side='left'])\n          `);\n\n          const cursorPosition = isRightSlot ? input.value.length : 0;\n\n          requestAnimationFrame(() => {\n            // Only some input types support this, browsers will throw an error if not supported\n            // See: https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange#:~:text=Note%20that%20according,not%20support%20selection%22.\n            try {\n              input.setSelectionRange(cursorPosition, cursorPosition);\n            } catch (e) {}\n            input.focus();\n          });\n        }}\n      >\n        <input\n          spellCheck=\"false\"\n          {...inputProps}\n          ref={composeRefs(inputRef, forwardedRef)}\n          className=\"rt-reset rt-TextFieldInput\"\n        />\n        {children}\n      </div>\n    );\n  }\n);\nTextFieldRoot.displayName = 'TextField.Root';\n\ntype TextFieldSlotElement = React.ElementRef<'div'>;\ntype TextFieldSlotOwnProps = GetPropDefTypes<typeof textFieldSlotPropDefs>;\ninterface TextFieldSlotProps\n  extends ComponentPropsWithout<'div', RemovedProps>,\n    TextFieldSlotOwnProps {}\nconst TextFieldSlot = React.forwardRef<TextFieldSlotElement, TextFieldSlotProps>(\n  (props, forwardedRef) => {\n    const { className, color, side, ...slotProps } = extractProps(props, textFieldSlotPropDefs);\n    return (\n      <div\n        data-accent-color={color}\n        data-side={side}\n        {...slotProps}\n        ref={forwardedRef}\n        className={classNames('rt-TextFieldSlot', className)}\n      />\n    );\n  }\n);\nTextFieldSlot.displayName = 'TextField.Slot';\n\nexport { TextFieldRoot as Root, TextFieldSlot as Slot };\nexport type { TextFieldRootProps as RootProps, TextFieldSlotProps as SlotProps };\n", "'use client';\n\nimport * as React from 'react';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\nimport {\n  AccessibleIcon,\n  Box,\n  Button,\n  Flex,\n  Grid,\n  Heading,\n  IconButton,\n  Kbd,\n  Popover,\n  ScrollArea,\n  Text,\n  Tooltip,\n} from '../index.js';\nimport { Theme, useThemeContext } from './theme.js';\nimport { inert } from '../helpers/inert.js';\nimport { getMatchingGrayColor } from '../helpers/get-matching-gray-color.js';\nimport { themePropDefs } from './theme.props.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ninterface ThemePanelProps extends Omit<ThemePanelImplProps, keyof ThemePanelImplPrivateProps> {\n  defaultOpen?: boolean;\n}\nconst ThemePanel = React.forwardRef<ThemePanelImplElement, ThemePanelProps>(\n  ({ defaultOpen = true, ...props }, forwardedRef) => {\n    const [open, setOpen] = React.useState(defaultOpen);\n    return <ThemePanelImpl {...props} ref={forwardedRef} open={open} onOpenChange={setOpen} />;\n  }\n);\nThemePanel.displayName = 'ThemePanel';\n\ntype ThemePanelImplElement = React.ElementRef<'div'>;\ninterface ThemePanelImplPrivateProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n}\ninterface ThemePanelImplProps\n  extends ComponentPropsWithout<'div', RemovedProps>,\n    ThemePanelImplPrivateProps {\n  onAppearanceChange?: (value: 'light' | 'dark') => void;\n}\nconst ThemePanelImpl = React.forwardRef<ThemePanelImplElement, ThemePanelImplProps>(\n  (props, forwardedRef) => {\n    const { open, onOpenChange, onAppearanceChange: onAppearanceChangeProp, ...panelProps } = props;\n    const themeContext = useThemeContext();\n    const {\n      appearance,\n      onAppearanceChange,\n      accentColor,\n      onAccentColorChange,\n      grayColor,\n      onGrayColorChange,\n      panelBackground,\n      onPanelBackgroundChange,\n      radius,\n      onRadiusChange,\n      scaling,\n      onScalingChange,\n    } = themeContext;\n\n    const hasOnAppearanceChangeProp = onAppearanceChangeProp !== undefined;\n    const handleAppearanceChangeProp = useCallbackRef(onAppearanceChangeProp);\n    const handleAppearanceChange = React.useCallback(\n      (value: 'light' | 'dark') => {\n        const cleanup = disableAnimation();\n\n        if (appearance !== 'inherit') {\n          onAppearanceChange(value);\n          return;\n        }\n\n        if (hasOnAppearanceChangeProp) {\n          handleAppearanceChangeProp(value);\n        } else {\n          setResolvedAppearance(value);\n          updateRootAppearanceClass(value);\n        }\n\n        cleanup();\n      },\n      [appearance, onAppearanceChange, hasOnAppearanceChangeProp, handleAppearanceChangeProp]\n    );\n\n    const autoMatchedGray = getMatchingGrayColor(accentColor);\n    const resolvedGrayColor = grayColor === 'auto' ? autoMatchedGray : grayColor;\n\n    const [copyState, setCopyState] = React.useState<'idle' | 'copying' | 'copied'>('idle');\n    async function handleCopyThemeConfig() {\n      const theme = {\n        appearance: appearance === themePropDefs.appearance.default ? undefined : appearance,\n        accentColor: accentColor === themePropDefs.accentColor.default ? undefined : accentColor,\n        grayColor: grayColor === themePropDefs.grayColor.default ? undefined : grayColor,\n        panelBackground:\n          panelBackground === themePropDefs.panelBackground.default ? undefined : panelBackground,\n        radius: radius === themePropDefs.radius.default ? undefined : radius,\n        scaling: scaling === themePropDefs.scaling.default ? undefined : scaling,\n      } satisfies GetPropDefTypes<typeof themePropDefs>;\n\n      const props = Object.keys(theme)\n        .filter((key) => theme[key as keyof typeof theme] !== undefined)\n        .map((key) => `${key}=\"${theme[key as keyof typeof theme]}\"`)\n        .join(' ');\n\n      const textToCopy = props ? `<Theme ${props}>` : '<Theme>';\n\n      setCopyState('copying');\n      await navigator.clipboard.writeText(textToCopy);\n      setCopyState('copied');\n      setTimeout(() => setCopyState('idle'), 2000);\n    }\n\n    const [resolvedAppearance, setResolvedAppearance] = React.useState<'light' | 'dark' | null>(\n      appearance === 'inherit' ? null : appearance\n    );\n\n    const keyboardInputElement = `\n      [contenteditable],\n      [role=\"combobox\"],\n      [role=\"listbox\"],\n      [role=\"menu\"],\n      input:not([type=\"radio\"], [type=\"checkbox\"]),\n      select,\n      textarea\n    `;\n\n    // quickly show/hide using \"T\" keypress\n    React.useEffect(() => {\n      function handleKeydown(event: KeyboardEvent) {\n        const isModifierActive = event.altKey || event.ctrlKey || event.shiftKey || event.metaKey;\n        const isKeyboardInputActive = document.activeElement?.closest(keyboardInputElement);\n        const isKeyT = event.key?.toUpperCase() === 'T' && !isModifierActive;\n        if (isKeyT && !isKeyboardInputActive) {\n          onOpenChange(!open);\n        }\n      }\n      document.addEventListener('keydown', handleKeydown);\n      return () => document.removeEventListener('keydown', handleKeydown);\n    }, [onOpenChange, open, keyboardInputElement]);\n\n    // quickly toggle appearance using \"D\" keypress\n    React.useEffect(() => {\n      function handleKeydown(event: KeyboardEvent) {\n        const isModifierActive = event.altKey || event.ctrlKey || event.shiftKey || event.metaKey;\n        const isKeyboardInputActive = document.activeElement?.closest(keyboardInputElement);\n        const isKeyD = event.key?.toUpperCase() === 'D' && !isModifierActive;\n        if (isKeyD && !isKeyboardInputActive) {\n          handleAppearanceChange(resolvedAppearance === 'light' ? 'dark' : 'light');\n        }\n      }\n      document.addEventListener('keydown', handleKeydown);\n      return () => document.removeEventListener('keydown', handleKeydown);\n    }, [handleAppearanceChange, resolvedAppearance, keyboardInputElement]);\n\n    React.useEffect(() => {\n      const root = document.documentElement;\n      const body = document.body;\n\n      function update() {\n        const hasDarkClass =\n          root.classList.contains('dark') ||\n          root.classList.contains('dark-theme') ||\n          body.classList.contains('dark') ||\n          body.classList.contains('dark-theme');\n\n        if (appearance === 'inherit') {\n          setResolvedAppearance(hasDarkClass ? 'dark' : 'light');\n        } else {\n          setResolvedAppearance(appearance);\n        }\n      }\n\n      const classNameObserver = new MutationObserver(function (mutations) {\n        mutations.forEach(function (mutation) {\n          if (mutation.attributeName === 'class') {\n            update();\n          }\n        });\n      });\n\n      update();\n\n      // Observe <html> and <body> for `class` changes only when the appearance is inherited from them\n      if (appearance === 'inherit') {\n        classNameObserver.observe(root, { attributes: true });\n        classNameObserver.observe(body, { attributes: true });\n      }\n\n      return () => classNameObserver.disconnect();\n    }, [appearance]);\n\n    return (\n      <Theme asChild radius=\"medium\" scaling=\"100%\">\n        <Flex\n          direction=\"column\"\n          position=\"fixed\"\n          top=\"0\"\n          right=\"0\"\n          mr=\"4\"\n          mt=\"4\"\n          // @ts-ignore\n          inert={open ? undefined : inert}\n          {...panelProps}\n          ref={forwardedRef}\n          style={{\n            zIndex: 9999,\n            overflow: 'hidden',\n            maxHeight: 'calc(100vh - var(--space-4) - var(--space-4))',\n            borderRadius: 'var(--radius-4)',\n            backgroundColor: 'var(--color-panel-solid)',\n            transformOrigin: 'top center',\n            transitionProperty: 'transform, box-shadow',\n            transitionDuration: '200ms',\n            transitionTimingFunction: open ? 'ease-out' : 'ease-in',\n            transform: open ? 'none' : 'translateX(105%)',\n            boxShadow: open ? 'var(--shadow-5)' : 'var(--shadow-2)',\n            ...props.style,\n          }}\n        >\n          <ScrollArea>\n            <Box flexGrow=\"1\" p=\"5\" position=\"relative\">\n              <Box position=\"absolute\" top=\"0\" right=\"0\" m=\"2\">\n                <Tooltip\n                  content=\"Press T to show/hide the Theme Panel\"\n                  side=\"bottom\"\n                  sideOffset={6}\n                >\n                  <Kbd asChild size=\"3\" tabIndex={0} className=\"rt-ThemePanelShortcut\">\n                    <button onClick={() => onOpenChange(!open)}>T</button>\n                  </Kbd>\n                </Tooltip>\n              </Box>\n\n              <Heading size=\"5\" trim=\"both\" as=\"h3\" mb=\"5\">\n                Theme\n              </Heading>\n\n              <Text id=\"accent-color-title\" as=\"p\" size=\"2\" weight=\"medium\" mt=\"5\">\n                Accent color\n              </Text>\n\n              <Grid columns=\"10\" gap=\"2\" mt=\"3\" role=\"group\" aria-labelledby=\"accent-color-title\">\n                {themePropDefs.accentColor.values.map((color) => (\n                  <label\n                    key={color}\n                    className=\"rt-ThemePanelSwatch\"\n                    style={{ backgroundColor: `var(--${color}-9)` }}\n                  >\n                    <Tooltip\n                      content={`${upperFirst(color)}${\n                        accentColor === 'gray' && resolvedGrayColor !== 'gray'\n                          ? ` (${upperFirst(resolvedGrayColor)})`\n                          : ''\n                      }`}\n                    >\n                      <input\n                        className=\"rt-ThemePanelSwatchInput\"\n                        type=\"radio\"\n                        name=\"accentColor\"\n                        value={color}\n                        checked={accentColor === color}\n                        onChange={(event) =>\n                          onAccentColorChange(event.target.value as typeof accentColor)\n                        }\n                      />\n                    </Tooltip>\n                  </label>\n                ))}\n              </Grid>\n\n              <Flex asChild align=\"center\" justify=\"between\">\n                <Text as=\"p\" id=\"gray-color-title\" size=\"2\" weight=\"medium\" mt=\"5\">\n                  Gray color\n                </Text>\n              </Flex>\n\n              <Grid columns=\"10\" gap=\"2\" mt=\"3\" role=\"group\" aria-labelledby=\"gray-color-title\">\n                {themePropDefs.grayColor.values.map((gray) => (\n                  <Flex key={gray} asChild align=\"center\" justify=\"center\">\n                    <label\n                      className=\"rt-ThemePanelSwatch\"\n                      style={{\n                        backgroundColor:\n                          gray === 'auto'\n                            ? `var(--${autoMatchedGray}-9)`\n                            : gray === 'gray'\n                            ? 'var(--gray-9)'\n                            : `var(--${gray}-9)`,\n                        // we override --gray so pure gray doesn't exist anymore\n                        // recover something as close as possible by desaturating\n                        filter: gray === 'gray' ? 'saturate(0)' : undefined,\n                      }}\n                    >\n                      <Tooltip\n                        content={`${upperFirst(gray)}${\n                          gray === 'auto' ? ` (${upperFirst(autoMatchedGray)})` : ''\n                        }`}\n                      >\n                        <input\n                          className=\"rt-ThemePanelSwatchInput\"\n                          type=\"radio\"\n                          name=\"grayColor\"\n                          value={gray}\n                          checked={grayColor === gray}\n                          onChange={(event) =>\n                            onGrayColorChange(event.target.value as typeof grayColor)\n                          }\n                        />\n                      </Tooltip>\n                    </label>\n                  </Flex>\n                ))}\n              </Grid>\n\n              <Text id=\"appearance-title\" as=\"p\" size=\"2\" weight=\"medium\" mt=\"5\">\n                Appearance\n              </Text>\n\n              <Grid columns=\"2\" gap=\"2\" mt=\"3\" role=\"group\" aria-labelledby=\"appearance-title\">\n                {(['light', 'dark'] as const).map((value) => (\n                  <label key={value} className=\"rt-ThemePanelRadioCard\">\n                    <input\n                      className=\"rt-ThemePanelRadioCardInput\"\n                      type=\"radio\"\n                      name=\"appearance\"\n                      value={value}\n                      checked={resolvedAppearance === value}\n                      onChange={(event) =>\n                        handleAppearanceChange(event.target.value as 'light' | 'dark')\n                      }\n                    />\n                    <Flex align=\"center\" justify=\"center\" height=\"32px\" gap=\"2\">\n                      {value === 'light' ? (\n                        <svg\n                          width=\"15\"\n                          height=\"15\"\n                          viewBox=\"0 0 15 15\"\n                          fill=\"none\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          style={{ margin: '0 -1px' }}\n                        >\n                          <path\n                            d=\"M7.5 0C7.77614 0 8 0.223858 8 0.5V2.5C8 2.77614 7.77614 3 7.5 3C7.22386 3 7 2.77614 7 2.5V0.5C7 0.223858 7.22386 0 7.5 0ZM2.1967 2.1967C2.39196 2.00144 2.70854 2.00144 2.90381 2.1967L4.31802 3.61091C4.51328 3.80617 4.51328 4.12276 4.31802 4.31802C4.12276 4.51328 3.80617 4.51328 3.61091 4.31802L2.1967 2.90381C2.00144 2.70854 2.00144 2.39196 2.1967 2.1967ZM0.5 7C0.223858 7 0 7.22386 0 7.5C0 7.77614 0.223858 8 0.5 8H2.5C2.77614 8 3 7.77614 3 7.5C3 7.22386 2.77614 7 2.5 7H0.5ZM2.1967 12.8033C2.00144 12.608 2.00144 12.2915 2.1967 12.0962L3.61091 10.682C3.80617 10.4867 4.12276 10.4867 4.31802 10.682C4.51328 10.8772 4.51328 11.1938 4.31802 11.3891L2.90381 12.8033C2.70854 12.9986 2.39196 12.9986 2.1967 12.8033ZM12.5 7C12.2239 7 12 7.22386 12 7.5C12 7.77614 12.2239 8 12.5 8H14.5C14.7761 8 15 7.77614 15 7.5C15 7.22386 14.7761 7 14.5 7H12.5ZM10.682 4.31802C10.4867 4.12276 10.4867 3.80617 10.682 3.61091L12.0962 2.1967C12.2915 2.00144 12.608 2.00144 12.8033 2.1967C12.9986 2.39196 12.9986 2.70854 12.8033 2.90381L11.3891 4.31802C11.1938 4.51328 10.8772 4.51328 10.682 4.31802ZM8 12.5C8 12.2239 7.77614 12 7.5 12C7.22386 12 7 12.2239 7 12.5V14.5C7 14.7761 7.22386 15 7.5 15C7.77614 15 8 14.7761 8 14.5V12.5ZM10.682 10.682C10.8772 10.4867 11.1938 10.4867 11.3891 10.682L12.8033 12.0962C12.9986 12.2915 12.9986 12.608 12.8033 12.8033C12.608 12.9986 12.2915 12.9986 12.0962 12.8033L10.682 11.3891C10.4867 11.1938 10.4867 10.8772 10.682 10.682ZM5.5 7.5C5.5 6.39543 6.39543 5.5 7.5 5.5C8.60457 5.5 9.5 6.39543 9.5 7.5C9.5 8.60457 8.60457 9.5 7.5 9.5C6.39543 9.5 5.5 8.60457 5.5 7.5ZM7.5 4.5C5.84315 4.5 4.5 5.84315 4.5 7.5C4.5 9.15685 5.84315 10.5 7.5 10.5C9.15685 10.5 10.5 9.15685 10.5 7.5C10.5 5.84315 9.15685 4.5 7.5 4.5Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                        </svg>\n                      ) : (\n                        <svg\n                          width=\"15\"\n                          height=\"15\"\n                          viewBox=\"0 0 15 15\"\n                          fill=\"none\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          style={{ margin: '0 -1px' }}\n                        >\n                          <path\n                            d=\"M2.89998 0.499976C2.89998 0.279062 2.72089 0.0999756 2.49998 0.0999756C2.27906 0.0999756 2.09998 0.279062 2.09998 0.499976V1.09998H1.49998C1.27906 1.09998 1.09998 1.27906 1.09998 1.49998C1.09998 1.72089 1.27906 1.89998 1.49998 1.89998H2.09998V2.49998C2.09998 2.72089 2.27906 2.89998 2.49998 2.89998C2.72089 2.89998 2.89998 2.72089 2.89998 2.49998V1.89998H3.49998C3.72089 1.89998 3.89998 1.72089 3.89998 1.49998C3.89998 1.27906 3.72089 1.09998 3.49998 1.09998H2.89998V0.499976ZM5.89998 3.49998C5.89998 3.27906 5.72089 3.09998 5.49998 3.09998C5.27906 3.09998 5.09998 3.27906 5.09998 3.49998V4.09998H4.49998C4.27906 4.09998 4.09998 4.27906 4.09998 4.49998C4.09998 4.72089 4.27906 4.89998 4.49998 4.89998H5.09998V5.49998C5.09998 5.72089 5.27906 5.89998 5.49998 5.89998C5.72089 5.89998 5.89998 5.72089 5.89998 5.49998V4.89998H6.49998C6.72089 4.89998 6.89998 4.72089 6.89998 4.49998C6.89998 4.27906 6.72089 4.09998 6.49998 4.09998H5.89998V3.49998ZM1.89998 6.49998C1.89998 6.27906 1.72089 6.09998 1.49998 6.09998C1.27906 6.09998 1.09998 6.27906 1.09998 6.49998V7.09998H0.499976C0.279062 7.09998 0.0999756 7.27906 0.0999756 7.49998C0.0999756 7.72089 0.279062 7.89998 0.499976 7.89998H1.09998V8.49998C1.09998 8.72089 1.27906 8.89997 1.49998 8.89997C1.72089 8.89997 1.89998 8.72089 1.89998 8.49998V7.89998H2.49998C2.72089 7.89998 2.89998 7.72089 2.89998 7.49998C2.89998 7.27906 2.72089 7.09998 2.49998 7.09998H1.89998V6.49998ZM8.54406 0.98184L8.24618 0.941586C8.03275 0.917676 7.90692 1.1655 8.02936 1.34194C8.17013 1.54479 8.29981 1.75592 8.41754 1.97445C8.91878 2.90485 9.20322 3.96932 9.20322 5.10022C9.20322 8.37201 6.82247 11.0878 3.69887 11.6097C3.45736 11.65 3.20988 11.6772 2.96008 11.6906C2.74563 11.702 2.62729 11.9535 2.77721 12.1072C2.84551 12.1773 2.91535 12.2458 2.98667 12.3128L3.05883 12.3795L3.31883 12.6045L3.50684 12.7532L3.62796 12.8433L3.81491 12.9742L3.99079 13.089C4.11175 13.1651 4.23536 13.2375 4.36157 13.3059L4.62496 13.4412L4.88553 13.5607L5.18837 13.6828L5.43169 13.7686C5.56564 13.8128 5.70149 13.8529 5.83857 13.8885C5.94262 13.9155 6.04767 13.9401 6.15405 13.9622C6.27993 13.9883 6.40713 14.0109 6.53544 14.0298L6.85241 14.0685L7.11934 14.0892C7.24637 14.0965 7.37436 14.1002 7.50322 14.1002C11.1483 14.1002 14.1032 11.1453 14.1032 7.50023C14.1032 7.25044 14.0893 7.00389 14.0623 6.76131L14.0255 6.48407C13.991 6.26083 13.9453 6.04129 13.8891 5.82642C13.8213 5.56709 13.7382 5.31398 13.6409 5.06881L13.5279 4.80132L13.4507 4.63542L13.3766 4.48666C13.2178 4.17773 13.0353 3.88295 12.8312 3.60423L12.6782 3.40352L12.4793 3.16432L12.3157 2.98361L12.1961 2.85951L12.0355 2.70246L11.8134 2.50184L11.4925 2.24191L11.2483 2.06498L10.9562 1.87446L10.6346 1.68894L10.3073 1.52378L10.1938 1.47176L9.95488 1.3706L9.67791 1.2669L9.42566 1.1846L9.10075 1.09489L8.83599 1.03486L8.54406 0.98184ZM10.4032 5.30023C10.4032 4.27588 10.2002 3.29829 9.83244 2.40604C11.7623 3.28995 13.1032 5.23862 13.1032 7.50023C13.1032 10.593 10.596 13.1002 7.50322 13.1002C6.63646 13.1002 5.81597 12.9036 5.08355 12.5522C6.5419 12.0941 7.81081 11.2082 8.74322 10.0416C8.87963 10.2284 9.10028 10.3497 9.34928 10.3497C9.76349 10.3497 10.0993 10.0139 10.0993 9.59971C10.0993 9.24256 9.84965 8.94373 9.51535 8.86816C9.57741 8.75165 9.63653 8.63334 9.6926 8.51332C9.88358 8.63163 10.1088 8.69993 10.35 8.69993C11.0403 8.69993 11.6 8.14028 11.6 7.44993C11.6 6.75976 11.0406 6.20024 10.3505 6.19993C10.3853 5.90487 10.4032 5.60464 10.4032 5.30023Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                        </svg>\n                      )}\n                      <Text size=\"1\" weight=\"medium\">\n                        {upperFirst(value)}\n                      </Text>\n                    </Flex>\n                  </label>\n                ))}\n              </Grid>\n\n              <Text id=\"radius-title\" as=\"p\" size=\"2\" weight=\"medium\" mt=\"5\">\n                Radius\n              </Text>\n\n              <Grid columns=\"5\" gap=\"2\" mt=\"3\" role=\"group\" aria-labelledby=\"radius-title\">\n                {themePropDefs.radius.values.map((value) => (\n                  <Flex key={value} direction=\"column\" align=\"center\">\n                    <label className=\"rt-ThemePanelRadioCard\">\n                      <input\n                        className=\"rt-ThemePanelRadioCardInput\"\n                        type=\"radio\"\n                        name=\"radius\"\n                        id={`theme-panel-radius-${value}`}\n                        value={value}\n                        checked={radius === value}\n                        onChange={(event) => onRadiusChange(event.target.value as typeof radius)}\n                      />\n                      <Theme asChild radius={value}>\n                        <Box\n                          m=\"3\"\n                          width=\"32px\"\n                          height=\"32px\"\n                          style={{\n                            borderTopLeftRadius: value === 'full' ? '80%' : 'var(--radius-5)',\n                            backgroundImage:\n                              'linear-gradient(to bottom right, var(--accent-3), var(--accent-4))',\n                            borderTop: '2px solid var(--accent-a8)',\n                            borderLeft: '2px solid var(--accent-a8)',\n                          }}\n                        />\n                      </Theme>\n                    </label>\n                    <Box asChild pt=\"2\">\n                      <Text asChild size=\"1\" color=\"gray\">\n                        <label htmlFor={`theme-panel-radius-${value}`}>{upperFirst(value)}</label>\n                      </Text>\n                    </Box>\n                  </Flex>\n                ))}\n              </Grid>\n\n              <Text id=\"scaling-title\" as=\"p\" size=\"2\" weight=\"medium\" mt=\"5\">\n                Scaling\n              </Text>\n\n              <Grid columns=\"5\" gap=\"2\" mt=\"3\" role=\"group\" aria-labelledby=\"scaling-title\">\n                {themePropDefs.scaling.values.map((value) => (\n                  <label key={value} className=\"rt-ThemePanelRadioCard\">\n                    <input\n                      className=\"rt-ThemePanelRadioCardInput\"\n                      type=\"radio\"\n                      name=\"scaling\"\n                      value={value}\n                      checked={scaling === value}\n                      onChange={(event) => onScalingChange(event.target.value as typeof scaling)}\n                    />\n\n                    <Flex align=\"center\" justify=\"center\" height=\"32px\">\n                      <Theme asChild scaling={value}>\n                        <Flex align=\"center\" justify=\"center\">\n                          <Text size=\"1\" weight=\"medium\">\n                            {upperFirst(value)}\n                          </Text>\n                        </Flex>\n                      </Theme>\n                    </Flex>\n                  </label>\n                ))}\n              </Grid>\n\n              <Flex mt=\"5\" align=\"center\" gap=\"2\">\n                <Text id=\"panel-background-title\" as=\"p\" size=\"2\" weight=\"medium\">\n                  Panel background\n                </Text>\n\n                <Popover.Root>\n                  <Popover.Trigger>\n                    <IconButton size=\"1\" variant=\"ghost\" color=\"gray\">\n                      <AccessibleIcon label=\"Learn more about panel background options\">\n                        <svg\n                          width=\"15\"\n                          height=\"15\"\n                          viewBox=\"0 0 15 15\"\n                          fill=\"currentColor\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                          <path\n                            d=\"M7.49991 0.876892C3.84222 0.876892 0.877075 3.84204 0.877075 7.49972C0.877075 11.1574 3.84222 14.1226 7.49991 14.1226C11.1576 14.1226 14.1227 11.1574 14.1227 7.49972C14.1227 3.84204 11.1576 0.876892 7.49991 0.876892ZM1.82707 7.49972C1.82707 4.36671 4.36689 1.82689 7.49991 1.82689C10.6329 1.82689 13.1727 4.36671 13.1727 7.49972C13.1727 10.6327 10.6329 13.1726 7.49991 13.1726C4.36689 13.1726 1.82707 10.6327 1.82707 7.49972ZM8.24992 4.49999C8.24992 4.9142 7.91413 5.24999 7.49992 5.24999C7.08571 5.24999 6.74992 4.9142 6.74992 4.49999C6.74992 4.08577 7.08571 3.74999 7.49992 3.74999C7.91413 3.74999 8.24992 4.08577 8.24992 4.49999ZM6.00003 5.99999H6.50003H7.50003C7.77618 5.99999 8.00003 6.22384 8.00003 6.49999V9.99999H8.50003H9.00003V11H8.50003H7.50003H6.50003H6.00003V9.99999H6.50003H7.00003V6.99999H6.50003H6.00003V5.99999Z\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          />\n                        </svg>\n                      </AccessibleIcon>\n                    </IconButton>\n                  </Popover.Trigger>\n\n                  <Popover.Content size=\"1\" style={{ maxWidth: 220 }} side=\"top\" align=\"center\">\n                    <Text as=\"p\" size=\"2\">\n                      Whether Card and Table panels are translucent, showing some of\u00A0the background\n                      behind them.\n                    </Text>\n                  </Popover.Content>\n                </Popover.Root>\n              </Flex>\n\n              <Grid\n                columns=\"2\"\n                gap=\"2\"\n                mt=\"3\"\n                role=\"group\"\n                aria-labelledby=\"panel-background-title\"\n              >\n                {themePropDefs.panelBackground.values.map((value) => (\n                  <label key={value} className=\"rt-ThemePanelRadioCard\">\n                    <input\n                      className=\"rt-ThemePanelRadioCardInput\"\n                      type=\"radio\"\n                      name=\"panelBackground\"\n                      value={value}\n                      checked={panelBackground === value}\n                      onChange={(event) =>\n                        onPanelBackgroundChange(event.target.value as typeof panelBackground)\n                      }\n                    />\n                    <Flex align=\"center\" justify=\"center\" height=\"32px\" gap=\"2\">\n                      {value === 'solid' ? (\n                        <svg\n                          width=\"15\"\n                          height=\"15\"\n                          viewBox=\"0 0 15 15\"\n                          fill=\"none\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          style={{ margin: '0 -2px' }}\n                        >\n                          <path\n                            d=\"M0.877075 7.49988C0.877075 3.84219 3.84222 0.877045 7.49991 0.877045C11.1576 0.877045 14.1227 3.84219 14.1227 7.49988C14.1227 11.1575 11.1576 14.1227 7.49991 14.1227C3.84222 14.1227 0.877075 11.1575 0.877075 7.49988ZM7.49991 1.82704C4.36689 1.82704 1.82708 4.36686 1.82708 7.49988C1.82708 10.6329 4.36689 13.1727 7.49991 13.1727C10.6329 13.1727 13.1727 10.6329 13.1727 7.49988C13.1727 4.36686 10.6329 1.82704 7.49991 1.82704Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                        </svg>\n                      ) : (\n                        <svg\n                          width=\"15\"\n                          height=\"15\"\n                          viewBox=\"0 0 15 15\"\n                          fill=\"none\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          style={{ margin: '0 -2px' }}\n                        >\n                          <path\n                            opacity=\".05\"\n                            d=\"M6.78296 13.376C8.73904 9.95284 8.73904 5.04719 6.78296 1.62405L7.21708 1.37598C9.261 4.95283 9.261 10.0472 7.21708 13.624L6.78296 13.376Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                          <path\n                            opacity=\".1\"\n                            d=\"M7.28204 13.4775C9.23929 9.99523 9.23929 5.00475 7.28204 1.52248L7.71791 1.2775C9.76067 4.9119 9.76067 10.0881 7.71791 13.7225L7.28204 13.4775Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                          <path\n                            opacity=\".15\"\n                            d=\"M7.82098 13.5064C9.72502 9.99523 9.72636 5.01411 7.82492 1.50084L8.26465 1.26285C10.2465 4.92466 10.2451 10.085 8.26052 13.7448L7.82098 13.5064Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                          <path\n                            opacity=\".2\"\n                            d=\"M8.41284 13.429C10.1952 9.92842 10.1957 5.07537 8.41435 1.57402L8.85999 1.34729C10.7139 4.99113 10.7133 10.0128 8.85841 13.6559L8.41284 13.429Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                          <path\n                            opacity=\".25\"\n                            d=\"M9.02441 13.2956C10.6567 9.8379 10.6586 5.17715 9.03005 1.71656L9.48245 1.50366C11.1745 5.09919 11.1726 9.91629 9.47657 13.5091L9.02441 13.2956Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                          <path\n                            opacity=\".3\"\n                            d=\"M9.66809 13.0655C11.1097 9.69572 11.1107 5.3121 9.67088 1.94095L10.1307 1.74457C11.6241 5.24121 11.6231 9.76683 10.1278 13.2622L9.66809 13.0655Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                          <path\n                            opacity=\".35\"\n                            d=\"M10.331 12.7456C11.5551 9.52073 11.5564 5.49103 10.3347 2.26444L10.8024 2.0874C12.0672 5.42815 12.0659 9.58394 10.7985 12.9231L10.331 12.7456Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                          <path\n                            opacity=\".4\"\n                            d=\"M11.0155 12.2986C11.9938 9.29744 11.9948 5.71296 11.0184 2.71067L11.4939 2.55603C12.503 5.6589 12.502 9.35178 11.4909 12.4535L11.0155 12.2986Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                          <path\n                            opacity=\".45\"\n                            d=\"M11.7214 11.668C12.4254 9.01303 12.4262 5.99691 11.7237 3.34116L12.2071 3.21329C12.9318 5.95292 12.931 9.05728 12.2047 11.7961L11.7214 11.668Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                          <path\n                            opacity=\".5\"\n                            d=\"M12.4432 10.752C12.8524 8.63762 12.8523 6.36089 12.4429 4.2466L12.9338 4.15155C13.3553 6.32861 13.3554 8.66985 12.9341 10.847L12.4432 10.752Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                          <path\n                            d=\"M0.877075 7.49988C0.877075 3.84219 3.84222 0.877045 7.49991 0.877045C11.1576 0.877045 14.1227 3.84219 14.1227 7.49988C14.1227 11.1575 11.1576 14.1227 7.49991 14.1227C3.84222 14.1227 0.877075 11.1575 0.877075 7.49988ZM7.49991 1.82704C4.36689 1.82704 1.82708 4.36686 1.82708 7.49988C1.82708 10.6329 4.36689 13.1727 7.49991 13.1727C10.6329 13.1727 13.1727 10.6329 13.1727 7.49988C13.1727 4.36686 10.6329 1.82704 7.49991 1.82704Z\"\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                        </svg>\n                      )}\n                      <Text size=\"1\" weight=\"medium\">\n                        {upperFirst(value)}\n                      </Text>\n                    </Flex>\n                  </label>\n                ))}\n              </Grid>\n\n              <Button mt=\"5\" style={{ width: '100%' }} onClick={handleCopyThemeConfig}>\n                {copyState === 'copied' ? 'Copied' : 'Copy Theme'}\n              </Button>\n            </Box>\n          </ScrollArea>\n        </Flex>\n      </Theme>\n    );\n  }\n);\nThemePanelImpl.displayName = 'ThemePanelImpl';\n\n// https://github.com/pacocoursey/next-themes/blob/main/packages/next-themes/src/index.tsx#L285\nfunction disableAnimation() {\n  const css = document.createElement('style');\n  css.appendChild(\n    document.createTextNode(\n      `*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}`\n    )\n  );\n  document.head.appendChild(css);\n\n  return () => {\n    // Force restyle\n    (() => window.getComputedStyle(document.body))();\n\n    // Wait for next tick before removing\n    setTimeout(() => {\n      document.head.removeChild(css);\n    }, 1);\n  };\n}\n\nfunction upperFirst(string: string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction updateRootAppearanceClass(appearance: 'light' | 'dark') {\n  const root = document.documentElement;\n  const hasLightTheme = root.classList.contains('light-theme');\n  const hasDarkTheme = root.classList.contains('dark-theme');\n  const hasLight = root.classList.contains('light');\n  const hasDark = root.classList.contains('dark');\n\n  if (hasLightTheme || hasDarkTheme) {\n    root.classList.remove('light-theme', 'dark-theme');\n    root.style.colorScheme = appearance;\n    root.classList.add(`${appearance}-theme`);\n  }\n\n  if (hasLight || hasDark) {\n    root.classList.remove('light', 'dark');\n    root.style.colorScheme = appearance;\n    root.classList.add(appearance);\n  }\n\n  if (!hasLightTheme && !hasDarkTheme && !hasLight && !hasDark) {\n    root.style.colorScheme = appearance;\n    root.classList.add(appearance);\n  }\n}\n\nexport { ThemePanel };\nexport type { ThemePanelProps };\n", "import { widthPropDefs } from '../props/width.props.js';\n\nimport type { PropDef, GetPropDefTypes } from '../props/prop-def.js';\n\nconst tooltipPropDefs = {\n  content: { type: 'ReactNode', required: true },\n  width: widthPropDefs.width,\n  minWidth: widthPropDefs.minWidth,\n  maxWidth: { ...widthPropDefs.maxWidth, default: '360px' },\n} satisfies {\n  width: PropDef<string>;\n  minWidth: PropDef<string>;\n  maxWidth: PropDef<string>;\n  content: PropDef<React.ReactNode>;\n};\n\ntype TooltipOwnProps = GetPropDefTypes<typeof tooltipPropDefs & typeof widthPropDefs>;\n\nexport { tooltipPropDefs };\nexport type { TooltipOwnProps };\n", "import * as React from 'react';\nimport classNames from 'classnames';\nimport * as TooltipPrimitive from '@radix-ui/react-tooltip';\n\nimport { Text } from './text.js';\nimport { Theme } from './theme.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { tooltipPropDefs } from './tooltip.props.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype TooltipElement = React.ElementRef<typeof TooltipPrimitive.Content>;\ntype TooltipOwnProps = GetPropDefTypes<typeof tooltipPropDefs>;\ninterface TooltipProps\n  extends React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Root>,\n    ComponentPropsWithout<typeof TooltipPrimitive.Content, RemovedProps | 'content'>,\n    TooltipOwnProps {\n  content: React.ReactNode;\n  container?: React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Portal>['container'];\n}\nconst Tooltip = React.forwardRef<TooltipElement, TooltipProps>((props, forwardedRef) => {\n  const {\n    children,\n    className,\n    open,\n    defaultOpen,\n    onOpenChange,\n    delayDuration,\n    disableHoverableContent,\n    content,\n    container,\n    forceMount,\n    ...tooltipContentProps\n  } = extractProps(props, tooltipPropDefs);\n  const rootProps = { open, defaultOpen, onOpenChange, delayDuration, disableHoverableContent };\n  return (\n    <TooltipPrimitive.Root {...rootProps}>\n      <TooltipPrimitive.Trigger asChild>{children}</TooltipPrimitive.Trigger>\n      <TooltipPrimitive.Portal container={container} forceMount={forceMount}>\n        <Theme asChild>\n          <TooltipPrimitive.Content\n            sideOffset={4}\n            collisionPadding={10}\n            {...tooltipContentProps}\n            asChild={false}\n            ref={forwardedRef}\n            className={classNames('rt-TooltipContent', className)}\n          >\n            <Text as=\"p\" className=\"rt-TooltipText\" size=\"1\">\n              {content}\n            </Text>\n            <TooltipPrimitive.Arrow className=\"rt-TooltipArrow\" />\n          </TooltipPrimitive.Content>\n        </Theme>\n      </TooltipPrimitive.Portal>\n    </TooltipPrimitive.Root>\n  );\n});\nTooltip.displayName = 'Tooltip';\n\nexport { Tooltip };\nexport type { TooltipProps };\n", "export * from './accessible-icon.js';\nexport * as AlertDialog from './alert-dialog.js';\nexport * from './aspect-ratio.js';\nexport * from './avatar.js';\nexport * from './badge.js';\nexport * from './blockquote.js';\nexport * from './box.js';\nexport * from './button.js';\nexport * as Callout from './callout.js';\nexport * from './card.js';\nexport * as CheckboxCards from './checkbox-cards.js';\nexport * as CheckboxGroup from './checkbox-group.js';\nexport * from './checkbox.js';\nexport * from './code.js';\nexport * from './container.js';\nexport * as ContextMenu from './context-menu.js';\nexport * as DataList from './data-list.js';\nexport * as Dialog from './dialog.js';\nexport * as DropdownMenu from './dropdown-menu.js';\nexport * from './em.js';\nexport * from './flex.js';\nexport * from './grid.js';\nexport * from './heading.js';\nexport * as HoverCard from './hover-card.js';\nexport * from './icon-button.js';\nexport * from './icons.js';\nexport * from './inset.js';\nexport * from './kbd.js';\nexport * from './link.js';\nexport * as Popover from './popover.js';\nexport * from './portal.js';\nexport * from './progress.js';\nexport * from './quote.js';\nexport * as RadioCards from './radio-cards.js';\nexport * as RadioGroup from './radio-group.js';\nexport * from './radio.js';\nexport * from './reset.js';\nexport * from './scroll-area.js';\nexport * as SegmentedControl from './segmented-control.js';\nexport * from './section.js';\nexport * as Select from './select.js';\nexport * from './separator.js';\nexport * from './skeleton.js';\nexport * from './slider.js';\nexport * from './slot.js';\nexport * from './spinner.js';\nexport * from './strong.js';\nexport * from './switch.js';\nexport * as TabNav from './tab-nav.js';\nexport * as Table from './table.js';\nexport * as Tabs from './tabs.js';\nexport * from './text-area.js';\nexport * as TextField from './text-field.js';\nexport * from './text.js';\nexport * from './theme-panel.js';\nexport * from './theme.js';\nexport * from './tooltip.js';\nexport * from './visually-hidden.js';\n", "export * from './components/index.js';\n"],
  "mappings": "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",
  "names": ["__export", "__toCommonJS", "React", "__toESM", "__export", "__toCommonJS", "React", "__toESM", "__export", "__toCommonJS", "React", "__toESM", "ReactDOM", "__export", "__toCommonJS", "React", "__toESM", "__export", "Root", "__toCommonJS", "React", "__toESM", "accessible_icon_exports", "__export", "__toCommonJS", "import_react_accessible_icon", "__export", "createContext", "__toCommonJS", "React", "__toESM", "useContext", "index", "createScope", "nextScopes", "__export", "__toCommonJS", "__export", "useLayoutEffect", "__toCommonJS", "React", "__toESM", "__export", "__toCommonJS", "React", "__toESM", "__export", "__toCommonJS", "React", "__toESM", "__export", "__toCommonJS", "React", "__toESM", "value", "__export", "__toCommonJS", "React", "__toESM", "__export", "__toCommonJS", "React", "__toESM", "node", "index", "handleAndDispatchPointerDownOutsideEvent", "__export", "__toCommonJS", "React", "__toESM", "handleFocusIn", "handleFocusOut", "handleMutations", "container", "index", "__export", "__toCommonJS", "React", "__toESM", "ReactDOM", "__export", "__toCommonJS", "React", "__toESM", "ReactDOM", "node", "__export", "__toCommonJS", "React", "__toESM", "__export", "__toCommonJS", "React", "__toESM", "PortalPrimitive", "__export", "Content", "Description", "Overlay", "Portal", "Root", "Title", "Trigger", "__toCommonJS", "React", "__toESM", "as_child_prop_exports", "__export", "asChildPropDef", "__toCommonJS", "width_props_exports", "__export", "widthPropDefs", "__toCommonJS", "height_props_exports", "__export", "heightPropDefs", "__toCommonJS", "dialog_props_exports", "__export", "dialogContentPropDefs", "__toCommonJS", "import_as_child_prop", "import_width_props", "import_height_props", "contentSizes", "alert_dialog_props_exports", "__export", "__toCommonJS", "import_dialog_props", "color_prop_exports", "__export", "accentColorPropDef", "accentColors", "colorPropDef", "grayColors", "__toCommonJS", "high_contrast_prop_exports", "__export", "highContrastPropDef", "__toCommonJS", "leading_trim_prop_exports", "__export", "leadingTrimPropDef", "__toCommonJS", "leadingTrimValues", "text_align_prop_exports", "__export", "textAlignPropDef", "__toCommonJS", "textAlignValues", "text_wrap_prop_exports", "__export", "textWrapPropDef", "__toCommonJS", "textWrapValues", "truncate_prop_exports", "__export", "truncatePropDef", "__toCommonJS", "weight_prop_exports", "__export", "weightPropDef", "__toCommonJS", "weights", "heading_props_exports", "__export", "headingPropDefs", "__toCommonJS", "import_as_child_prop", "import_color_prop", "import_high_contrast_prop", "import_leading_trim_prop", "import_text_align_prop", "import_text_wrap_prop", "import_truncate_prop", "import_weight_prop", "as", "sizes", "prop_def_exports", "__export", "breakpoints", "__toCommonJS", "has_own_property_exports", "__export", "hasOwnProperty", "__toCommonJS", "obj", "key", "is_responsive_object_exports", "__export", "isResponsiveObject", "__toCommonJS", "import_prop_def", "obj", "key", "get_responsive_styles_exports", "__export", "getResponsiveClassNames", "getResponsiveCustomProperties", "getResponsiveStyles", "__toCommonJS", "import_prop_def", "import_has_own_property", "import_is_responsive_object", "className", "customProperties", "args", "responsiveClassNames", "responsiveCustomProperties", "allowArbitraryValues", "value", "propValues", "parseValue", "classNames", "getBaseClassName", "object", "bp", "baseClassName", "bpClassName", "delimiter", "matchedValue", "isNegative", "minus", "absoluteValue", "styles", "prop", "customProperty", "key", "merge_styles_exports", "__export", "mergeStyles", "__toCommonJS", "styles", "result", "style", "extract_props_exports", "__export", "extractProps", "__toCommonJS", "import_classnames", "import_get_responsive_styles", "import_is_responsive_object", "import_merge_styles", "mergePropDefs", "args", "props", "propDefs", "className", "style", "extractedProps", "allPropDefs", "key", "value", "propDef", "isResponsivePropDef", "propClassName", "classNames", "propDefValues", "propClassNames", "propCustomProperties", "margin_props_exports", "__export", "marginPropDefs", "__toCommonJS", "marginValues", "heading_exports", "__export", "Heading", "__toCommonJS", "React", "import_classnames", "import_react_slot", "import_heading_props", "import_extract_props", "import_margin_props", "props", "forwardedRef", "children", "className", "asChild", "Tag", "color", "headingProps", "classNames", "text_props_exports", "__export", "textPropDefs", "__toCommonJS", "import_as_child_prop", "import_color_prop", "import_high_contrast_prop", "import_leading_trim_prop", "import_text_align_prop", "import_text_wrap_prop", "import_truncate_prop", "import_weight_prop", "as", "sizes", "text_exports", "__export", "Text", "__toCommonJS", "React", "import_classnames", "import_react_slot", "import_extract_props", "import_margin_props", "import_text_props", "props", "forwardedRef", "children", "className", "asChild", "Tag", "color", "textProps", "classNames", "arrow", "autoPlacement", "flip", "hide", "inline", "limitShift", "offset", "shift", "size", "platform", "data", "__export", "__toCommonJS", "React", "__toESM", "__export", "__toCommonJS", "React", "__toESM", "size", "__export", "Root", "__toCommonJS", "React", "__toESM", "arrow", "floatingUIarrow", "PopperArrow", "__export", "Arrow", "Content", "Root", "__toCommonJS", "React", "__toESM", "open", "PortalPrimitive", "__export", "__toCommonJS", "React", "__toESM", "get_matching_gray_color_exports", "__export", "getMatchingGrayColor", "__toCommonJS", "accentColor", "radius_prop_exports", "__export", "radii", "radiusPropDef", "__toCommonJS", "theme_props_exports", "__export", "themePropDefs", "__toCommonJS", "import_as_child_prop", "import_color_prop", "import_radius_prop", "appearances", "panelBackgrounds", "scalings", "theme_exports", "__export", "Theme", "ThemeContext", "useThemeContext", "__toCommonJS", "React", "import_classnames", "TooltipPrimitive", "import_react_direction", "import_react_slot", "import_get_matching_gray_color", "import_theme_props", "noop", "context", "props", "forwardedRef", "ThemeRoot", "ThemeImpl", "appearanceProp", "accentColorProp", "grayColorProp", "panelBackgroundProp", "radiusProp", "scalingProp", "hasBackground", "rootProps", "appearance", "setAppearance", "accentColor", "setAccentColor", "grayColor", "setGrayColor", "panelBackground", "setPanelBackground", "radius", "setRadius", "scaling", "setScaling", "asChild", "isRoot", "hasBackgroundProp", "onAppearanceChange", "onAccentColorChange", "onGrayColorChange", "onPanelBackgroundChange", "onRadiusChange", "onScalingChange", "themeProps", "Comp", "resolvedGrayColor", "isExplicitAppearance", "classNames", "require_react_element_exports", "__export", "requireReactElement", "__toCommonJS", "React", "children", "child", "alert_dialog_exports", "__export", "AlertDialogAction", "AlertDialogCancel", "AlertDialogContent", "AlertDialogDescription", "AlertDialogRoot", "AlertDialogTitle", "AlertDialogTrigger", "__toCommonJS", "React", "import_classnames", "AlertDialogPrimitive", "import_alert_dialog_props", "import_heading", "import_text", "import_theme", "import_extract_props", "import_require_react_element", "props", "children", "forwardedRef", "align", "alignPropDef", "propDefs", "alignClassName", "className", "forceMount", "container", "contentProps", "classNames", "__export", "__toCommonJS", "React", "__toESM", "aspect_ratio_exports", "__export", "__toCommonJS", "import_react_aspect_ratio", "__export", "__toCommonJS", "React", "__toESM", "avatar_props_exports", "__export", "avatarPropDefs", "__toCommonJS", "import_as_child_prop", "import_color_prop", "import_high_contrast_prop", "import_radius_prop", "sizes", "variants", "get_subtree_exports", "__export", "getSubtree", "__toCommonJS", "React", "options", "content", "asChild", "children", "firstChild", "avatar_exports", "__export", "Avatar", "__toCommonJS", "React", "import_classnames", "AvatarPrimitive", "import_avatar_props", "import_extract_props", "import_get_subtree", "import_margin_props", "props", "forwardedRef", "asChild", "children", "className", "style", "color", "radius", "imageProps", "classNames", "AvatarImpl", "fallback", "status", "setStatus", "badge_props_exports", "__export", "badgePropDefs", "__toCommonJS", "import_as_child_prop", "import_color_prop", "import_high_contrast_prop", "import_radius_prop", "sizes", "variants", "badge_exports", "__export", "Badge", "__toCommonJS", "React", "import_classnames", "import_react_slot", "import_badge_props", "import_extract_props", "import_margin_props", "props", "forwardedRef", "asChild", "className", "color", "radius", "badgeProps", "classNames", "blockquote_props_exports", "__export", "blockquotePropDefs", "__toCommonJS", "import_as_child_prop", "import_color_prop", "import_high_contrast_prop", "import_text_wrap_prop", "import_truncate_prop", "import_weight_prop", "sizes", "blockquote_exports", "__export", "Blockquote", "__toCommonJS", "React", "import_classnames", "import_react_slot", "import_text", "import_blockquote_props", "props", "forwardedRef", "asChild", "children", "className", "blockquoteProps", "Comp", "classNames", "slot_exports", "__export", "__toCommonJS", "import_react_slot", "box_props_exports", "__export", "boxPropDefs", "__toCommonJS", "import_as_child_prop", "as", "displayValues", "padding_props_exports", "__export", "paddingPropDefs", "__toCommonJS", "paddingValues", "layout_props_exports", "__export", "layoutPropDefs", "__toCommonJS", "import_padding_props", "import_height_props", "import_width_props", "overflowValues", "positionValues", "positionEdgeValues", "flexShrinkValues", "flexGrowValues", "box_exports", "__export", "Box", "__toCommonJS", "React", "import_classnames", "import_slot", "import_box_props", "import_extract_props", "import_layout_props", "import_margin_props", "props", "forwardedRef", "className", "asChild", "Tag", "boxProps", "classNames", "base_button_props_exports", "__export", "baseButtonPropDefs", "__toCommonJS", "import_as_child_prop", "import_color_prop", "import_high_contrast_prop", "import_radius_prop", "sizes", "variants", "gap_props_exports", "__export", "gapPropDefs", "__toCommonJS", "gapValues", "flex_props_exports", "__export", "flexPropDefs", "__toCommonJS", "import_as_child_prop", "import_gap_props", "as", "displayValues", "directionValues", "alignValues", "justifyValues", "wrapValues", "parseJustifyValue", "value", "flex_exports", "__export", "Flex", "__toCommonJS", "React", "import_classnames", "import_extract_props", "import_layout_props", "import_margin_props", "import_slot", "import_flex_props", "props", "forwardedRef", "className", "asChild", "Tag", "flexProps", "classNames", "spinner_props_exports", "__export", "spinnerPropDefs", "__toCommonJS", "sizes", "inert_exports", "__export", "inert", "__toCommonJS", "React", "spinner_exports", "__export", "Spinner", "__toCommonJS", "React", "import_classnames", "import_flex", "import_spinner_props", "import_inert", "import_extract_props", "import_margin_props", "props", "forwardedRef", "className", "children", "loading", "spinnerProps", "spinner", "classNames", "visually_hidden_exports", "__export", "__toCommonJS", "import_react_visually_hidden", "callout_props_exports", "__export", "calloutRootPropDefs", "__toCommonJS", "import_as_child_prop", "import_color_prop", "import_high_contrast_prop", "sizes", "variants", "map_prop_values_exports", "__export", "mapButtonSizeToSpinnerSize", "mapCalloutSizeToTextSize", "mapResponsiveProp", "__toCommonJS", "import_base_button_props", "import_callout_props", "import_spinner_props", "import_text_props", "propValue", "mapValue", "key", "value", "size", "base_button_exports", "__export", "BaseButton", "__toCommonJS", "React", "import_classnames", "import_react_slot", "import_base_button_props", "import_flex", "import_spinner", "import_visually_hidden", "import_extract_props", "import_map_prop_values", "import_margin_props", "props", "forwardedRef", "size", "className", "children", "asChild", "color", "radius", "disabled", "baseButtonProps", "classNames", "button_exports", "__export", "Button", "__toCommonJS", "React", "import_classnames", "import_base_button", "className", "props", "forwardedRef", "classNames", "callout_exports", "__export", "CalloutIcon", "CalloutRoot", "CalloutText", "__toCommonJS", "React", "import_classnames", "import_react_slot", "import_text", "import_callout_props", "import_extract_props", "import_map_prop_values", "import_margin_props", "CalloutContext", "props", "forwardedRef", "size", "asChild", "children", "className", "color", "rootProps", "classNames", "card_props_exports", "__export", "cardPropDefs", "__toCommonJS", "import_as_child_prop", "sizes", "variants", "card_exports", "__export", "Card", "__toCommonJS", "React", "import_classnames", "import_react_slot", "import_card_props", "import_extract_props", "import_margin_props", "props", "forwardedRef", "asChild", "className", "cardProps", "classNames", "__export", "__toCommonJS", "React", "__toESM", "__export", "__toCommonJS", "React", "__toESM", "__export", "__toCommonJS", "import_react", "__toESM", "React", "__export", "__toCommonJS", "React", "__toESM", "index", "checkbox_group_primitive_exports", "__export", "CheckboxGroup", "CheckboxGroupIndicator", "CheckboxGroupItem", "Indicator", "Item", "Root", "createCheckboxGroupScope", "__toCommonJS", "React", "CheckboxPrimitive", "import_react_checkbox", "import_react_compose_refs", "import_react_context", "import_react_primitive", "RovingFocusGroup", "import_react_roving_focus", "import_react_use_controllable_state", "import_react_direction", "CHECKBOX_GROUP_NAME", "createCheckboxGroupContext", "useRovingFocusGroupScope", "useCheckboxScope", "CheckboxGroupProvider", "useCheckboxGroupContext", "props", "forwardedRef", "__scopeCheckboxGroup", "name", "defaultValue", "valueProp", "required", "disabled", "orientation", "dir", "loop", "onValueChange", "groupProps", "rovingFocusGroupScope", "direction", "value", "setValue", "handleItemCheck", "itemValue", "prevValue", "handleItemUncheck", "ITEM_NAME", "itemProps", "context", "isDisabled", "checkboxScope", "ref", "composedRefs", "checked", "INDICATOR_NAME", "indicatorProps", "grid_props_exports", "__export", "gridPropDefs", "__toCommonJS", "import_as_child_prop", "import_gap_props", "as", "displayValues", "columnsValues", "rowsValues", "flowValues", "alignValues", "justifyValues", "parseGridValue", "parseJustifyValue", "value", "checkbox_cards_props_exports", "__export", "checkboxCardsRootPropDefs", "__toCommonJS", "import_as_child_prop", "import_color_prop", "import_high_contrast_prop", "import_grid_props", "sizes", "variants", "base_checkbox_props_exports", "__export", "baseCheckboxPropDefs", "__toCommonJS", "import_color_prop", "import_high_contrast_prop", "sizes", "variants", "grid_exports", "__export", "Grid", "__toCommonJS", "React", "import_classnames", "import_slot", "import_grid_props", "import_extract_props", "import_layout_props", "import_margin_props", "props", "forwardedRef", "className", "asChild", "Tag", "gridProps", "classNames", "icons_exports", "__export", "ChevronDownIcon", "ThickCheckIcon", "ThickChevronRightIcon", "ThickDividerHorizontalIcon", "__toCommonJS", "import_react", "React", "props", "forwardedRef", "checkbox_cards_exports", "__export", "CheckboxCardsItem", "CheckboxCardsRoot", "__toCommonJS", "React", "import_classnames", "import_react_context", "CheckboxGroupPrimitive", "import_checkbox_group_primitive", "import_checkbox_cards_props", "import_base_checkbox_props", "import_grid", "import_icons", "import_extract_props", "import_margin_props", "CHECKBOX_CARD_GROUP_NAME", "createCheckboxCardsContext", "useCheckboxGroupScope", "CheckboxCardsProvider", "useCheckboxCardsContext", "props", "forwardedRef", "__scopeCheckboxCards", "className", "color", "rootProps", "checkboxGroupScope", "classNames", "children", "style", "context", "checkboxClassName", "checkbox_group_props_exports", "__export", "checkboxGroupRootPropDefs", "__toCommonJS", "import_as_child_prop", "import_base_checkbox_props", "checkbox_group_exports", "__export", "CheckboxGroupItem", "CheckboxGroupRoot", "__toCommonJS", "React", "import_classnames", "import_react_context", "CheckboxGroupPrimitive", "import_checkbox_group_primitive", "import_checkbox_group_props", "import_icons", "import_text", "import_extract_props", "import_margin_props", "CHECKBOX_GROUP_NAME", "createCheckboxGroupContext", "useCheckboxGroupScope", "CheckboxGroupProvider", "useCheckboxGroupContext", "color", "highContrast", "size", "variant", "props", "forwardedRef", "__scopeCheckboxGroup", "className", "rootProps", "checkboxGroupScope", "classNames", "_props", "children", "style", "CheckboxGroupItemCheckbox", "context", "checkbox_props_exports", "__export", "__toCommonJS", "import_base_checkbox_props", "checkbox_exports", "__export", "Checkbox", "__toCommonJS", "React", "import_classnames", "CheckboxPrimitive", "import_react_use_controllable_state", "import_checkbox_props", "import_icons", "import_extract_props", "import_margin_props", "props", "forwardedRef", "className", "color", "checkedProp", "defaultCheckedProp", "onCheckedChange", "checkboxProps", "checked", "setChecked", "classNames", "code_props_exports", "__export", "codePropDefs", "__toCommonJS", "import_as_child_prop", "import_color_prop", "import_high_contrast_prop", "import_text_wrap_prop", "import_truncate_prop", "import_weight_prop", "sizes", "variants", "code_exports", "__export", "Code", "__toCommonJS", "React", "import_classnames", "import_react_slot", "import_code_props", "import_extract_props", "import_margin_props", "props", "forwardedRef", "asChild", "className", "color", "codeProps", "resolvedColor", "classNames", "container_props_exports", "__export", "containerPropDefs", "__toCommonJS", "import_as_child_prop", "sizes", "displayValues", "alignValues", "parseDisplayValue", "parseAlignValue", "value", "container_exports", "__export", "Container", "__toCommonJS", "React", "import_classnames", "import_react_slot", "import_container_props", "import_extract_props", "import_get_subtree", "import_height_props", "import_layout_props", "import_margin_props", "import_width_props", "width", "minWidth", "maxWidth", "height", "minHeight", "maxHeight", "props", "forwardedRef", "asChild", "children", "className", "containerProps", "innerClassName", "innerStyle", "classNames", "__export", "Anchor", "Arrow", "Content", "Item", "Root", "__toCommonJS", "React", "__toESM", "PortalPrimitive", "index", "__export", "Arrow", "CheckboxItem", "Content", "Group", "Item", "ItemIndicator", "Label", "Portal", "RadioGroup", "RadioItem", "Root", "Separator", "Sub", "SubContent", "SubTrigger", "__toCommonJS", "React", "__toESM", "open", "__export", "__toCommonJS", "__export", "__toCommonJS", "React", "__toESM", "offset", "height", "width", "scroll_area_props_exports", "__export", "scrollAreaPropDefs", "__toCommonJS", "import_as_child_prop", "import_radius_prop", "sizes", "scrollbarsValues", "extract_margin_props_exports", "__export", "extractMarginProps", "__toCommonJS", "props", "m", "mx", "my", "mt", "mr", "mb", "ml", "rest", "get_margin_styles_exports", "__export", "getMarginStyles", "__toCommonJS", "import_classnames", "import_get_responsive_styles", "import_merge_styles", "import_margin_props", "marginValues", "props", "mClassNames", "mCustomProperties", "mxClassNames", "mxCustomProperties", "myClassNames", "myCustomProperties", "mtClassNames", "mtCustomProperties", "mrClassNames", "mrCustomProperties", "mbClassNames", "mbCustomProperties", "mlClassNames", "mlCustomProperties", "classNames", "scroll_area_exports", "__export", "ScrollArea", "__toCommonJS", "React", "import_classnames", "ScrollAreaPrimitive", "import_scroll_area_props", "import_extract_margin_props", "import_get_margin_styles", "import_get_responsive_styles", "import_get_subtree", "import_merge_styles", "props", "forwardedRef", "marginRest", "marginProps", "marginClassNames", "marginCustomProperties", "asChild", "children", "className", "style", "type", "scrollHideDelay", "dir", "size", "radius", "scrollbars", "viewportProps", "classNames", "base_menu_props_exports", "__export", "baseMenuCheckboxItemPropDefs", "baseMenuContentPropDefs", "baseMenuItemPropDefs", "baseMenuRadioItemPropDefs", "__toCommonJS", "import_as_child_prop", "import_color_prop", "import_high_contrast_prop", "contentSizes", "contentVariants", "context_menu_props_exports", "__export", "__toCommonJS", "import_base_menu_props", "context_menu_exports", "__export", "ContextMenuCheckboxItem", "ContextMenuContent", "ContextMenuGroup", "ContextMenuItem", "ContextMenuLabel", "ContextMenuRadioGroup", "ContextMenuRadioItem", "ContextMenuRoot", "ContextMenuSeparator", "ContextMenuSub", "ContextMenuSubContent", "ContextMenuSubTrigger", "ContextMenuTrigger", "__toCommonJS", "React", "import_classnames", "ContextMenuPrimitive", "import_react_slot", "import_scroll_area", "import_context_menu_props", "import_theme", "import_icons", "import_extract_props", "import_require_react_element", "props", "children", "forwardedRef", "ContextMenuContentContext", "themeContext", "size", "variant", "highContrast", "className", "color", "container", "forceMount", "contentProps", "resolvedColor", "classNames", "shortcut", "itemProps", "subTriggerProps", "subContentProps", "data_list_props_exports", "__export", "dataListItemPropDefs", "dataListLabelPropDefs", "dataListRootPropDefs", "__toCommonJS", "import_color_prop", "import_high_contrast_prop", "import_leading_trim_prop", "import_width_props", "alignValues", "orientationValues", "sizes", "data_list_exports", "__export", "DataListItem", "DataListLabel", "DataListRoot", "DataListValue", "__toCommonJS", "import_classnames", "React", "import_text", "import_data_list_props", "import_extract_props", "import_margin_props", "props", "forwardedRef", "className", "dataListProps", "classNames", "itemProps", "color", "labelProps", "children", "dialog_exports", "__export", "DialogClose", "DialogContent", "DialogDescription", "DialogRoot", "DialogTitle", "DialogTrigger", "__toCommonJS", "React", "import_classnames", "DialogPrimitive", "import_dialog_props", "import_heading", "import_text", "import_theme", "import_extract_props", "import_require_react_element", "props", "children", "forwardedRef", "align", "alignPropDef", "propDefs", "alignClassName", "className", "forceMount", "container", "contentProps", "classNames", "__export", "Arrow", "CheckboxItem", "Content", "Group", "Item", "ItemIndicator", "Label", "Portal", "RadioGroup", "RadioItem", "Root", "Separator", "Sub", "SubContent", "SubTrigger", "__toCommonJS", "React", "__toESM", "dropdown_menu_props_exports", "__export", "__toCommonJS", "import_base_menu_props", "dropdown_menu_exports", "__export", "DropdownMenuCheckboxItem", "DropdownMenuContent", "DropdownMenuGroup", "DropdownMenuItem", "DropdownMenuLabel", "DropdownMenuRadioGroup", "DropdownMenuRadioItem", "DropdownMenuRoot", "DropdownMenuSeparator", "DropdownMenuSub", "DropdownMenuSubContent", "DropdownMenuSubTrigger", "DropdownMenuTrigger", "__toCommonJS", "React", "import_classnames", "DropdownMenuPrimitive", "import_react_slot", "import_scroll_area", "import_dropdown_menu_props", "import_theme", "import_icons", "import_extract_props", "import_require_react_element", "props", "children", "forwardedRef", "DropdownMenuContentContext", "themeContext", "size", "variant", "highContrast", "className", "color", "container", "forceMount", "contentProps", "resolvedColor", "classNames", "shortcut", "itemProps", "subTriggerProps", "subContentProps", "em_props_exports", "__export", "emPropDefs", "__toCommonJS", "import_as_child_prop", "import_text_wrap_prop", "import_truncate_prop", "em_exports", "__export", "Em", "__toCommonJS", "React", "import_classnames", "import_react_slot", "import_em_props", "import_extract_props", "props", "forwardedRef", "asChild", "className", "emProps", "classNames", "__export", "Arrow", "Content", "Root", "__toCommonJS", "React", "__toESM", "PortalPrimitive", "hover_card_props_exports", "__export", "hoverCardContentPropDefs", "__toCommonJS", "import_as_child_prop", "import_height_props", "import_width_props", "contentSizes", "hover_card_exports", "__export", "HoverCardContent", "HoverCardRoot", "HoverCardTrigger", "__toCommonJS", "React", "import_classnames", "HoverCardPrimitive", "import_hover_card_props", "import_extract_props", "import_require_react_element", "import_theme", "props", "children", "className", "forwardedRef", "classNames", "forceMount", "container", "contentProps", "icon_button_exports", "__export", "IconButton", "__toCommonJS", "React", "import_classnames", "import_base_button", "className", "props", "forwardedRef", "classNames", "inset_props_exports", "__export", "insetPropDefs", "__toCommonJS", "import_as_child_prop", "sides", "clipValues", "paddingValues", "parsePaddingValue", "value", "inset_exports", "__export", "Inset", "__toCommonJS", "React", "import_classnames", "import_react_slot", "import_inset_props", "import_extract_props", "import_margin_props", "props", "forwardedRef", "asChild", "className", "insetProps", "classNames", "kbd_props_exports", "__export", "kbdPropDefs", "__toCommonJS", "import_as_child_prop", "sizes", "kbd_exports", "__export", "Kbd", "__toCommonJS", "React", "import_classnames", "import_react_slot", "import_kbd_props", "import_extract_props", "import_margin_props", "props", "forwardedRef", "asChild", "className", "kbdProps", "classNames", "link_props_exports", "__export", "linkPropDefs", "__toCommonJS", "import_as_child_prop", "import_color_prop", "import_high_contrast_prop", "import_leading_trim_prop", "import_text_wrap_prop", "import_truncate_prop", "import_weight_prop", "sizes", "underline", "link_exports", "__export", "Link", "__toCommonJS", "React", "import_classnames", "import_text", "import_extract_props", "import_link_props", "props", "forwardedRef", "children", "className", "color", "asChild", "linkProps", "classNames", "__export", "Anchor", "Arrow", "Content", "Root", "__toCommonJS", "React", "__toESM", "PortalPrimitive", "popover_props_exports", "__export", "popoverContentPropDefs", "__toCommonJS", "import_as_child_prop", "import_height_props", "import_width_props", "contentSizes", "popover_exports", "__export", "PopoverAnchor", "PopoverClose", "PopoverContent", "PopoverRoot", "PopoverTrigger", "__toCommonJS", "React", "import_classnames", "PopoverPrimitive", "import_extract_props", "import_require_react_element", "import_popover_props", "import_theme", "props", "children", "forwardedRef", "className", "forceMount", "container", "contentProps", "classNames", "portal_exports", "__export", "__toCommonJS", "import_react_portal", "__export", "__toCommonJS", "React", "__toESM", "progress_props_exports", "__export", "progressPropDefs", "__toCommonJS", "import_color_prop", "import_high_contrast_prop", "import_radius_prop", "sizes", "variants", "progress_exports", "__export", "Progress", "__toCommonJS", "React", "import_classnames", "ProgressPrimitive", "import_progress_props", "import_extract_props", "import_merge_styles", "import_margin_props", "props", "forwardedRef", "className", "style", "color", "radius", "duration", "progressProps", "classNames", "quote_props_exports", "__export", "quotePropDefs", "__toCommonJS", "import_as_child_prop", "import_text_wrap_prop", "import_truncate_prop", "quote_exports", "__export", "Quote", "__toCommonJS", "React", "import_classnames", "import_react_slot", "import_quote_props", "import_extract_props", "props", "forwardedRef", "asChild", "className", "quoteProps", "classNames", "__export", "Item", "Root", "__toCommonJS", "React", "__toESM", "import_primitive", "import_react_compose_refs", "import_react_context", "import_react_primitive", "import_jsx_runtime", "INDICATOR_NAME", "radio_cards_props_exports", "__export", "radioCardsRootPropDefs", "__toCommonJS", "import_as_child_prop", "import_color_prop", "import_high_contrast_prop", "import_grid_props", "sizes", "variants", "radio_cards_exports", "__export", "RadioCardsItem", "RadioCardsRoot", "__toCommonJS", "React", "import_classnames", "RadioGroupPrimitive", "import_radio_cards_props", "import_grid", "import_extract_props", "import_margin_props", "props", "forwardedRef", "className", "color", "rootProps", "classNames", "radio_group_props_exports", "__export", "radioGroupRootPropDefs", "__toCommonJS", "import_as_child_prop", "import_color_prop", "import_high_contrast_prop", "sizes", "variants", "radio_group_exports", "__export", "RadioGroupItem", "RadioGroupRoot", "__toCommonJS", "React", "import_classnames", "import_react_context", "RadioGroupPrimitive", "import_react_radio_group", "import_radio_group_props", "import_text", "import_extract_props", "import_margin_props", "RADIO_GROUP_NAME", "createRadioGroupContext", "useRadioGroupScope", "RadioGroupProvider", "useRadioGroupContext", "color", "highContrast", "size", "variant", "props", "forwardedRef", "__scopeRadioGroup", "className", "rootProps", "radioGroupScope", "classNames", "_props", "children", "style", "RadioGroupItemRadio", "context", "base_radio_props_exports", "__export", "baseRadioPropDefs", "__toCommonJS", "import_color_prop", "import_high_contrast_prop", "sizes", "variants", "radio_props_exports", "__export", "__toCommonJS", "import_base_radio_props", "radio_exports", "__export", "Radio", "__toCommonJS", "React", "import_classnames", "import_primitive", "import_react_compose_refs", "import_radio_props", "import_margin_props", "import_extract_props", "props", "forwardedRef", "ref", "className", "color", "onChange", "onValueChange", "radioProps", "event", "classNames", "reset_exports", "__export", "Reset", "__toCommonJS", "React", "import_classnames", "import_react_slot", "import_require_react_element", "className", "children", "props", "forwardedRef", "classNames", "__export", "__toCommonJS", "React", "__toESM", "__export", "Item", "Root", "__toCommonJS", "import_react", "__toESM", "React", "value", "segmented_control_props_exports", "__export", "segmentedControlRootPropDefs", "__toCommonJS", "import_radius_prop", "sizes", "variants", "segmented_control_exports", "__export", "SegmentedControlItem", "SegmentedControlRoot", "__toCommonJS", "React", "import_classnames", "ToggleGroupPrimitive", "import_react_use_controllable_state", "import_segmented_control_props", "import_extract_props", "import_margin_props", "props", "forwardedRef", "className", "children", "radius", "valueProp", "defaultValueProp", "onValueChangeProp", "rootProps", "value", "setValue", "classNames", "section_props_exports", "__export", "sectionPropDefs", "__toCommonJS", "import_as_child_prop", "sizes", "displayValues", "parseDisplayValue", "value", "section_exports", "__export", "Section", "__toCommonJS", "React", "import_classnames", "import_react_slot", "import_section_props", "import_extract_props", "import_layout_props", "import_margin_props", "props", "forwardedRef", "asChild", "className", "sectionProps", "classNames", "__export", "Arrow", "Content", "Root", "__toCommonJS", "React", "__toESM", "ReactDOM", "PortalPrimitive", "handleScroll", "canScrollUp", "canScrollDown", "index", "select_props_exports", "__export", "selectContentPropDefs", "selectRootPropDefs", "selectTriggerPropDefs", "__toCommonJS", "import_color_prop", "import_high_contrast_prop", "import_radius_prop", "sizes", "triggerVariants", "contentVariants", "select_exports", "__export", "SelectContent", "SelectGroup", "SelectItem", "SelectLabel", "SelectRoot", "SelectSeparator", "SelectTrigger", "__toCommonJS", "React", "import_classnames", "SelectPrimitive", "ScrollAreaPrimitive", "import_extract_props", "import_margin_props", "import_icons", "import_select_props", "import_theme", "SelectContext", "props", "children", "size", "rootProps", "forwardedRef", "context", "className", "color", "radius", "placeholder", "triggerProps", "classNames", "container", "contentProps", "themeContext", "resolvedColor", "itemProps", "separator_props_exports", "__export", "separatorPropDefs", "__toCommonJS", "import_color_prop", "orientationValues", "sizes", "separator_exports", "__export", "Separator", "__toCommonJS", "React", "import_classnames", "import_separator_props", "import_extract_props", "import_margin_props", "props", "forwardedRef", "className", "color", "decorative", "separatorProps", "classNames", "skeleton_props_exports", "__export", "skeletonPropDefs", "__toCommonJS", "import_height_props", "import_width_props", "skeleton_exports", "__export", "Skeleton", "__toCommonJS", "React", "import_classnames", "import_react_slot", "import_inert", "import_extract_props", "import_margin_props", "import_skeleton_props", "props", "forwardedRef", "children", "className", "loading", "skeletonProps", "Tag", "classNames", "__export", "__toCommonJS", "React", "__toESM", "value", "index", "size", "offset", "slider_props_exports", "__export", "sliderPropDefs", "__toCommonJS", "import_color_prop", "import_high_contrast_prop", "import_radius_prop", "sizes", "variants", "slider_exports", "__export", "Slider", "__toCommonJS", "React", "import_classnames", "SliderPrimitive", "import_slider_props", "import_extract_props", "import_margin_props", "props", "forwardedRef", "className", "color", "radius", "tabIndex", "sliderProps", "classNames", "value", "index", "strong_props_exports", "__export", "strongPropDefs", "__toCommonJS", "import_as_child_prop", "import_text_wrap_prop", "import_truncate_prop", "strong_exports", "__export", "Strong", "__toCommonJS", "React", "import_classnames", "import_react_slot", "import_extract_props", "import_strong_props", "props", "forwardedRef", "asChild", "className", "strongProps", "classNames", "__export", "__toCommonJS", "React", "__toESM", "switch_props_exports", "__export", "switchPropDefs", "__toCommonJS", "import_color_prop", "import_high_contrast_prop", "import_radius_prop", "sizes", "variants", "switch_exports", "__export", "Switch", "__toCommonJS", "React", "import_classnames", "SwitchPrimitive", "import_extract_props", "import_margin_props", "import_switch_props", "props", "forwardedRef", "className", "color", "radius", "switchProps", "classNames", "__export", "Root", "__toCommonJS", "React", "__toESM", "value", "event", "ReactDOM", "index", "_a", "size", "props", "base_tab_list_props_exports", "__export", "baseTabListPropDefs", "__toCommonJS", "import_color_prop", "import_high_contrast_prop", "sizes", "wrapValues", "justifyValues", "tab_nav_props_exports", "__export", "tabNavLinkPropDefs", "__toCommonJS", "import_as_child_prop", "import_base_tab_list_props", "tab_nav_exports", "__export", "TabNavLink", "TabNavRoot", "__toCommonJS", "React", "import_classnames", "NavigationMenu", "import_tab_nav_props", "import_extract_props", "import_get_subtree", "import_margin_props", "props", "forwardedRef", "children", "className", "color", "rootProps", "classNames", "asChild", "linkProps", "table_props_exports", "__export", "tableCellPropDefs", "tableRootPropDefs", "tableRowPropDefs", "__toCommonJS", "import_padding_props", "import_width_props", "sizes", "variants", "layoutValues", "rowAlign", "parseAlignValue", "value", "justifyValues", "parseJustifyValue", "table_exports", "__export", "TableBody", "TableCell", "TableColumnHeaderCell", "TableHeader", "TableRoot", "TableRow", "TableRowHeaderCell", "__toCommonJS", "React", "import_classnames", "import_table_props", "import_extract_props", "import_get_responsive_styles", "import_margin_props", "import_scroll_area", "props", "forwardedRef", "layoutPropDef", "rootPropDefs", "className", "children", "layout", "rootProps", "tableLayoutClassNames", "classNames", "rowProps", "cellProps", "__export", "Root", "__toCommonJS", "React", "__toESM", "tabs_props_exports", "__export", "tabsContentPropDefs", "tabsRootPropDefs", "__toCommonJS", "import_as_child_prop", "import_base_tab_list_props", "tabs_exports", "__export", "TabsContent", "TabsList", "TabsRoot", "TabsTrigger", "__toCommonJS", "React", "import_classnames", "TabsPrimitive", "import_tabs_props", "import_extract_props", "import_margin_props", "props", "forwardedRef", "className", "rootProps", "classNames", "color", "listProps", "children", "triggerProps", "contentProps", "text_area_props_exports", "__export", "textAreaPropDefs", "__toCommonJS", "import_color_prop", "import_radius_prop", "sizes", "variants", "resizeValues", "text_area_exports", "__export", "TextArea", "__toCommonJS", "React", "import_classnames", "import_text_area_props", "import_extract_props", "import_margin_props", "props", "forwardedRef", "className", "color", "radius", "style", "textAreaProps", "classNames", "text_field_props_exports", "__export", "textFieldRootPropDefs", "textFieldSlotPropDefs", "__toCommonJS", "import_color_prop", "import_padding_props", "import_radius_prop", "import_flex_props", "sizes", "variants", "sides", "text_field_exports", "__export", "TextFieldRoot", "TextFieldSlot", "__toCommonJS", "React", "import_classnames", "import_react_compose_refs", "import_text_field_props", "import_extract_props", "import_margin_props", "props", "forwardedRef", "inputRef", "children", "className", "color", "radius", "style", "inputProps", "classNames", "event", "target", "input", "cursorPosition", "side", "slotProps", "theme_panel_exports", "__export", "ThemePanel", "__toCommonJS", "React", "import_react_use_callback_ref", "import__", "import_theme", "import_inert", "import_get_matching_gray_color", "import_theme_props", "defaultOpen", "props", "forwardedRef", "open", "setOpen", "ThemePanelImpl", "onOpenChange", "onAppearanceChangeProp", "panelProps", "themeContext", "appearance", "onAppearanceChange", "accentColor", "onAccentColorChange", "grayColor", "onGrayColorChange", "panelBackground", "onPanelBackgroundChange", "radius", "onRadiusChange", "scaling", "onScalingChange", "hasOnAppearanceChangeProp", "handleAppearanceChangeProp", "handleAppearanceChange", "value", "cleanup", "disableAnimation", "setResolvedAppearance", "updateRootAppearanceClass", "autoMatchedGray", "resolvedGrayColor", "copyState", "setCopyState", "handleCopyThemeConfig", "theme", "key", "textToCopy", "resolvedAppearance", "keyboardInputElement", "handleKeydown", "event", "isModifierActive", "isKeyboardInputActive", "root", "body", "update", "hasDarkClass", "classNameObserver", "mutations", "mutation", "color", "upperFirst", "gray", "css", "string", "hasLightTheme", "hasDarkTheme", "hasLight", "hasDark", "tooltip_props_exports", "__export", "tooltipPropDefs", "__toCommonJS", "import_width_props", "tooltip_exports", "__export", "Tooltip", "__toCommonJS", "React", "import_classnames", "TooltipPrimitive", "import_text", "import_theme", "import_extract_props", "import_tooltip_props", "props", "forwardedRef", "children", "className", "open", "defaultOpen", "onOpenChange", "delayDuration", "disableHoverableContent", "content", "container", "forceMount", "tooltipContentProps", "rootProps", "classNames", "components_exports", "__export", "AlertDialog", "Callout", "CheckboxCards", "CheckboxGroup", "ContextMenu", "DataList", "Dialog", "DropdownMenu", "HoverCard", "Popover", "RadioCards", "RadioGroup", "SegmentedControl", "Select", "TabNav", "Table", "Tabs", "TextField", "__toCommonJS", "__reExport", "src_exports", "__toCommonJS", "__reExport"]
}
